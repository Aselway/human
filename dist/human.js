/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var Human=(()=>{var d2=Object.defineProperty;var DE=(e,t,n)=>t in e?d2(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var FE=e=>d2(e,"__esModule",{value:!0});var Jc=(e,t)=>{FE(e);for(var n in t)d2(e,n,{get:t[n],enumerable:!0})};var fe=(e,t,n)=>(DE(e,typeof t!="symbol"?t+"":t,n),n),V5=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var Qc=(e,t,n)=>(V5(e,t,"read from private field"),n?n.call(e):t.get(e)),ed=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},td=(e,t,n,s)=>(V5(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);var C1e={};Jc(C1e,{Human:()=>MN,default:()=>MN,defaults:()=>Sa,env:()=>he});function J(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}function We(e,t){let n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}var ie=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function p2(e,t,n="config",s=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")p2(e[r],t[r],r,s);else{let a=e&&typeof e[r]!="undefined";a||s.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});let o=e&&typeof e[r]==typeof t[r];a&&!o&&s.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&n==="config"&&s.length>0&&J("invalid configuration",s),s}function $n(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,s)=>(Object.keys(s||{}).forEach(r=>{let a=n[r],o=s[r];Array.isArray(a)&&Array.isArray(o)?n[r]=a.concat(...o):t(a)&&t(o)?n[r]=$n(a,o):n[r]=o}),n),{})}var Sa={backend:"",modelBasePath:"",wasmPath:"",debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,cropFactor:1.6,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}};var Dl={};Jc(Dl,{Abs:()=>ci,Acos:()=>ru,Acosh:()=>au,AdadeltaOptimizer:()=>Lf,AdagradOptimizer:()=>Bf,AdamOptimizer:()=>Wf,AdamaxOptimizer:()=>Vf,Add:()=>Xr,AddN:()=>Ea,All:()=>ou,Any:()=>iu,ArgMax:()=>Ra,ArgMin:()=>lu,Asin:()=>uu,Asinh:()=>cu,Atan:()=>du,Atan2:()=>hu,Atanh:()=>pu,AvgPool:()=>$a,AvgPool3D:()=>od,AvgPool3DGrad:()=>Th,AvgPoolGrad:()=>Ch,BackendWasm:()=>i8,BatchMatMul:()=>_a,BatchToSpaceND:()=>di,Bincount:()=>Nh,BroadcastArgs:()=>Eh,BroadcastTo:()=>r3,Callback:()=>g7,CallbackList:()=>rk,Cast:()=>Da,Ceil:()=>Fa,ClipByValue:()=>Kr,Complex:()=>id,ComplexAbs:()=>ld,Concat:()=>pi,Conv2D:()=>Pa,Conv2DBackpropFilter:()=>Rh,Conv2DBackpropInput:()=>Oa,Conv3D:()=>ud,Conv3DBackpropFilterV2:()=>$h,Conv3DBackpropInputV2:()=>_h,Cos:()=>Ma,Cosh:()=>za,CropAndResize:()=>fi,Cumsum:()=>hi,CustomCallback:()=>ok,DataStorage:()=>sd,DenseBincount:()=>Dh,DepthToSpace:()=>mi,DepthwiseConv2dNative:()=>La,DepthwiseConv2dNativeBackpropFilter:()=>Fh,DepthwiseConv2dNativeBackpropInput:()=>Ph,Diag:()=>Oh,Dilation2D:()=>cd,Dilation2DBackpropFilter:()=>zh,Dilation2DBackpropInput:()=>Mh,ENV:()=>Nr,EarlyStopping:()=>y7,Einsum:()=>dd,Elu:()=>Wa,EluGrad:()=>Lh,Environment:()=>n3,Equal:()=>gi,Erf:()=>fu,Exp:()=>Va,ExpandDims:()=>Ai,Expm1:()=>yi,FFT:()=>Bh,Fill:()=>mu,FlipLeftRight:()=>xi,Floor:()=>Ua,FloorDiv:()=>Ga,FromPixels:()=>bd,FusedBatchNorm:()=>Ha,FusedConv2D:()=>wo,FusedDepthwiseConv2D:()=>ko,GPGPUContext:()=>jm,GatherNd:()=>vi,GatherV2:()=>bi,GraphModel:()=>Z7,Greater:()=>wi,GreaterEqual:()=>ja,History:()=>ak,IFFT:()=>Wh,Identity:()=>qa,Imag:()=>pd,InputSpec:()=>Jt,IsFinite:()=>gu,IsInf:()=>Au,IsNan:()=>yu,KernelBackend:()=>tu,LRN:()=>fd,LRNGrad:()=>Uh,LayerVariable:()=>Qw,LayersModel:()=>ra,LeakyRelu:()=>ki,Less:()=>Ii,LessEqual:()=>Si,LinSpace:()=>Vh,Log:()=>Xa,Log1p:()=>xu,LogSoftmax:()=>a3,LogicalAnd:()=>Ci,LogicalNot:()=>bu,LogicalOr:()=>hd,MathBackendCPU:()=>Xy,MathBackendWebGL:()=>bp,Max:()=>Ka,MaxPool:()=>Ya,MaxPool3D:()=>md,MaxPool3DGrad:()=>Hh,MaxPoolGrad:()=>Gh,MaxPoolWithArgmax:()=>jh,Maximum:()=>Za,Mean:()=>Ja,Min:()=>Qa,Minimum:()=>eo,MirrorPad:()=>to,Mod:()=>vu,MomentumOptimizer:()=>Uf,Multinomial:()=>qh,Multiply:()=>no,Neg:()=>Ti,NonMaxSuppressionV3:()=>Ei,NonMaxSuppressionV4:()=>wu,NonMaxSuppressionV5:()=>Ri,NotEqual:()=>Ni,OP_SCOPE_SUFFIX:()=>b3,OneHot:()=>_i,OnesLike:()=>$i,Optimizer:()=>ta,OptimizerConstructors:()=>Po,Pack:()=>Di,PadV2:()=>so,Pool:()=>S9,Pow:()=>ro,Prelu:()=>ao,Prod:()=>Fi,RMSPropOptimizer:()=>Gf,RNN:()=>aa,Range:()=>ku,Rank:()=>k2,Real:()=>gd,RealDiv:()=>Ba,Reciprocal:()=>Iu,Reduction:()=>Un,Relu:()=>oo,Relu6:()=>lo,Reshape:()=>Pi,ResizeBilinear:()=>io,ResizeBilinearGrad:()=>Kh,ResizeNearestNeighbor:()=>Su,ResizeNearestNeighborGrad:()=>Xh,Reverse:()=>Oi,RotateWithOffset:()=>Zi,Round:()=>Mi,Rsqrt:()=>uo,SGDOptimizer:()=>Gd,ScatterNd:()=>zi,Select:()=>Li,Selu:()=>Cu,Sequential:()=>mm,Sigmoid:()=>po,Sign:()=>Tu,Sin:()=>co,Sinh:()=>Wi,Slice:()=>Bi,Softmax:()=>mo,Softplus:()=>Nu,SpaceToBatchND:()=>Vi,SparseFillEmptyRows:()=>Zh,SparseReshape:()=>Yh,SparseSegmentMean:()=>Jh,SparseSegmentSum:()=>Qh,SparseToDense:()=>Ad,SplitV:()=>Ui,Sqrt:()=>ho,Square:()=>Eu,SquaredDifference:()=>go,Step:()=>bo,StridedSlice:()=>Gi,StringNGrams:()=>yd,StringSplit:()=>ef,StringToHashBucketFast:()=>tf,Sub:()=>Ao,Sum:()=>fo,SymbolicTensor:()=>vr,Tan:()=>Hi,Tanh:()=>yo,Tensor:()=>tt,TensorBuffer:()=>an,Tile:()=>Zr,TopK:()=>ji,Transform:()=>qi,Transpose:()=>xo,Unique:()=>nf,Unpack:()=>Xi,UnsortedSegmentSum:()=>xd,Variable:()=>Nd,ZerosLike:()=>Ki,_FusedMatMul:()=>vo,abs:()=>on,acos:()=>iv,acosh:()=>lv,add:()=>le,addN:()=>mf,all:()=>n1,any:()=>gf,argMax:()=>ys,argMin:()=>uv,asin:()=>cv,asinh:()=>dv,atan:()=>pv,atan2:()=>hv,atanh:()=>fv,avgPool:()=>yf,avgPool3d:()=>a1,backend:()=>$r,backend_util:()=>E,basicLSTMCell:()=>p_,batchNorm:()=>Mu,batchNorm2d:()=>yv,batchNorm3d:()=>xv,batchNorm4d:()=>bv,batchToSpaceND:()=>xf,bincount:()=>o1,booleanMaskAsync:()=>IP,broadcastArgs:()=>vv,broadcastTo:()=>Fd,broadcast_util:()=>nl,browser:()=>Qs,buffer:()=>ze,callbacks:()=>LU,cast:()=>ge,ceil:()=>wv,clipByValue:()=>xs,clone:()=>Bn,complex:()=>Co,concat:()=>It,concat1d:()=>kv,concat2d:()=>zu,concat3d:()=>Iv,concat4d:()=>Sv,constraints:()=>_w,conv1d:()=>i1,conv2d:()=>$o,conv2dTranspose:()=>u1,conv3d:()=>c1,conv3dTranspose:()=>Tv,copyRegisteredKernels:()=>E9,cos:()=>bf,cosh:()=>d1,cosineWindow:()=>O1,cumsum:()=>p1,customGrad:()=>Dr,data:()=>Y7,denseBincount:()=>Nv,deprecationWarn:()=>e1,depthToSpace:()=>Ev,depthwiseConv2d:()=>Pd,deregisterOp:()=>VU,device_util:()=>_u,diag:()=>V_,dilation2d:()=>Rv,disableDeprecationWarnings:()=>N$,dispose:()=>te,disposeVariables:()=>E$,div:()=>de,divNoNan:()=>$v,dot:()=>K_,dropout:()=>ow,einsum:()=>_v,elu:()=>Od,enableDebugMode:()=>T$,enableProdMode:()=>av,enclosingPowerOfTwo:()=>iw,engine:()=>is,env:()=>Y,equal:()=>Ps,erf:()=>Dv,exp:()=>Os,expandDims:()=>Zt,expm1:()=>Fv,eye:()=>h1,fft:()=>$f,fill:()=>Lu,findBackend:()=>t1,findBackendFactory:()=>D$,floor:()=>Md,floorDiv:()=>ff,forceHalfFloat:()=>TC,fused:()=>Fo,gather:()=>Bu,gatherND:()=>aw,gather_util:()=>j2,getBackend:()=>Fs,getGradient:()=>x2,getKernel:()=>sf,getKernelsForBackend:()=>Yr,getThreadsCount:()=>m2e,gpgpu_util:()=>eC,grad:()=>bD,grads:()=>vD,greater:()=>bs,greaterEqual:()=>il,ifft:()=>Wd,imag:()=>vf,image:()=>Ie,inTopKAsync:()=>PP,initializers:()=>Lw,input:()=>Ek,io:()=>os,irfft:()=>R1,isFinite:()=>cD,isInf:()=>pD,isNaN:()=>Pv,keep:()=>yn,kernel_impls:()=>nr,layers:()=>Zw,leakyRelu:()=>wf,less:()=>f1,lessEqual:()=>ll,linalg:()=>Aw,linspace:()=>Ov,loadGraphModel:()=>Be,loadLayersModel:()=>ZW,localResponseNormalization:()=>Mv,log:()=>Ms,log1p:()=>kf,logSigmoid:()=>TD,logSoftmax:()=>m1,logSumExp:()=>Vv,logicalAnd:()=>mr,logicalNot:()=>Sf,logicalOr:()=>y1,logicalXor:()=>LD,losses:()=>xM,matMul:()=>qe,math:()=>z3,max:()=>xn,maxPool:()=>Cf,maxPool3d:()=>x1,maxPoolWithArgmax:()=>Uv,maximum:()=>Qr,mean:()=>Vt,memory:()=>pf,meshgrid:()=>HD,metrics:()=>h7,min:()=>_o,minimum:()=>zd,mirrorPad:()=>Gv,mod:()=>Ld,model:()=>XW,models:()=>f7,moments:()=>Tf,movingAverage:()=>TP,mul:()=>L,multiRNNCell:()=>QD,multinomial:()=>Hv,neg:()=>Mt,nextFrame:()=>yw,norm:()=>F1,notEqual:()=>Vu,oneHot:()=>_d,ones:()=>vs,onesLike:()=>zs,op:()=>G,outerProduct:()=>rF,pad:()=>tr,pad1d:()=>iF,pad2d:()=>uF,pad3d:()=>dF,pad4d:()=>hF,pool:()=>yF,pow:()=>Do,prelu:()=>Ef,print:()=>_3,prod:()=>b1,profile:()=>R$,rand:()=>kF,randomGamma:()=>TF,randomNormal:()=>jv,randomUniform:()=>Uu,range:()=>Gu,ready:()=>hf,real:()=>Bd,reciprocal:()=>qv,registerBackend:()=>al,registerCallbackConstructor:()=>YW,registerGradient:()=>o3,registerKernel:()=>pr,registerOp:()=>WU,regularizers:()=>m7,relu:()=>Fr,relu6:()=>k1,removeBackend:()=>_$,reshape:()=>H,reverse:()=>Ls,reverse1d:()=>OF,reverse2d:()=>zF,reverse3d:()=>BF,reverse4d:()=>VF,rfft:()=>_f,round:()=>I1,rsqrt:()=>S1,scalar:()=>Ce,scatterND:()=>rw,scatter_util:()=>q2,selu:()=>C1,separableConv2d:()=>Xv,sequential:()=>KW,serialization:()=>ce,setBackend:()=>ov,setPlatform:()=>F$,setThreadsCount:()=>f2e,setWasmPath:()=>h2e,setWasmPaths:()=>u8,setWebGLContext:()=>Mm,setdiff1dAsync:()=>Kv,shared:()=>$m,sigmoid:()=>Wn,sign:()=>Zv,signal:()=>yM,sin:()=>T1,sinh:()=>N1,slice:()=>De,slice1d:()=>Rf,slice2d:()=>E1,slice3d:()=>cl,slice4d:()=>dl,slice_util:()=>Ot,softmax:()=>Hu,softplus:()=>Wu,spaceToBatchND:()=>Nf,sparse:()=>Ud,sparseToDense:()=>P1,spectral:()=>AM,split:()=>jt,sqrt:()=>Dn,square:()=>xt,squaredDifference:()=>$1,squeeze:()=>Ge,stack:()=>Yt,step:()=>Vd,stridedSlice:()=>Yv,string:()=>zf,sub:()=>pe,sum:()=>we,sumOutType:()=>Ed,tan:()=>Jv,tanh:()=>Ou,tensor:()=>pt,tensor1d:()=>St,tensor2d:()=>gr,tensor3d:()=>B3,tensor4d:()=>fP,tensor5d:()=>mP,tensor6d:()=>gP,tensor_util:()=>hr,test_util:()=>tv,tidy:()=>X,tile:()=>er,time:()=>$$,topk:()=>Qv,train:()=>pl,transpose:()=>nt,truncatedNormal:()=>Df,unique:()=>_1,unregisterGradient:()=>N9,unregisterKernel:()=>T9,unsortedSegmentSum:()=>ew,unstack:()=>ls,upcastType:()=>Ln,util:()=>v,valueAndGrad:()=>wD,valueAndGrads:()=>kD,variable:()=>tw,variableGrads:()=>zv,version:()=>d0,version_converter:()=>HG,version_core:()=>rv,version_cpu:()=>$j,version_layers:()=>yA,version_wasm:()=>g2e,version_webgl:()=>ree,webgl:()=>aee,webgl_util:()=>IS,webgpu:()=>u6,where:()=>Vn,whereAsync:()=>D1,zeros:()=>Ht,zerosLike:()=>st});var PE=Object.create,xh=Object.defineProperty,OE=Object.getOwnPropertyDescriptor,ME=Object.getOwnPropertyNames,zE=Object.getPrototypeOf,LE=Object.prototype.hasOwnProperty,U5=e=>xh(e,"__esModule",{value:!0}),rn=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},Me=(e,t)=>{U5(e);for(var n in t)xh(e,n,{get:t[n],enumerable:!0})},BE=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of ME(t))!LE.call(e,s)&&s!=="default"&&xh(e,s,{get:()=>t[s],enumerable:!(n=OE(t,s))||n.enumerable});return e},ii=e=>BE(U5(xh(e!=null?PE(zE(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),WE=rn({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch($){}function s($,T,P){this.low=$|0,this.high=T|0,this.unsigned=!!P}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r($){return($&&$.__isLong__)===!0}s.isLong=r;var a={},o={};function i($,T){var P,W,K;return T?($>>>=0,(K=0<=$&&$<256)&&(W=o[$],W)?W:(P=c($,($|0)<0?-1:0,!0),K&&(o[$]=P),P)):($|=0,(K=-128<=$&&$<128)&&(W=a[$],W)?W:(P=c($,$<0?-1:0,!1),K&&(a[$]=P),P))}s.fromInt=i;function l($,T){if(isNaN($))return T?b:y;if(T){if($<0)return b;if($>=g)return R}else{if($<=-A)return M;if($+1>=A)return N}return $<0?l(-$,T).neg():c($%m|0,$/m|0,T)}s.fromNumber=l;function c($,T,P){return new s($,T,P)}s.fromBits=c;var u=Math.pow;function d($,T,P){if($.length===0)throw Error("empty string");if($==="NaN"||$==="Infinity"||$==="+Infinity"||$==="-Infinity")return y;if(typeof T=="number"?(P=T,T=!1):T=!!T,P=P||10,P<2||36<P)throw RangeError("radix");var W;if((W=$.indexOf("-"))>0)throw Error("interior hyphen");if(W===0)return d($.substring(1),T,P).neg();for(var K=l(u(P,8)),z=y,j=0;j<$.length;j+=8){var Z=Math.min(8,$.length-j),Q=parseInt($.substring(j,j+Z),P);if(Z<8){var ne=l(u(P,Z));z=z.mul(ne).add(l(Q))}else z=z.mul(K),z=z.add(l(Q))}return z.unsigned=T,z}s.fromString=d;function p($,T){return typeof $=="number"?l($,T):typeof $=="string"?d($,T):c($.low,$.high,typeof T=="boolean"?T:$.unsigned)}s.fromValue=p;var h=1<<16,f=1<<24,m=h*h,g=m*m,A=g/2,x=i(f),y=i(0);s.ZERO=y;var b=i(0,!0);s.UZERO=b;var w=i(1);s.ONE=w;var k=i(1,!0);s.UONE=k;var S=i(-1);s.NEG_ONE=S;var N=c(4294967295|0,2147483647|0,!1);s.MAX_VALUE=N;var R=c(4294967295|0,4294967295|0,!0);s.MAX_UNSIGNED_VALUE=R;var M=c(0,2147483648|0,!1);s.MIN_VALUE=M;var D=s.prototype;D.toInt=function(){return this.unsigned?this.low>>>0:this.low},D.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},D.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(M)){var P=l(T),W=this.div(P),K=W.mul(P).sub(this);return W.toString(T)+K.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var z=l(u(T,6),this.unsigned),j=this,Z="";;){var Q=j.div(z),ne=j.sub(Q.mul(z)).toInt()>>>0,ae=ne.toString(T);if(j=Q,j.isZero())return ae+Z;for(;ae.length<6;)ae="0"+ae;Z=""+ae+Z}},D.getHighBits=function(){return this.high},D.getHighBitsUnsigned=function(){return this.high>>>0},D.getLowBits=function(){return this.low},D.getLowBitsUnsigned=function(){return this.low>>>0},D.getNumBitsAbs=function(){if(this.isNegative())return this.eq(M)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,P=31;P>0&&(T&1<<P)==0;P--);return this.high!=0?P+33:P+1},D.isZero=function(){return this.high===0&&this.low===0},D.eqz=D.isZero,D.isNegative=function(){return!this.unsigned&&this.high<0},D.isPositive=function(){return this.unsigned||this.high>=0},D.isOdd=function(){return(this.low&1)==1},D.isEven=function(){return(this.low&1)==0},D.equals=function(T){return r(T)||(T=p(T)),this.unsigned!==T.unsigned&&this.high>>>31==1&&T.high>>>31==1?!1:this.high===T.high&&this.low===T.low},D.eq=D.equals,D.notEquals=function(T){return!this.eq(T)},D.neq=D.notEquals,D.ne=D.notEquals,D.lessThan=function(T){return this.comp(T)<0},D.lt=D.lessThan,D.lessThanOrEqual=function(T){return this.comp(T)<=0},D.lte=D.lessThanOrEqual,D.le=D.lessThanOrEqual,D.greaterThan=function(T){return this.comp(T)>0},D.gt=D.greaterThan,D.greaterThanOrEqual=function(T){return this.comp(T)>=0},D.gte=D.greaterThanOrEqual,D.ge=D.greaterThanOrEqual,D.compare=function(T){if(r(T)||(T=p(T)),this.eq(T))return 0;var P=this.isNegative(),W=T.isNegative();return P&&!W?-1:!P&&W?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},D.comp=D.compare,D.negate=function(){return!this.unsigned&&this.eq(M)?M:this.not().add(w)},D.neg=D.negate,D.add=function(T){r(T)||(T=p(T));var P=this.high>>>16,W=this.high&65535,K=this.low>>>16,z=this.low&65535,j=T.high>>>16,Z=T.high&65535,Q=T.low>>>16,ne=T.low&65535,ae=0,U=0,oe=0,re=0;return re+=z+ne,oe+=re>>>16,re&=65535,oe+=K+Q,U+=oe>>>16,oe&=65535,U+=W+Z,ae+=U>>>16,U&=65535,ae+=P+j,ae&=65535,c(oe<<16|re,ae<<16|U,this.unsigned)},D.subtract=function(T){return r(T)||(T=p(T)),this.add(T.neg())},D.sub=D.subtract,D.multiply=function(T){if(this.isZero())return y;if(r(T)||(T=p(T)),n){var P=n.mul(this.low,this.high,T.low,T.high);return c(P,n.get_high(),this.unsigned)}if(T.isZero())return y;if(this.eq(M))return T.isOdd()?M:y;if(T.eq(M))return this.isOdd()?M:y;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(x)&&T.lt(x))return l(this.toNumber()*T.toNumber(),this.unsigned);var W=this.high>>>16,K=this.high&65535,z=this.low>>>16,j=this.low&65535,Z=T.high>>>16,Q=T.high&65535,ne=T.low>>>16,ae=T.low&65535,U=0,oe=0,re=0,me=0;return me+=j*ae,re+=me>>>16,me&=65535,re+=z*ae,oe+=re>>>16,re&=65535,re+=j*ne,oe+=re>>>16,re&=65535,oe+=K*ae,U+=oe>>>16,oe&=65535,oe+=z*ne,U+=oe>>>16,oe&=65535,oe+=j*Q,U+=oe>>>16,oe&=65535,U+=W*ae+K*ne+z*Q+j*Z,U&=65535,c(re<<16|me,U<<16|oe,this.unsigned)},D.mul=D.multiply,D.divide=function(T){if(r(T)||(T=p(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var P=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return c(P,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:y;var W,K,z;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return b;if(T.gt(this.shru(1)))return k;z=b}else{if(this.eq(M)){if(T.eq(w)||T.eq(S))return M;if(T.eq(M))return w;var j=this.shr(1);return W=j.div(T).shl(1),W.eq(y)?T.isNegative()?w:S:(K=this.sub(T.mul(W)),z=W.add(K.div(T)),z)}else if(T.eq(M))return this.unsigned?b:y;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();z=y}for(K=this;K.gte(T);){W=Math.max(1,Math.floor(K.toNumber()/T.toNumber()));for(var Z=Math.ceil(Math.log(W)/Math.LN2),Q=Z<=48?1:u(2,Z-48),ne=l(W),ae=ne.mul(T);ae.isNegative()||ae.gt(K);)W-=Q,ne=l(W,this.unsigned),ae=ne.mul(T);ne.isZero()&&(ne=w),z=z.add(ne),K=K.sub(ae)}return z},D.div=D.divide,D.modulo=function(T){if(r(T)||(T=p(T)),n){var P=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return c(P,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},D.mod=D.modulo,D.rem=D.modulo,D.not=function(){return c(~this.low,~this.high,this.unsigned)},D.and=function(T){return r(T)||(T=p(T)),c(this.low&T.low,this.high&T.high,this.unsigned)},D.or=function(T){return r(T)||(T=p(T)),c(this.low|T.low,this.high|T.high,this.unsigned)},D.xor=function(T){return r(T)||(T=p(T)),c(this.low^T.low,this.high^T.high,this.unsigned)},D.shiftLeft=function(T){return r(T)&&(T=T.toInt()),(T&=63)==0?this:T<32?c(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):c(0,this.low<<T-32,this.unsigned)},D.shl=D.shiftLeft,D.shiftRight=function(T){return r(T)&&(T=T.toInt()),(T&=63)==0?this:T<32?c(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):c(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},D.shr=D.shiftRight,D.shiftRightUnsigned=function(T){if(r(T)&&(T=T.toInt()),T&=63,T===0)return this;var P=this.high;if(T<32){var W=this.low;return c(W>>>T|P<<32-T,P>>>T,this.unsigned)}else return T===32?c(P,0,this.unsigned):c(P>>>T-32,0,this.unsigned)},D.shru=D.shiftRightUnsigned,D.shr_u=D.shiftRightUnsigned,D.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},D.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},D.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},D.toBytesLE=function(){var T=this.high,P=this.low;return[P&255,P>>>8&255,P>>>16&255,P>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},D.toBytesBE=function(){var T=this.high,P=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,P>>>24,P>>>16&255,P>>>8&255,P&255]},s.fromBytes=function(T,P,W){return W?s.fromBytesLE(T,P):s.fromBytesBE(T,P)},s.fromBytesLE=function(T,P){return new s(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,P)},s.fromBytesBE=function(T,P){return new s(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],P)}}}),VE=rn({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),UE=rn({"(disabled):util"(){}}),GE=rn({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(c){var u=this,d=l();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(c),u.s0<0&&(u.s0+=1),u.s1-=d(c),u.s1<0&&(u.s1+=1),u.s2-=d(c),u.s2<0&&(u.s2+=1),d=null}function o(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var d=new a(c),p=u&&u.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function l(){var c=4022871197,u=function(d){d=String(d);for(var p=0;p<d.length;p++){c+=d.charCodeAt(p);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),HE=rn({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var p=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^p^p>>>8},l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),jE=rn({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(p^p<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,d==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),qE=rn({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.x,p=c.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,c.i=p+1&7,f};function u(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}u(c,l)}function o(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.x&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),XE=rn({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.w,p=c.X,h=c.i,f,m;return c.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,c.i=h,m+(d^d>>>16)|0};function u(d,p){var h,f,m,g,A,x=[],y=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,y=Math.max(y,p.length)),m=0,g=-32;g<y;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(A=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(A=A+1640531527|0,h=x[g&127]^=f+A,m=h==0?m+1:0);for(m>=128&&(x[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],h=x[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,x[m]=f^h;d.w=A,d.X=x,d.i=m}u(c,l)}function o(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.X&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),KE=rn({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.b,h=c.c,f=c.d,m=c.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,c.b=p=p<<20^p>>>12^h,c.c=h=h-f|0,c.d=f<<16^h>>>16^m,c.a=m-p|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var d=0;d<u.length+20;d++)c.b^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),ZE=rn({"(disabled):crypto"(){}}),YE=rn({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,l="random",c=r.pow(a,o),u=r.pow(2,i),d=u*2,p=a-1,h;function f(w,k,S){var N=[];k=k==!0?{entropy:!0}:k||{};var R=x(A(k.entropy?[w,b(s)]:w==null?y():w,3),N),M=new m(N),D=function(){for(var $=M.g(o),T=c,P=0;$<u;)$=($+P)*a,T*=a,P=M.g(1);for(;$>=d;)$/=2,T/=2,P>>>=1;return($+P)/T};return D.int32=function(){return M.g(4)|0},D.quick=function(){return M.g(4)/4294967296},D.double=D,x(b(M.S),s),(k.pass||S||function($,T,P,W){return W&&(W.S&&g(W,M),$.state=function(){return g(M,{})}),P?(r[l]=$,T):$})(D,R,"global"in k?k.global:this==r,k.state)}function m(w){var k,S=w.length,N=this,R=0,M=N.i=N.j=0,D=N.S=[];for(S||(w=[S++]);R<a;)D[R]=R++;for(R=0;R<a;R++)D[R]=D[M=p&M+w[R%S]+(k=D[R])],D[M]=k;(N.g=function($){for(var T,P=0,W=N.i,K=N.j,z=N.S;$--;)T=z[W=p&W+1],P=P*a+z[p&(z[W]=z[K=p&K+T])+(z[K]=T)];return N.i=W,N.j=K,P})(a)}function g(w,k){return k.i=w.i,k.j=w.j,k.S=w.S.slice(),k}function A(w,k){var S=[],N=typeof w,R;if(k&&N=="object")for(R in w)try{S.push(A(w[R],k-1))}catch(M){}return S.length?S:N=="string"?w:w+"\0"}function x(w,k){for(var S=w+"",N,R=0;R<S.length;)k[p&R]=p&(N^=k[p&R]*19)+S.charCodeAt(R++);return b(k)}function y(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(w)),b(w)}catch(N){var k=n.navigator,S=k&&k.plugins;return[+new Date,n,S,n.screen,b(s)]}}function b(w){return String.fromCharCode.apply(0,w)}if(x(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=ZE()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),bh=rn({"src/node_modules/seedrandom/index.js"(e,t){var n=GE(),s=HE(),r=jE(),a=qE(),o=XE(),i=KE(),l=YE();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),G5=rn({"(disabled):src/node_modules/string_decoder/index.js"(){}}),vh=rn({"(disabled):fs"(){}}),nd=rn({"(disabled):path"(){}}),JE=rn({"(disabled):worker_threads"(){}}),QE=rn({"(disabled):perf_hooks"(){}}),e9=rn({"(disabled):os"(){}}),t9=rn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return re.buffer!=lt&&ss(re.buffer),ms}function o(){return re.buffer!=lt&&ss(re.buffer),In}function i(){return re.buffer!=lt&&ss(re.buffer),gs}function l(){return re.buffer!=lt&&ss(re.buffer),Rs}function c(){return re.buffer!=lt&&ss(re.buffer),$s}var u=typeof r!="undefined"?r:{},d,p;u.ready=new Promise(function(C,_){d=C,p=_});var h;process&&process.listeners&&(h={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f={},m;for(m in u)u.hasOwnProperty(m)&&(f[m]=u[m]);var g=[],A="./this.program",x=function(C,_){throw _},y=!1,b=!1,w=!1,k=!1;y=typeof window=="object",b=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",k=!y&&!w&&!b;var S=u.ENVIRONMENT_IS_PTHREAD||!1;S&&(lt=u.buffer);var N="";function R(C){return u.locateFile?u.locateFile(C,N):N+C}var M,D,$,T,P,W;if(w){b?N=nd().dirname(N)+"/":N=__dirname+"/",M=function(_,B){return P||(P=vh()),W||(W=nd()),_=W.normalize(_),P.readFileSync(_,B?null:"utf8")},$=function(_){var B=M(_,!0);return B.buffer||(B=new Uint8Array(B)),Ne(B.buffer),B},process.argv.length>1&&(A=process.argv[1].replace(/\\/g,"/")),g=process.argv.slice(2),process.on("uncaughtException",function(C){if(!(C instanceof Yc))throw C}),process.on("unhandledRejection",Hr),x=function(C){process.exit(C)},u.inspect=function(){return"[Emscripten Module object]"};var K;try{K=JE()}catch(C){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),C}global.Worker=K.Worker}else k?(typeof read!="undefined"&&(M=function(_){return read(_)}),$=function(_){var B;return typeof readbuffer=="function"?new Uint8Array(readbuffer(_)):(B=read(_,"binary"),Ne(typeof B=="object"),B)},typeof scriptArgs!="undefined"?g=scriptArgs:typeof arguments!="undefined"&&(g=arguments),typeof quit=="function"&&(x=function(C){quit(C)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(y||b)&&(b?N=self.location.href:typeof document!="undefined"&&document.currentScript&&(N=document.currentScript.src),typeof s!="undefined"&&s&&(N=s),N.indexOf("blob:")!==0?N=N.substr(0,N.lastIndexOf("/")+1):N="",w?(M=function(_,B){return P||(P=vh()),W||(W=nd()),_=W.normalize(_),P.readFileSync(_,B?null:"utf8")},$=function(_){var B=M(_,!0);return B.buffer||(B=new Uint8Array(B)),Ne(B.buffer),B}):(M=function(C){var _=new XMLHttpRequest;return _.open("GET",C,!1),_.send(null),_.responseText},b&&($=function(C){var _=new XMLHttpRequest;return _.open("GET",C,!1),_.responseType="arraybuffer",_.send(null),new Uint8Array(_.response)}),D=function(C,_,B){var ee=new XMLHttpRequest;ee.open("GET",C,!0),ee.responseType="arraybuffer",ee.onload=function(){if(ee.status==200||ee.status==0&&ee.response){_(ee.response);return}B()},ee.onerror=B,ee.send(null)}),T=function(C){document.title=C});w&&typeof performance=="undefined"&&(global.performance=QE().performance);var z=u.print||console.log.bind(console),j=u.printErr||console.warn.bind(console);for(m in f)f.hasOwnProperty(m)&&(u[m]=f[m]);f=null,u.arguments&&(g=u.arguments),u.thisProgram&&(A=u.thisProgram),u.quit&&(x=u.quit);function Z(C){Z.shown||(Z.shown={}),Z.shown[C]||(Z.shown[C]=1,j(C))}var Q=Atomics.load,ne=Atomics.store,ae=Atomics.compareExchange,U;u.wasmBinary&&(U=u.wasmBinary);var oe=u.noExitRuntime||!0;typeof WebAssembly!="object"&&Hr("no native wasm support detected");var re,me,ye=!1,Te;function Ne(C,_){C||Hr("Assertion failed: "+_)}function Pe(C){var _=u["_"+C];return Ne(_,"Cannot call unknown function "+C+", make sure it is exported"),_}function Ue(C,_,B,ee,be){var Ae={string:function(On){var eu=0;if(On!=null&&On!==0){var W5=(On.length<<2)+1;eu=Yl(W5),it(On,eu,W5)}return eu},array:function(On){var eu=Yl(On.length);return Rt(On,eu),eu}};function xe(On){return _==="string"?Ye(On):_==="boolean"?Boolean(On):On}var Ee=Pe(C),ht=[],mn=0;if(ee)for(var sn=0;sn<ee.length;sn++){var Ia=Ae[B[sn]];Ia?(mn===0&&(mn=Zc()),ht[sn]=Ia(ee[sn])):ht[sn]=ee[sn]}var Ql=Ee.apply(null,ht);return Ql=xe(Ql),mn!==0&&Zl(mn),Ql}function ot(C,_,B,ee){B=B||[];var be=B.every(function(xe){return xe==="number"}),Ae=_!=="string";return Ae&&be&&!ee?Pe(C):function(){return Ue(C,_,B,arguments,ee)}}function Qe(C,_,B){for(var ee=_+B,be="";!(_>=ee);){var Ae=C[_++];if(!Ae)return be;if(!(Ae&128)){be+=String.fromCharCode(Ae);continue}var xe=C[_++]&63;if((Ae&224)==192){be+=String.fromCharCode((Ae&31)<<6|xe);continue}var Ee=C[_++]&63;if((Ae&240)==224?Ae=(Ae&15)<<12|xe<<6|Ee:Ae=(Ae&7)<<18|xe<<12|Ee<<6|C[_++]&63,Ae<65536)be+=String.fromCharCode(Ae);else{var ht=Ae-65536;be+=String.fromCharCode(55296|ht>>10,56320|ht&1023)}}return be}function Ye(C,_){return C?Qe(o(),C,_):""}function gt(C,_,B,ee){if(!(ee>0))return 0;for(var be=B,Ae=B+ee-1,xe=0;xe<C.length;++xe){var Ee=C.charCodeAt(xe);if(Ee>=55296&&Ee<=57343){var ht=C.charCodeAt(++xe);Ee=65536+((Ee&1023)<<10)|ht&1023}if(Ee<=127){if(B>=Ae)break;_[B++]=Ee}else if(Ee<=2047){if(B+1>=Ae)break;_[B++]=192|Ee>>6,_[B++]=128|Ee&63}else if(Ee<=65535){if(B+2>=Ae)break;_[B++]=224|Ee>>12,_[B++]=128|Ee>>6&63,_[B++]=128|Ee&63}else{if(B+3>=Ae)break;_[B++]=240|Ee>>18,_[B++]=128|Ee>>12&63,_[B++]=128|Ee>>6&63,_[B++]=128|Ee&63}}return _[B]=0,B-be}function it(C,_,B){return gt(C,o(),_,B)}function At(C){for(var _=0,B=0;B<C.length;++B){var ee=C.charCodeAt(B);ee>=55296&&ee<=57343&&(ee=65536+((ee&1023)<<10)|C.charCodeAt(++B)&1023),ee<=127?++_:ee<=2047?_+=2:ee<=65535?_+=3:_+=4}return _}function Rt(C,_){a().set(C,_)}function ts(C,_){return C%_>0&&(C+=_-C%_),C}var lt,ms,In,Xs,ns,gs,Rs,Ks,$s;function ss(C){lt=C,u.HEAP8=ms=new Int8Array(C),u.HEAP16=Xs=new Int16Array(C),u.HEAP32=gs=new Int32Array(C),u.HEAPU8=In=new Uint8Array(C),u.HEAPU16=ns=new Uint16Array(C),u.HEAPU32=Rs=new Uint32Array(C),u.HEAPF32=Ks=new Float32Array(C),u.HEAPF64=$s=new Float64Array(C)}var Aa=u.INITIAL_MEMORY||16777216;if(S)re=u.wasmMemory,lt=u.buffer;else if(u.wasmMemory)re=u.wasmMemory;else if(re=new WebAssembly.Memory({initial:Aa/65536,maximum:2147483648/65536,shared:!0}),!(re.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");re&&(lt=re.buffer),Aa=lt.byteLength,ss(lt);var Rn,ya=[],_s=[],Lc=[],Bc=[],Gr=[],jp=!1,V0=!1;S||_s.push({func:function(){ch()}});function qp(){if(!S){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)U0(u.preRun.shift());jl(ya)}}function Xp(){jp=!0,!S&&jl(_s)}function Kp(){S||jl(Lc)}function rs(){S||(V0=!0)}function Zp(){if(!S){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)G0(u.postRun.shift());jl(Gr)}}function U0(C){ya.unshift(C)}function G0(C){Gr.unshift(C)}var Zs=0,Wc=null,si=null;function H0(C){Ne(!S,"addRunDependency cannot be used in a pthread worker"),Zs++,u.monitorRunDependencies&&u.monitorRunDependencies(Zs)}function j0(C){if(Zs--,u.monitorRunDependencies&&u.monitorRunDependencies(Zs),Zs==0&&(Wc!==null&&(clearInterval(Wc),Wc=null),si)){var _=si;si=null,_()}}u.preloadedImages={},u.preloadedAudios={};function Hr(C){u.onAbort&&u.onAbort(C),S&&console.error("Pthread aborting at "+new Error().stack),C+="",j(C),ye=!0,Te=1,C="abort("+C+"). Build with -s ASSERTIONS=1 for more info.";var _=new WebAssembly.RuntimeError(C);throw p(_),_}function ri(C,_){return String.prototype.startsWith?C.startsWith(_):C.indexOf(_)===0}var q0="data:application/octet-stream;base64,";function Yp(C){return ri(C,q0)}var X0="file://";function Jp(C){return ri(C,X0)}var as="tfjs-backend-wasm-threaded-simd.wasm";Yp(as)||(as=R(as));function K0(C){try{if(C==as&&U)return new Uint8Array(U);if($)return $(C);throw"both async and sync fetching of the wasm failed"}catch(_){Hr(_)}}function Qp(){if(!U&&(y||b)){if(typeof fetch=="function"&&!Jp(as))return fetch(as,{credentials:"same-origin"}).then(function(C){if(!C.ok)throw"failed to load wasm binary file at '"+as+"'";return C.arrayBuffer()}).catch(function(){return K0(as)});if(D)return new Promise(function(C,_){D(as,function(B){C(new Uint8Array(B))},_)})}return Promise.resolve().then(function(){return K0(as)})}function Z0(){var C={a:Vg};function _(xe,Ee){var ht=xe.exports;if(u.asm=ht,Rn=u.asm.kb,me=Ee,!S){var mn=$e.unusedWorkers.length;$e.unusedWorkers.forEach(function(sn){$e.loadWasmModuleToWorker(sn,function(){--mn||j0("wasm-instantiate")})})}}S||H0("wasm-instantiate");function B(xe){_(xe.instance,xe.module)}function ee(xe){return Qp().then(function(Ee){return WebAssembly.instantiate(Ee,C)}).then(xe,function(Ee){j("failed to asynchronously prepare wasm: "+Ee),Hr(Ee)})}function be(){return!U&&typeof WebAssembly.instantiateStreaming=="function"&&!Yp(as)&&!Jp(as)&&typeof fetch=="function"?fetch(as,{credentials:"same-origin"}).then(function(xe){var Ee=WebAssembly.instantiateStreaming(xe,C);return Ee.then(B,function(ht){return j("wasm streaming compile failed: "+ht),j("falling back to ArrayBuffer instantiation"),ee(B)})}):ee(B)}if(u.instantiateWasm)try{var Ae=u.instantiateWasm(C,_);return Ae}catch(xe){return j("Module.instantiateWasm callback failed with error: "+xe),!1}return be().catch(p),{}}var eh={10072:function(){throw"Canceled!"},10090:function(C,_){setTimeout(function(){F5(C,_)},0)}};function Y0(){$e.initRuntime()}function jl(C){for(;C.length>0;){var _=C.shift();if(typeof _=="function"){_(u);continue}var B=_.func;typeof B=="number"?_.arg===void 0?Rn.get(B)():Rn.get(B)(_.arg):B(_.arg===void 0?null:_.arg)}}var xa={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Vc(C,_){if(C<=0||C>a().length||C&!0||_<0)return-28;if(_==0)return 0;_>=2147483647&&(_=1/0);var B=Atomics.load(i(),Jl>>2),ee=0;if(B==C){var be=Atomics.compareExchange(i(),Jl>>2,B,0);if(be==B&&(--_,ee=1,_<=0))return 1}var Ae=Atomics.notify(i(),C>>2,_);if(Ae>=0)return Ae+ee;throw"Atomics.notify returned an unexpected value "+Ae}u._emscripten_futex_wake=Vc;function J0(C){if(S)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!C)throw"Internal Error! Null pthread_ptr in killThread!";i()[C+12>>2]=0;var _=$e.pthreads[C];_.worker.terminate(),$e.freeThreadData(_),$e.runningWorkers.splice($e.runningWorkers.indexOf(_.worker),1),_.worker.pthread=void 0}function Q0(C){if(S)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!C)throw"Internal Error! Null pthread_ptr in cancelThread!";var _=$e.pthreads[C];_.worker.postMessage({cmd:"cancel"})}function th(C){if(S)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!C)throw"Internal Error! Null pthread_ptr in cleanupThread!";var _=$e.pthreads[C];if(_){i()[C+12>>2]=0;var B=_.worker;$e.returnWorkerToPool(B)}}var $e={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var C=8,_=0;_<C;++_)$e.allocateUnusedWorker()},initRuntime:function(){for(var C=oi(228),_=0;_<228/4;++_)l()[C/4+_]=0;i()[C+12>>2]=C;var B=C+152;i()[B>>2]=B;for(var ee=oi(512),_=0;_<128;++_)l()[ee/4+_]=0;Atomics.store(l(),C+100>>2,ee),Atomics.store(l(),C+40>>2,C),u2(C,!b,1),_5(C)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;$e.threadExitHandlers.length>0;)$e.threadExitHandlers.pop()();S&&ka()&&$5()},runExitHandlersAndDeinitThread:function(C,_){Atomics.store(l(),C+56>>2,1),Atomics.store(l(),C+60>>2,0),$e.runExitHandlers(),Atomics.store(l(),C+4>>2,_),Atomics.store(l(),C+0>>2,1),Vc(C+0,2147483647),u2(0,0,0)},threadExit:function(C){var _=ka();_&&($e.runExitHandlersAndDeinitThread(_,C),S&&postMessage({cmd:"exit"}))},threadCancel:function(){$e.runExitHandlersAndDeinitThread(ka(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var C in $e.pthreads){var _=$e.pthreads[C];_&&_.worker&&$e.returnWorkerToPool(_.worker)}$e.pthreads={};for(var B=0;B<$e.unusedWorkers.length;++B){var ee=$e.unusedWorkers[B];ee.terminate()}$e.unusedWorkers=[];for(var B=0;B<$e.runningWorkers.length;++B){var ee=$e.runningWorkers[B],_=ee.pthread;$e.freeThreadData(_),ee.terminate()}$e.runningWorkers=[]},freeThreadData:function(C){if(!!C){if(C.threadInfoStruct){var _=i()[C.threadInfoStruct+100>>2];i()[C.threadInfoStruct+100>>2]=0,Kc(_),Kc(C.threadInfoStruct)}C.threadInfoStruct=0,C.allocatedOwnStack&&C.stackBase&&Kc(C.stackBase),C.stackBase=0,C.worker&&(C.worker.pthread=null)}},returnWorkerToPool:function(C){$e.runWithoutMainThreadQueuedCalls(function(){delete $e.pthreads[C.pthread.threadInfoStruct],$e.unusedWorkers.push(C),$e.runningWorkers.splice($e.runningWorkers.indexOf(C),1),$e.freeThreadData(C.pthread),C.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(C){i()[L5>>2]=0;try{C()}finally{i()[L5>>2]=1}},receiveObjectTransfer:function(C){},loadWasmModuleToWorker:function(C,_){C.onmessage=function(B){var ee=B.data,be=ee.cmd;if(C.pthread&&($e.currentProxiedOperationCallerThread=C.pthread.threadInfoStruct),ee.targetThread&&ee.targetThread!=ka()){var Ae=$e.pthreads[ee.targetThread];Ae?Ae.worker.postMessage(B.data,ee.transferList):console.error('Internal error! Worker sent a message "'+be+'" to target pthread '+ee.targetThread+", but that thread no longer exists!"),$e.currentProxiedOperationCallerThread=void 0;return}if(be==="processQueuedMainThreadWork")gh();else if(be==="spawnThread")lh(B.data);else if(be==="cleanupThread")th(ee.thread);else if(be==="killThread")J0(ee.thread);else if(be==="cancelThread")Q0(ee.thread);else if(be==="loaded")C.loaded=!0,_&&_(C),C.runPthread&&(C.runPthread(),delete C.runPthread);else if(be==="print")z("Thread "+ee.threadId+": "+ee.text);else if(be==="printErr")j("Thread "+ee.threadId+": "+ee.text);else if(be==="alert")alert("Thread "+ee.threadId+": "+ee.text);else if(be==="exit"){var xe=C.pthread&&Atomics.load(l(),C.pthread.threadInfoStruct+64>>2);xe&&$e.returnWorkerToPool(C)}else if(be==="exitProcess")try{$E(ee.returnCode)}catch(Ee){if(Ee instanceof Yc)return;throw Ee}else be==="cancelDone"?$e.returnWorkerToPool(C):be==="objectTransfer"?$e.receiveObjectTransfer(B.data):B.data.target==="setimmediate"?C.postMessage(B.data):j("worker sent an unknown command "+be);$e.currentProxiedOperationCallerThread=void 0},C.onerror=function(B){j("pthread sent an error! "+B.filename+":"+B.lineno+": "+B.message)},w&&(C.on("message",function(B){C.onmessage({data:B})}),C.on("error",function(B){C.onerror(B)}),C.on("exit",function(B){})),C.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||s,wasmMemory:re,wasmModule:me})},allocateUnusedWorker:function(){var C=R("tfjs-backend-wasm-threaded-simd.worker.js");$e.unusedWorkers.push(new Worker(C))},getNewWorker:function(){return $e.unusedWorkers.length==0&&($e.allocateUnusedWorker(),$e.loadWasmModuleToWorker($e.unusedWorkers[0])),$e.unusedWorkers.length>0?$e.unusedWorkers.pop():null},busySpinWait:function(C){for(var _=performance.now()+C;performance.now()<_;);}};function eg(C,_){M5(C,_),Zl(C)}u.establishStackSpace=eg;function tg(){return oe}u.getNoExitRuntime=tg;function ng(C,_){return Rn.get(C)(_)}u.invokeEntryPoint=ng;function sg(C,_,B,ee){Hr("Assertion failed: "+Ye(C)+", at: "+[_?Ye(_):"unknown filename",B,ee?Ye(ee):"unknown function"])}function rg(C,_){var B=_main(C,_)}var ai;w?ai=function(){var C=process.hrtime();return C[0]*1e3+C[1]/1e6}:S?ai=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow!="undefined"?ai=dateNow:ai=function(){return performance.now()};function ag(C){return i()[E5()>>2]=C,C}function og(C,_){if(S)return ba(1,1,C,_)}function ig(C,_){if(C==_)postMessage({cmd:"processQueuedMainThreadWork"});else if(S)postMessage({targetThread:C,cmd:"processThreadQueue"});else{var B=$e.pthreads[C],ee=B&&B.worker;if(!ee)return;ee.postMessage({cmd:"processThreadQueue"})}return 1}function lg(){Hr()}function ug(C,_,B){var ee=hg(_,B);return eh[C].apply(null,ee)}function cg(C,_){}function nh(C,_,B){if(C<=0||C>a().length||C&!0)return-28;if(y){if(Atomics.load(i(),C>>2)!=_)return-6;for(var be=performance.now(),Ae=be+B,xe=Atomics.exchange(i(),Jl>>2,C);;){if(be=performance.now(),be>Ae)return xe=Atomics.exchange(i(),Jl>>2,0),-73;if(xe=Atomics.exchange(i(),Jl>>2,0),xe==0)break;if(gh(),Atomics.load(i(),C>>2)!=_)return-6;xe=Atomics.exchange(i(),Jl>>2,C)}return 0}else{var ee=Atomics.wait(i(),C>>2,_,B);if(ee==="timed-out")return-73;if(ee==="not-equal")return-6;if(ee==="ok")return 0;throw"Atomics.wait returned an unexpected value "+ee}}function dg(C,_,B){o().copyWithin(C,_,_+B)}function pg(){return w?e9().cpus().length:navigator.hardwareConcurrency}function ba(C,_){for(var B=arguments.length-2,ee=Zc(),be=B,Ae=Yl(be*8),xe=Ae>>3,Ee=0;Ee<B;Ee++){var ht=arguments[2+Ee];c()[xe+Ee]=ht}var mn=O5(C,be,Ae,_);return Zl(ee),mn}var Uc=[],Gc=[];function hg(C,_){Gc.length=0;var B;for(_>>=2;B=o()[C++];){var ee=B<105;ee&&_&1&&_++,Gc.push(ee?c()[_++>>1]:i()[_]),++_}return Gc}function fg(C,_,B){Uc.length=_;for(var ee=B>>3,be=0;be<_;be++)Uc[be]=c()[ee+be];var Ae=C<0,xe=Ae?eh[-C-1]:Wg[C];return xe.apply(null,Uc)}function mg(){return o().length}function gg(C){try{return re.grow(C-lt.byteLength+65535>>>16),ss(re.buffer),1}catch(_){}}function Ag(C){var _=mg();if(C<=_)return!1;var B=2147483648;if(C>B)return!1;for(var ee=1;ee<=4;ee*=2){var be=_*(1+.2/ee);be=Math.min(be,C+100663296);var Ae=Math.min(B,ts(Math.max(C,be),65536)),xe=gg(Ae);if(xe)return!0}return!1}var He={inEventHandler:0,removeAllEventListeners:function(){for(var C=He.eventHandlers.length-1;C>=0;--C)He._removeHandler(C);He.eventHandlers=[],He.deferredCalls=[]},registerRemoveEventListeners:function(){He.removeEventListenersRegistered||(Bc.push(He.removeAllEventListeners),He.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(C,_,B){function ee(xe,Ee){if(xe.length!=Ee.length)return!1;for(var ht in xe)if(xe[ht]!=Ee[ht])return!1;return!0}for(var be in He.deferredCalls){var Ae=He.deferredCalls[be];if(Ae.targetFunction==C&&ee(Ae.argsList,B))return}He.deferredCalls.push({targetFunction:C,precedence:_,argsList:B}),He.deferredCalls.sort(function(xe,Ee){return xe.precedence<Ee.precedence})},removeDeferredCalls:function(C){for(var _=0;_<He.deferredCalls.length;++_)He.deferredCalls[_].targetFunction==C&&(He.deferredCalls.splice(_,1),--_)},canPerformEventHandlerRequests:function(){return He.inEventHandler&&He.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!He.canPerformEventHandlerRequests())for(var C=0;C<He.deferredCalls.length;++C){var _=He.deferredCalls[C];He.deferredCalls.splice(C,1),--C,_.targetFunction.apply(null,_.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(C,_){for(var B=0;B<He.eventHandlers.length;++B)He.eventHandlers[B].target==C&&(!_||_==He.eventHandlers[B].eventTypeString)&&He._removeHandler(B--)},_removeHandler:function(C){var _=He.eventHandlers[C];_.target.removeEventListener(_.eventTypeString,_.eventListenerFunc,_.useCapture),He.eventHandlers.splice(C,1)},registerOrRemoveHandler:function(C){var _=function(be){++He.inEventHandler,He.currentEventHandler=C,He.runDeferredCalls(),C.handlerFunc(be),He.runDeferredCalls(),--He.inEventHandler};if(C.callbackfunc)C.eventListenerFunc=_,C.target.addEventListener(C.eventTypeString,_,C.useCapture),He.eventHandlers.push(C),He.registerRemoveEventListeners();else for(var B=0;B<He.eventHandlers.length;++B)He.eventHandlers[B].target==C.target&&He.eventHandlers[B].eventTypeString==C.eventTypeString&&He._removeHandler(B--)},queueEventHandlerOnThread_iiii:function(C,_,B,ee,be){var Ae=Zc(),xe=Yl(12);i()[xe>>2]=B,i()[xe+4>>2]=ee,i()[xe+8>>2]=be,l2(0,C,637534208,_,ee,xe),Zl(Ae)},getTargetThreadForEventCallback:function(C){switch(C){case 1:return 0;case 2:return $e.currentProxiedOperationCallerThread;default:return C}},getNodeNameForTarget:function(C){return C?C==window?"#window":C==screen?"#screen":C&&C.nodeName?C.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function yg(C){var _=At(C)+1,B=oi(_);return it(C,B,_),B}function xg(C,_,B,ee){var be=Zc(),Ae=Yl(12),xe=0;_&&(xe=yg(_)),i()[Ae>>2]=xe,i()[Ae+4>>2]=B,i()[Ae+8>>2]=ee,l2(0,C,657457152,0,xe,Ae),Zl(be)}function bg(C,_,B,ee){_=_?Ye(_):"",xg(C,_,B,ee)}function vg(C){return C>2?Ye(C):C}var wg=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function kg(C){C=vg(C);var _=wg[C]||(typeof document!="undefined"?document.querySelector(C):void 0);return _}function Hc(C){return kg(C)}function sh(C,_,B){var ee=Hc(C);if(!ee)return-4;if(ee.canvasSharedPtr&&(i()[ee.canvasSharedPtr>>2]=_,i()[ee.canvasSharedPtr+4>>2]=B),ee.offscreenCanvas||!ee.controlTransferredOffscreen){ee.offscreenCanvas&&(ee=ee.offscreenCanvas);var be=!1;if(ee.GLctxObject&&ee.GLctxObject.GLctx){var Ae=ee.GLctxObject.GLctx.getParameter(2978);be=Ae[0]===0&&Ae[1]===0&&Ae[2]===ee.width&&Ae[3]===ee.height}ee.width=_,ee.height=B,be&&ee.GLctxObject.GLctx.viewport(0,0,_,B)}else if(ee.canvasSharedPtr){var xe=i()[ee.canvasSharedPtr+8>>2];return bg(xe,C,_,B),1}else return-4;return 0}function rh(C,_,B){return S?ba(2,1,C,_,B):sh(C,_,B)}function Ig(C,_,B){var ee=Hc(C);return ee?sh(C,_,B):rh(C,_,B)}function Sg(C){}function Cg(C,_){}function Tg(C){var _=C.getExtension("ANGLE_instanced_arrays");if(_)return C.vertexAttribDivisor=function(B,ee){_.vertexAttribDivisorANGLE(B,ee)},C.drawArraysInstanced=function(B,ee,be,Ae){_.drawArraysInstancedANGLE(B,ee,be,Ae)},C.drawElementsInstanced=function(B,ee,be,Ae,xe){_.drawElementsInstancedANGLE(B,ee,be,Ae,xe)},1}function Ng(C){var _=C.getExtension("OES_vertex_array_object");if(_)return C.createVertexArray=function(){return _.createVertexArrayOES()},C.deleteVertexArray=function(B){_.deleteVertexArrayOES(B)},C.bindVertexArray=function(B){_.bindVertexArrayOES(B)},C.isVertexArray=function(B){return _.isVertexArrayOES(B)},1}function Eg(C){var _=C.getExtension("WEBGL_draw_buffers");if(_)return C.drawBuffers=function(B,ee){_.drawBuffersWEBGL(B,ee)},1}function Rg(C){return!!(C.multiDrawWebgl=C.getExtension("WEBGL_multi_draw"))}var dt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(_){dt.lastError||(dt.lastError=_)},getNewId:function(C){for(var _=dt.counter++,B=C.length;B<_;B++)C[B]=null;return _},getSource:function(C,_,B,ee){for(var be="",Ae=0;Ae<_;++Ae){var xe=ee?i()[ee+Ae*4>>2]:-1;be+=Ye(i()[B+Ae*4>>2],xe<0?void 0:xe)}return be},createContext:function(C,_){var B=C.getContext("webgl",_);if(!B)return 0;var ee=dt.registerContext(B,_);return ee},registerContext:function(C,_){var B=oi(8);i()[B+4>>2]=ka();var ee={handle:B,attributes:_,version:_.majorVersion,GLctx:C};return C.canvas&&(C.canvas.GLctxObject=ee),dt.contexts[B]=ee,(typeof _.enableExtensionsByDefault=="undefined"||_.enableExtensionsByDefault)&&dt.initExtensions(ee),B},makeContextCurrent:function(C){return dt.currentContext=dt.contexts[C],u.ctx=va=dt.currentContext&&dt.currentContext.GLctx,!(C&&!va)},getContext:function(C){return dt.contexts[C]},deleteContext:function(C){dt.currentContext===dt.contexts[C]&&(dt.currentContext=null),typeof He=="object"&&He.removeAllHandlersOnTarget(dt.contexts[C].GLctx.canvas),dt.contexts[C]&&dt.contexts[C].GLctx.canvas&&(dt.contexts[C].GLctx.canvas.GLctxObject=void 0),Kc(dt.contexts[C].handle),dt.contexts[C]=null},initExtensions:function(C){if(C||(C=dt.currentContext),!C.initExtensionsDone){C.initExtensionsDone=!0;var _=C.GLctx;Tg(_),Ng(_),Eg(_),_.disjointTimerQueryExt=_.getExtension("EXT_disjoint_timer_query"),Rg(_);var B=_.getSupportedExtensions()||[];B.forEach(function(ee){ee.indexOf("lose_context")<0&&ee.indexOf("debug")<0&&_.getExtension(ee)})}},populateUniformTable:function(C){for(var _=dt.programs[C],B=dt.programInfos[C]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},ee=B.uniforms,be=va.getProgramParameter(_,35718),Ae=0;Ae<be;++Ae){var xe=va.getActiveUniform(_,Ae),Ee=xe.name;B.maxUniformLength=Math.max(B.maxUniformLength,Ee.length+1),Ee.slice(-1)=="]"&&(Ee=Ee.slice(0,Ee.lastIndexOf("[")));var ht=va.getUniformLocation(_,Ee);if(ht){var mn=dt.getNewId(dt.uniforms);ee[Ee]=[xe.size,mn],dt.uniforms[mn]=ht;for(var sn=1;sn<xe.size;++sn){var Ia=Ee+"["+sn+"]";ht=va.getUniformLocation(_,Ia),mn=dt.getNewId(dt.uniforms),dt.uniforms[mn]=ht}}}}},$g=["default","low-power","high-performance"];function _g(C,_){var B=_>>2,ee=i()[B+(24>>2)],be={alpha:!!i()[B+(0>>2)],depth:!!i()[B+(4>>2)],stencil:!!i()[B+(8>>2)],antialias:!!i()[B+(12>>2)],premultipliedAlpha:!!i()[B+(16>>2)],preserveDrawingBuffer:!!i()[B+(20>>2)],powerPreference:$g[ee],failIfMajorPerformanceCaveat:!!i()[B+(28>>2)],majorVersion:i()[B+(32>>2)],minorVersion:i()[B+(36>>2)],enableExtensionsByDefault:i()[B+(40>>2)],explicitSwapControl:i()[B+(44>>2)],proxyContextToMainThread:i()[B+(48>>2)],renderViaOffscreenBackBuffer:i()[B+(52>>2)]},Ae=Hc(C);if(!Ae||be.explicitSwapControl)return 0;var xe=dt.createContext(Ae,be);return xe}function Dg(C,_){return _g(C,_)}var ql={mappings:{},buffers:[null,[],[]],printChar:function(C,_){var B=ql.buffers[C];_===0||_===10?((C===1?z:j)(Qe(B,0)),B.length=0):B.push(_)},varargs:void 0,get:function(){ql.varargs+=4;var C=i()[ql.varargs-4>>2];return C},getStr:function(C){var _=Ye(C);return _},get64:function(C,_){return C}};function ah(C){return S?ba(3,1,C):0}function oh(C,_,B,ee,be){if(S)return ba(4,1,C,_,B,ee,be)}function ih(C,_,B,ee){if(S)return ba(5,1,C,_,B,ee);for(var be=0,Ae=0;Ae<B;Ae++){for(var xe=i()[_+Ae*8>>2],Ee=i()[_+(Ae*8+4)>>2],ht=0;ht<Ee;ht++)ql.printChar(C,o()[xe+ht]);be+=Ee}return i()[ee>>2]=be,0}function Fg(C){var _=$e.threadExitHandlers.pop();C&&_()}function Pg(C,_){$e.threadExitHandlers.push(function(){Rn.get(C)(_)})}function lh(C){if(S)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var _=$e.getNewWorker();if(_.pthread!==void 0)throw"Internal error!";if(!C.pthread_ptr)throw"Internal error, no pthread ptr!";$e.runningWorkers.push(_);for(var B=oi(128*4),ee=0;ee<128;++ee)i()[B+ee*4>>2]=0;var be=C.stackBase+C.stackSize,Ae=$e.pthreads[C.pthread_ptr]={worker:_,stackBase:C.stackBase,stackSize:C.stackSize,allocatedOwnStack:C.allocatedOwnStack,threadInfoStruct:C.pthread_ptr},xe=Ae.threadInfoStruct>>2;Atomics.store(l(),xe+(64>>2),C.detached),Atomics.store(l(),xe+(100>>2),B),Atomics.store(l(),xe+(40>>2),Ae.threadInfoStruct),Atomics.store(l(),xe+(80>>2),C.stackSize),Atomics.store(l(),xe+(76>>2),be),Atomics.store(l(),xe+(104>>2),C.stackSize),Atomics.store(l(),xe+(104+8>>2),be),Atomics.store(l(),xe+(104+12>>2),C.detached);var Ee=R5(),ht=Ee+40;Atomics.store(l(),xe+(172>>2),ht),_.pthread=Ae;var mn={cmd:"run",start_routine:C.startRoutine,arg:C.arg,threadInfoStruct:C.pthread_ptr,stackBase:C.stackBase,stackSize:C.stackSize};_.runPthread=function(){mn.time=performance.now(),_.postMessage(mn,C.transferList)},_.loaded&&(_.runPthread(),delete _.runPthread)}function Og(C,_,B,ee){if(typeof SharedArrayBuffer=="undefined")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!C)return j("pthread_create called with a null thread pointer!"),28;var be=[],Ae=0;if(S&&(be.length===0||Ae))return P5(687865856,C,_,B,ee);if(Ae)return Ae;var xe=0,Ee=0,ht=0;_&&_!=-1?(xe=i()[_>>2],xe+=81920,Ee=i()[_+8>>2],ht=i()[_+12>>2]!==0):xe=2097152;var mn=Ee==0;mn?Ee=z5(16,xe):(Ee-=xe,Ne(Ee>0));for(var sn=oi(228),Ia=0;Ia<228>>2;++Ia)l()[(sn>>2)+Ia]=0;i()[C>>2]=sn,i()[sn+12>>2]=sn;var Ql=sn+152;i()[Ql>>2]=Ql;var On={stackBase:Ee,stackSize:xe,allocatedOwnStack:mn,detached:ht,startRoutine:B,pthread_ptr:sn,arg:ee,transferList:be};return S?(On.cmd="spawnThread",postMessage(On,be)):lh(On),0}function Mg(){if(!!S){var C=ka();if(!!C){var _=Atomics.load(l(),C+56>>2);if(!_){var B=Atomics.load(l(),C+0>>2);if(B==2)throw"Canceled!"}}}}function zg(){w||b||Z("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Lg(C,_,B){if(!C)return j("pthread_join attempted on a null thread pointer!"),xa.ESRCH;if(S&&ka()==C)return j("PThread "+C+" is attempting to join to itself!"),xa.EDEADLK;if(!S&&D5()==C)return j("Main thread "+C+" is attempting to join to itself!"),xa.EDEADLK;var ee=i()[C+12>>2];if(ee!==C)return j("pthread_join attempted on thread "+C+", which does not point to a valid thread, or does not exist anymore!"),xa.ESRCH;var be=Atomics.load(l(),C+64>>2);if(be)return j("Attempted to join thread "+C+", which was already detached!"),xa.EINVAL;for(B&&zg();;){var Ae=Atomics.load(l(),C+0>>2);if(Ae==1){var xe=Atomics.load(l(),C+4>>2);return _&&(i()[_>>2]=xe),Atomics.store(l(),C+64>>2,1),S?postMessage({cmd:"cleanupThread",thread:C}):th(C),0}if(!B)return xa.EBUSY;Mg(),S||gh(),nh(C+0,Ae,S?100:1)}}function Bg(C,_){return Lg(C,_,!0)}function uh(C){if(S)return ba(6,1,C);switch(C){case 30:return 16384;case 85:var _=2147483648;return _/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return ag(28),-1}S||$e.initMainThreadBlock();var va,Wg=[null,og,rh,ah,oh,ih,uh],Vg={e:sg,r:rg,x:ig,b:lg,y:ug,j:cg,d:nh,c:Vc,f:ai,p:dg,A:pg,u:fg,q:Ag,v:Ig,i:Sg,s:Cg,w:Dg,l:ah,n:oh,g:ih,o:Y0,a:re||u.wasmMemory,z:Fg,k:Pg,h:Og,m:Bg,t:uh},N5=Z0(),ch=u.___wasm_call_ctors=function(){return(ch=u.___wasm_call_ctors=u.asm.B).apply(null,arguments)},Ug=u._init=function(){return(Ug=u._init=u.asm.C).apply(null,arguments)},Gg=u._init_with_threads_count=function(){return(Gg=u._init_with_threads_count=u.asm.D).apply(null,arguments)},Hg=u._get_threads_count=function(){return(Hg=u._get_threads_count=u.asm.E).apply(null,arguments)},jg=u._register_tensor=function(){return(jg=u._register_tensor=u.asm.F).apply(null,arguments)},qg=u._dispose_data=function(){return(qg=u._dispose_data=u.asm.G).apply(null,arguments)},Xg=u._dispose=function(){return(Xg=u._dispose=u.asm.H).apply(null,arguments)},Kg=u._Abs=function(){return(Kg=u._Abs=u.asm.I).apply(null,arguments)},Zg=u._Add=function(){return(Zg=u._Add=u.asm.J).apply(null,arguments)},Yg=u._AddN=function(){return(Yg=u._AddN=u.asm.K).apply(null,arguments)},Jg=u._All=function(){return(Jg=u._All=u.asm.L).apply(null,arguments)},Qg=u._Any=function(){return(Qg=u._Any=u.asm.M).apply(null,arguments)},e2=u._ArgMax=function(){return(e2=u._ArgMax=u.asm.N).apply(null,arguments)},t2=u._AvgPool=function(){return(t2=u._AvgPool=u.asm.O).apply(null,arguments)},n2=u._BatchMatMul=function(){return(n2=u._BatchMatMul=u.asm.P).apply(null,arguments)},s2=u._Ceil=function(){return(s2=u._Ceil=u.asm.Q).apply(null,arguments)},r2=u._ClipByValue=function(){return(r2=u._ClipByValue=u.asm.R).apply(null,arguments)},a2=u._Conv2D=function(){return(a2=u._Conv2D=u.asm.S).apply(null,arguments)},dh=u._Conv2DBackpropInput=function(){return(dh=u._Conv2DBackpropInput=u.asm.T).apply(null,arguments)},ph=u._Cos=function(){return(ph=u._Cos=u.asm.U).apply(null,arguments)},jc=u._Cosh=function(){return(jc=u._Cosh=u.asm.V).apply(null,arguments)},Xl=u._CropAndResize=function(){return(Xl=u._CropAndResize=u.asm.W).apply(null,arguments)},o2=u._Cumsum=function(){return(o2=u._Cumsum=u.asm.X).apply(null,arguments)},qc=u._DepthToSpace=function(){return(qc=u._DepthToSpace=u.asm.Y).apply(null,arguments)},Kl=u._DepthwiseConv2dNative=function(){return(Kl=u._DepthwiseConv2dNative=u.asm.Z).apply(null,arguments)},hh=u._Elu=function(){return(hh=u._Elu=u.asm._).apply(null,arguments)},i2=u._Equal=function(){return(i2=u._Equal=u.asm.$).apply(null,arguments)},se=u._Exp=function(){return(se=u._Exp=u.asm.aa).apply(null,arguments)},ue=u._FlipLeftRight=function(){return(ue=u._FlipLeftRight=u.asm.ba).apply(null,arguments)},Se=u._Floor=function(){return(Se=u._Floor=u.asm.ca).apply(null,arguments)},ut=u._FloorDiv=function(){return(ut=u._FloorDiv=u.asm.da).apply(null,arguments)},Bt=u._FusedBatchNorm=function(){return(Bt=u._FusedBatchNorm=u.asm.ea).apply(null,arguments)},$t=u._FusedConv2D=function(){return($t=u._FusedConv2D=u.asm.fa).apply(null,arguments)},Je=u._FusedDepthwiseConv2D=function(){return(Je=u._FusedDepthwiseConv2D=u.asm.ga).apply(null,arguments)},et=u._Gather=function(){return(et=u._Gather=u.asm.ha).apply(null,arguments)},Sn=u._GatherNd=function(){return(Sn=u._GatherNd=u.asm.ia).apply(null,arguments)},jr=u._Greater=function(){return(jr=u._Greater=u.asm.ja).apply(null,arguments)},qr=u._GreaterEqual=function(){return(qr=u._GreaterEqual=u.asm.ka).apply(null,arguments)},fh=u._LeakyRelu=function(){return(fh=u._LeakyRelu=u.asm.la).apply(null,arguments)},Xc=u._Less=function(){return(Xc=u._Less=u.asm.ma).apply(null,arguments)},As=u._LessEqual=function(){return(As=u._LessEqual=u.asm.na).apply(null,arguments)},wa=u._Log=function(){return(wa=u._Log=u.asm.oa).apply(null,arguments)},mh=u._LogicalAnd=function(){return(mh=u._LogicalAnd=u.asm.pa).apply(null,arguments)},zN=u._Max=function(){return(zN=u._Max=u.asm.qa).apply(null,arguments)},LN=u._MaxPool=function(){return(LN=u._MaxPool=u.asm.ra).apply(null,arguments)},BN=u._Maximum=function(){return(BN=u._Maximum=u.asm.sa).apply(null,arguments)},WN=u._Mean=function(){return(WN=u._Mean=u.asm.ta).apply(null,arguments)},VN=u._Min=function(){return(VN=u._Min=u.asm.ua).apply(null,arguments)},UN=u._Minimum=function(){return(UN=u._Minimum=u.asm.va).apply(null,arguments)},GN=u._MirrorPad=function(){return(GN=u._MirrorPad=u.asm.wa).apply(null,arguments)},HN=u._Multiply=function(){return(HN=u._Multiply=u.asm.xa).apply(null,arguments)},jN=u._Neg=function(){return(jN=u._Neg=u.asm.ya).apply(null,arguments)},qN=u._NonMaxSuppressionV3=function(){return(qN=u._NonMaxSuppressionV3=u.asm.za).apply(null,arguments)},XN=u._NonMaxSuppressionV4=function(){return(XN=u._NonMaxSuppressionV4=u.asm.Aa).apply(null,arguments)},KN=u._NonMaxSuppressionV5=function(){return(KN=u._NonMaxSuppressionV5=u.asm.Ba).apply(null,arguments)},ZN=u._NotEqual=function(){return(ZN=u._NotEqual=u.asm.Ca).apply(null,arguments)},YN=u._OneHot=function(){return(YN=u._OneHot=u.asm.Da).apply(null,arguments)},JN=u._PadV2=function(){return(JN=u._PadV2=u.asm.Ea).apply(null,arguments)},QN=u._Pow=function(){return(QN=u._Pow=u.asm.Fa).apply(null,arguments)},eE=u._Prelu=function(){return(eE=u._Prelu=u.asm.Ga).apply(null,arguments)},tE=u._Prod=function(){return(tE=u._Prod=u.asm.Ha).apply(null,arguments)},nE=u._RealDiv=function(){return(nE=u._RealDiv=u.asm.Ia).apply(null,arguments)},sE=u._Relu=function(){return(sE=u._Relu=u.asm.Ja).apply(null,arguments)},rE=u._Relu6=function(){return(rE=u._Relu6=u.asm.Ka).apply(null,arguments)},aE=u._ResizeBilinear=function(){return(aE=u._ResizeBilinear=u.asm.La).apply(null,arguments)},oE=u._Reverse=function(){return(oE=u._Reverse=u.asm.Ma).apply(null,arguments)},iE=u._RotateWithOffset=function(){return(iE=u._RotateWithOffset=u.asm.Na).apply(null,arguments)},lE=u._Round=function(){return(lE=u._Round=u.asm.Oa).apply(null,arguments)},uE=u._Rsqrt=function(){return(uE=u._Rsqrt=u.asm.Pa).apply(null,arguments)},cE=u._ScatterNd=function(){return(cE=u._ScatterNd=u.asm.Qa).apply(null,arguments)},dE=u._SelectV2=function(){return(dE=u._SelectV2=u.asm.Ra).apply(null,arguments)},pE=u._Sigmoid=function(){return(pE=u._Sigmoid=u.asm.Sa).apply(null,arguments)},hE=u._Sin=function(){return(hE=u._Sin=u.asm.Ta).apply(null,arguments)},fE=u._Softmax=function(){return(fE=u._Softmax=u.asm.Ua).apply(null,arguments)},mE=u._Sqrt=function(){return(mE=u._Sqrt=u.asm.Va).apply(null,arguments)},gE=u._Square=function(){return(gE=u._Square=u.asm.Wa).apply(null,arguments)},AE=u._SquaredDifference=function(){return(AE=u._SquaredDifference=u.asm.Xa).apply(null,arguments)},yE=u._Step=function(){return(yE=u._Step=u.asm.Ya).apply(null,arguments)},xE=u._StridedSlice=function(){return(xE=u._StridedSlice=u.asm.Za).apply(null,arguments)},bE=u._Sub=function(){return(bE=u._Sub=u.asm._a).apply(null,arguments)},vE=u._Sum=function(){return(vE=u._Sum=u.asm.$a).apply(null,arguments)},wE=u._Tan=function(){return(wE=u._Tan=u.asm.ab).apply(null,arguments)},kE=u._Tanh=function(){return(kE=u._Tanh=u.asm.bb).apply(null,arguments)},IE=u._Tile=function(){return(IE=u._Tile=u.asm.cb).apply(null,arguments)},SE=u._TopK=function(){return(SE=u._TopK=u.asm.db).apply(null,arguments)},CE=u._Transform=function(){return(CE=u._Transform=u.asm.eb).apply(null,arguments)},TE=u._Transpose=function(){return(TE=u._Transpose=u.asm.fb).apply(null,arguments)},NE=u.__FusedMatMul=function(){return(NE=u.__FusedMatMul=u.asm.gb).apply(null,arguments)},oi=u._malloc=function(){return(oi=u._malloc=u.asm.hb).apply(null,arguments)},Kc=u._free=function(){return(Kc=u._free=u.asm.ib).apply(null,arguments)},E5=u.___errno_location=function(){return(E5=u.___errno_location=u.asm.jb).apply(null,arguments)},R5=u._emscripten_get_global_libc=function(){return(R5=u._emscripten_get_global_libc=u.asm.lb).apply(null,arguments)},ka=u._pthread_self=function(){return(ka=u._pthread_self=u.asm.mb).apply(null,arguments)},$5=u.___pthread_tsd_run_dtors=function(){return($5=u.___pthread_tsd_run_dtors=u.asm.nb).apply(null,arguments)},gh=u._emscripten_main_thread_process_queued_calls=function(){return(gh=u._emscripten_main_thread_process_queued_calls=u.asm.ob).apply(null,arguments)},EE=u._emscripten_current_thread_process_queued_calls=function(){return(EE=u._emscripten_current_thread_process_queued_calls=u.asm.pb).apply(null,arguments)},_5=u._emscripten_register_main_browser_thread_id=function(){return(_5=u._emscripten_register_main_browser_thread_id=u.asm.qb).apply(null,arguments)},D5=u._emscripten_main_browser_thread_id=function(){return(D5=u._emscripten_main_browser_thread_id=u.asm.rb).apply(null,arguments)},F5=u.__emscripten_do_dispatch_to_thread=function(){return(F5=u.__emscripten_do_dispatch_to_thread=u.asm.sb).apply(null,arguments)},P5=u._emscripten_sync_run_in_main_thread_4=function(){return(P5=u._emscripten_sync_run_in_main_thread_4=u.asm.tb).apply(null,arguments)},O5=u._emscripten_run_in_main_runtime_thread_js=function(){return(O5=u._emscripten_run_in_main_runtime_thread_js=u.asm.ub).apply(null,arguments)},l2=u.__emscripten_call_on_thread=function(){return(l2=u.__emscripten_call_on_thread=u.asm.vb).apply(null,arguments)},RE=u._emscripten_tls_init=function(){return(RE=u._emscripten_tls_init=u.asm.wb).apply(null,arguments)},u2=u.__emscripten_thread_init=function(){return(u2=u.__emscripten_thread_init=u.asm.xb).apply(null,arguments)},Zc=u.stackSave=function(){return(Zc=u.stackSave=u.asm.yb).apply(null,arguments)},Zl=u.stackRestore=function(){return(Zl=u.stackRestore=u.asm.zb).apply(null,arguments)},Yl=u.stackAlloc=function(){return(Yl=u.stackAlloc=u.asm.Ab).apply(null,arguments)},M5=u._emscripten_stack_set_limits=function(){return(M5=u._emscripten_stack_set_limits=u.asm.Bb).apply(null,arguments)},z5=u._memalign=function(){return(z5=u._memalign=u.asm.Cb).apply(null,arguments)},L5=u.__emscripten_allow_main_runtime_queued_calls=10064,Jl=u.__emscripten_main_thread_futex=10268;u.cwrap=ot,u.PThread=$e,u.PThread=$e,u.wasmMemory=re,u.ExitStatus=Yc;var Ah;function Yc(C){this.name="ExitStatus",this.message="Program terminated with exit("+C+")",this.status=C}si=function C(){Ah||c2(),Ah||(si=C)};function c2(C){if(C=C||g,Zs>0)return;if(S){d(u),Xp(),postMessage({cmd:"loaded"});return}if(qp(),Zs>0)return;function _(){Ah||(Ah=!0,u.calledRun=!0,!ye&&(Xp(),Kp(),d(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Zp()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),_()},1)):_()}u.run=c2;function $E(C,_){if(!(_&&oe&&C===0)){if(!_&&S)throw postMessage({cmd:"exitProcess",returnCode:C}),new Yc(C);oe||($e.terminateAllThreads(),Te=C,rs(),u.onExit&&u.onExit(C),ye=!0),x(C,new Yc(C))}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();S&&(oe=!1,$e.initWorker()),c2();var yh;h&&(yh={uncaughtException:process.listeners("uncaughtException").filter(function(C){return!h.uncaughtException.indexOf(C)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(C){return!h.unhandledRejection.indexOf(C)>-1})});var B5=WasmBackendModule||r,_E=B5._dispose;return B5._dispose=function(){_E(),yh&&(yh.uncaughtException.forEach(function(C){process.removeListener("uncaughtException",C)}),yh.unhandledRejection.forEach(function(C){process.removeListener("unhandledRejection",C)}))},r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),n9=rn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},o,i;a.ready=new Promise(function(se,ue){o=se,i=ue});var l;process&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var c={},u;for(u in a)a.hasOwnProperty(u)&&(c[u]=a[u]);var d=[],p="./this.program",h=function(se,ue){throw ue},f=!1,m=!1,g=!1,A=!1;f=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",A=!f&&!g&&!m;var x="";function y(se){return a.locateFile?a.locateFile(se,x):x+se}var b,w,k,S,N,R;g?(m?x=nd().dirname(x)+"/":x=__dirname+"/",b=function(ue,Se){return N||(N=vh()),R||(R=nd()),ue=R.normalize(ue),N.readFileSync(ue,Se?null:"utf8")},k=function(ue){var Se=b(ue,!0);return Se.buffer||(Se=new Uint8Array(Se)),z(Se.buffer),Se},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(se){if(!(se instanceof o2))throw se}),process.on("unhandledRejection",Gr),h=function(se){process.exit(se)},a.inspect=function(){return"[Emscripten Module object]"}):A?(typeof read!="undefined"&&(b=function(ue){return read(ue)}),k=function(ue){var Se;return typeof readbuffer=="function"?new Uint8Array(readbuffer(ue)):(Se=read(ue,"binary"),z(typeof Se=="object"),Se)},typeof scriptArgs!="undefined"?d=scriptArgs:typeof arguments!="undefined"&&(d=arguments),typeof quit=="function"&&(h=function(se){quit(se)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(f||m)&&(m?x=self.location.href:typeof document!="undefined"&&document.currentScript&&(x=document.currentScript.src),s&&(x=s),x.indexOf("blob:")!==0?x=x.substr(0,x.lastIndexOf("/")+1):x="",b=function(se){var ue=new XMLHttpRequest;return ue.open("GET",se,!1),ue.send(null),ue.responseText},m&&(k=function(se){var ue=new XMLHttpRequest;return ue.open("GET",se,!1),ue.responseType="arraybuffer",ue.send(null),new Uint8Array(ue.response)}),w=function(se,ue,Se){var ut=new XMLHttpRequest;ut.open("GET",se,!0),ut.responseType="arraybuffer",ut.onload=function(){if(ut.status==200||ut.status==0&&ut.response){ue(ut.response);return}Se()},ut.onerror=Se,ut.send(null)},S=function(se){document.title=se});var M=a.print||console.log.bind(console),D=a.printErr||console.warn.bind(console);for(u in c)c.hasOwnProperty(u)&&(a[u]=c[u]);c=null,a.arguments&&(d=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(h=a.quit);var $;a.wasmBinary&&($=a.wasmBinary);var T=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Gr("no native wasm support detected");var P,W=!1,K;function z(se,ue){se||Gr("Assertion failed: "+ue)}function j(se){var ue=a["_"+se];return z(ue,"Cannot call unknown function "+se+", make sure it is exported"),ue}function Z(se,ue,Se,ut,Bt){var $t={string:function(As){var wa=0;if(As!=null&&As!==0){var mh=(As.length<<2)+1;wa=jc(mh),re(As,wa,mh)}return wa},array:function(As){var wa=jc(As.length);return me(As,wa),wa}};function Je(As){return ue==="string"?U(As):ue==="boolean"?Boolean(As):As}var et=j(se),Sn=[],jr=0;if(ut)for(var qr=0;qr<ut.length;qr++){var fh=$t[Se[qr]];fh?(jr===0&&(jr=dh()),Sn[qr]=fh(ut[qr])):Sn[qr]=ut[qr]}var Xc=et.apply(null,Sn);return Xc=Je(Xc),jr!==0&&ph(jr),Xc}function Q(se,ue,Se,ut){Se=Se||[];var Bt=Se.every(function(Je){return Je==="number"}),$t=ue!=="string";return $t&&Bt&&!ut?j(se):function(){return Z(se,ue,Se,arguments,ut)}}var ne=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function ae(se,ue,Se){for(var ut=ue+Se,Bt=ue;se[Bt]&&!(Bt>=ut);)++Bt;if(Bt-ue>16&&se.subarray&&ne)return ne.decode(se.subarray(ue,Bt));for(var $t="";ue<Bt;){var Je=se[ue++];if(!(Je&128)){$t+=String.fromCharCode(Je);continue}var et=se[ue++]&63;if((Je&224)==192){$t+=String.fromCharCode((Je&31)<<6|et);continue}var Sn=se[ue++]&63;if((Je&240)==224?Je=(Je&15)<<12|et<<6|Sn:Je=(Je&7)<<18|et<<12|Sn<<6|se[ue++]&63,Je<65536)$t+=String.fromCharCode(Je);else{var jr=Je-65536;$t+=String.fromCharCode(55296|jr>>10,56320|jr&1023)}}return $t}function U(se,ue){return se?ae(Pe,se,ue):""}function oe(se,ue,Se,ut){if(!(ut>0))return 0;for(var Bt=Se,$t=Se+ut-1,Je=0;Je<se.length;++Je){var et=se.charCodeAt(Je);if(et>=55296&&et<=57343){var Sn=se.charCodeAt(++Je);et=65536+((et&1023)<<10)|Sn&1023}if(et<=127){if(Se>=$t)break;ue[Se++]=et}else if(et<=2047){if(Se+1>=$t)break;ue[Se++]=192|et>>6,ue[Se++]=128|et&63}else if(et<=65535){if(Se+2>=$t)break;ue[Se++]=224|et>>12,ue[Se++]=128|et>>6&63,ue[Se++]=128|et&63}else{if(Se+3>=$t)break;ue[Se++]=240|et>>18,ue[Se++]=128|et>>12&63,ue[Se++]=128|et>>6&63,ue[Se++]=128|et&63}}return ue[Se]=0,Se-Bt}function re(se,ue,Se){return oe(se,Pe,ue,Se)}function me(se,ue){Ne.set(se,ue)}function ye(se,ue){return se%ue>0&&(se+=ue-se%ue),se}var Te,Ne,Pe,Ue,ot,Qe,Ye,gt,it;function At(se){Te=se,a.HEAP8=Ne=new Int8Array(se),a.HEAP16=Ue=new Int16Array(se),a.HEAP32=Qe=new Int32Array(se),a.HEAPU8=Pe=new Uint8Array(se),a.HEAPU16=ot=new Uint16Array(se),a.HEAPU32=Ye=new Uint32Array(se),a.HEAPF32=gt=new Float32Array(se),a.HEAPF64=it=new Float64Array(se)}var Rt=a.INITIAL_MEMORY||16777216,ts,lt=[],ms=[],In=[],Xs=[],ns=!1;ms.push({func:function(){Qp()}});function gs(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)ss(a.preRun.shift());Zs(lt)}function Rs(){ns=!0,Zs(ms)}function Ks(){Zs(In)}function $s(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)Aa(a.postRun.shift());Zs(Xs)}function ss(se){lt.unshift(se)}function Aa(se){Xs.unshift(se)}var Rn=0,ya=null,_s=null;function Lc(se){Rn++,a.monitorRunDependencies&&a.monitorRunDependencies(Rn)}function Bc(se){if(Rn--,a.monitorRunDependencies&&a.monitorRunDependencies(Rn),Rn==0&&(ya!==null&&(clearInterval(ya),ya=null),_s)){var ue=_s;_s=null,ue()}}a.preloadedImages={},a.preloadedAudios={};function Gr(se){a.onAbort&&a.onAbort(se),se+="",D(se),W=!0,K=1,se="abort("+se+"). Build with -s ASSERTIONS=1 for more info.";var ue=new WebAssembly.RuntimeError(se);throw i(ue),ue}function jp(se,ue){return String.prototype.startsWith?se.startsWith(ue):se.indexOf(ue)===0}var V0="data:application/octet-stream;base64,";function qp(se){return jp(se,V0)}var Xp="file://";function Kp(se){return jp(se,Xp)}var rs="tfjs-backend-wasm.wasm";qp(rs)||(rs=y(rs));function Zp(se){try{if(se==rs&&$)return new Uint8Array($);if(k)return k(se);throw"both async and sync fetching of the wasm failed"}catch(ue){Gr(ue)}}function U0(){if(!$&&(f||m)){if(typeof fetch=="function"&&!Kp(rs))return fetch(rs,{credentials:"same-origin"}).then(function(se){if(!se.ok)throw"failed to load wasm binary file at '"+rs+"'";return se.arrayBuffer()}).catch(function(){return Zp(rs)});if(w)return new Promise(function(se,ue){w(rs,function(Se){se(new Uint8Array(Se))},ue)})}return Promise.resolve().then(function(){return Zp(rs)})}function G0(){var se={a:as};function ue(Je,et){var Sn=Je.exports;a.asm=Sn,P=a.asm.h,At(P.buffer),ts=a.asm.Sa,Bc("wasm-instantiate")}Lc("wasm-instantiate");function Se(Je){ue(Je.instance)}function ut(Je){return U0().then(function(et){return WebAssembly.instantiate(et,se)}).then(Je,function(et){D("failed to asynchronously prepare wasm: "+et),Gr(et)})}function Bt(){return!$&&typeof WebAssembly.instantiateStreaming=="function"&&!qp(rs)&&!Kp(rs)&&typeof fetch=="function"?fetch(rs,{credentials:"same-origin"}).then(function(Je){var et=WebAssembly.instantiateStreaming(Je,se);return et.then(Se,function(Sn){return D("wasm streaming compile failed: "+Sn),D("falling back to ArrayBuffer instantiation"),ut(Se)})}):ut(Se)}if(a.instantiateWasm)try{var $t=a.instantiateWasm(se,ue);return $t}catch(Je){return D("Module.instantiateWasm callback failed with error: "+Je),!1}return Bt().catch(i),{}}function Zs(se){for(;se.length>0;){var ue=se.shift();if(typeof ue=="function"){ue(a);continue}var Se=ue.func;typeof Se=="number"?ue.arg===void 0?ts.get(Se)():ts.get(Se)(ue.arg):Se(ue.arg===void 0?null:ue.arg)}}function Wc(){Gr()}function si(se,ue,Se){Pe.copyWithin(se,ue,ue+Se)}function H0(){return Pe.length}function j0(se){try{return P.grow(se-Te.byteLength+65535>>>16),At(P.buffer),1}catch(ue){}}function Hr(se){var ue=H0(),Se=2147483648;if(se>Se)return!1;for(var ut=1;ut<=4;ut*=2){var Bt=ue*(1+.2/ut);Bt=Math.min(Bt,se+100663296);var $t=Math.min(Se,ye(Math.max(se,Bt),65536)),Je=j0($t);if(Je)return!0}return!1}var ri={mappings:{},buffers:[null,[],[]],printChar:function(se,ue){var Se=ri.buffers[se];ue===0||ue===10?((se===1?M:D)(ae(Se,0)),Se.length=0):Se.push(ue)},varargs:void 0,get:function(){ri.varargs+=4;var se=Qe[ri.varargs-4>>2];return se},getStr:function(se){var ue=U(se);return ue},get64:function(se,ue){return se}};function q0(se){return 0}function Yp(se,ue,Se,ut,Bt){}function X0(se,ue,Se,ut){for(var Bt=0,$t=0;$t<Se;$t++){for(var Je=Qe[ue+$t*8>>2],et=Qe[ue+($t*8+4)>>2],Sn=0;Sn<et;Sn++)ri.printChar(se,Pe[Je+Sn]);Bt+=et}return Qe[ut>>2]=Bt,0}function Jp(){return 28}var as={a:Wc,d:si,e:Hr,f:q0,c:Yp,b:X0,g:Jp},K0=G0(),Qp=a.___wasm_call_ctors=function(){return(Qp=a.___wasm_call_ctors=a.asm.i).apply(null,arguments)},Z0=a._init=function(){return(Z0=a._init=a.asm.j).apply(null,arguments)},eh=a._init_with_threads_count=function(){return(eh=a._init_with_threads_count=a.asm.k).apply(null,arguments)},Y0=a._get_threads_count=function(){return(Y0=a._get_threads_count=a.asm.l).apply(null,arguments)},jl=a._register_tensor=function(){return(jl=a._register_tensor=a.asm.m).apply(null,arguments)},xa=a._dispose_data=function(){return(xa=a._dispose_data=a.asm.n).apply(null,arguments)},Vc=a._dispose=function(){return(Vc=a._dispose=a.asm.o).apply(null,arguments)},J0=a._Abs=function(){return(J0=a._Abs=a.asm.p).apply(null,arguments)},Q0=a._Add=function(){return(Q0=a._Add=a.asm.q).apply(null,arguments)},th=a._AddN=function(){return(th=a._AddN=a.asm.r).apply(null,arguments)},$e=a._All=function(){return($e=a._All=a.asm.s).apply(null,arguments)},eg=a._Any=function(){return(eg=a._Any=a.asm.t).apply(null,arguments)},tg=a._ArgMax=function(){return(tg=a._ArgMax=a.asm.u).apply(null,arguments)},ng=a._AvgPool=function(){return(ng=a._AvgPool=a.asm.v).apply(null,arguments)},sg=a._BatchMatMul=function(){return(sg=a._BatchMatMul=a.asm.w).apply(null,arguments)},rg=a._Ceil=function(){return(rg=a._Ceil=a.asm.x).apply(null,arguments)},ai=a._ClipByValue=function(){return(ai=a._ClipByValue=a.asm.y).apply(null,arguments)},ag=a._Conv2D=function(){return(ag=a._Conv2D=a.asm.z).apply(null,arguments)},og=a._Conv2DBackpropInput=function(){return(og=a._Conv2DBackpropInput=a.asm.A).apply(null,arguments)},ig=a._Cos=function(){return(ig=a._Cos=a.asm.B).apply(null,arguments)},lg=a._Cosh=function(){return(lg=a._Cosh=a.asm.C).apply(null,arguments)},ug=a._CropAndResize=function(){return(ug=a._CropAndResize=a.asm.D).apply(null,arguments)},cg=a._Cumsum=function(){return(cg=a._Cumsum=a.asm.E).apply(null,arguments)},nh=a._DepthToSpace=function(){return(nh=a._DepthToSpace=a.asm.F).apply(null,arguments)},dg=a._DepthwiseConv2dNative=function(){return(dg=a._DepthwiseConv2dNative=a.asm.G).apply(null,arguments)},pg=a._Elu=function(){return(pg=a._Elu=a.asm.H).apply(null,arguments)},ba=a._Equal=function(){return(ba=a._Equal=a.asm.I).apply(null,arguments)},Uc=a._Exp=function(){return(Uc=a._Exp=a.asm.J).apply(null,arguments)},Gc=a._FlipLeftRight=function(){return(Gc=a._FlipLeftRight=a.asm.K).apply(null,arguments)},hg=a._Floor=function(){return(hg=a._Floor=a.asm.L).apply(null,arguments)},fg=a._FloorDiv=function(){return(fg=a._FloorDiv=a.asm.M).apply(null,arguments)},mg=a._FusedBatchNorm=function(){return(mg=a._FusedBatchNorm=a.asm.N).apply(null,arguments)},gg=a._FusedConv2D=function(){return(gg=a._FusedConv2D=a.asm.O).apply(null,arguments)},Ag=a._FusedDepthwiseConv2D=function(){return(Ag=a._FusedDepthwiseConv2D=a.asm.P).apply(null,arguments)},He=a._Gather=function(){return(He=a._Gather=a.asm.Q).apply(null,arguments)},yg=a._GatherNd=function(){return(yg=a._GatherNd=a.asm.R).apply(null,arguments)},xg=a._Greater=function(){return(xg=a._Greater=a.asm.S).apply(null,arguments)},bg=a._GreaterEqual=function(){return(bg=a._GreaterEqual=a.asm.T).apply(null,arguments)},vg=a._LeakyRelu=function(){return(vg=a._LeakyRelu=a.asm.U).apply(null,arguments)},wg=a._Less=function(){return(wg=a._Less=a.asm.V).apply(null,arguments)},kg=a._LessEqual=function(){return(kg=a._LessEqual=a.asm.W).apply(null,arguments)},Hc=a._Log=function(){return(Hc=a._Log=a.asm.X).apply(null,arguments)},sh=a._LogicalAnd=function(){return(sh=a._LogicalAnd=a.asm.Y).apply(null,arguments)},rh=a._Max=function(){return(rh=a._Max=a.asm.Z).apply(null,arguments)},Ig=a._MaxPool=function(){return(Ig=a._MaxPool=a.asm._).apply(null,arguments)},Sg=a._Maximum=function(){return(Sg=a._Maximum=a.asm.$).apply(null,arguments)},Cg=a._Mean=function(){return(Cg=a._Mean=a.asm.aa).apply(null,arguments)},Tg=a._Min=function(){return(Tg=a._Min=a.asm.ba).apply(null,arguments)},Ng=a._Minimum=function(){return(Ng=a._Minimum=a.asm.ca).apply(null,arguments)},Eg=a._MirrorPad=function(){return(Eg=a._MirrorPad=a.asm.da).apply(null,arguments)},Rg=a._Multiply=function(){return(Rg=a._Multiply=a.asm.ea).apply(null,arguments)},dt=a._Neg=function(){return(dt=a._Neg=a.asm.fa).apply(null,arguments)},$g=a._NonMaxSuppressionV3=function(){return($g=a._NonMaxSuppressionV3=a.asm.ga).apply(null,arguments)},_g=a._NonMaxSuppressionV4=function(){return(_g=a._NonMaxSuppressionV4=a.asm.ha).apply(null,arguments)},Dg=a._NonMaxSuppressionV5=function(){return(Dg=a._NonMaxSuppressionV5=a.asm.ia).apply(null,arguments)},ql=a._NotEqual=function(){return(ql=a._NotEqual=a.asm.ja).apply(null,arguments)},ah=a._OneHot=function(){return(ah=a._OneHot=a.asm.ka).apply(null,arguments)},oh=a._PadV2=function(){return(oh=a._PadV2=a.asm.la).apply(null,arguments)},ih=a._Pow=function(){return(ih=a._Pow=a.asm.ma).apply(null,arguments)},Fg=a._Prelu=function(){return(Fg=a._Prelu=a.asm.na).apply(null,arguments)},Pg=a._Prod=function(){return(Pg=a._Prod=a.asm.oa).apply(null,arguments)},lh=a._RealDiv=function(){return(lh=a._RealDiv=a.asm.pa).apply(null,arguments)},Og=a._Relu=function(){return(Og=a._Relu=a.asm.qa).apply(null,arguments)},Mg=a._Relu6=function(){return(Mg=a._Relu6=a.asm.ra).apply(null,arguments)},zg=a._ResizeBilinear=function(){return(zg=a._ResizeBilinear=a.asm.sa).apply(null,arguments)},Lg=a._Reverse=function(){return(Lg=a._Reverse=a.asm.ta).apply(null,arguments)},Bg=a._RotateWithOffset=function(){return(Bg=a._RotateWithOffset=a.asm.ua).apply(null,arguments)},uh=a._Round=function(){return(uh=a._Round=a.asm.va).apply(null,arguments)},va=a._Rsqrt=function(){return(va=a._Rsqrt=a.asm.wa).apply(null,arguments)},Wg=a._ScatterNd=function(){return(Wg=a._ScatterNd=a.asm.xa).apply(null,arguments)},Vg=a._SelectV2=function(){return(Vg=a._SelectV2=a.asm.ya).apply(null,arguments)},N5=a._Sigmoid=function(){return(N5=a._Sigmoid=a.asm.za).apply(null,arguments)},ch=a._Sin=function(){return(ch=a._Sin=a.asm.Aa).apply(null,arguments)},Ug=a._Softmax=function(){return(Ug=a._Softmax=a.asm.Ba).apply(null,arguments)},Gg=a._Sqrt=function(){return(Gg=a._Sqrt=a.asm.Ca).apply(null,arguments)},Hg=a._Square=function(){return(Hg=a._Square=a.asm.Da).apply(null,arguments)},jg=a._SquaredDifference=function(){return(jg=a._SquaredDifference=a.asm.Ea).apply(null,arguments)},qg=a._Step=function(){return(qg=a._Step=a.asm.Fa).apply(null,arguments)},Xg=a._StridedSlice=function(){return(Xg=a._StridedSlice=a.asm.Ga).apply(null,arguments)},Kg=a._Sub=function(){return(Kg=a._Sub=a.asm.Ha).apply(null,arguments)},Zg=a._Sum=function(){return(Zg=a._Sum=a.asm.Ia).apply(null,arguments)},Yg=a._Tan=function(){return(Yg=a._Tan=a.asm.Ja).apply(null,arguments)},Jg=a._Tanh=function(){return(Jg=a._Tanh=a.asm.Ka).apply(null,arguments)},Qg=a._Tile=function(){return(Qg=a._Tile=a.asm.La).apply(null,arguments)},e2=a._TopK=function(){return(e2=a._TopK=a.asm.Ma).apply(null,arguments)},t2=a._Transform=function(){return(t2=a._Transform=a.asm.Na).apply(null,arguments)},n2=a._Transpose=function(){return(n2=a._Transpose=a.asm.Oa).apply(null,arguments)},s2=a.__FusedMatMul=function(){return(s2=a.__FusedMatMul=a.asm.Pa).apply(null,arguments)},r2=a._malloc=function(){return(r2=a._malloc=a.asm.Qa).apply(null,arguments)},a2=a._free=function(){return(a2=a._free=a.asm.Ra).apply(null,arguments)},dh=a.stackSave=function(){return(dh=a.stackSave=a.asm.Ta).apply(null,arguments)},ph=a.stackRestore=function(){return(ph=a.stackRestore=a.asm.Ua).apply(null,arguments)},jc=a.stackAlloc=function(){return(jc=a.stackAlloc=a.asm.Va).apply(null,arguments)};a.cwrap=Q;var Xl;function o2(se){this.name="ExitStatus",this.message="Program terminated with exit("+se+")",this.status=se}_s=function se(){Xl||qc(),Xl||(_s=se)};function qc(se){if(se=se||d,Rn>0||(gs(),Rn>0))return;function ue(){Xl||(Xl=!0,a.calledRun=!0,!W&&(Rs(),Ks(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),$s()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),ue()},1)):ue()}if(a.run=qc,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();qc();var Kl;l&&(Kl={uncaughtException:process.listeners("uncaughtException").filter(function(se){return!l.uncaughtException.indexOf(se)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(se){return!l.unhandledRejection.indexOf(se)>-1})});var hh=r||WasmBackendModuleThreadedSimd,i2=hh._dispose;return hh._dispose=function(){i2(),Kl&&(Kl.uncaughtException.forEach(function(se){process.removeListener("uncaughtException",se)}),Kl.unhandledRejection.forEach(function(se){process.removeListener("unhandledRejection",se)}))},r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),s9=1e-7,r9=1e-4,sd=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},tu=class{refCount(e){return Ys("refCount")}incRef(e){return Ys("incRef")}timerAvailable(){return!0}time(e){return Ys("time")}read(e){return Ys("read")}readSync(e){return Ys("readSync")}numDataIds(){return Ys("numDataIds")}disposeData(e,t){return Ys("disposeData")}write(e,t,n){return Ys("write")}move(e,t,n,s,r){return Ys("move")}memory(){return Ys("memory")}floatPrecision(){return Ys("floatPrecision")}epsilon(){return this.floatPrecision()===32?s9:r9}dispose(){return Ys("dispose")}};function Ys(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function H5(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,wh(e,t,n)}function a9(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,wh(e,n,s),wh(t,n,s)}function rd(e,t,n){return Math.max(e,Math.min(t,n))}function o9(e){return e%2==0?e:e+1}function wh(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function i9(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l9(e,t){let n=Math.random();return t*n+(1-n)*e}function u9(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function O(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Mn(e,t,n=""){O(Ca(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function li(e){O(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ui(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||_n(e)&&!n)for(let s=0;s<e.length;++s)ui(e[s],t,n);else t.push(e);return t}function Gt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function c9(e){return e.length===0}function Ca(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function gn(e){return e%1==0}function d9(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function p9(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function h9(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return H5(t),t}function ad(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function f9(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function m9(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function Js(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),O(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),O(e.every(s=>gn(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function j5(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:Js(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function q5(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function X5(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function K5(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Z5(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function g9(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function _n(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function h2(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function Y5(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Ta(e){return typeof e=="string"||e instanceof String}function J5(e){return typeof e=="boolean"}function Q5(e){return typeof e=="number"}function kh(e){return Array.isArray(e)?kh(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Q5(e)?"float32":Ta(e)?"string":J5(e)?"bool":"float32"}function Na(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ih(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function nu(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function e3(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<a;l++)r[l]=e3(e+l*i,o,n,s)}return r}function su(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return e3(0,e,t,n)}function f2(e,t){let n=Sh(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Sh(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function A9(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return su(e,new Float32Array(n));if(t==="int32")return su(e,new Int32Array(n));if(t==="bool")return su(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function m2(e){e.forEach(t=>{O(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function y9(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function x9(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function g2(e){return e&&e.then&&typeof e.then=="function"}var t3="tfjsflags",n3=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=b9,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(g2(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);t3 in e&&e[t3].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=w9(s,r)})}};function b9(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(v9(t,s[0],s[1]),s.join("="))),t}function v9(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function w9(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Y(){return Nr}var Nr=null;function k9(e){Nr=e}var A2;function s3(){if(A2==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");A2=e}return A2}function I9(){let e=s3();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function y2(e,t){let n=I9();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var ci="Abs",ru="Acos",au="Acosh",Xr="Add",Ea="AddN",ou="All",iu="Any",Ra="ArgMax",lu="ArgMin",uu="Asin",cu="Asinh",du="Atan",pu="Atanh",hu="Atan2",$a="AvgPool",Ch="AvgPoolGrad",od="AvgPool3D",Th="AvgPool3DGrad",_a="BatchMatMul",di="BatchToSpaceND",Nh="Bincount",r3="BroadcastTo",Eh="BroadcastArgs",Da="Cast",Fa="Ceil",Kr="ClipByValue",id="Complex",ld="ComplexAbs",pi="Concat",Pa="Conv2D",Rh="Conv2DBackpropFilter",Oa="Conv2DBackpropInput",ud="Conv3D",$h="Conv3DBackpropFilterV2",_h="Conv3DBackpropInputV2",Ma="Cos",za="Cosh",hi="Cumsum",fi="CropAndResize",Dh="DenseBincount",mi="DepthToSpace",La="DepthwiseConv2dNative",Fh="DepthwiseConv2dNativeBackpropFilter",Ph="DepthwiseConv2dNativeBackpropInput",Oh="Diag",cd="Dilation2D",Mh="Dilation2DBackpropInput",zh="Dilation2DBackpropFilter",Ba="RealDiv",dd="Einsum",Wa="Elu",Lh="EluGrad",fu="Erf",gi="Equal",Va="Exp",Ai="ExpandDims",yi="Expm1",Bh="FFT",mu="Fill",xi="FlipLeftRight",Ua="Floor",Ga="FloorDiv",Ha="FusedBatchNorm",bi="GatherV2",vi="GatherNd",wi="Greater",ja="GreaterEqual",qa="Identity",Wh="IFFT",pd="Imag",gu="IsFinite",Au="IsInf",yu="IsNan",ki="LeakyRelu",Ii="Less",Si="LessEqual",Vh="LinSpace",Xa="Log",xu="Log1p",Ci="LogicalAnd",bu="LogicalNot",hd="LogicalOr",a3="LogSoftmax",fd="LRN",Uh="LRNGrad",Ka="Max",Za="Maximum",Ya="MaxPool",Gh="MaxPoolGrad",md="MaxPool3D",Hh="MaxPool3DGrad",jh="MaxPoolWithArgmax",Ja="Mean",Qa="Min",eo="Minimum",to="MirrorPad",vu="Mod",qh="Multinomial",no="Multiply",Ti="Neg",Ni="NotEqual",Ei="NonMaxSuppressionV3",wu="NonMaxSuppressionV4",Ri="NonMaxSuppressionV5",$i="OnesLike",_i="OneHot",Di="Pack",so="PadV2",S9="Pool",ro="Pow",ao="Prelu",Fi="Prod",ku="Range",gd="Real",Iu="Reciprocal",oo="Relu",Pi="Reshape",Su="ResizeNearestNeighbor",Xh="ResizeNearestNeighborGrad",io="ResizeBilinear",Kh="ResizeBilinearGrad",lo="Relu6",Oi="Reverse",Mi="Round",uo="Rsqrt",zi="ScatterNd",Li="Select",Cu="Selu",Bi="Slice",co="Sin",Wi="Sinh",Tu="Sign",po="Sigmoid",Nu="Softplus",ho="Sqrt",fo="Sum",Vi="SpaceToBatchND",Ui="SplitV",mo="Softmax",Zh="SparseFillEmptyRows",Yh="SparseReshape",Jh="SparseSegmentMean",Qh="SparseSegmentSum",Ad="SparseToDense",go="SquaredDifference",Eu="Square",Gi="StridedSlice",yd="StringNGrams",ef="StringSplit",tf="StringToHashBucketFast",Ao="Sub",Hi="Tan",yo="Tanh",Zr="Tile",ji="TopK",qi="Transform",xo="Transpose",nf="Unique",Xi="Unpack",xd="UnsortedSegmentSum",Ki="ZerosLike",bo="Step",bd="FromPixels",Zi="RotateWithOffset",vo="_FusedMatMul",wo="FusedConv2D",ko="FusedDepthwiseConv2D";function Io(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(...e)}function C9(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.log(...e)}var Ru=y2("kernelRegistry",()=>new Map),vd=y2("gradRegistry",()=>new Map);function sf(e,t){let n=b2(e,t);return Ru.get(n)}function x2(e){return vd.get(e)}function Yr(e){let t=Ru.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function pr(e){let{kernelName:t,backendName:n}=e,s=b2(t,n);Ru.has(s)&&Io(`The kernel '${t}' for backend '${n}' is already registered`),Ru.set(s,e)}function o3(e){let{kernelName:t}=e;vd.has(t)&&Y().getBool("DEBUG")&&Io(`Overriding the gradient for '${t}'`),vd.set(t,e)}function T9(e,t){let n=b2(e,t);if(!Ru.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Ru.delete(n)}function N9(e){if(!vd.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);vd.delete(e)}function E9(e,t){Yr(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});pr(r)})}function b2(e,t){return`${t}_${e}`}var v={};Me(v,{arraysEqual:()=>Ca,assert:()=>O,assertNonNegativeIntegerDimensions:()=>m2,assertNonNull:()=>li,assertShapesMatch:()=>Mn,bytesFromStringArray:()=>Y5,bytesPerElement:()=>h2,checkConversionForErrors:()=>K5,clamp:()=>rd,computeStrides:()=>nu,createScalarValue:()=>P9,createShuffledIndices:()=>h9,decodeString:()=>of,distSquared:()=>u9,encodeString:()=>Id,fetch:()=>M9,fingerPrint64:()=>F9,flatten:()=>ui,getArrayFromDType:()=>X5,getTypedArrayFromDType:()=>q5,hasEncodingLoss:()=>g9,hexToLong:()=>wd,indexToLoc:()=>x9,inferDtype:()=>kh,inferFromImplicitShape:()=>m9,isBoolean:()=>J5,isFunction:()=>Na,isInt:()=>gn,isNumber:()=>Q5,isPromise:()=>g2,isScalarShape:()=>c9,isString:()=>Ta,isTypedArray:()=>_n,isValidDtype:()=>Z5,locToIndex:()=>y9,makeOnesTypedArray:()=>f2,makeZerosNestedTypedArray:()=>A9,makeZerosTypedArray:()=>Sh,nearestDivisor:()=>Ih,nearestLargerEven:()=>o9,now:()=>kd,parseAxisParam:()=>Js,randUniform:()=>l9,repeatedTry:()=>f9,rightPad:()=>ad,shuffle:()=>H5,shuffleCombo:()=>a9,sizeFromShape:()=>Gt,sizeToSquarishShape:()=>p9,squeezeShape:()=>j5,sum:()=>i9,swap:()=>wh,tanh:()=>d9,toNestedArray:()=>su,toTypedArray:()=>af});var i3=ii(WE()),Yi=i3.default||i3;function wd(e){return Yi.fromString(e,!0,16)}var l3=wd("c3a5c85c97cb3127"),Ji=wd("b492b66fbe98f273"),zn=wd("9ae16a3b2f90404f");function v2(e){return e.xor(e.shru(47))}function u3(e,t,n){let s=e.slice(t,t+n);return Yi.fromBytes(Array.from(s),!0,!0)}function kt(e,t){return u3(e,t,8)}function c3(e,t){return u3(e,t,4)}function An(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function So(e,t,n=wd("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function R9(e,t,n,s,r,a){r=r.add(e),a=An(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(An(r,44)),[r.add(s),a.add(o)]}function rf(e,t,n,s){return R9(kt(e,t),kt(e,t+8),kt(e,t+16),kt(e,t+24),n,s)}function $9(e,t=e.length){if(t>=8){let n=zn.add(t*2),s=kt(e,0).add(zn),r=kt(e,t-8),a=An(r,37).mul(n).add(s),o=An(s,25).add(r).mul(n);return So(a,o,n)}if(t>=4){let n=zn.add(t*2),s=c3(e,0);return So(s.shl(3).add(t),c3(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return v2(zn.mul(a).xor(l3.mul(o))).mul(zn)}return zn}function _9(e,t=e.length){let n=zn.add(t*2),s=kt(e,0).mul(Ji),r=kt(e,8),a=kt(e,t-8).mul(n),o=kt(e,t-16).mul(zn);return So(An(s.add(r),43).add(An(a,30)).add(o),s.add(An(r.add(zn),18)).add(a),n)}function D9(e,t=e.length){let n=zn.add(t*2),s=kt(e,0).mul(zn),r=kt(e,8),a=kt(e,t-8).mul(n),o=kt(e,t-16).mul(zn),i=An(s.add(r),43).add(An(a,30)).add(o),l=So(i,s.add(An(r.add(zn),18)).add(a),n),c=kt(e,16).mul(n),u=kt(e,24),d=i.add(kt(e,t-32)).mul(n),p=l.add(kt(e,t-24)).mul(n);return So(An(c.add(u),43).add(An(d,30)).add(p),c.add(An(u.add(s),18)).add(d),n)}function F9(e,t=e.length){let n=Yi.fromNumber(81,!0);if(t<=32)return t<=16?$9(e,t):_9(e,t);if(t<=64)return D9(e,t);let s=n,r=n.mul(Ji).add(113),a=v2(r.mul(zn).add(113)).mul(zn),o=[Yi.UZERO,Yi.UZERO],i=[Yi.UZERO,Yi.UZERO];s=s.mul(zn).add(kt(e,0));let l=0,c=(t-1>>6)*64,u=c+(t-1&63)-63;do s=An(s.add(r).add(o[0]).add(kt(e,l+8)),37).mul(Ji),r=An(r.add(o[1]).add(kt(e,l+48)),42).mul(Ji),s=s.xor(i[1]),r=r.add(o[0]).add(kt(e,l+40)),a=An(a.add(i[0]),33).mul(Ji),o=rf(e,l,o[1].mul(Ji),s.add(i[0])),i=rf(e,l+32,a.add(i[1]),r.add(kt(e,l+16))),[a,s]=[s,a],l+=64;while(l!==c);let d=Ji.add(a.and(255).shl(1));return l=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=An(s.add(r).add(o[0]).add(kt(e,l+8)),37).mul(d),r=An(r.add(o[1]).add(kt(e,l+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(kt(e,l+40))),a=An(a.add(i[0]),33).mul(d),o=rf(e,l,o[1].mul(d),s.add(i[0])),i=rf(e,l+32,a.add(i[1]),r.add(kt(e,l+16))),[a,s]=[s,a],So(So(o[0],i[0],d).add(v2(r).mul(l3)).add(a),So(o[1],i[1],d).add(s),d)}function P9(e,t){return t==="string"?Id(e):af([e],t)}function O9(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function af(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ui(e)),Y().getBool("DEBUG")&&K5(e,t),O9(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function kd(){return Y().platform.now()}function M9(e,t){return Y().platform.fetch(e,t)}function Id(e,t="utf-8"){return t=t||"utf-8",Y().platform.encode(e,t)}function of(e,t="utf-8"){return t=t||"utf-8",Y().platform.decode(e,t)}var z9=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new B9)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=kd();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let l of s)l.dataSync();a=Promise.resolve({kernelMs:kd()-o})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let c=s[l];c.data().then(u=>{L9(u,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function L9(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var B9=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?ad(`${s}ms`,9):s.error,i=ad(e,25),l=t.rank,c=t.size,u=ad(t.shape.toString(),14),d="";for(let p in r){let h=r[p];if(h!=null){let f=h.shape||t.shape,m=f.length;d+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${u}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function W9(e,t,n){let s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){let c=e[l],u=c.inputs;for(let d in u){let p=u[d],h=!1;for(let f=0;f<t.length;f++)if(s[p.id]){c.outputs.forEach(m=>s[m.id]=!0),h=!0,r[c.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let c=e[l],u=c.inputs;for(let d=0;d<c.outputs.length;d++)if(a[c.outputs[d].id]){for(let p in u)a[u[p].id]=!0,o[c.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let c=e[l];if(r[c.id]&&o[c.id]){let u={};for(let p in c.inputs){let h=c.inputs[p];s[h.id]&&(u[p]=h)}let d=Object.assign({},c);d.inputs=u,d.outputs=c.outputs,i.push(d)}}return i}function V9(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(l=>{let c=e[l.id];c!=null?o.push(c):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let c=n(()=>i[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=a.inputs[l];if(!Ca(c.shape,u.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=c;else{let d=e[u.id];e[u.id]=s(d,c),d.dispose()}}}}var d3=20,Sd=3,w2=7;function U9(e,t,n,s){let r=nu(t),a=G9(e,t,n,r),o=t.length,i=lf(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(c=>"    "+c).join(`
`)),l.join(`
`)}function G9(e,t,n,s){let r=Gt(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?Td(e):e;if(i>1)for(let c=0;c<r/a;c++){let u=c*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],Cd(l[u+d],0,n).length)}return o}function Cd(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(w2))} + ${parseFloat(e[1].toFixed(w2))}j`:Ta(e)?s=`'${e}'`:n==="bool"?s=p3(e):s=parseFloat(e.toFixed(w2)).toString(),ad(s,t)}function p3(e){return e===0?"false":"true"}function lf(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=Td(e);return[Cd(m[0],0,n)]}return n==="bool"?[p3(e[0])]:[e[0].toString()]}if(l===1){if(i>d3){let g=Sd*o,A=Array.from(e.slice(0,g)),x=Array.from(e.slice((i-Sd)*o,i*o));return n==="complex64"&&(A=Td(A),x=Td(x)),["["+A.map((y,b)=>Cd(y,r[b],n)).join(", ")+", ..., "+x.map((y,b)=>Cd(y,r[i-Sd+b],n)).join(", ")+"]"]}let m=n==="complex64"?Td(e):Array.from(e);return["["+m.map((g,A)=>Cd(g,r[A],n)).join(", ")+"]"]}let c=t.slice(1),u=s.slice(1),d=s[0]*o,p=[];if(i>d3){for(let m=0;m<Sd;m++){let g=m*d,A=g+d;p.push(...lf(e.slice(g,A),c,n,u,r,!1))}p.push("...");for(let m=i-Sd;m<i;m++){let g=m*d,A=g+d;p.push(...lf(e.slice(g,A),c,n,u,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*d,A=g+d;p.push(...lf(e.slice(g,A),c,n,u,r,m===i-1))}let h=l===2?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Td(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var an=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Gt(e),n!=null){let s=n.length;O(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||X5(t,this.size),this.strides=nu(e)}set(e,...t){t.length===0&&(t=[0]),O(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Er().makeTensor(this.values,this.shape,this.dtype)}},Er=null,$u=null,H9=null;function j9(e){Er=e}function q9(e){$u=e}function X9(e){H9=e}var tt=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Gt(e),this.strides=nu(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return $u.buffer(this.shape,this.dtype,e)}bufferSync(){return $u.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return su(this.shape,e,this.dtype==="complex64")}arraySync(){return su(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Er().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>of(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Er().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>of(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Er().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Er().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return $u.print(this,e)}clone(){return this.throwIfDisposed(),$u.clone(this)}toString(e=!1){let t=this.dataSync();return U9(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),$u.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Er().makeVariable(this,e,t,n)}};Object.defineProperty(tt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function K9(){return y2("Tensor",()=>tt)}K9();var Nd=class extends tt{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ca(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Er().disposeTensor(this),this.dataId=e.dataId,Er().incRef(this,null)}dispose(){Er().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Nd,Symbol.hasInstance,{value:e=>e instanceof tt&&e.assign!=null&&e.assign instanceof Function});var hr={};Me(hr,{assertTypesMatch:()=>h3,getTensorsInContainer:()=>N2,isTensorInList:()=>Y9,makeTypesMatch:()=>Pt});var k2;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(k2||(k2={}));var I2;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(I2||(I2={}));var S2;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(S2||(S2={}));var C2;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(C2||(C2={}));var T2;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(T2||(T2={}));var Z9={float32:C2,int32:I2,bool:S2,complex64:T2};function Ln(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Z9[e][t]}function Ed(e){return Ln(e,"int32")}function Pt(e,t){if(e.dtype===t.dtype)return[e,t];let n=Ln(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function h3(e,t){O(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function Y9(e,t){return t.some(n=>n.id===e.id)}function N2(e){let t=[],n=new Set;return f3(e,t,n),t}function f3(e,t,n){if(e==null)return;if(e instanceof tt){t.push(e);return}if(!J9(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),f3(a,t,n))}}function J9(e){return Array.isArray(e)||typeof e=="object"}function E2(e){return e.kernelName!=null}var m3=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},R2=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m3}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Io(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new z9(this.backendInstance),!0}setupRegisteredKernels(){Yr(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Yr(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof tu)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Io(`Initialization of backend ${e} failed`),Io(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Io(`Initialization of backend ${e} failed`),Io(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return R2.nextTensorId++}nextVariableId(){return R2.nextVariableId++}clone(e){let t=V.runKernel(qa,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return V.runKernel(Da,i,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(sf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=E2(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(E2(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=sf(h,this.backendName);O(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let A=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let x=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,A,x);let y=x.map(b=>{if(b.rank!=null)return b;let{dataId:w,shape:k,dtype:S}=b;return this.makeTensorFromDataId(w,k,S)});if(s){let b=this.getTensorsForGradient(h,f,y);n=this.saveTensorsForBackwardMode(b)}return y}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:c,attrs:u}=e,d=E2(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(p=this.profiler.profileKernel(l,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(l,c,t,d,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(h=>c[h]!=null?c[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=x2(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(O(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=r.map(l=>t[l]);let i=n.filter((l,c)=>a[c]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&Ta(e[0])&&(r=e.map(i=>Id(i)));let a=s.write(r,t,n),o=new tt(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),l=Y5(r);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r=new tt(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new Nd(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*h2(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Nd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*h2(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=x2(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=l=>(l=l.map((c,u)=>{if(c==null){let d=n[u],p=Sh(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),s(l.length>1?l:l[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=N2(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(O(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));O(r instanceof tt,()=>"The result y returned by f() must be a tensor.");let a=W9(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n==null?Q9(r.shape):n,V9(o,a,l=>this.tidy(l),eR);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let c of l.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return O(Na(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{O(t.every(o=>o instanceof tt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),O(n.value instanceof tt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(Na(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),c=Array.isArray(l)?l:[l];O(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(c.every(d=>d instanceof tt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return c.forEach((d,p)=>{u[p]=()=>d}),u};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=kd(),n=await this.backend.time(e);return n.wallMs=kd()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m3;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},$2=R2;$2.nextTensorId=0;$2.nextVariableId=0;function Q9(e){let t=f2(Gt(e),"float32");return V.makeTensor(t,e,"float32")}function g3(){let e=s3();if(e._tfengine==null){let t=new n3(e);e._tfengine=new $2(t)}return k9(e._tfengine.ENV),j9(()=>e._tfengine),e._tfengine}var V=g3();function eR(e,t){let n={a:e,b:t};return V.runKernel(Xr,n)}var _u={};Me(_u,{isBrowser:()=>A3,isMobile:()=>sR,mockIsMobile:()=>nR});function tR(){return typeof navigator!="undefined"&&navigator!=null}var _2;function nR(e){_2=e}function sR(e){if(_2!==void 0)return _2;if(e||tR()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function A3(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var fr=Y();fr.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});fr.registerFlag("IS_BROWSER",()=>A3());fr.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");fr.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));fr.registerFlag("PROD",()=>!1);fr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>fr.getBool("DEBUG"));fr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);fr.registerFlag("IS_TEST",()=>!1);fr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);fr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Rr(e,t){let n=e;if(_n(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||_n(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&y3(e,s,[]),s}function y3(e,t,n){if(n=n||[],!Array.isArray(e)&&!_n(e)){O(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}O(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),O(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)y3(e[r],s,n.concat(r))}function x3(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function F(e,t,n,s="numeric"){if(e instanceof tt)return x3(s,e.dtype,t,n),e;let r=kh(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),x3(s,r,t,n),e==null||!_n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=Rr(e,r);!_n(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?af(e,r):ui(e,[],!0);return V.makeTensor(i,a,r)}function Rd(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>F(a,`${t}[${o}]`,n,s))}var b3="__op";function G(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+b3;let r=(...a)=>{V.startScope(n);try{let o=s(...a);return g2(o)&&console.error("Cannot return a Promise inside of tidy."),V.endScope(o),o}catch(o){throw V.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function rR(e,t){let n=F(e,"real","complex"),s=F(t,"imag","complex");Mn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return V.runKernel(id,r)}var Co=G({complex_:rR});function To(e,t,n,s){if(s==null&&(s=kh(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!_n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){m2(t);let r=Gt(t),a=Gt(n);O(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==Gt(t.slice(o)):!0;O(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!_n(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?af(e,s):ui(e,[],!0),V.makeTensor(e,t,s)}function pt(e,t,n){let s=Rr(e,n);return To(e,t,s,n)}var D2={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},uf=4;async function aR(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let c={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async d=>{let p=await l.bytes(),h=p.reduce((g,A)=>g+A.length,0)+uf*p.length,f=new Uint8Array(h),m=0;for(let g=0;g<p.length;g++){let A=p[g],x=new Uint8Array(new Uint32Array([A.length]).buffer);f.set(x,m),m+=uf,f.set(A,m),m+=A.length}d(f)});s.push(u)}else s.push(l.data());t!=null&&(c.group=t),n.push(c)}let a=await Promise.all(s);return{data:oR(a),specs:n}}function v3(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,c=Gt(l),u;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=D2[d.dtype],h=e.slice(r,r+c*p),f=d.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=pR()),u=s(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*p}else if(i==="string"){let d=Gt(a.shape);u=[];for(let p=0;p<d;p++){let h=new Uint32Array(e.slice(r,r+uf))[0];r+=uf;let f=new Uint8Array(e.slice(r,r+h));u.push(f),r+=h}}else{let d=D2[i],p=e.slice(r,r+c*d);if(i==="float32")u=new Float32Array(p);else if(i==="int32")u=new Int32Array(p);else if(i==="bool")u=new Uint8Array(p);else if(i==="complex64"){u=new Float32Array(p);let h=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let A=0;A<h.length;A++)h[A]=u[A*2],f[A]=u[A*2+1];let m=pt(h,l,"float32"),g=pt(f,l,"float32");n[o]=Co(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*d}i!=="complex64"&&(n[o]=pt(u,l,i))}return n}function oR(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var F2=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function w3(e){return F2?Buffer.byteLength(e):new Blob([e]).size}function iR(e){if(F2)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function lR(e){if(F2){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function P2(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function k3(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function I3(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function O2(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function $d(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:w3(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:w3(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function uR(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)==0;)r-=8388608,s<<=1;return s&=~8388608,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function cR(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function dR(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function pR(){let e=uR(),t=cR(),n=dR();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(r)}}var Wt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Wt.instance==null&&(Wt.instance=new Wt),Wt.instance}static registerSaveRouter(e){Wt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Wt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Wt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Wt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?Wt.getInstance().loadRouters:Wt.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},hR=e=>Wt.registerSaveRouter(e),fR=e=>Wt.registerLoadRouter(e),mR=e=>Wt.getSaveHandlers(e),gR=(e,t)=>Wt.getLoadHandlers(e,t),M2="tensorflowjs",z2=1,Qi="models_store",No="model_info_store";function S3(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function L2(e){let t=e.result;t.createObjectStore(Qi,{keyPath:"modelPath"}),t.createObjectStore(No,{keyPath:"modelPath"})}var el=class{constructor(e){if(this.indexedDB=S3(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(M2,z2);r.onupgradeneeded=()=>L2(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(Qi,"readonly"),l=o.objectStore(Qi).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=c=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{let o=$d(t),i=a.transaction(No,"readwrite"),l=i.objectStore(No),c=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),u;c.onsuccess=()=>{u=a.transaction(Qi,"readwrite");let p=u.objectStore(Qi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});p.onsuccess=()=>n({modelArtifactsInfo:o}),p.onerror=h=>{l=i.objectStore(No);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(p.error)),f.onerror=m=>(a.close(),s(p.error))}},c.onerror=d=>(a.close(),s(c.error)),i.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};el.URL_SCHEME="indexeddb://";var C3=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(el.URL_SCHEME)?AR(e.slice(el.URL_SCHEME.length)):null;Wt.registerSaveRouter(C3);Wt.registerLoadRouter(C3);function AR(e){return new el(e)}function yR(e){return e.startsWith(el.URL_SCHEME)?e.slice(el.URL_SCHEME.length):e}var xR=class{constructor(){this.indexedDB=S3()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(M2,z2);n.onupgradeneeded=()=>L2(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(No,"readonly"),o=r.objectStore(No).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=yR(e),new Promise((t,n)=>{let s=this.indexedDB.open(M2,z2);s.onupgradeneeded=()=>L2(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(No,"readwrite"),o=a.objectStore(No),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=o.delete(e),u=()=>{l=r.transaction(Qi,"readwrite");let p=l.objectStore(Qi).delete(e);p.onsuccess=()=>t(i.result.modelArtifactsInfo),p.onerror=h=>n(i.error)};c.onsuccess=u,c.onerror=d=>(u(),r.close(),n(i.error))}},i.onerror=c=>(r.close(),n(i.error)),a.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},Jr="/",Du="tensorflowjs_models",T3="info",bR="model_topology",vR="weight_specs",wR="weight_data",kR="model_metadata";function N3(e){return{info:[Du,e,T3].join(Jr),topology:[Du,e,bR].join(Jr),weightSpecs:[Du,e,vR].join(Jr),weightData:[Du,e,wR].join(Jr),modelMetadata:[Du,e,kR].join(Jr)}}function E3(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function IR(e){let t=e.split(Jr);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Jr)}function SR(e){return e.startsWith(tl.URL_SCHEME)?e.slice(tl.URL_SCHEME.length):e}var tl=class{constructor(e){if(!Y().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=N3(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=$d(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,iR(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw E3(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=lR(a),t}};tl.URL_SCHEME="localstorage://";var R3=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(tl.URL_SCHEME)?CR(e.slice(tl.URL_SCHEME.length)):null;Wt.registerSaveRouter(R3);Wt.registerLoadRouter(R3);function CR(e){return new tl(e)}var TR=class{constructor(){O(Y().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Du+Jr,n=Jr+T3;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=IR(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=SR(e);let t=N3(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return E3(t),n}},Fu="://",Ds=class{constructor(){this.managers={}}static getInstance(){return Ds.instance==null&&(Ds.instance=new Ds),Ds.instance}static registerManager(e,t){O(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Fu)&&(e=e.slice(0,e.indexOf(Fu))),O(e.length>0,()=>"scheme must not be an empty string.");let n=Ds.getInstance();O(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function cf(e){if(e.indexOf(Fu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ds.getSchemes().join(",")}`);return{scheme:e.split(Fu)[0],path:e.split(Fu)[1]}}async function $3(e,t,n=!1){O(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=Wt.getLoadHandlers(e);O(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),O(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=Wt.getSaveHandlers(t);O(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),O(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=cf(e).scheme,l=cf(e).path,c=i===cf(e).scheme,u=await r.load();n&&c&&await Ds.getManager(i).removeModel(l);let d=await o.save(u);return n&&!c&&await Ds.getManager(i).removeModel(l),d.modelArtifactsInfo}async function NR(){let e=Ds.getSchemes(),t={};for(let n of e){let s=await Ds.getManager(n).listModels();for(let r in s){let a=n+Fu+r;t[a]=s[r]}}return t}async function ER(e){let t=cf(e);return Ds.getManager(t.scheme).removeModel(t.path)}async function RR(e,t){return $3(e,t,!1)}async function $R(e,t){return $3(e,t,!0)}var _R=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new _R);try{Ds.registerManager(tl.URL_SCHEME,new TR)}catch(e){}try{Ds.registerManager(el.URL_SCHEME,new xR)}catch(e){}}var DR={importFetch:()=>VE()},B2,FR=class{constructor(){this.util=UE(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Y().global.fetch!=null?Y().global.fetch(e,t):(B2==null&&(B2=DR.importFetch()),B2(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Y().get("IS_NODE")&&Y().setPlatform("node",new FR);function ze(e,t="float32",n){return t=t||"float32",m2(e),new an(e,t,n)}function PR(e,t){let n=F(e,"x","cast");if(!Z5(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return V.runKernel(Da,s,r)}var ge=G({cast_:PR});function OR(e){let n={x:F(e,"x","clone","string_or_numeric")};return V.runKernel(qa,n)}var Bn=G({clone_:OR});function _3(e,t=!1){console.log(e.toString(t))}g3();var MR={buffer:ze,cast:ge,clone:Bn,print:_3};q9(MR);var os={};Me(os,{browserFiles:()=>GR,browserHTTPRequest:()=>KR,concatenateArrayBuffers:()=>P2,copyModel:()=>RR,decodeWeights:()=>v3,encodeWeights:()=>aR,fromMemory:()=>YR,getLoadHandlers:()=>gR,getModelArtifactsForJSON:()=>O2,getModelArtifactsInfoForJSON:()=>$d,getSaveHandlers:()=>mR,http:()=>G2,isHTTPScheme:()=>U2,listModels:()=>NR,loadWeights:()=>HR,moveModel:()=>$R,registerLoadRouter:()=>fR,registerSaveRouter:()=>hR,removeModel:()=>ER,weightsLoaderFactory:()=>O3,withSaveHandler:()=>JR});var zR="model",LR=".json",BR=".weights.bin";function D3(e){return new Promise(t=>setTimeout(t)).then(e)}var W2=class{constructor(e){if(!Y().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(W2.URL_SCHEME)&&(e=e.slice(W2.URL_SCHEME.length)),(e==null||e.length===0)&&(e=zR),this.modelJsonFileName=e+LR,this.weightDataFileName=e+BR}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=I3(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await D3(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await D3(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:$d(e)}}}},df=W2;df.URL_SCHEME="downloads://";var WR=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=O2(r,l=>this.loadWeights(l));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,P2(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>k3(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=k3(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},VR=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(df.URL_SCHEME)?UR(e.slice(df.URL_SCHEME.length)):null;Wt.registerSaveRouter(VR);function UR(e="model"){return new df(e)}function GR(e){return new WR(e)}function F3(e,t,n,s){o(e),n=n==null?0:n,s=s==null?1:s,i(n,s);let r=0,a=l=>(l.then(c=>{let u=n+ ++r/e.length*(s-n);return t(u),c}),l);function o(l){O(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,c){O(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),O(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),O(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(e.map(a))}async function P3(e,t){t==null&&(t={});let n=t.fetchFunc==null?Y().platform.fetch:t.fetchFunc,s=e.map(d=>n(d,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await F3(s,t.onProgress,r,a)).map(d=>d.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(i):await F3(i,t.onProgress,l,c)}async function HR(e,t="",n,s){return O3(o=>P3(o,{requestInit:s}))(e,t,n)}function O3(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let A="quantization"in g?g.quantization.dtype:g.dtype,x=D2[A]*Gt(g.shape),y=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,w)=>{b===g.name&&(y(),o[w]=!0)}):y(),i.push(g.name),m+=x})}),!o.every(h=>h)){let h=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),c=[];l.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;c.push(m)})});let u=await e(c),d={},p=0;return l.forEach(h=>{let f=t[h].paths.length,m=0;for(let b=0;b<f;b++)m+=u[p+b].byteLength;let g=new ArrayBuffer(m),A=new Uint8Array(g),x=0;for(let b=0;b<f;b++){let w=new Uint8Array(u[p+b]);A.set(w,x),x+=w.byteLength}a[h].forEach(b=>{let w=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),k=v3(w,[b.manifestEntry]);for(let S in k)d[S]=k[S]}),p+=f}),d}}var jR="application/octet-stream",qR="application/json",V2=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(O(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,O(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&O(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=I3(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:qR}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:jR}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:$d(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return O2(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=XR(t),r=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let o=[],i=[];for(let c of e)for(let u of c.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(u)):o.push(r+u+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await P3(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,P2(l)]}};V2.URL_SCHEME_REGEX=/^https?:\/\//;function XR(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function U2(e){return e.match(V2.URL_SCHEME_REGEX)!=null}var M3=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>U2(s)):n=U2(e),n)return G2(e,t)}return null};Wt.registerSaveRouter(M3);Wt.registerLoadRouter(M3);function G2(e,t){return new V2(e,t)}function KR(e,t){return G2(e,t)}var H2=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},ZR=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function YR(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new H2(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new H2({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new H2({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function JR(e){return new ZR(e)}var z3={};Me(z3,{confusionMatrix:()=>s$});function QR(e,t,n=!1,s=!1){let r=F(e,"a","matMul"),a=F(t,"b","matMul");[r,a]=Pt(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return V.runKernel(_a,o,i)}var qe=G({matMul_:QR});function e$(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:F(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:s};return V.runKernel(_i,a,o)}var _d=G({oneHot_:e$});function t$(e,t){let n=F(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{O(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let s={x:n},r={perm:t};return V.runKernel(xo,s,r)}var nt=G({transpose_:t$});function n$(e,t,n){let s=F(e,"labels","confusionMatrix"),r=F(t,"predictions","confusionMatrix");O(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),O(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),O(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),O(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),O(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=_d(ge(s,"int32"),n),o=_d(ge(r,"int32"),n),i=nt(a),l=qe(i,o);return ge(l,"int32")}var s$=G({confusionMatrix_:n$}),nl={};Me(nl,{assertAndGetBroadcastShape:()=>yt,getBroadcastDims:()=>L3,getReductionAxes:()=>Kt});function L3(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function Kt(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function yt(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var Qs={};Me(Qs,{fromPixels:()=>c$,fromPixelsAsync:()=>l$,toPixels:()=>u$});function B3(e,t,n){if(li(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Rr(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return To(e,t,s,n)}var sl;function W3(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r){let f=2;if(r&&e.readyState<f)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(sf(bd,V.backendName)!=null){let f={pixels:e},m={numChannels:t};return V.runKernel(bd,f,m)}let[c,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(o)d=e.getContext("2d").getImageData(0,0,c,u).data;else if(s||n)d=e.data;else if(a||r||i){if(sl==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")sl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else sl=document.createElement("canvas").getContext("2d");sl.canvas.width=c,sl.canvas.height=u,sl.drawImage(e,0,0,c,u),d=sl.getImageData(0,0,c,u).data}let p;if(t===4)p=new Int32Array(d);else{let f=c*u;p=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)p[m*t+g]=d[m*4+g]}return B3(p,[u,c,t],"int32")}function r$(e){return e!=null&&e.data instanceof Uint8Array}function a$(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function o$(e){return e!=null&&e.width!==0&&e.height!==0}function i$(e){return a$()&&!(e instanceof ImageBitmap)&&o$(e)&&!r$(e)}async function l$(e,t=3){let n=null;if(Y().getBool("WRAP_TO_IMAGEBITMAP")&&i$(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return W3(n,t)}async function u$(e,t){let n=F(e,"img","toPixels");if(!(e instanceof tt)){let c=n;n=ge(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){let u=[0,0,0,255];for(let p=0;p<a;p++){let h=o[c*a+p];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(u[0]=h*i,u[1]=h*i,u[2]=h*i):u[p]=h*i}let d=c*4;l[d+0]=Math.round(u[0]),l[d+1]=Math.round(u[1]),l[d+2]=Math.round(u[2]),l[d+3]=Math.round(u[3])}if(t!=null){t.width=r,t.height=s;let c=t.getContext("2d"),u=new ImageData(l,r,s);c.putImageData(u,0,0)}return n!==e&&n.dispose(),l}var c$=G({fromPixels_:W3}),j2={};Me(j2,{prepareAndValidate:()=>V3});function V3(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(Gt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let d=0;d<r.length-1;++d)o*=r[d];let i=e.shape,l=r.slice();l.pop();let c=1;for(let d=a;d<n;++d)c*=i[d],l.push(i[d]);let u=[...nu(e.shape).map(d=>d/c),1].slice(0,a);return[l,o,c,u]}var q2={};Me(q2,{calculateShapes:()=>U3,validateInput:()=>K2,validateUpdateShape:()=>X2});function X2(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function K2(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}X2(n,t,e)}function U3(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let d=r;d<a;++d)o*=n[d];let i=r<1?1:r,l=Gt(t.shape)/i,c=[...nu(n.slice(0,r)),1],u=Gt(n);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}var Ot={};Me(Ot,{assertParamsValid:()=>p$,computeFlatOffset:()=>A$,computeOutShape:()=>f$,getNormalizedAxes:()=>m$,isSliceContinous:()=>g$,maskToAxes:()=>h$,parseSliceParams:()=>J3,sliceInfo:()=>y$,startForAxis:()=>Z3,startIndicesWithElidedDims:()=>q3,stopForAxis:()=>Y3,stopIndicesWithElidedDims:()=>X3,stridesForAxis:()=>K3,stridesWithElidedDims:()=>G3});var Z2=-2,d$=-1;function p$(e,t,n){let s=e.shape.length;O(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),O(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)O(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function h$(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function f$(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function G3(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function H3(e,t,n){return n<=e?n:n-(t-1)}function j3(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function m$(e,t,n,s,r,a,o,i,l){let c=e.length,u=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){let h=t[0],f=n+1;u=q3(o,h,f,s,e),d=X3(i,h,f,r,e),p=G3(a,h,f,e)}else for(let h=0;h<c;h++)u[h]=Z3(o,s,a,e,h,l),d[h]=Y3(i,r,a,e,h,l),p[h]=K3(a,h,l);return{begin:u,end:d,strides:p}}function q3(e,t,n,s,r){let a=[...r],o=j3(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=H3(t,n,i),c=s[l];e&1<<l&&(c=0),a[i]=c}return a}function X3(e,t,n,s,r){let a=[...r],o=j3(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=H3(t,n,i),c=s[l];e&1<<l&&(c=Number.MAX_SAFE_INTEGER),a[i]=c}for(let i=0;i<a.length;i++){let l=r[i];a[i]<0&&(a[i]+=l),a[i]=rd(0,a[i],r[i])}return a}function K3(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function Z3(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),o=rd(0,o,l-1),o}function Y3(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),i>0?o=rd(0,o,l):o=rd(-1,o,l-1),o}function g$(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function A$(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function J3(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{O(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(O(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function y$(e,t,n,s,r,a,o,i,l){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,o!=null&&(o&o-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let y=0;y<d.dims;y++)u&&(1<<y&i)!=0&&d.numAddAxisAfterEllipsis++,1<<y&o&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};x$(d,p);let h=!0,f=!0,m=!0,g=[],A=[];for(let y=0;y<e.length;++y){if(p.strides[y]===0)throw Error(`strides[${y}] must be non-zero`);let b=!!(p.shrinkAxisMask&1<<y),w=e[y];if(w===-1){g.push(b?1:-1);continue}let k=[p.beginMask&1<<y,p.endMask&1<<y],S=[p.strides[y]>0?0:-1,p.strides[y]>0?w:w-1];if(b&&p.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[y]===1;let N=!!(p.beginMask&1<<y&&p.endMask&1<<y);if(p.beginValid&&p.endValid){if(b){let $=p.begin[y]<0?w+p.begin[y]:p.begin[y];if(p.begin[y]=$,p.end[y]=p.begin[y]+1,$<0||$>=w)throw Error(`slice index ${p.begin[y]} of dimension ${y} out of bounds.`)}else p.begin[y]=Q3(p.begin[y],0,p.strides[y],w,k,S),p.end[y]=Q3(p.end[y],1,p.strides[y],w,k,S);let D=p.strides[y]===1&&p.begin[y]===0&&p.end[y]===w;h=h&&D,f=f&&(y===0&&p.strides[y]===1||D)}else h=h&&p.strides[y]===1&&N,f=f&&(y===0&&p.strides[y]===1||N);let R,M=!1;if(p.beginValid&&p.endValid?(R=p.end[y]-p.begin[y],M=!0):b?(R=1,M=!0):N&&w>=0&&(p.strides[y]<0?R=-w:R=w,M=!0),M){let D;R===0||R<0!=p.strides[y]<0?D=0:D=Math.trunc(R/p.strides[y])+(R%p.strides[y]!=0?1:0),g.push(D)}else g.push(-1)}for(let y=0;y<p.finalShapeGatherIndices.length;++y){let b=p.finalShapeGatherIndices[y];b>=0?A.push(g[b]):b===Z2&&A.push(1)}return{finalShapeSparse:A.filter((y,b)=>p.finalShapeGatherIndices[b]!==Z2),finalShape:A,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function x$(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(Z2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(d$),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function Q3(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let o=e<0?s+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var ce={};Me(ce,{Serializable:()=>ev,SerializationMap:()=>rl,registerClass:()=>Eo});var ev=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},rl=class{constructor(){this.classNameMap={}}static getMap(){return rl.instance==null&&(rl.instance=new rl),rl.instance}static register(e){rl.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Eo(e){O(e.className!=null,()=>"Class being registered does not have the static className property defined."),O(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),O(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),rl.register(e)}var tv={};Me(tv,{TEST_EPSILON_FLOAT16:()=>nv,encodeStrings:()=>sv,expectArrayBuffersEqual:()=>C$,expectArraysClose:()=>v$,expectArraysEqual:()=>k$,expectNumbersClose:()=>I$,expectPromiseToFail:()=>w$,expectValuesInRange:()=>S$,testEpsilon:()=>Y2});var b$=.001,nv=.1;function v$(e,t,n){return n==null&&(n=Y2()),J2(e,t,(s,r)=>Q2(s,r,n))}function Y2(){return V.backend.floatPrecision()===32?b$:nv}function J2(e,t,n){let s=!0;if((_n(e)||_n(t))&&(s=!1),_n(e)&&_n(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Rr(e),i=Rr(t);if(!Ca(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=_n(e)?e:ui(e),a=_n(t)?t:ui(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${a}.`)}}function w$(e,t){e().then(()=>t.fail(),()=>t())}function k$(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ta(e)||Ta(e[0])||Ta(t)||Ta(t[0])?J2(e,n,(s,r)=>s==r):J2(e,t,(s,r)=>Q2(s,r,0))}function I$(e,t,n){if(n==null&&(n=Y2()),!Q2(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Q2(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function S$(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function C$(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function sv(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?sv(n):e[t]=Id(n)}return e}var rv="0.0.0";function av(){Y().set("PROD",!0)}function T$(){Y().set("DEBUG",!0)}function N$(){Y().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function e1(e){Y().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}X9(e1);function E$(){V.disposeVariables()}function is(){return V}function pf(){return V.memory()}function R$(e){return V.profile(e)}function X(e,t){return V.tidy(e,t)}function te(e){N2(e).forEach(n=>n.dispose())}function yn(e){return V.keep(e)}function $$(e){return V.time(e)}function ov(e){return V.setBackend(e)}function hf(){return V.ready()}function Fs(){return V.backendName}function _$(e){V.removeBackend(e)}function t1(e){return V.findBackend(e)}function D$(e){return V.findBackendFactory(e)}function al(e,t,n=1){return V.registerBackend(e,t,n)}function $r(){return V.backend}function F$(e,t){Y().setPlatform(e,t)}function P$(e,t){let n=F(e,"a","add"),s=F(t,"b","add");[n,s]=Pt(n,s);let r={a:n,b:s};return V.runKernel(Xr,r)}var le=G({add_:P$});function O$(e,t){let n=F(e,"a","floorDiv"),s=F(t,"b","floorDiv");[n,s]=Pt(n,s);let r={a:n,b:s};return V.runKernel(Ga,r)}var ff=G({floorDiv_:O$});function M$(e,t){let n=F(e,"a","div"),s=F(t,"b","div");if([n,s]=Pt(n,s),n.dtype==="int32"&&s.dtype==="int32")return ff(n,s);let r={a:n,b:s},a={};return V.runKernel(Ba,r,a)}var de=G({div_:M$});function z$(e,t){let n=F(e,"a","mul"),s=F(t,"b","mul");[n,s]=Pt(n,s);let r={a:n,b:s};return V.runKernel(no,r)}var L=G({mul_:z$});function L$(e){let t=F(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return V.runKernel(ld,n)}else{let n={x:t};return V.runKernel(ci,n)}}var on=G({abs_:L$});function B$(e){let n={x:F(e,"x","acos")};return V.runKernel(ru,n)}var iv=G({acos_:B$});function W$(e){let n={x:F(e,"x","acosh")};return V.runKernel(au,n)}var lv=G({acosh_:W$});function V$(e){O(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),O(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>F(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!Ca(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return V.runKernel(Ea,s)}var mf=G({addN_:V$});function U$(e,t=null,n=!1){let r={x:F(e,"x","all","bool")},a={axis:t,keepDims:n};return V.runKernel(ou,r,a)}var n1=G({all_:U$});function G$(e,t=null,n=!1){let r={x:F(e,"x","any","bool")},a={axis:t,keepDims:n};return V.runKernel(iu,r,a)}var gf=G({any_:G$});function H$(e,t=0){let s={x:F(e,"x","argMax")},r={axis:t};return V.runKernel(Ra,s,r)}var ys=G({argMax_:H$});function j$(e,t=0){let s={x:F(e,"x","argMin")},r={axis:t};return V.runKernel(lu,s,r)}var uv=G({argMin_:j$});function q$(e){let n={x:F(e,"x","asin")};return V.runKernel(uu,n)}var cv=G({asin_:q$});function X$(e){let n={x:F(e,"x","asinh")};return V.runKernel(cu,n)}var dv=G({asinh_:X$});function K$(e){let n={x:F(e,"x","atan")};return V.runKernel(du,n)}var pv=G({atan_:K$});function Z$(e,t){let n=F(e,"a","atan2"),s=F(t,"b","atan2");[n,s]=Pt(n,s);let r={a:n,b:s};return V.runKernel(hu,r)}var hv=G({atan2_:Z$});function Y$(e){let n={x:F(e,"x","atanh")};return V.runKernel(pu,n)}var fv=G({atanh_:Y$});function J$(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],l=Av(r);return Dd(e,i,n,a,s,null,null,l)}function mv(e,t,n,s,r,a,o="channelsLast"){let[i,l]=Af(t),c;if(o==="channelsLast")c=[i,l,e[3],e[3]];else if(o==="channelsFirst")c=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Dd(e,c,n,s,r,a,!1,o)}function Q$(e,t,n,s,r,a,o="NDHWC"){let[i,l,c]=r1(t),u,d;if(o==="NDHWC")d="channelsLast",u=[i,l,c,e[4],e[4]];else if(o==="NCDHW")d="channelsFirst",u=[i,l,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return gv(e,u,n,s,r,!1,d,a)}function Dd(e,t,n,s,r,a,o=!1,i="channelsLast"){let[l,c,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,d]=e;else if(i==="channelsFirst")[l,d,c,u]=e;else throw new Error(`Unknown dataFormat ${i}`);let[p,h,,f]=t,[m,g]=Af(n),[A,x]=Af(s),y=Pu(p,A),b=Pu(h,x),{padInfo:w,outHeight:k,outWidth:S}=n_(r,c,u,m,g,y,b,a,i),N=o?f*d:f,R;return i==="channelsFirst"?R=[l,N,k,S]:i==="channelsLast"&&(R=[l,k,S,N]),{batchSize:l,dataFormat:i,inHeight:c,inWidth:u,inChannels:d,outHeight:k,outWidth:S,outChannels:N,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:y,effectiveFilterWidth:b,dilationHeight:A,dilationWidth:x,inShape:e,outShape:R,filterShape:t}}function gv(e,t,n,s,r,a=!1,o="channelsLast",i){let[l,c,u,d,p]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,d,p]=e;else if(o==="channelsFirst")[l,p,c,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[A,x,y]=r1(n),[b,w,k]=r1(s),S=Pu(h,b),N=Pu(f,w),R=Pu(m,k),{padInfo:M,outDepth:D,outHeight:$,outWidth:T}=s_(r,c,u,d,A,x,y,S,N,R,i),P=a?g*p:g,W;return o==="channelsFirst"?W=[l,P,D,$,T]:o==="channelsLast"&&(W=[l,D,$,T,P]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:d,inChannels:p,outDepth:D,outHeight:$,outWidth:T,outChannels:P,padInfo:M,strideDepth:A,strideHeight:x,strideWidth:y,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:w,dilationWidth:k,inShape:e,outShape:W,filterShape:t}}function e_(e,t,n,s,r){s==null&&(s=s1(e,t,n));let a=e[0],o=e[1],i=ol((a-t+2*s)/n+1,r),l=ol((o-t+2*s)/n+1,r);return[i,l]}function t_(e,t,n,s,r,a){r==null&&(r=s1(e,t,s));let o=e[0],i=e[1],l=e[2],c=ol((o-t+2*r)/s+1,a),u=ol((i-t+2*r)/s+1,a),d=ol((l-t+2*r)/s+1,a);return[c,u,d,n]}function s1(e,t,n,s=1){let r=Pu(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Af(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function r1(e){return typeof e=="number"?[e,e,e]:e}function Pu(e,t){return t<=1?e:e+(e-1)*(t-1)}function n_(e,t,n,s,r,a,o,i,l){let c,u,d;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=e_([t,n],a,s,e,i);u=h[0],d=h[1]}else if(e==="same"){u=Math.ceil(t/s),d=Math.ceil(n/r);let p=Math.max(0,(u-1)*s+a-t),h=Math.max(0,(d-1)*r+o-n),f=Math.floor(p/2),m=p-f,g=Math.floor(h/2),A=h-g;c={top:f,bottom:m,left:g,right:A,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-a+1)/s),d=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let p=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];c={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=ol((t-a+p+h)/s+1,i),d=ol((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:u,outWidth:d}}function s_(e,t,n,s,r,a,o,i,l,c,u){let d,p,h,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=t_([t,n,s,1],i,1,r,e,u);p=g[0],h=g[1],f=g[2]}else if(e==="same"){p=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/o);let m=(p-1)*r+i-t,g=(h-1)*a+l-n,A=(f-1)*o+c-s,x=Math.floor(m/2),y=m-x,b=Math.floor(g/2),w=g-b,k=Math.floor(A/2),S=A-k;d={top:b,bottom:w,left:k,right:S,front:x,back:y,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/r),h=Math.ceil((n-l+1)/a),f=Math.ceil((s-c+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}function ol(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ro(e){let[t,n,s]=Af(e);return t===1&&n===1&&s===1}function _r(e,t){return Ro(e)||Ro(t)}function Av(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function r_(e,t){let s={x:F(e,"x","reshape","string_or_numeric")},r={shape:t};return V.runKernel(Pi,s,r)}var H=G({reshape_:r_});function a_(e,t,n,s,r){let a=F(e,"x","avgPool","float32"),o=1;O(_r(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),r!=null&&O(gn(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=V.runKernel($a,c,u);return d=ge(d,a.dtype),l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var yf=G({avgPool_:a_});function o_(e,t,n,s,r,a="NDHWC"){let o=F(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),O(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),r!=null&&O(gn(s),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=V.runKernel(od,c,u);return d=ge(d,i.dtype),l?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var a1=G({avgPool3d_:o_});function i_(e,t=0){O(e.length>=1,()=>"Pass at least one tensor to concat");let n=Rd(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Bn(n[0]);let s=n,r={axis:t};return V.runKernel(pi,s,r)}var It=G({concat_:i_});function l_(e){let n={x:F(e,"x","sigmoid","float32")};return V.runKernel(po,n)}var Wn=G({sigmoid_:l_});function u_(e,t,n){let s=F(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return V.runKernel(Bi,r,a)}var De=G({slice_:u_});function c_(e){let n={x:F(e,"x","tanh","float32")};return V.runKernel(yo,n)}var Ou=G({tanh_:c_});function d_(e,t,n,s,r,a){let o=F(e,"forgetBias","basicLSTMCell"),i=F(t,"lstmKernel","basicLSTMCell"),l=F(n,"lstmBias","basicLSTMCell"),c=F(s,"data","basicLSTMCell"),u=F(r,"c","basicLSTMCell"),d=F(a,"h","basicLSTMCell"),p=It([c,d],1),h=qe(p,i),f=le(h,l),m=f.shape[0],g=f.shape[1]/4,A=[m,g],x=De(f,[0,0],A),y=De(f,[0,g],A),b=De(f,[0,g*2],A),w=De(f,[0,g*3],A),k=le(L(Wn(x),Ou(y)),L(u,Wn(le(o,b)))),S=L(Ou(k),Wn(w));return[k,S]}var p_=G({basicLSTMCell_:d_});function h_(e,t,n){let s=F(e,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);O(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),O(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),O(s.shape[0]%r==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return V.runKernel(di,a,o)}var xf=G({batchToSpaceND_:h_});function f_(e){let t;return e.rank===0||e.rank===1?t=H(e,[1,1,1,e.size]):e.rank===2?t=H(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function m_(e,t,n,s,r,a){a==null&&(a=.001);let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;s!=null&&(u=F(s,"offset","batchNorm")),O(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:f_(o),scale:c,offset:u,mean:i,variance:l},h={varianceEpsilon:a},f=V.runKernel(Ha,p,h);return H(f,o.shape)}var Mu=G({batchNorm_:m_});function g_(e,t,n,s,r,a){let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;return s!=null&&(u=F(s,"offset","batchNorm")),O(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),O(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),O(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&O(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Mu(o,i,l,u,c,a)}var yv=G({batchNorm2d_:g_});function A_(e,t,n,s,r,a){let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;return s!=null&&(u=F(s,"offset","batchNorm")),O(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),O(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),O(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&O(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Mu(o,i,l,u,c,a)}var xv=G({batchNorm3d_:A_});function y_(e,t,n,s,r,a){let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;return s!=null&&(u=F(s,"offset","batchNorm")),O(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),O(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),O(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&O(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Mu(o,i,l,u,c,a)}var bv=G({batchNorm4d_:y_});function x_(e,t,n){let s=F(e,"x","bincount"),r=F(t,"weights","bincount");O(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return V.runKernel(Nh,a,o)}var o1=G({bincount_:x_});function b_(e,t){let n=F(e,"s0","broadcastArgs","int32"),s=F(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return V.runKernel(Eh,r)}var vv=G({broadcastArgs_:b_});function v_(e,t){let n=F(e,"broadcastTo","x"),s=n.shape;if(t.some(c=>!(c>0)||c%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let c=n.shape.slice();for(;c.length<t.length;)c.unshift(1);n=H(n,c)}let r=n.shape,a=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])a[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return Bn(n);let i={x:n},l={reps:a};return V.runKernel(Zr,i,l)}var Fd=G({broadcastTo_:v_});function w_(e){let n={x:F(e,"x","ceil","float32")};return V.runKernel(Fa,n)}var wv=G({ceil_:w_});function k_(e,t,n){let s=F(e,"x","clipByValue");O(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return V.runKernel(Kr,r,a)}var xs=G({clipByValue_:k_});function I_(e){return It(e,0)}var kv=G({concat1d_:I_});function S_(e,t){return It(e,t)}var zu=G({concat2d_:S_});function C_(e,t){return It(e,t)}var Iv=G({concat3d_:C_});function T_(e,t){return It(e,t)}var Sv=G({concat4d_:T_});function N_(e,t,n,s,r="NHWC",a=[1,1],o){let i=F(e,"x","conv2d","float32"),l=F(t,"filter","conv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),O(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),O(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),o!=null&&O(gn(s),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);let d=r==="NHWC"?c.shape[3]:c.shape[1];O(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),O(_r(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let p={x:c,filter:l},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=V.runKernel(Pa,p,h);return u?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var $o=G({conv2d_:N_});function E_(e,t,n,s,r="NWC",a=1,o){let i=F(e,"x","conv1d"),l=F(t,"filter","conv1d"),c=i,u=!1;i.rank===2&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1]])),O(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),O(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),o!=null&&O(gn(s),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`),O(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),O(_r(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),O(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let d=H(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=H(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=$o(p,d,[1,n],s,"NHWC",[1,a],o);return u?H(g,[g.shape[2],g.shape[3]]):H(g,[g.shape[0],g.shape[2],g.shape[3]])}var i1=G({conv1d_:E_});function R_(e,t,n,s,r,a="NHWC",o){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,c=!1;t.rank===3&&(c=!0,l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),O(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),O(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),O(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?l.shape[3]:l.shape[1];O(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),O(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),o!=null&&O(gn(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let p={dy:l,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=V.runKernel(Oa,p,h);return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var l1=G({conv2DBackpropInput_:R_});function $_(e,t,n,s,r,a){let o=F(e,"x","conv2dTranspose"),i=F(t,"filter","conv2dTranspose");return l1(n,o,i,s,r,"NHWC",a)}var u1=G({conv2dTranspose_:$_});function __(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=F(e,"x","conv3d"),i=F(t,"filter","conv3d"),l=o,c=!1;o.rank===4&&(c=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),O(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),O(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),O(_r(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),O(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let u={x:l,filter:i},d={strides:n,pad:s,dataFormat:r,dilations:a},p=V.runKernel(ud,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var c1=G({conv3d_:__});function D_(e,t,n,s,r){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],c=o.shape[4];O(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),O(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),O(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),O(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),O(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let u={dy:o,filter:n},d={pad:r,strides:s,inputShape:a},p=V.runKernel(_h,u,d);return i?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Cv=G({conv3DBackpropInput_:D_});function F_(e,t,n,s,r){let a=F(e,"x","conv3dTranspose"),o=F(t,"filter","conv3dTranspose");return Cv(n,a,o,s,r)}var Tv=G({conv3dTranspose_:F_});function P_(e){let n={x:F(e,"x","cos","float32")};return V.runKernel(Ma,n)}var bf=G({cos_:P_});function O_(e){let n={x:F(e,"x","cosh","float32")};return V.runKernel(za,n)}var d1=G({cosh_:O_});function M_(e,t=0,n=!1,s=!1){let a={x:F(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return V.runKernel(hi,a,o)}var p1=G({cumsum_:M_});function z_(e,t,n,s=!1){let r=F(e,"x","denseBincount"),a=F(t,"weights","denseBincount");O(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),O(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return V.runKernel(Dh,o,i)}var Nv=G({denseBincount_:z_});function L_(e,t,n="NHWC"){let s=F(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];O(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),O(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),O(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},l={blockSize:t,dataFormat:n};return V.runKernel(mi,i,l)}var Ev=G({depthToSpace_:L_});function B_(e,t,n,s,r="NHWC",a=[1,1],o){let i=F(e,"x","depthwiseConv2d","float32"),l=F(t,"filter","depthwiseConv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),O(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),O(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),O(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),o!=null&&O(gn(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);let d={x:c,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},h=V.runKernel(La,d,p);return u?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Pd=G({depthwiseConv2d_:B_});function W_(e){let n={x:F(e,"x","diag")};return V.runKernel(Oh,n)}var V_=G({diag_:W_});function U_(e,t,n,s,r=[1,1],a="NHWC"){let o=F(e,"x","dilation2d"),i=F(t,"filter","dilation2d");O(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),O(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),O(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,c=!1;o.rank===3&&(l=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);let u={x:l,filter:i},d={strides:n,pad:s,dilations:r},p=V.runKernel(cd,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Rv=G({dilation2d_:U_});function G_(e,t){let n=F(e,"a","equal","string_or_numeric"),s=F(t,"b","equal","string_or_numeric");[n,s]=Pt(n,s),yt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(gi,r)}var Ps=G({equal_:G_});function H_(e,t,n){let s=F(t,"a","where"),r=F(n,"b","where"),a=F(e,"condition","where","bool"),o=yt(yt(a.shape,s.shape),r.shape),i=Fd(a,o),l=Fd(s,o),c=Fd(r,o),u={condition:i,t:l,e:c};return V.runKernel(Li,u)}var Vn=G({where_:H_});function j_(e){let n={x:F(e,"x","zerosLike")};return V.runKernel(Ki,n)}var st=G({zerosLike_:j_});function q_(e,t){let n=F(e,"a","div"),s=F(t,"b","div");[n,s]=Pt(n,s);let r=de(n,s),a=st(r),o=Ps(s,a);return Vn(o,a,r)}var $v=G({divNoNan_:q_});function X_(e,t){let n=F(e,"t1","dot"),s=F(t,"t2","dot");O((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(O(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=H(n,[1,-1]),i=H(s,[-1,1]),l=qe(o,i);return H(l,[])}else if(n.rank===1&&s.rank===2){let o=H(n,[1,-1]),i=H(s,[s.shape[0],s.shape[1]]),l=qe(o,i);return H(l,[l.size])}else if(n.rank===2&&s.rank===1){let o=H(s,[-1,1]),i=qe(n,o);return H(i,[i.size])}else{let o=H(s,[s.shape[0],s.shape[1]]);return qe(n,o)}}var K_=G({dot_:X_});function Z_(e,...t){let n=t.map((r,a)=>F(r,`tensors${a}`,"einsum")),s={equation:e};return V.runKernel(dd,n,s)}var _v=G({einsum_:Z_});function Y_(e){let n={x:F(e,"x","elu","float32")};return V.runKernel(Wa,n)}var Od=G({elu_:Y_});function J_(e){let t=F(e,"x","erf");O(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ge(t,"float32"));let n={x:t};return V.runKernel(fu,n)}var Dv=G({erf_:J_});function Q_(e){let n={x:F(e,"x","exp")};return V.runKernel(Va,n)}var Os=G({exp_:Q_});function eD(e,t=0){let n=F(e,"x","expandDims","string_or_numeric");O(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return V.runKernel(Ai,s,r)}var Zt=G({expandDims_:eD});function tD(e){let n={x:F(e,"x","expm1")};return V.runKernel(yi,n)}var Fv=G({expm1_:tD});function nD(e,t){let n=F(e,"x","tile","string_or_numeric");O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return V.runKernel(Zr,s,r)}var er=G({tile_:nD});function sD(e,t,n,s="float32"){t==null&&(t=e);let r=ze([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=H(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return er(Zt(o,0),[n[0],1,1]);if(n.length===2)return er(Zt(Zt(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return er(Zt(Zt(Zt(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var h1=G({eye_:sD});function Lu(e,t,n){let s={shape:e,value:t,dtype:n};return V.runKernel(mu,{},s)}function rD(e){let n={x:F(e,"x","floor","float32")};return V.runKernel(Ua,n)}var Md=G({floor_:rD});function aD(e,t,n=0,s=0){let r=F(e,"x","gather"),a=F(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return V.runKernel(bi,o,i)}var Bu=G({gather_:aD});function oD(e,t){let n=F(e,"a","greater","string_or_numeric"),s=F(t,"b","greater","string_or_numeric");[n,s]=Pt(n,s),yt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(wi,r)}var bs=G({greater_:oD});function iD(e,t){let n=F(e,"a","greaterEqual","string_or_numeric"),s=F(t,"b","greaterEqual","string_or_numeric");[n,s]=Pt(n,s),yt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(ja,r)}var il=G({greaterEqual_:iD});function lD(e){let n={input:F(e,"input","imag")};return V.runKernel(pd,n)}var vf=G({imag_:lD});function uD(e){let n={x:F(e,"x","isFinite")};return V.runKernel(gu,n)}var cD=G({isFinite_:uD});function dD(e){let n={x:F(e,"x","isInf")};return V.runKernel(Au,n)}var pD=G({isInf_:dD});function hD(e){let n={x:F(e,"x","isNaN")};return V.runKernel(yu,n)}var Pv=G({isNaN_:hD});function fD(e,t=.2){let s={x:F(e,"x","leakyRelu")},r={alpha:t};return V.runKernel(ki,s,r)}var wf=G({leakyRelu_:fD});function mD(e,t){let n=F(e,"a","less","string_or_numeric"),s=F(t,"b","less","string_or_numeric");[n,s]=Pt(n,s),yt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ii,r)}var f1=G({less_:mD});function gD(e,t){let n=F(e,"a","lessEqual","string_or_numeric"),s=F(t,"b","lessEqual","string_or_numeric");[n,s]=Pt(n,s),yt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Si,r)}var ll=G({lessEqual_:gD});function Ov(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return V.runKernel(Vh,{},s)}function AD(e,t=5,n=1,s=1,r=.5){let a=F(e,"x","localResponseNormalization");O(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),O(gn(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=H(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},c={depthRadius:t,bias:n,alpha:s,beta:r},u=V.runKernel(fd,l,c);return i?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Mv=G({localResponseNormalization_:AD});function yD(e){let n={x:F(e,"x","log","float32")};return V.runKernel(Xa,n)}var Ms=G({log_:yD});function xD(e){let n={x:F(e,"x","log1p")};return V.runKernel(xu,n)}var kf=G({log1p_:xD});function bD(e){return O(Na(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=F(t,"x","tf.grad","string_or_numeric"),r=n!=null?F(n,"dy","tf.grad"):null;return V.tidy(()=>{let{value:a,grads:o}=V.gradients(()=>e(s),[s],r);return r!=null&&Mn(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),If(o),o[0]})}}function vD(e){return O(Na(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{O(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=Rd(t,"args","tf.grads","string_or_numeric"),r=n!=null?F(n,"dy","tf.grads"):null;return V.tidy(()=>{let{value:a,grads:o}=V.gradients(()=>e(...s),s,r);return r!=null&&Mn(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),If(o),o})}}function wD(e){return O(Na(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{O(t instanceof tt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),O(n==null||n instanceof tt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=V.gradients(()=>e(t),[t],n);return If(s),{grad:s[0],value:r}}}function kD(e){return O(Na(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{O(Array.isArray(t)&&t.every(r=>r instanceof tt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),O(n==null||n instanceof tt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=V.gradients(()=>e(...t),t,n);return n!=null&&Mn(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),If(s.grads),s}}function zv(e,t){O(Na(e),()=>"The f passed in variableGrads(f) must be a function"),O(t==null||Array.isArray(t)&&t.every(c=>c instanceof Nd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in V.registeredVariables)t.push(V.registeredVariables[c])}let s=n?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),O(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=V.gradients(e,t,null,a);O(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((c,u)=>{i[u]!=null&&(l[c.name]=i[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Dr(e){return V.customGrad(e)}function If(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function ID(e){let n={x:F(e,"x","neg")};return V.runKernel(Ti,n)}var Mt=G({neg_:ID});function SD(e){let n={x:F(e,"x","softplus")};return V.runKernel(Nu,n)}var Wu=G({softplus_:SD});function CD(e){let t=F(e,"x","logSigmoid");return Dr(s=>({value:Mt(Wu(Mt(s))),gradFunc:o=>L(o,Wn(Mt(s)))}))(t)}var TD=G({logSigmoid_:CD});function ND(e,t=null,n=!1){let r={x:F(e,"x","max")},a={reductionIndices:t,keepDims:n};return V.runKernel(Ka,r,a)}var xn=G({max_:ND});function ED(e,t){let n=F(e,"a","sub"),s=F(t,"b","sub");[n,s]=Pt(n,s);let r={a:n,b:s};return V.runKernel(Ao,r)}var pe=G({sub_:ED});function RD(e,t=null,n=!1){let s=F(e,"x","sum");s.dtype==="bool"&&(s=ge(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return V.runKernel(fo,r,a)}var we=G({sum_:RD});function $D(e,t=-1){let n=F(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Dr((r,a)=>{let o=!0,i=xn(r,t,!0),l=pe(r,i),c=pe(ge(l,"float32"),Ms(we(Os(l),t,o)));return a([c]),{value:c,gradFunc:(d,p)=>{let[h]=p,f=!0,m=Os(h);return pe(d,L(we(d,t,f),m))}}})(n)}var m1=G({logSoftmax_:$D});function g1(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Lv(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function Bv(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function ul(e,t){let n=t.map(s=>1);return Lv(e,n,t)}function _D(e,t,n){O(g1(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Wv(e,t){if(g1(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function A1(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function DD(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function FD(e,t=null,n=!1){let s=F(e,"x","logSumExp"),r=Js(t,s.shape),a=xn(s,r,!0),o=pe(s,a),i=Os(o),l=we(i,r),c=Ms(l),u=le(H(a,c.shape),c);if(n){let d=ul(u.shape,r);return H(u,d)}return u}var Vv=G({logSumExp_:FD});function PD(e,t){let n=F(e,"a","logicalAnd","bool"),s=F(t,"b","logicalAnd","bool");yt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ci,r)}var mr=G({logicalAnd_:PD});function OD(e){let n={x:F(e,"x","logicalNot","bool")};return V.runKernel(bu,n)}var Sf=G({logicalNot_:OD});function MD(e,t){let n=F(e,"a","logicalOr","bool"),s=F(t,"b","logicalOr","bool");yt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(hd,r)}var y1=G({logicalOr_:MD});function zD(e,t){let n=F(e,"a","logicalXor","bool"),s=F(t,"b","logicalXor","bool");return yt(n.shape,s.shape),mr(y1(e,t),Sf(mr(e,t)))}var LD=G({logicalXor_:zD});function BD(e,t,n,s,r){let a=F(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),O(_r(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),r!=null&&O(gn(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=V.runKernel(Ya,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Cf=G({maxPool_:BD});function WD(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=F(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),O(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),r!=null&&O(gn(s),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=V.runKernel(md,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var x1=G({maxPool3d_:WD});function VD(e,t,n,s,r=!1){let o={x:F(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},l=V.runKernel(jh,o,i);return{result:l[0],indexes:l[1]}}var Uv=G({maxPoolWithArgmax_:VD});function UD(e,t){let n=F(e,"a","maximum"),s=F(t,"b","maximum");[n,s]=Pt(n,s),n.dtype==="bool"&&(n=ge(n,"int32"),s=ge(s,"int32")),yt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Za,r)}var Qr=G({maximum_:UD});function GD(e,t=null,n=!1){let r={x:F(e,"x","mean")},a={axis:t,keepDims:n};return V.runKernel(Ja,r,a)}var Vt=G({mean_:GD});function Ht(e,t="float32"){if(t==="complex64"){let s=Ht(e,"float32"),r=Ht(e,"float32");return Co(s,r)}let n=Sh(Gt(e),t);return V.makeTensor(n,e,t)}function vs(e,t="float32"){if(t==="complex64"){let s=vs(e,"float32"),r=Ht(e,"float32");return Co(s,r)}let n=f2(Gt(e),t);return V.makeTensor(n,e,t)}function HD(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=F(e,"x","meshgrid",e instanceof tt?e.dtype:"float32");if(t===void 0)return[s];let r=F(t,"y","meshgrid",t instanceof tt?t.dtype:"float32"),a=Gt(s.shape),o=Gt(r.shape);return n==="xy"?(s=H(s,[1,-1]),r=H(r,[-1,1]),[qe(vs([o,1],s.dtype),s),qe(r,vs([1,a],r.dtype))]):(s=H(s,[-1,1]),r=H(r,[1,-1]),[qe(s,vs([1,o],s.dtype)),qe(vs([a,1],r.dtype),r)])}function jD(e,t=null,n=!1){let r={x:F(e,"x","min")},a={axis:t,keepDims:n};return V.runKernel(Qa,r,a)}var _o=G({min_:jD});function qD(e,t){let n=F(e,"a","minimum"),s=F(t,"b","minimum");[n,s]=Pt(n,s),n.dtype==="bool"&&(n=ge(n,"int32"),s=ge(s,"int32")),yt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(eo,r)}var zd=G({minimum_:qD});function XD(e,t,n){O(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=F(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)O(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),O(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return V.runKernel(to,o,a)}var Gv=G({mirrorPad_:XD});function KD(e,t){let n=F(e,"a","mod"),s=F(t,"b","mod");[n,s]=Pt(n,s);let r={a:n,b:s};return V.runKernel(vu,r)}var Ld=G({mod_:KD});function ZD(e){let t=F(e,"x","square"),n={};return V.runKernel("Square",{x:t},n)}var xt=G({square_:ZD});function YD(e,t=null,n=!1){e=F(e,"x","moments");let s=Js(t,e.shape),r=Vt(e,s,n),a=r.shape;n||(a=ul(r.shape,s));let o=xt(pe(ge(e,"float32"),H(r,a))),i=Vt(o,s,n);return{mean:r,variance:i}}var Tf=G({moments_:YD});function JD(e,t,n,s){let r=F(t,"data","multiRNNCell"),a=Rd(n,"c","multiRNNCell"),o=Rd(s,"h","multiRNNCell"),i=r,l=[];for(let d=0;d<e.length;d++){let p=e[d](i,a[d],o[d]);l.push(p[0]),l.push(p[1]),i=p[1]}let c=[],u=[];for(let d=0;d<l.length;d+=2)c.push(l[d]),u.push(l[d+1]);return[c,u]}var QD=G({multiRNNCell_:JD});function eF(e,t,n,s=!1){let r=F(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?H(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:s},u=V.runKernel(qh,l,c);return o===1?H(u,[u.size]):u}var Hv=G({multinomial_:eF});function tF(e,t){let n=F(e,"a","notEqual","string_or_numeric"),s=F(t,"b","notEqual","string_or_numeric");[n,s]=Pt(n,s),yt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ni,r)}var Vu=G({notEqual_:tF});function nF(e){let n={x:F(e,"x","onesLike")};return V.runKernel($i,n)}var zs=G({onesLike_:nF});function sF(e,t){let n=F(e,"v1","outerProduct"),s=F(t,"v2","outerProduct");O(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=H(n,[-1,1]),a=H(s,[1,-1]);return qe(r,a)}var rF=G({outerProduct_:sF});function aF(e,t,n=0){let s=F(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return V.runKernel(so,a,r)}var tr=G({pad_:aF});function oF(e,t,n=0){return O(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),tr(e,[t],n)}var iF=G({pad1d_:oF});function lF(e,t,n=0){return O(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),tr(e,t,n)}var uF=G({pad2d_:lF});function cF(e,t,n=0){return O(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),tr(e,t,n)}var dF=G({pad3d_:cF});function pF(e,t,n=0){return O(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),tr(e,t,n)}var hF=G({pad4d_:pF});function fF(e,t,n){let s=F(e,"x","spaceToBatchND");O(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),O(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),O(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]==0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return V.runKernel(Vi,r,a)}var Nf=G({spaceToBatchND_:fF});function mF(e,t,n,s,r,a){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let o=F(e,"x","maxPool"),i=o,l=!1;o.rank===3&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(_r(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=mv(i.shape,t,a,r,s),u=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=AF([c.filterHeight,c.filterWidth],u):d=[[0,0],[0,0]];let p=u[0]===1&&u[1]===1,[h,f]=gF([c.inHeight,c.inWidth],u,d),m=p?s:"valid",g=p?i:Nf(i,u,h),x=(n==="avg"?()=>yf(g,t,a,m):()=>Cf(g,t,a,m))(),y=p?x:xf(x,u,f);return l?H(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function gF(e,t,n){let s=n.map(u=>u[0]),r=n.map(u=>u[1]),a=e.concat(s,r),o=t.map((u,d)=>(u-a[d]%u)%u),i=r.map((u,d)=>u+o[d]),l=t.map((u,d)=>[s[d],i[d]]),c=t.map((u,d)=>[0,o[d]]);return[l,c]}function AF(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var yF=G({pool_:mF});function xF(e,t){let n=F(e,"base","pow"),s=F(t,"exp","pow");[n,s]=Pt(n,s);let r={a:n,b:s};return V.runKernel(ro,r)}var Do=G({pow_:xF});function bF(e,t){let n=F(e,"x","prelu"),s=F(t,"alpha","prelu"),r={x:n,alpha:s};return V.runKernel(ao,r)}var Ef=G({prelu_:bF});function vF(e,t=null,n=!1){let s=F(e,"x","prod");s.dtype==="bool"&&(s=ge(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return V.runKernel(Fi,r,a)}var b1=G({prod_:vF});function wF(e,t,n){let s=Gt(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return V.makeTensor(r,e,n)}var kF=G({rand_:wF}),v1=ii(bh()),w1=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=v1.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},IF=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=v1.alea(r.toString()),this.randn=new w1(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},SF=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=v1.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function CF(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new IF(t,n,s,r),o=ze(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var TF=G({randomGamma_:CF});function NF(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new w1(t,n,s,!1,r),o=ze(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var jv=G({randomNormal_:NF});function EF(e,t=0,n=1,s="float32",r){let a=ze(e,s),o=new SF(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var Uu=G({randomUniform_:EF});function Gu(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return V.runKernel(ku,{},r)}function RF(e){let n={input:F(e,"input","real")};return V.runKernel(gd,n)}var Bd=G({real_:RF});function $F(e){let n={x:F(e,"x","reciprocal")};return V.runKernel(Iu,n)}var qv=G({reciprocal_:$F});function _F(e){let n={x:F(e,"x","relu")};return V.runKernel(oo,n)}var Fr=G({relu_:_F});function DF(e){let n={x:F(e,"x","relu6")};return V.runKernel(lo,n)}var k1=G({relu6_:DF});function FF(e,t){let s={x:F(e,"x","reverse")},r={dims:t};return V.runKernel(Oi,s,r)}var Ls=G({reverse_:FF});function PF(e){let t=F(e,"x","reverse");return O(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Ls(t,0)}var OF=G({reverse1d_:PF});function MF(e,t){let n=F(e,"x","reverse");return O(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Ls(n,t)}var zF=G({reverse2d_:MF});function LF(e,t){let n=F(e,"x","reverse");return O(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Ls(n,t)}var BF=G({reverse3d_:LF});function WF(e,t){let n=F(e,"x","reverse");return O(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Ls(n,t)}var VF=G({reverse4d_:WF});function UF(e){let n={x:F(e,"x","round")};return V.runKernel(Mi,n)}var I1=G({round_:UF});function GF(e){let n={x:F(e,"x","rsqrt","float32")};return V.runKernel(uo,n)}var S1=G({rsqrt_:GF});function Ce(e,t){if((_n(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&_n(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return To(e,[],[],t)}function HF(e){let n={x:F(e,"x","selu")};return V.runKernel(Cu,n)}var C1=G({selu_:HF});function jF(e,t,n,s,r,a=[1,1],o="NHWC"){let i=F(e,"x","separableConv2d"),l=F(t,"depthwiseFilter","separableConv2d"),c=F(n,"pointwiseFilter","separableConv2d"),u=i,d=!1;if(i.rank===3&&(d=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),O(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),O(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),O(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let p=l.shape[2],h=l.shape[3];O(c.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`);let f=Pd(u,l,s,r,o,a),g=$o(f,c,1,"valid",o);return d?H(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Xv=G({separableConv2d_:jF});async function qF(e,t){let n=F(e,"x","setdiff1d"),s=F(t,"y","setdiff1d");O(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),O(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),O(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),o=new Set(a),i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;let l=new an([i],n.dtype),c=new an([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(l.values[d]=r[u],c.values[d]=u,d++);return[l.toTensor(),c.toTensor()]}var Kv=qF;function XF(e){let n={x:F(e,"x","sign")};return V.runKernel(Tu,n)}var Zv=G({sign_:XF});function KF(e){let n={x:F(e,"x","sin","float32")};return V.runKernel(co,n)}var T1=G({sin_:KF});function ZF(e){let n={x:F(e,"x","sinh")};return V.runKernel(Wi,n)}var N1=G({sinh_:ZF});function YF(e,t,n){let s=F(e,"x","slice1d");return O(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),De(s,[t],[n])}var Rf=G({slice1d_:YF});function JF(e,t,n){let s=F(e,"x","slice2d");return O(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),De(s,t,n)}var E1=G({slice2d_:JF});function QF(e,t,n){let s=F(e,"x","slice3d");return O(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),De(s,t,n)}var cl=G({slice3d_:QF});function eP(e,t,n){let s=F(e,"x","slice4d");return O(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),De(s,t,n)}var dl=G({slice4d_:eP});function tP(e,t=-1){let n=F(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return V.runKernel(mo,s,r)}var Hu=G({softmax_:tP});function nP(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return V.runKernel(Bh,t)}var $f=G({fft_:nP});function sP(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return V.runKernel(Wh,t)}var Wd=G({ifft_:sP});function rP(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=H(e,[n,t]);s=Wd(r)}else{let r=[n,2*(t-1)],a=H(Bd(e),[n,t]),o=H(vf(e),[n,t]),i=Ls(De(a,[0,1],[n,t-2]),1),l=L(Ls(De(o,[0,1],[n,t-2]),1),Ce(-1)),c=It([a,i],1),u=It([o,l],1),d=H(Co(c,u),[r[0],r[1]]);s=Wd(d)}if(s=Bd(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=H(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var R1=G({irfft_:rP});function aP(e,t,n=0){let r={x:F(e,"x","split")},a={numOrSizeSplits:t,axis:n};return V.runKernel(Ui,r,a)}var jt=G({split_:aP});function oP(e,t){O(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=De(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=It([e,Ht(f)],e.shape.length-1),n=t}else r=e;let a=st(r),o=H(Co(r,a),[s,n]),i=$f(o),l=Math.floor(n/2)+1,c=Bd(i),u=vf(i),d=jt(c,[l,n-l],c.shape.length-1),p=jt(u,[l,n-l],u.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,H(Co(d[0],p[0]),h)}var _f=G({rfft_:oP});function iP(e){let n={x:F(e,"x","sqrt","float32")};return V.runKernel(ho,n)}var Dn=G({sqrt_:iP});function lP(e,t){let n=F(e,"a","squaredDifference"),s=F(t,"b","squaredDifference");[n,s]=Pt(n,s),yt(n.shape,s.shape);let r={a:n,b:s},a={};return V.runKernel(go,r,a)}var $1=G({squaredDifference_:lP});function uP(e,t){let n=F(e,"x","squeeze");return H(n,j5(n.shape,t).newShape)}var Ge=G({squeeze_:uP});function cP(e,t=0){let n=Rd(e,"tensors","stack","string_or_numeric");O(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&O(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return V.runKernel(Di,s,r)}var Yt=G({stack_:cP});function dP(e,t=0){let s={x:F(e,"x","step")},r={alpha:t};return V.runKernel(bo,s,r)}var Vd=G({step_:dP});function pP(e,t,n,s,r=0,a=0,o=0,i=0,l=0){let u={x:F(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return V.runKernel(Gi,u,d)}var Yv=G({stridedSlice_:pP});function hP(e){let n={x:F(e,"x","tan","float32")};return V.runKernel(Hi,n)}var Jv=G({tan_:hP});function St(e,t){li(e);let n=Rr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return To(e,null,n,t)}function gr(e,t,n){if(li(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Rr(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return To(e,t,s,n)}function fP(e,t,n){if(li(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Rr(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return To(e,t,s,n)}function mP(e,t,n){if(li(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Rr(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return To(e,t,s,n)}function gP(e,t,n){if(li(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Rr(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,To(e,t,s,n)}function AP(e,t=1,n=!0){let s=F(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,l]=V.runKernel(ji,a,o);return{values:i,indices:l}}var Qv=G({topk_:AP});function yP(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new w1(t,n,s,!0,r),o=ze(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var Df=G({truncatedNormal_:yP});function xP(e,t=0){let n=F(e,"x","unique","string_or_numeric");O(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=V.runKernel(nf,s,r);return{values:a,indices:o}}var _1=G({unique_:xP});function bP(e,t,n){let s=F(e,"x","unsortedSegmentSum"),r=F(t,"segmentIds","unsortedSegmentSum","int32");O(gn(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return V.runKernel(xd,a,o)}var ew=G({unsortedSegmentSum_:bP});function vP(e,t=0){let n=F(e,"x","unstack","string_or_numeric");O(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return V.runKernel(Xi,s,r)}var ls=G({unstack_:vP});function tw(e,t=!0,n,s){return V.makeVariable(e,t,n,s)}function nw(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=ze(e,"int32"),r=ze([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}async function wP(e){let t=F(e,"condition","whereAsync","bool"),n=await t.data(),s=nw(t.shape,n);return e!==t&&t.dispose(),s}var D1=wP;async function kP(e,t,n){let s=F(e,"tensor","boolMask"),r=F(t,"mask","boolMask","bool"),a=n==null?0:n,o=r.rank,i=s.shape;O(o>0,()=>"mask cannot be scalar"),Mn(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let c=i.slice(0,a).concat([l],i.slice(a+o)),u=H(s,c),d=H(r,[-1]),p=await D1(d),h=Ge(p,[1]),f=Bu(u,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),u.dispose(),d.dispose(),p.dispose(),f}var IP=kP;function SP(e,t="euclidean",n=null,s=!1){e=F(e,"x","norm");let r=sw(e,t,n),a=r.shape;if(s){let o=Js(n,e.shape);a=ul(r.shape,o)}return H(r,a)}function sw(e,t,n=null){if(e.rank===0)return on(e);if(e.rank!==1&&n===null)return sw(H(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return we(on(e),n);if(t===1/0)return xn(on(e),n);if(t===-1/0)return _o(on(e),n);if(t==="euclidean"||t===2)return Dn(we(Do(on(e),Ce(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return xn(we(on(e),n[0]),n[1]-1);if(t===1/0)return xn(we(on(e),n[1]),n[0]);if(t===-1/0)return _o(we(on(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Dn(we(xt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var F1=G({norm_:SP});function CP(e,t,n,s,r=!0){let a=F(e,"v","movingAverage"),o=F(t,"x","movingAverage"),i=F(n,"decay","movingAverage");h3(a,o),O(Ca(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Ce(1),c=pe(l,i),u=L(pe(o,a),c);if(r){O(s!=null,()=>"When using zeroDebias: true, step is required.");let d=F(s,"step","movingAverage");u=de(u,pe(l,Do(i,d)))}return le(a,u)}var TP=G({movingAverage_:CP});function NP(e,t,n){let s=F(e,"indices","scatterND","int32"),r=F(t,"updates","scatterND");K2(r,s,n);let a={indices:s,updates:r},o={shape:n};return V.runKernel(zi,a,o)}var rw=G({scatterND_:NP});function EP(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function RP(e,t,n,s=0){let r=F(e,"sparseIndices","sparseToDense","int32"),a=F(t,"sparseValues","sparseToDense"),o=F(s,"defaultValue","sparseToDense",a.dtype);EP(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},l={outputShape:n};return V.runKernel(Ad,i,l)}var P1=G({sparseToDense_:RP});function $P(e,t){let n=F(t,"indices","gatherND","int32"),r={params:F(e,"x","gatherND","string_or_numeric"),indices:n};return V.runKernel(vi,r)}var aw=G({gatherND_:$P});function _P(e,t){if(t==null)return e.shape.slice();if(Ca(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function DP(e,t,n,s){let r=F(e,"x","dropout");if(O(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),O(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof tt?r.clone():r;let a=_P(r,n),o=1-t,i=de(Md(le(Uu(a,0,1,"float32",s),o)),o);return L(r,i)}var ow=G({dropout_:DP});function iw(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function O1(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return St(r,"float32")}async function FP(e,t,n=1){let s=F(e,"predictions","inTopK"),r=F(t,"targets","inTopK");O(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),O(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Mn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];O(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await s.data(),i=await r.data(),[l,c]=[o.length/a,a],u=q5("bool",l);for(let d=0;d<l;d++){let p=d*c,h=o.subarray(p,p+c),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),u[d]=0;for(let m=0;m<n;m++)if(f[m].index===i[d]){u[d]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),pt(u,r.shape,"bool")}var PP=FP,Fo={};Me(Fo,{conv2d:()=>zP,depthwiseConv2d:()=>VP,matMul:()=>GP});function OP(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),O(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),O(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=a==="NHWC"?i.shape[3]:i.shape[1],u=a==="NHWC"?l.shape[3]:l.shape[1];O(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),O(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),o!=null&&O(gn(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let d={x:i,dy:l},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return V.runKernel(Rh,d,p)}var M1=G({conv2DBackpropFilter_:OP});function Ff(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return L(e,Vd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Pf(e,t){let n=t,s=Kt(e.shape,t.shape);return s.length>0&&(n=we(n,s)),H(n,e.shape)}function Of(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Fr(e);if(t==="elu")return Od(e);if(t==="relu6")return k1(e);if(t==="prelu")return Ef(e,n);if(t==="leakyrelu")return wf(e,s);if(t==="sigmoid")return Wn(e);throw new Error(`Unknown fused activation ${t}.`)}var Mf=(e,t)=>!(e>0)||t==="linear";function MP({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Mf(V.state.gradientDepth,l)===!1){let w=$o(e,t,n,s,r,a,o);return i!=null&&(w=le(w,i)),Of(w,l,c,u)}let d=F(e,"x","conv2d","float32"),p=F(t,"filter","conv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),O(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),O(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),o!=null&&O(gn(s),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`),O(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),O(_r(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),O(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=Dd(h.shape,p.shape,n,a,s,o),g;i!=null&&(g=F(i,"bias","fused conv2d"),[g]=Pt(g,d),yt(m.outShape,g.shape));let A;c!=null&&(A=F(c,"prelu weights","fused conv2d"));let x=(w,k)=>{let[S,N,R,M]=k,D=Ff(w,R,l);O(Ro(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let $=l1(N.shape,D,S,n,s),T=M1(N,D,S.shape,n,s),P=[$,T];if(M!=null){let W=Pf(M,D);P.push(W)}return P},y={x:h,filter:p,bias:g,preluActivationWeights:A},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?Dr((k,S,N)=>{let R=V.runKernel(wo,y,b);return N([S,k,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p):Dr((k,S,N,R)=>{let M=V.runKernel(wo,y,b);return R([S,k,M,N]),f&&(M=H(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:x}})(h,p,g)}var zP=G({fusedConv2d_:MP});function LP(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:i,dy:l},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return V.runKernel(Fh,c,u)}var lw=G({depthwiseConv2dNativeBackpropFilter_:LP});function BP(e,t,n,s,r,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:i,filter:n},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},d=V.runKernel(Ph,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var uw=G({depthwiseConv2dNativeBackpropInput_:BP});function WP({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(Mf(V.state.gradientDepth,l)===!1){let w=Pd(e,t,n,s,r,a,o);return i!=null&&(w=le(w,i)),Of(w,l,c,u)}let d=F(e,"x","depthwiseConv2d","float32"),p=F(t,"filter","depthwiseConv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),O(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),O(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),O(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),O(_r(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),o!=null&&O(gn(s),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${s}.`);let m=Dd(h.shape,p.shape,n,a,s,o,!0),g;i!=null&&(g=F(i,"bias","fused conv2d"),[g]=Pt(g,d),yt(m.outShape,g.shape));let A;c!=null&&(A=F(c,"prelu weights","fused depthwiseConv2d"));let x=(w,k)=>{O(Ro(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[S,N,R,M]=k,D=Ff(w,R,l),$=uw(N.shape,D,S,n,s,a,o),T=lw(N,D,S.shape,n,s,a,o);if(M!=null){let P=Pf(g,D);return[$,T,P]}return[$,T]},y={x:h,filter:p,bias:g,preluActivationWeights:A},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?Dr((k,S,N)=>{let R=V.runKernel(ko,y,b);return N([S,k,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p):Dr((k,S,N,R)=>{let M=V.runKernel(ko,y,b);return R([S,k,M,N]),f&&(M=H(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:x}})(h,p,g)}var VP=G({fusedDepthwiseConv2d_:WP});function UP({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(Mf(V.state.gradientDepth,a)===!1){let D=qe(e,t,n,s);return r!=null&&(D=le(D,r)),Of(D,a,o,i)}let l=F(e,"a","fused matMul"),c=F(t,"b","fused matMul");[l,c]=Pt(l,c);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=Gt(f),A=Gt(m);O(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`);let y=yt(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,h]),b=n?H(l,[g,u,p]):H(l,[g,p,u]),w=s?H(c,[A,h,d]):H(c,[A,d,h]),k;r!=null&&(k=F(r,"bias","fused matMul"),[k]=Pt(k,l),yt(y,k.shape));let S;o!=null&&(S=F(o,"prelu weights","fused matMul"));let N=(D,$)=>{let[T,P,W,K]=$,z=Ff(H(D,W.shape),W,a),j,Z;if(!n&&!s?(j=qe(z,P,!1,!0),Z=qe(T,z,!0,!1)):!n&&s?(j=qe(z,P,!1,!1),Z=qe(z,T,!0,!1)):n&&!s?(j=qe(P,z,!1,!0),Z=qe(T,z,!1,!1)):(j=qe(P,z,!0,!0),Z=qe(z,T,!0,!0)),r!=null){let Q=Pf(K,z);return[j,Z,Q]}else return[j,Z]},R={a:b,b:w,bias:k,preluActivationWeights:S},M={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?Dr(($,T,P)=>{let W=V.runKernel(vo,R,M);return P([$,T,W]),{value:H(W,y),gradFunc:N}})(b,w):Dr(($,T,P,W)=>{let K=V.runKernel(vo,R,M);return W([$,T,K,P]),{value:H(K,y),gradFunc:N}})(b,w,k)}var GP=G({fusedMatMul_:UP});function HP(e){return O1(e,.54,.46)}var jP=G({hammingWindow_:HP});function qP(e){return O1(e,.5,.5)}var cw=G({hannWindow_:qP});function XP(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(De(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,l=It([De(e,a,t-i),Lu([i],r)]);o.push(l),a+=n}return o.length===0?gr([],[0,t]):H(It(o),[o.length,t])}var dw=G({frame_:XP});function KP(e,t,n,s,r=cw){s==null&&(s=iw(t));let a=dw(e,t,n),o=L(a,r(t));return _f(o,s)}var ZP=G({stft_:KP});function YP(e,t,n,s,r="bilinear",a=0){let o=F(e,"image","cropAndResize"),i=F(t,"boxes","cropAndResize","float32"),l=F(n,"boxInd","cropAndResize","int32"),c=i.shape[0];O(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),O(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),O(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),O(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),O(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),O(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let u={image:o,boxes:i,boxInd:l},d={method:r,extrapolationValue:a,cropSize:s};return V.runKernel(fi,u,d)}var JP=G({cropAndResize_:YP});function QP(e){let t=F(e,"image","flipLeftRight","float32");O(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return V.runKernel(xi,n,{})}var eO=G({flipLeftRight_:QP});function tO(e){let t=F(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];O(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,er(t,r)}var nO=G({grayscaleToRGB_:tO});function sO(e,t,n=0,s=.5){let r=F(e,"image","rotateWithOffset","float32");O(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return V.runKernel(Zi,a,o)}var rO=G({rotateWithOffset_:sO});function ju(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),O(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),O(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),O(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),O(t.rank===1,()=>"scores must be a 1D tensor"),O(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),O(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function aO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=F(e,"boxes","nonMaxSuppression","float32"),o=F(t,"scores","nonMaxSuppression","float32"),i=ju(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return V.runKernel(Ei,{boxes:a,scores:o},l)}var oO=G({nonMaxSuppression_:aO});function iO(e,t,n){let s=lO(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function lO(e,t,n){return cO(e,t,n||uO)}function uO(e,t){return e>t?1:e<t?-1:0}function cO(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function pw(e,t,n,s,r){return z1(e,t,n,s,r,0)}function hw(e,t,n,s,r,a){return z1(e,t,n,s,r,0,!1,a,!0)}function fw(e,t,n,s,r,a){return z1(e,t,n,s,r,a,!0)}function z1(e,t,n,s,r,a,o=!1,i=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(mw);let u=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&c.length>0;){let g=c.pop(),{score:A,boxIndex:x,suppressBeginIndex:y}=g;if(A<r)break;let b=!1;for(let w=d.length-1;w>=y;--w){let k=dO(e,x,d[w]);if(k>=s){b=!0;break}if(g.score=g.score*pO(s,u,k),g.score<=r)break}g.suppressBeginIndex=d.length,b||(g.score===A?(d.push(x),p.push(g.score)):g.score>r&&iO(c,g,mw))}let h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:d};return o&&(m.selectedScores=p),l&&(m.validOutputs=h),m}function dO(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(i-a)*(l-o),f=(d-c)*(p-u);if(h<=0||f<=0)return 0;let m=Math.max(a,c),g=Math.max(o,u),A=Math.min(i,d),x=Math.min(l,p),y=Math.max(A-m,0)*Math.max(x-g,0);return y/(h+f-y)}function pO(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function mw(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function hO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=F(e,"boxes","nonMaxSuppressionAsync"),o=F(t,"scores","nonMaxSuppressionAsync"),i=ju(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:d}=pw(c,u,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),St(d,"int32")}var fO=hO;function mO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=F(e,"boxes","nonMaxSuppression"),i=F(t,"scores","nonMaxSuppression"),l=ju(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},d=V.runKernel(Ri,c,u);return{selectedIndices:d[0],selectedScores:d[1]}}var gO=G({nonMaxSuppressionWithScore_:mO});async function AO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=F(e,"boxes","nonMaxSuppressionAsync"),i=F(t,"scores","nonMaxSuppressionAsync"),l=ju(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c=await Promise.all([o.data(),i.data()]),u=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=fw(u,d,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:St(p,"int32"),selectedScores:St(h)}}var yO=AO;function xO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=F(e,"boxes","nonMaxSuppression"),i=F(t,"scores","nonMaxSuppression"),l=ju(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,p={boxes:o,scores:i},h={maxOutputSize:c,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:a},f=V.runKernel(wu,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}var bO=G({nonMaxSuppressionPadded_:xO});async function vO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=F(e,"boxes","nonMaxSuppressionAsync"),i=F(t,"scores","nonMaxSuppressionAsync"),l=ju(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=hw(p,h,c,u,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:St(f,"int32"),validOutputs:Ce(m,"int32")}}var wO=vO;function kO(e,t,n=!1,s=!1){let r=F(e,"images","resizeBilinear");O(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=V.runKernel(io,i,l);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var IO=G({resizeBilinear_:kO});function SO(e,t,n=!1,s=!1){let r=F(e,"images","resizeNearestNeighbor");O(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),O(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=V.runKernel(Su,i,l);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var CO=G({resizeNearestNeighbor_:SO});function TO(e,t="binary",n=!1,s=.5){let r=F(e,"image","threshold"),a=.2989,o=.587,i=.114,l=r.shape[0]*r.shape[1],c=L(St([s]),255),u,d,p,h;if(O(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),O(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),O(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),O(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[u,d,p]=jt(r,[1,1,1],-1);let g=L(u,a),A=L(d,o),x=L(p,i);h=le(le(g,A),x)}else h=e;if(t==="otsu"){let g=o1(ge(I1(h),"int32"),pt([]),256);c=NO(g,l)}let f=n?ll(h,c):bs(h,c);return ge(L(f,255),"int32")}function NO(e,t){let n=St([-1]),s=St([0]),r=St([0]),a,o,i,l,c,u;for(let d=0;d<e.size-1;d++){a=De(e,0,d+1),o=De(e,d+1),c=de(we(a),t),u=de(we(o),t);let p=we(L(a,Gu(0,a.size)));i=de(p,we(a));let h=Lu(o.shape,a.size),f=le(Gu(0,o.size),h),m=L(o,f);l=de(we(m),we(o));let g=pe(i,l),A=pe(i,l),x=L(c,u);r=L(L(x,g),A);let y=bs(r,s);s=Vn(y,r,s),n=Vn(y,St([d]),n)}return n}var EO=G({threshold_:TO});function RO(e,t,n="nearest",s="constant",r=0,a){let o=F(e,"image","transform","float32"),i=F(t,"transforms","transform","float32");O(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),O(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},c={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return V.runKernel(qi,l,c)}var $O=G({transform_:RO});function _O(e,t,n){O(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=F(e,"a","bandPart");O(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=H(Gu(0,a,1,"int32"),[-1,1]),l=Gu(0,o,1,"int32"),c=pe(i,l),u=mr(ll(c,Ce(+t,"int32")),il(c,Ce(-n,"int32"))),d=Ht([a,o],s.dtype);return H(Yt(ls(H(s,[-1,a,o])).map(p=>Vn(u,p,d))),r)}var DO=G({bandPart_:_O});function FO(e){let t;if(Array.isArray(e)){t=!1,O(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)O(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=jt(e,e.shape[0],0).map(r=>Ge(r,[0]));O(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(V.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=L(we(L(n[o],a)),n[o]);a=pe(a,i)}return de(a,F1(a,"euclidean"))}));return t?Yt(n,0):n}var PO=G({gramSchmidt_:FO});function OO(e,t=!1){if(O(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return gw(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,c)=>l*c),s=ls(H(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(l=>{let[c,u]=gw(l,t);r.push(c),a.push(u)});let o=H(Yt(r,0),e.shape),i=H(Yt(a,0),e.shape);return[o,i]}}function gw(e,t=!1){return V.tidy(()=>{O(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=h1(n),a=Bn(e),o=gr([[1]],[1,1]),i=Bn(o),l=n>=s?s:n;for(let c=0;c<l;++c){let u=a,d=i,p=r;[i,a,r]=V.tidy(()=>{let h=De(a,[c,c],[n-c,1]),f=F1(h),m=De(a,[c,c],[1,1]),g=Vn(bs(m,0),gr([[-1]]),gr([[1]])),A=pe(m,L(g,f)),x=de(h,A);x.shape[0]===1?i=Bn(o):i=It([o,De(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let y=Mt(de(qe(g,A),f)),b=De(a,[c,0],[n-c,s]),w=L(y,i),k=nt(i);if(c===0)a=pe(b,qe(w,qe(k,b)));else{let R=pe(b,qe(w,qe(k,b)));a=It([De(a,[0,0],[c,s]),R],0)}let S=nt(w),N=De(r,[0,c],[n,r.shape[1]-c]);if(c===0)r=pe(N,qe(qe(N,i),S));else{let R=pe(N,qe(qe(N,i),S));r=It([De(r,[0,0],[n,c]),R],1)}return[i,a,r]}),te([u,d,p])}return!t&&n>s&&(r=De(r,[0,0],[n,s]),a=De(a,[0,0],[s,s])),[r,a]})}var MO=G({qr_:OO}),Un;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Un||(Un={}));function zO(e,t,n=Un.SUM_BY_NONZERO_WEIGHTS){let s=F(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=F(t,"weights","computeWeightedLoss"));let a=r==null?s:L(s,r);if(n===Un.NONE)return a;if(n===Un.SUM)return we(a);if(n===Un.MEAN){if(r==null)return Vt(a);{let o=s.size/r.size,i=de(we(a),we(r));return o>1?de(i,Ce(o)):i}}if(n===Un.SUM_BY_NONZERO_WEIGHTS){if(r==null)return de(we(a),Ce(s.size));{let o=L(r,vs(s.shape)),i=ge(we(Vu(o,Ce(0))),"float32");return de(we(a),i)}}throw Error(`Unknown reduction: ${n}`)}var ea=G({computeWeightedLoss_:zO});function LO(e,t,n,s=Un.SUM_BY_NONZERO_WEIGHTS){let r=F(e,"labels","absoluteDifference"),a=F(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=F(n,"weights","absoluteDifference")),Mn(r.shape,a.shape,"Error in absoluteDifference: ");let i=on(pe(r,a));return ea(i,o,s)}var BO=G({absoluteDifference_:LO});function WO(e,t,n,s,r=Un.SUM_BY_NONZERO_WEIGHTS){let a=F(e,"labels","cosineDistance"),o=F(t,"predictions","cosineDistance"),i=null;s!=null&&(i=F(s,"weights","cosineDistance")),Mn(a.shape,o.shape,"Error in cosineDistance: ");let l=Ce(1),c=pe(l,we(L(a,o),n,!0));return ea(c,i,r)}var VO=G({cosineDistance_:WO});function UO(e,t,n,s=Un.SUM_BY_NONZERO_WEIGHTS){let r=F(e,"labels","hingeLoss"),a=F(t,"predictions","hingeLoss"),o=null;n!=null&&(o=F(n,"weights","hingeLoss")),Mn(r.shape,a.shape,"Error in hingeLoss: ");let i=Ce(1);r=pe(L(Ce(2),r),i);let l=Fr(pe(i,L(r,a)));return ea(l,o,s)}var GO=G({hingeLoss_:UO});function HO(e,t,n,s=1,r=Un.SUM_BY_NONZERO_WEIGHTS){let a=F(e,"labels","huberLoss"),o=F(t,"predictions","huberLoss"),i=null;n!=null&&(i=F(n,"weights","huberLoss")),Mn(a.shape,o.shape,"Error in huberLoss: ");let l=Ce(s),c=on(pe(o,a)),u=zd(c,l),d=pe(c,u),p=le(L(Ce(.5),xt(u)),L(l,d));return ea(p,i,r)}var jO=G({huberLoss_:HO});function qO(e,t,n,s=1e-7,r=Un.SUM_BY_NONZERO_WEIGHTS){let a=F(e,"labels","logLoss"),o=F(t,"predictions","logLoss"),i=null;n!=null&&(i=F(n,"weights","logLoss")),Mn(a.shape,o.shape,"Error in logLoss: ");let l=Ce(1),c=Ce(s),u=Mt(L(a,Ms(le(o,c)))),d=L(pe(l,a),Ms(le(pe(l,o),c))),p=pe(u,d);return ea(p,i,r)}var XO=G({logLoss_:qO});function KO(e,t,n,s=Un.SUM_BY_NONZERO_WEIGHTS){let r=F(e,"labels","meanSquaredError"),a=F(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=F(n,"weights","meanSquaredError")),Mn(r.shape,a.shape,"Error in meanSquaredError: ");let i=$1(r,a);return ea(i,o,s)}var ZO=G({meanSquaredError_:KO});function YO(e,t){let n=F(e,"labels","sigmoidCrossEntropyWithLogits"),s=F(t,"logits","sigmoidCrossEntropyWithLogits");Mn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Fr(s),a=L(s,n),o=kf(Os(Mt(on(s))));return le(pe(r,a),o)}function JO(e,t,n,s=0,r=Un.SUM_BY_NONZERO_WEIGHTS){let a=F(e,"multiClassLabels","sigmoidCrossEntropy"),o=F(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=F(n,"weights","sigmoidCrossEntropy")),Mn(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let c=Ce(s),u=Ce(1),d=Ce(.5);a=le(L(a,pe(u,c)),L(d,c))}let l=YO(a,o);return ea(l,i,r)}var QO=G({sigmoidCrossEntropy_:JO});function eM(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Dr((r,a,o)=>{let l=Vv(a,[n],!0),c=pe(ge(a,"float32"),l);o([r,c]);let u=Mt(L(c,r));return{value:we(u,[n]),gradFunc:(h,f)=>{let[m,g]=f,A=ul(h.shape,[n]);return[L(H(h,A),pe(ge(m,"float32"),Os(g))),L(H(h,A),pe(Os(g),ge(m,"float32")))]}}})(e,t)}function tM(e,t,n,s=0,r=Un.SUM_BY_NONZERO_WEIGHTS){let a=F(e,"onehotLabels","softmaxCrossEntropy"),o=F(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=F(n,"weights","softmaxCrossEntropy")),Mn(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let c=Ce(s),u=Ce(1),d=Ce(a.shape[1]);a=le(L(a,pe(u,c)),de(c,d))}let l=eM(a,o);return ea(l,i,r)}var nM=G({softmaxCrossEntropy_:tM});function sM(e,t,n,s){let r=F(e,"indices","sparseFillEmptyRows"),a=F(t,"values","sparseFillEmptyRows"),o=F(n,"denseShape","sparseFillEmptyRows"),i=F(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:r,values:a,denseShape:o,defaultValue:i},c=V.runKernel(Zh,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}var rM=G({sparseFillEmptyRows_:sM});function aM(e,t,n){let s=F(e,"inputIndices","sparseReshape"),r=F(t,"inputShape","sparseReshape"),a=F(n,"newShape","sparseReshape");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=V.runKernel(Yh,o);return{outputIndices:i[0],outputShape:i[1]}}var oM=G({sparseReshape_:aM});function iM(e,t,n){let s=F(e,"data","sparseSegmentMean"),r=F(t,"indices","sparseSegmentMean"),a=F(n,"segmentIds","sparseSegmentMean");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return V.runKernel(Jh,o)}var lM=G({sparseSegmentMean_:iM});function uM(e,t,n){let s=F(e,"data","sparseSegmentSum"),r=F(t,"indices","sparseSegmentSum"),a=F(n,"segmentIds","sparseSegmentSum");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return V.runKernel(Qh,o)}var cM=G({sparseSegmentSum_:uM});function dM(e,t,n,s,r,a,o,i){let l=F(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let c=F(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:l,dataSplits:c},p=V.runKernel(yd,d,u);return{nGrams:p[0],nGramsSplits:p[1]}}var pM=G({stringNGrams_:dM});function hM(e,t,n=!0){let s=F(e,"input","stringSplit","string"),r=F(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=V.runKernel(ef,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var fM=G({stringSplit_:hM});function mM(e,t){let n=F(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return V.runKernel(tf,r,s)}var gM=G({stringToHashBucketFast_:mM}),AM={fft:$f,ifft:Wd,rfft:_f,irfft:R1},yM={hammingWindow:jP,hannWindow:cw,frame:dw,stft:ZP},Ie={flipLeftRight:eO,grayscaleToRGB:nO,resizeNearestNeighbor:CO,resizeBilinear:IO,rotateWithOffset:rO,cropAndResize:JP,nonMaxSuppression:oO,nonMaxSuppressionAsync:fO,nonMaxSuppressionWithScore:gO,nonMaxSuppressionWithScoreAsync:yO,nonMaxSuppressionPadded:bO,nonMaxSuppressionPaddedAsync:wO,threshold:EO,transform:$O},Aw={bandPart:DO,gramSchmidt:PO,qr:MO},xM={absoluteDifference:BO,computeWeightedLoss:ea,cosineDistance:VO,hingeLoss:GO,huberLoss:jO,logLoss:XO,meanSquaredError:ZO,sigmoidCrossEntropy:QO,softmaxCrossEntropy:nM},Ud={sparseFillEmptyRows:rM,sparseReshape:oM,sparseSegmentMean:lM,sparseSegmentSum:cM},zf={stringNGrams:pM,stringSplit:fM,stringToHashBucketFast:gM},ta=class extends ev{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return te(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return zv(e,t)}dispose(){this.iterations_!=null&&te(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ta,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Lf=class extends ta{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:X(()=>st(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:X(()=>st(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;X(()=>{let c=le(L(i,this.rho),L(xt(o),1-this.rho)),u=L(de(Dn(le(l,this.epsilon)),Dn(le(i,this.epsilon))),o),d=le(L(l,this.rho),L(xt(u),1-this.rho));i.assign(c),l.assign(d);let p=le(L(u,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(te(this.accumulatedGrads.map(e=>e.variable)),te(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Lf.className="Adadelta";Eo(Lf);var Bf=class extends ta{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n];if(this.accumulatedGrads[s]==null){let i=!1;this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:X(()=>Lu(r.shape,this.initialAccumulatorValue).variable(i))}}let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;X(()=>{let i=le(o,xt(a));o.assign(i);let l=le(L(de(a,Dn(le(i,V.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&te(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Bf.className="Adagrad";Eo(Bf);var Wf=class extends ta{constructor(e,t,n,s=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],X(()=>{this.accBeta1=Ce(t).variable(),this.accBeta2=Ce(n).variable()}),s==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);X(()=>{let n=pe(1,this.accBeta1),s=pe(1,this.accBeta2);t.forEach((r,a)=>{let o=V.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:X(()=>st(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:X(()=>st(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,d=le(L(c,this.beta1),L(l,1-this.beta1)),p=le(L(u,this.beta2),L(xt(l),1-this.beta2)),h=de(d,n),f=de(p,s);c.assign(d),u.assign(p);let m=le(L(de(h,le(Dn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&te(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&te(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),X(()=>{this.accBeta1.assign(Do(this.beta1,this.iterations_+1)),this.accBeta2.assign(Do(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Wf.className="Adam";Eo(Wf);var Vf=class extends ta{constructor(e,t,n,s=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],X(()=>{this.iteration=Ce(0).variable(),this.accBeta1=Ce(t).variable()}),s==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);X(()=>{let n=pe(1,this.accBeta1),s=de(-this.learningRate,le(L(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=V.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:st(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:st(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,d=le(L(c,this.beta1),L(l,1-this.beta1)),p=L(u,this.beta2),h=on(l),f=Qr(p,h);c.assign(d),u.assign(f);let m=le(L(de(s,n),de(d,le(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(le(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&te(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&te(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Vf.className="Adamax";Eo(Vf);var Gd=class extends ta{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=V.registeredVariables[n];X(()=>{let o=le(L(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=yn(Ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Gd.className="SGD";Eo(Gd);var Uf=class extends Gd{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n];if(this.accumulations[s]==null){let i=!1;this.accumulations[s]={originalName:`${n}/momentum`,variable:X(()=>st(r).variable(i))}}let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&X(()=>{let i,l=le(L(this.m,a),o);this.useNesterov?i=le(L(this.c,le(o,L(l,this.m))),r):i=le(L(this.c,l),r),a.assign(l),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&te(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Uf.className="Momentum";Eo(Uf);var Gf=class extends ta{constructor(e,t=.9,n=0,s=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=V.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:X(()=>st(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:X(()=>st(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:X(()=>st(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;X(()=>{let c=le(L(i,this.decay),L(xt(o),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[s].variable,d=le(L(u,this.decay),L(o,1-this.decay)),p=de(L(o,this.learningRate),Dn(pe(c,le(xt(d),this.epsilon)))),h=le(L(l,this.momentum),p);i.assign(c),u.assign(d),l.assign(h);let f=pe(r,h);r.assign(f)}else{let u=le(L(i,this.decay),L(xt(o),1-this.decay)),d=le(L(l,this.momentum),de(L(o,this.learningRate),Dn(le(u,this.epsilon))));i.assign(u),l.assign(d);let p=pe(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&te(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&te(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&te(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Gf.className="RMSProp";Eo(Gf);var Po=class{static sgd(e){return new Gd(e)}static momentum(e,t,n=!1){return new Uf(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Gf(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Wf(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Lf(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Vf(e,t,n,s,r)}static adagrad(e,t=.1){return new Bf(e,t)}},pl={sgd:Po.sgd,momentum:Po.momentum,adadelta:Po.adadelta,adagrad:Po.adagrad,rmsprop:Po.rmsprop,adamax:Po.adamax,adam:Po.adam},bM=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function yw(){return new Promise(e=>bM(()=>e()))}var E={};Me(E,{ERF_A1:()=>$M,ERF_A2:()=>_M,ERF_A3:()=>DM,ERF_A4:()=>FM,ERF_A5:()=>PM,ERF_P:()=>RM,PARALLELIZE_THRESHOLD:()=>L1,SELU_SCALE:()=>bw,SELU_SCALEALPHA:()=>xw,applyActivation:()=>Of,assertAndGetBroadcastShape:()=>yt,assertAxesAreInnerMostDims:()=>_D,assertParamsConsistent:()=>vM,assignToTypedArray:()=>WM,axesAreInnerMostDims:()=>g1,calculateShapes:()=>U3,checkEinsumDimSizes:()=>qM,combineLocations:()=>Lv,complexWithEvenIndex:()=>zM,complexWithOddIndex:()=>LM,computeConv2DInfo:()=>Dd,computeConv3DInfo:()=>gv,computeDefaultPad:()=>s1,computeDilation2DInfo:()=>J$,computeOptimalWindowSize:()=>kM,computeOutAndReduceShapes:()=>Bv,computeOutShape:()=>wM,computePool2DInfo:()=>mv,computePool3DInfo:()=>Q$,convertConv2DDataFormat:()=>Av,decodeEinsumEquation:()=>HM,eitherStridesOrDilationsAreOne:()=>_r,expandShapeToKeepDim:()=>ul,exponent:()=>UM,exponents:()=>VM,fromStringArrayToUint8:()=>nz,fromUint8ToStringArray:()=>tz,getAxesPermutation:()=>Wv,getBroadcastDims:()=>L3,getComplexWithIndex:()=>BM,getEinsumComputePath:()=>XM,getEinsumPermutation:()=>jM,getFusedBiasGradient:()=>Pf,getFusedDyActivation:()=>Ff,getImageCenter:()=>IM,getInnerMostAxes:()=>DD,getPermuted:()=>CM,getReductionAxes:()=>Kt,getReshaped:()=>SM,getReshapedPermuted:()=>TM,getSliceBeginCoords:()=>NM,getSliceSize:()=>EM,getUndoAxesPermutation:()=>A1,isIdentityPermutation:()=>KM,log:()=>C9,mergeRealAndImagArrays:()=>OM,prepareAndValidate:()=>V3,prepareSplitSize:()=>YM,segment_util:()=>kw,shouldFuse:()=>Mf,slice_util:()=>Ot,splitRealAndImagArrays:()=>MM,tupleValuesAreOne:()=>Ro,upcastType:()=>Ln,validateInput:()=>K2,validateUpdateShape:()=>X2,warn:()=>Io});function vM(e,t){let n=e[0].length;e.forEach((r,a)=>{O(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),O(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)O(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function wM(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var L1=30;function kM(e){return e<=L1?e:Ih(e,Math.floor(Math.sqrt(e)))}function IM(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function SM(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function CM(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2==1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function TM(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function NM(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function EM(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var xw=1.7580993408473768,bw=1.0507009873554805,RM=.3275911,$M=.254829592,_M=-.284496736,DM=1.421413741,FM=-1.453152027,PM=1.061405429;function OM(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function MM(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function zM(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function LM(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function BM(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function WM(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function VM(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function UM(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var B1="->",GM=/->/g,vw=",",ww="...";function HM(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(GM,"").length)/B1.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${B1}").`);let[s,r]=e.split(B1);O(s.indexOf(ww)===-1,()=>`The ellipsis notation ("${ww}") is not supported yet.`);let a=s.split(vw),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let p=0;p<r.length;++p){let h=r[p];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let p=0;p<s.length;++p){let h=s[p];i.indexOf(h)===-1&&h!==vw&&i.push(h)}let l=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let h=0;h<a[p].length;++h)l[p].push(i.indexOf(a[p][h]))}let c=i.length,u=r.length,d=[];for(let p=u;p<c;++p)d.push(p);return{allDims:i,summedDims:d,idDims:l}}function jM(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function qM(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:O(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function XM(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=ZM(t,i);for(let c of l)a.indexOf(c)===-1&&(s[o].push(c),a.push(c))}return{path:n,steps:s}}function KM(e){return e.every((t,n)=>t===n)}function ZM(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function YM(e,t,n=0){let s=[];if(typeof t=="number")O(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);O(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}O(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}var kw={};Me(kw,{collectGatherOpShapeInfo:()=>ez,computeOutShape:()=>QM,segOpComputeOptimalWindowSize:()=>JM});function JM(e,t){let n=!1,s;for(e<=L1?(s=e,n=!0):s=Ih(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=Ih(e,s+1);return s}function QM(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function ez(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let d=0;d<s;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let o=e.shape[n],i=[],l=1,c=1,u=1;for(let d=0;d<s;++d)i.push(e.shape[d]),l*=e.shape[d];for(let d=s;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=s;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<a;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:i}}function tz(e){try{return e.map(t=>of(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function nz(e){return e.map(t=>Id(t))}var nr={};Me(nr,{nonMaxSuppressionV3Impl:()=>pw,nonMaxSuppressionV4Impl:()=>hw,nonMaxSuppressionV5Impl:()=>fw,whereImpl:()=>nw});var Iw={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Vd(ge(n,"float32"),-1))}}},sz={kernelName:ru,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=xt(ge(n,"float32")),r=Dn(pe(Ce(1),s));return Mt(de(e,r))}}}},rz={kernelName:au,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Dn(pe(xt(ge(n,"float32")),1));return de(e,s)}}}},az={kernelName:Xr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=yt(n.shape,s.shape);return{a:()=>{let i=e,l=Kt(n.shape,r);return l.length>0&&(i=we(i,l)),H(i,n.shape)},b:()=>{let i=e,l=Kt(s.shape,r);return l.length>0&&(i=we(i,l)),H(i,s.shape)}}}},oz={kernelName:Ea,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},iz={kernelName:Ra,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>st(n)}}},lz={kernelName:lu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>st(n)}}},uz={kernelName:uu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,Dn(pe(Ce(1),xt(ge(n,"float32")))))}}},cz={kernelName:cu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Dn(le(Ce(1),xt(ge(n,"float32"))));return de(e,s)}}}},dz={kernelName:hu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=yt(n.shape,s.shape);return{a:()=>{let i=le(xt(n),xt(s)),l=L(e,de(s,i)),c=Kt(n.shape,r);return c.length>0&&(l=we(l,c)),H(l,n.shape)},b:()=>{let i=le(xt(n),xt(s)),l=Mt(L(e,de(n,i))),c=Kt(s.shape,r);return c.length>0&&(l=we(l,c)),H(l,s.shape)}}}},pz={kernelName:du,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,le(xt(ge(n,"float32")),1))}}},hz={kernelName:pu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,pe(Ce(1),xt(ge(n,"float32"))))}}};function fz(e,t,n,s,r,a){let o=F(e,"dy","avgPool3dGrad"),i=F(t,"input","avgPool3dGrad"),l=o,c=i,u=!1;i.rank===4&&(u=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),O(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),a!=null&&O(gn(r),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);let d={dy:l,input:c},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=V.runKernel(Th,d,p);return u?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var mz=G({avgPool3dGrad_:fz}),gz={kernelName:od,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>mz(e,s,r,a,o,i)}}};function Az(e,t,n,s,r){let a=F(e,"dy","avgPoolGrad"),o=F(t,"input","avgPoolGrad");O(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,c=!1;o.rank===3&&(c=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),O(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let u={dy:l,input:i},d={filterSize:n,strides:s,pad:r},p=V.runKernel(Ch,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var yz=G({avgPoolGrad_:Az}),xz={kernelName:$a,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>yz(e,s,r,a,o)}}},bz={kernelName:_a,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>qe(e,r,!1,!0),b:()=>qe(s,e,!0,!1)}:!a&&o?{a:()=>qe(e,r,!1,!1),b:()=>qe(e,s,!0,!1)}:a&&!o?{a:()=>qe(r,e,!1,!0),b:()=>qe(s,e,!1,!1)}:{a:()=>qe(r,e,!0,!0),b:()=>qe(e,s,!0,!0)}}},vz={kernelName:di,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>Nf(e,s,r)}}},wz={kernelName:r3,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>we(e,i,!0)}}},kz={kernelName:Da,gradFunc:e=>({x:()=>e.clone()})},Iz={kernelName:Fa,gradFunc:e=>({x:()=>st(e)})},Sz={kernelName:Kr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Vn(mr(il(s,r),ll(s,a)),e,st(e))}}},Cz={kernelName:ld,inputsToSave:["x"],gradFunc:Iw.gradFunc},Tz={kernelName:pi,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(l=>l.shape),{axis:r}=n,a=Js(r,t[0].shape)[0],o=s.map(l=>l[a]);return jt(e,o,a).map(l=>()=>l)}},Nz={kernelName:Pa,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return O(Ro(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>l1(s.shape,e,r,o,i,l),filter:()=>M1(s,e,r.shape,o,i,l)}}},Ez={kernelName:Oa,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>$o(e,r,a,o,i,1,l),filter:()=>M1(e,s,r.shape,a,o,i,l)}}};function Rz(e,t,n,s,r){let a=e;e.rank===4&&(a=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),O(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),O(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),O(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),O(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:s,pad:r,filterShape:n};return V.runKernel($h,i,l)}var $z=G({conv3DBackpropFilter_:Rz}),_z={kernelName:ud,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;O(Ro(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>Cv(o.shape,e,i,r,a),filter:()=>$z(o,e,i.shape,r,a)}}},Dz={kernelName:Ma,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Mt(T1(ge(n,"float32"))),e)}}},Fz={kernelName:za,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(N1(ge(n,"float32")),e)}}},Pz={kernelName:hi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=Wv([r],s.rank),l=p1(e,r,a,!o);return i!=null&&(l=nt(l,i)),l}}}},Oz={kernelName:La,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s==null?[1,1]:s;O(Ro(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,c]=t;return O(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),O(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),O(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),O(_r(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),o!=null&&O(gn(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`),{x:()=>uw(l.shape,e,c,r,a,i,o),filter:()=>lw(l,e,c.shape,r,a,i,o)}}},Mz={kernelName:cd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>V.runKernel(Mh,a,n),filter:()=>V.runKernel(zh,o,n)}}},zz={kernelName:Wa,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>V.runKernel(Lh,s)}}},Lz={kernelName:fu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(Os(Mt(xt(n))),2/Math.sqrt(Math.PI));return{x:()=>L(e,s)}}},Bz={kernelName:Va,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,n)}}},Wz={kernelName:Ai,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>H(e,n.shape)}}},Vz={kernelName:yi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Os(n))}}},Uz={kernelName:Ua,gradFunc:e=>({x:()=>st(e)})},Gz={kernelName:Ga,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=yt(n.shape,s.shape);return{a:()=>{let i=de(e,ge(s,"float32")),l=Kt(n.shape,r);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Kt(s.shape,r);l.length>0&&(i=H(we(i,l),s.shape));let c=xt(s);return Mt(de(i,ge(c,"float32")))}}}},Hz={kernelName:Ha,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,l=i==null?Ce(1):i,c=Kt(a.shape,r.shape),u=[];if(a.rank===1){for(let b=0;b<r.shape.length-1;++b)u.push(r.shape[b]);u.push(1)}let d=pe(r,a),p=L(e,l),h=S1(le(o,Ce(s))),f=L(L(L(h,h),h),Ce(-.5));return{x:()=>a.rank===1?H(L(L(e,er(H(h,[1,1,1,a.shape[0]]),u)),l),r.shape):H(L(L(e,h),l),r.shape),mean:()=>{let b=L(L(h,Ce(-1)),p);return a.rank===1&&(b=we(b,c)),H(b,a.shape)},variance:()=>{let b=L(L(f,d),p);return a.rank===1&&(b=we(b,c)),H(b,a.shape)},scale:()=>{let b=L(d,h),w=L(e,b);return a.rank===1&&(w=we(w,c)),H(w,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=we(b,c)),H(b,a.shape)}}}},jz={kernelName:bi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=Js(a,s.shape)[0];return{x:()=>{let l=s.shape,c=r.size,u=l.slice(0,o),d=u.length,p=l.slice(a,l.length).slice(1),h=p.length,f=Sw(0,d),m=Sw(d+1,d+1+h),g=Cw([u,[c],p]),A=H(e,g),x=H(r,[c]),y=Cw([[d],f,m]),b=nt(A,y),w=ew(b,x,s.shape[o]),k=A1(y);return w=nt(w,k),w},indices:()=>r}}};function Sw(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Cw(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var qz={kernelName:ja,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>st(n),b:()=>st(s)}}},Xz={kernelName:qa,gradFunc:e=>({x:()=>ge(e,"float32")})},Kz={kernelName:gu,gradFunc:e=>({x:()=>st(e)})},Zz={kernelName:Au,gradFunc:e=>({x:()=>st(e)})},Yz={kernelName:yu,gradFunc:e=>({x:()=>st(e)})},Jz={kernelName:ki,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=bs(s,0);return{x:()=>Vn(a,e,L(e,r))}}},Qz={kernelName:xu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,le(n,1))}}},eL={kernelName:Xa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ge(n,"float32"))}}},tL={kernelName:a3,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let a=!0,o=Os(s);return pe(e,L(we(e,r,a),o))}}}};function nL(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:o};return V.runKernel(Uh,i,l)}var sL=G({localResponseNormalizationBackprop_:nL}),rL={kernelName:fd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>sL(s,r,e,a,o,i,l)}}};function Tw(e,t,n,s){return t.rank<n.rank&&(t=H(t,ul(t.shape,s))),e.rank<n.rank&&(e=H(e,ul(e.shape,s))),{x:()=>L(e,ge(Ps(n,t),e.dtype))}}var Nw={kernelName:Ka,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=Js(r,a.shape),l=Tw(e,o,a,i);return{x:()=>l.x()}}},aL={kernelName:Za,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,ge(il(n,s),"float32")),b:()=>L(e,ge(f1(n,s),"float32"))}}};function oL(e,t,n,s,r,a,o){let i=F(e,"dy","maxPool3dGrad"),l=F(t,"input","maxPool3dGrad"),c=F(n,"output","maxPool3dGrad"),u=i,d=l,p=c,h=!1;l.rank===4&&(h=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=H(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=H(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),O(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),O(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),O(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),o!=null&&O(gn(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);let f={dy:u,input:d,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=V.runKernel(Hh,f,m);return h?H(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var iL=G({maxPool3dGrad_:oL}),lL={kernelName:md,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>iL(e,s,r,a,o,i,l)}}};function uL(e,t,n,s,r,a,o){let i=F(e,"dy","maxPoolGrad"),l=F(t,"input","maxPoolGrad"),c=F(n,"output","maxPoolGrad");O(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),O(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),O(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),o!=null&&O(gn(a),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);let u={dy:i,input:l,output:c},d={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return V.runKernel(Gh,u,d)}var cL=G({maxPoolGrad_:uL}),dL={kernelName:Ya,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>cL(e,s,r,a,o,i)}}},pL={kernelName:Ja,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=Js(r,s.shape),i=Bv(s.shape,a)[1],l=Gt(i);return{x:()=>{let u=s.shape.slice();a.forEach(h=>{u[h]=1});let d=H(e,u);return de(L(d,vs(s.shape,"float32")),l)}}}},hL={kernelName:Qa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=Js(r,a.shape),l=Tw(e,o,a,i);return{x:()=>l.x()}}},fL={kernelName:eo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,ge(ll(n,s),"float32")),b:()=>L(e,ge(bs(n,s),"float32"))}}},mL={kernelName:to,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>De(e,a,s.shape)}}},gL={kernelName:vu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=yt(n.shape,s.shape);return{a:()=>{let i=Kt(n.shape,r);return i.length>0?H(we(e,i),n.shape):e},b:()=>{let i=L(e,Mt(Md(de(n,s)))),l=Kt(s.shape,r);return l.length>0?H(we(i,l),s.shape):i}}}},AL={kernelName:no,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=yt(n.shape,s.shape);return{a:()=>{let i=L(e,ge(s,"float32")),l=Kt(n.shape,r);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Kt(s.shape,r);return l.length>0?H(we(i,l),s.shape):i}}}},yL={kernelName:Ti,gradFunc:e=>({x:()=>Mt(e)})},xL={kernelName:_i,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Ht(n.shape,"float32")}}},bL={kernelName:$i,gradFunc:e=>({x:()=>st(e)})},vL={kernelName:Di,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return ls(e,s).map(a=>()=>a)}},Ew={kernelName:so,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>De(e,a,s.shape)}}},wL={kernelName:ro,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=yt(a.shape,o.shape);return{a:()=>{let u=ge(o,"float32"),d=L(e,L(u,Do(a,pe(u,Ce(1))))),p=Kt(a.shape,i);return p.length>0&&(d=we(d,p)),H(d,a.shape)},b:()=>{let u=bs(a,0),d=Vn(u,Ms(a),st(a)),p=L(e,L(r,d)),h=Kt(o.shape,i);return h.length>0&&(p=we(p,h)),H(p,o.shape)}}}},kL={kernelName:ao,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=bs(n,0);return{x:()=>Vn(r,e,L(e,s)),alpha:()=>{let a=Vn(r,st(e),L(e,n)),o=Kt(s.shape,e.shape);return o.length>0&&(a=we(a,o)),H(a,s.shape)}}}},IL={kernelName:Ba,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=yt(n.shape,s.shape);return{a:()=>{let i=de(e,ge(s,"float32")),l=Kt(n.shape,r);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Kt(s.shape,r);l.length>0&&(i=H(we(i,l),s.shape));let c=xt(s);return Mt(de(i,ge(c,"float32")))}}}},SL={kernelName:Iu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,Mt(xt(n)))}}},CL={kernelName:lo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(ll(n,6),Vd(n));return{x:()=>L(e,ge(s,"float32"))}}},TL={kernelName:oo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,ge(Vd(n),"float32"))}}},NL={kernelName:Pi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>H(e,n.shape)}}},EL={kernelName:io,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>V.runKernel(Kh,r,n)}}},RL={kernelName:Su,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>V.runKernel(Xh,r,n)}}},$L={kernelName:Oi,gradFunc:(e,t,n)=>{let{dims:s}=n,r=Js(s,e.shape);return{x:()=>Ls(e,r)}}},_L={kernelName:Mi,gradFunc:e=>({x:()=>st(e)})},DL={kernelName:uo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Mt(de(e,L(Do(n,1.5),2)))}}},FL={kernelName:Li,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ge(st(n),"float32"),t:()=>L(e,ge(n,e.dtype)),e:()=>L(e,ge(Sf(n),e.dtype))}}},PL={kernelName:Cu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=bs(n,Ce(0)),r=Ce(xw),a=Ce(bw),o=L(e,a),i=L(L(e,r),Os(ge(n,"float32")));return Vn(s,o,i)}}}},OL={kernelName:po,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(n,pe(Ce(1),n)))}}},ML={kernelName:Tu,gradFunc:e=>({x:()=>st(e)})},zL={kernelName:co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(bf(ge(n,"float32")),e)}}},LL={kernelName:Wi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(d1(ge(n,"float32")),e)}}},BL={kernelName:Bi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,l]=J3(s,r,a),c=[];for(let u=0;u<e.rank;u++)c.push([i[u],o[u]-i[u]-l[u]]);return{x:()=>tr(e,c)}}},WL={kernelName:mo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=L(e,s);return{logits:()=>pe(o,L(we(o,[r],a),s))}}},VL={kernelName:Nu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Wn(n))}}},Rw={kernelName:Vi,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>xf(e,s,r)}}},$w={kernelName:Ui,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>It(e,s)}}},UL={kernelName:ho,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,L(Dn(ge(n,"float32")),2))}}},GL={kernelName:Eu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(ge(n,"float32"),2))}}},HL={kernelName:go,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Ce(2);return{a:()=>L(e,L(r,pe(n,s))),b:()=>L(e,L(r,pe(s,n)))}}},jL={kernelName:bo,gradFunc:e=>({x:()=>st(e)})},qL={kernelName:Ao,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=yt(n.shape,s.shape);return{a:()=>{let i=e,l=Kt(n.shape,r);return l.length>0&&(i=we(i,l)),H(i,n.shape)},b:()=>{let i=e,l=Kt(s.shape,r);return l.length>0&&(i=we(i,l)),H(Mt(i),s.shape)}}}},XL={kernelName:fo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;Js(a,s.shape).forEach(c=>{r[c]=1});let i=H(e,r),l=L(i,vs(s.shape,"float32"));return{x:()=>l}}},KL={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,xt(bf(n)))}}},ZL={kernelName:yo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(pe(Ce(1),xt(n)),e)}}},YL={kernelName:Zr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=st(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=le(o,De(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=le(o,De(e,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)o=le(o,De(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)o=le(o,De(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},JL={kernelName:xo,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=A1(r);return{x:()=>nt(e,a)}}},QL={kernelName:Xi,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>Yt(e,r)}}},eB={kernelName:xd,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>tB(e,n)}}};function tB(e,t){let n=Qr(t,st(t)),s=Bu(e,n),r=il(t,Ce(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=Zt(r,i+1);r=mr(r,vs(s.shape,"bool"));let o=st(s);return Vn(r,s,o)}var nB={kernelName:Ki,gradFunc:e=>({x:()=>st(e)})},sB=[Iw,sz,rz,az,oz,iz,lz,uz,cz,dz,pz,hz,gz,xz,bz,vz,wz,kz,Iz,Sz,Cz,Tz,Ez,Nz,_z,Dz,Fz,Pz,Oz,Mz,IL,zz,Lz,Bz,Wz,Vz,Gz,Uz,Hz,jz,qz,Xz,Kz,Zz,Yz,Jz,Qz,eL,tL,rL,Nw,Nw,aL,lL,dL,pL,hL,fL,mL,gL,AL,yL,xL,bL,vL,Ew,Ew,wL,kL,SL,CL,TL,NL,EL,RL,$L,_L,DL,FL,PL,OL,ML,zL,LL,BL,WL,VL,Rw,Rw,$w,$w,UL,HL,GL,jL,qL,XL,KL,ZL,YL,JL,QL,eB,nB];for(let e of sB)o3(e);var _w={};Me(_w,{maxNorm:()=>iB,minMaxNorm:()=>cB,nonNeg:()=>uB,unitNorm:()=>lB});var W1;function ln(){return W1==null&&(W1=$r().epsilon()),W1}function Ar(){return"channelsLast"}var na=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,na.prototype)}},yr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,yr.prototype)}},q=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,q.prototype)}},Le=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Le.prototype)}},Dw=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Dw.prototype)}};function hl(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Pr(e,t){if(!e)throw new Dw(t)}function Fw(e,t){let n=0;for(let s of e)s===t&&n++;return n}function us(e){return e.length===1?e[0]:e}function Ct(e){return Array.isArray(e)?e:[e]}function sa(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function fl(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var sr={};function V1(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function U1(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>U1(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:U1(s))}}}function Hd(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in sr)o=sr[a];else if(o=t[a],o==null)throw new q(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new q(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in sr?[i,l]=sr.className:o in t&&([i,l]=t[o]),i==null)throw new q(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let h of Object.keys(sr))c[h]=sr[h];for(let h of Object.keys(n))c[h]=n[h];let u=a.config;u.customObjects=c;let d={...sr};for(let h of Object.keys(n))sr[h]=n[h];U1(a.config);let p=l(i,a.config,n,r);return sr={...d},p}else{let c={...sr};for(let d of Object.keys(n))sr[d]=n[d];let u=new i(a.config);return sr={...c},u}}}function rB(e,t){return e<t?-1:e>t?1:0}function Hf(e,t){return-1*rB(e,t)}function Oo(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function aB(e){if(e==null)throw new q(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function ml(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new q(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function G1(e,t,n=0,s=1/0){return Pr(n>=0),Pr(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function bn(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>bn(n,`element ${s+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Pw(e)}.`)}function Pw(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>Pw(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function oB(e,t,n){let s=n!=null?n():v.now(),r;return(...o)=>{let i=n!=null?n():v.now();return i-s<t||(s=i,r=e(...o)),r}}function Ow(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function H1(e,t){return X(()=>Dn(we(L(e,e),t,!0)))}var jd=class extends ce.Serializable{getConfig(){return{}}},j1=class extends jd{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>{let t=H1(e,this.axis),n=xs(t,0,this.maxValue);return L(e,de(n,le(ln(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};j1.className="MaxNorm";ce.registerClass(j1);var q1=class extends jd{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>de(e,le(ln(),H1(e,this.axis))))}getConfig(){return{axis:this.axis}}};q1.className="UnitNorm";ce.registerClass(q1);var X1=class extends jd{apply(e){return Fr(e)}};X1.className="NonNeg";ce.registerClass(X1);var K1=class extends jd{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>{let t=H1(e,this.axis),n=le(L(this.rate,xs(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,de(n,le(ln(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};K1.className="MinMaxNorm";ce.registerClass(K1);var Mw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function un(e){return V1(e)}function zw(e,t={}){return Hd(e,ce.SerializationMap.getMap().classNameMap,t,"constraint")}function cn(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Mw?Mw[e]:e,config:{}};return zw(n)}else return e instanceof jd?e:zw(e)}function iB(e){return new j1(e)}function lB(e){return new q1(e)}function uB(){return new X1}function cB(e){return new K1(e)}var Lw={};Me(Lw,{constant:()=>DB,glorotNormal:()=>BB,glorotUniform:()=>LB,heNormal:()=>WB,heUniform:()=>VB,identity:()=>MB,leCunNormal:()=>UB,leCunUniform:()=>GB,ones:()=>_B,orthogonal:()=>HB,randomNormal:()=>PB,randomUniform:()=>FB,truncatedNormal:()=>OB,varianceScaling:()=>zB,zeros:()=>$B});var dB=["channelsFirst","channelsLast"],pB=["nearest","bilinear"],hB=["valid","same","causal"],fB=["max","avg"],mB=["sum","mul","concat","ave"],qu=new Map;function qt(e){ml(dB,"DataFormat",e)}function gB(e){ml(pB,"InterpolationFormat",e)}function Bs(e){ml(hB,"PaddingMode",e)}function Bw(e){ml(fB,"PoolMode",e)}var qd=[],Ww="/";function gl(e,t){qd.push(e);try{let n=t();return qd.pop(),n}catch(n){throw qd.pop(),n}}function AB(){return qd.length===0?"":qd.join(Ww)+Ww}function Vw(e){if(!Gw(e))throw new Error("Not a valid tensor name: '"+e+"'");return AB()+e}function Uw(e){if(!Gw(e))throw new Error("Not a valid tensor name: '"+e+"'");qu.has(e)||qu.set(e,0);let t=qu.get(e);if(qu.set(e,qu.get(e)+1),t>0){let n=`${e}_${t}`;return qu.set(n,1),n}else return e}var yB=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Gw(e){return!!e.match(yB)}function xB(e){return e===parseInt(e.toString(),10)}function Mo(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Xu(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function zo(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function xr(e,t){if(t<e)throw new q(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}function jf(e,t){return ge(e,t)}function Xd(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),H(e,n)}function bB(e,t){return X(()=>{if(e.shape.length!==2)throw new q(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Xd(e,1);return J1(n,[1,t,1])})}function vB(e){let t=[Mo(e.shape)];return H(e,t)}function wB(e){if(e.rank<=1)throw new q(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Mo(e.shape,1)];return H(e,t)}function Al(e,t,n){return X(()=>{switch(e.rank){case 1:return Rf(e,t,n);case 2:return E1(e,[t,0],[n,e.shape[1]]);case 3:return cl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return dl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return De(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return De(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new q(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Z1(e,t,n){return X(()=>{switch(e.rank){case 1:return Rf(e,t,n);case 2:return E1(e,[0,t],[e.shape[0],n]);case 3:return cl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return dl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function qf(e,t,n,s){return X(()=>{switch(e.rank){case 1:return Rf(e,t,n);case 2:switch(s){case 1:return Al(e,t,n);case 2:return Z1(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Al(e,t,n);case 2:return cl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Z1(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Al(e,t,n);case 2:return dl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return dl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Z1(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Y1(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),It(e,t)}function Hw(e,t){switch(e.rank){case 1:return kv([e,t]);case 2:return zu([e,t],0);case 3:return Iv([e,t],0);case 4:return Sv([e,t],0);default:throw new q(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function J1(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new q(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return er(e,t)}function Xf(e,t=0,n=1,s,r){return jv(e,t,n,s,r)}function Or(e,t,n,s){if(e.rank<2||t.rank<2)throw new Le(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Le(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let r=!1,a=!1;return Fo.matMul({a:e,b:t,transposeA:r,transposeB:a,bias:s?Q1(e.rank,s,Ar()):null,activation:n})}else{let r=e.shape.slice(),a=r.pop();e=H(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),c=[...o,i],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=H(nt(t,u),[l,-1]);let d=[...r,...c],p=!1,h=!1;return H(Fo.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:s?Q1(e.rank,s,Ar()):null,activation:n}),d)}}function jw(e,t,n){return X(()=>(Array.isArray(t)?t=St(t,"int32"):t=ge(t,"int32"),Bu(e,t,n)))}function Kd(e){return L(e,e)}function Q1(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new q(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1,1,1]):H(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,1,1,s[0]]):H(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1,1]):H(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,1,s[0]]):H(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1]):H(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,s[0]]):H(t,[1].concat(s))}else if(e<3)return t;throw new q(`Unsupported input rank by biasAdd: ${t.rank}`)}function br(e,t,n){return X(()=>(n==null&&(n=Ar()),qt(n),le(e,Q1(e.rank,t,n))))}function kB(e,t=1){if(t!==1)throw new Le(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Od(e)}function IB(e){return X(()=>de(e,le(on(e),1)))}function qw(e,t,n,s){return X(()=>ow(e,t,n,s))}function SB(e){return X(()=>{let t=le(.5,L(.2,e));return xs(t,0,1)})}function Zd(e,t,n=!1){return n?e():t()}var CB=["fanIn","fanOut","fanAvg"],TB=["normal","uniform","truncatedNormal"];function NB(e){ml(CB,"FanMode",e)}function EB(e){ml(TB,"Distribution",e)}var rr=class extends ce.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},eA=class extends rr{apply(e,t){return Ht(e,t)}};eA.className="Zeros";ce.registerClass(eA);var Kf=class extends rr{apply(e,t){return vs(e,t)}};Kf.className="Ones";ce.registerClass(Kf);var tA=class extends rr{constructor(e){super();if(typeof e!="object")throw new q(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new q(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return X(()=>L(Ce(this.value),vs(e,t)))}getConfig(){return{value:this.value}}};tA.className="Constant";ce.registerClass(tA);var nA=class extends rr{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Uu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};nA.className="RandomUniform";ce.registerClass(nA);var sA=class extends rr{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`randomNormal does not support dType ${t}.`);return Xf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};sA.className="RandomNormal";ce.registerClass(sA);var rA=class extends rr{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`truncatedNormal does not support dType ${t}.`);return Df(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};rA.className="TruncatedNormal";ce.registerClass(rA);var aA=class extends rr{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return X(()=>{if(e.length!==2||e[0]!==e[1])throw new q("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,h1(e[0]))})}getConfig(){return{gain:this.gain}}};aA.className="Identity";ce.registerClass(aA);function RB(e,t="channelsLast"){let n,s;if(qt(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=Mo(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=Mo(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=Mo(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var cs=class extends rr{constructor(e){super();if(e.scale<0)throw new q(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,NB(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,EB(this.distribution),this.seed=e.seed}apply(e,t){let n=RB(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`${this.getClassName()} does not support dType ${t}.`);return Df(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return Uu(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};cs.className="VarianceScaling";ce.registerClass(cs);var Zf=class extends cs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return cs.className}};Zf.className="GlorotUniform";ce.registerClass(Zf);var Yf=class extends cs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return cs.className}};Yf.className="GlorotNormal";ce.registerClass(Yf);var Jf=class extends cs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return cs.className}};Jf.className="HeNormal";ce.registerClass(Jf);var Qf=class extends cs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return cs.className}};Qf.className="HeUniform";ce.registerClass(Qf);var em=class extends cs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return cs.className}};em.className="LeCunNormal";ce.registerClass(em);var tm=class extends cs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return cs.className}};tm.className="LeCunNormal";ce.registerClass(tm);var oA=class extends rr{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Le("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return X(()=>{if(e.length<2)throw new Le("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=Xf(n,0,1,"float32"),r=Aw.gramSchmidt(s);return e[0]>e[1]&&(r=nt(r)),L(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};oA.className="Orthogonal";ce.registerClass(oA);var Xw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Kw(e,t={}){return Hd(e,ce.SerializationMap.getMap().classNameMap,t,"initializer")}function zt(e){return V1(e)}function _t(e){if(typeof e=="string"){let t=e in Xw?Xw[e]:e;if(t==="GlorotNormal")return new Yf;if(t==="GlorotUniform")return new Zf;if(t==="HeNormal")return new Jf;if(t==="HeUniform")return new Qf;if(t==="LeCunNormal")return new em;if(t==="LeCunUniform")return new tm;{let n={};return n.className=t,n.config={},Kw(n)}}else return e instanceof rr?e:Kw(e)}function $B(){return new eA}function _B(){return new Kf}function DB(e){return new tA(e)}function FB(e){return new nA(e)}function PB(e){return new sA(e)}function OB(e){return new rA(e)}function MB(e){return new aA(e)}function zB(e){return new cs(e)}function LB(e){return new Zf(e)}function BB(e){return new Yf(e)}function WB(e){return new Jf(e)}function VB(e){return new Qf(e)}function UB(e){return new em(e)}function GB(e){return new tm(e)}function HB(e){return new oA(e)}var Zw={};Me(Zw,{Layer:()=>rt,RNN:()=>aa,RNNCell:()=>sp,activation:()=>CV,add:()=>PV,alphaDropout:()=>yU,average:()=>OV,averagePooling1d:()=>Ty,averagePooling2d:()=>Ny,averagePooling3d:()=>Ey,avgPool1d:()=>HV,avgPool2d:()=>qV,avgPool3d:()=>KV,avgPooling1d:()=>jV,avgPooling2d:()=>XV,avgPooling3d:()=>ZV,batchNormalization:()=>VV,bidirectional:()=>cU,concatenate:()=>MV,conv1d:()=>AV,conv2d:()=>yV,conv2dTranspose:()=>xV,conv3d:()=>bV,conv3dTranspose:()=>vV,convLstm2d:()=>oU,convLstm2dCell:()=>iU,cropping2D:()=>kV,dense:()=>TV,depthwiseConv2d:()=>SV,dot:()=>WV,dropout:()=>NV,elu:()=>dV,embedding:()=>FV,flatten:()=>RV,gaussianDropout:()=>AU,gaussianNoise:()=>gU,globalAveragePooling1d:()=>YV,globalAveragePooling2d:()=>JV,globalMaxPool1d:()=>pU,globalMaxPool2d:()=>hU,globalMaxPooling1d:()=>u7,globalMaxPooling2d:()=>c7,gru:()=>eU,gruCell:()=>tU,input:()=>Ek,inputLayer:()=>cV,layerNormalization:()=>UV,leakyReLU:()=>hV,lstm:()=>nU,lstmCell:()=>sU,masking:()=>xU,maxPool1d:()=>fU,maxPool2d:()=>mU,maxPooling1d:()=>d7,maxPooling2d:()=>p7,maxPooling3d:()=>QV,maximum:()=>zV,minimum:()=>LV,multiply:()=>BV,permute:()=>DV,prelu:()=>fV,reLU:()=>pV,repeatVector:()=>$V,reshape:()=>_V,rnn:()=>lU,separableConv2d:()=>wV,simpleRNN:()=>rU,simpleRNNCell:()=>aU,softmax:()=>mV,spatialDropout1d:()=>EV,stackedRNNCells:()=>uU,thresholdedReLU:()=>gV,timeDistributed:()=>dU,upSampling2d:()=>IV,zeroPadding2d:()=>GV});var jB=0;function Yw(){return jB++}var nm={};function sm(e=""){return e in nm||(nm[e]=0),nm[e]+=1,e+nm[e].toString()}function iA(e){return Array.isArray(e)&&Array.isArray(e[0])}function rm(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Ve(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new q(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ft(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new q(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function am(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var Jw="Variable",Qw=class{constructor(e,t="float32",n=Jw,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=Yw(),n=n==null?Jw:n,this.originalName=Vw(n),this.name=Uw(this.originalName),this.trainable_=s,this.constraint=r,this.val=tw(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),qB(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function qB(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function lA(e){return e.map(t=>t.read())}function uA(e){e.forEach(t=>{t[0].write(t[1])})}var Jt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},vr=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=Yw(),a!=null&&(this.originalName=Vw(a),this.name=Uw(this.originalName)),this.rank=t.length}},XB=0,om=class{constructor(e,t){this.callArgs=t,this.id=XB++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},KB=0,rt=class extends ce.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=KB++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=sa(n)+"_"+sm(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new yr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new q(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return us(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return us(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new na(`Layer ${this.name} is not connected, no input to return.`);return us(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new na(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return us(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Ct(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=Ct(this.inputSpec);if(e.length!==t.length)throw new q(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new q(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let l=Number(i),c=r.axes[i],u=l>=0?o[l]:o[o.length+l];if(c!=null&&[c,null].indexOf(u)===-1)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],l=s.shape[o];if(i!=null&&l!=null&&i!==l)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=Ct(e),s=!0;for(let a of n)if(!(a instanceof vr)){s=!1;break}let r=!0;for(let a of n)if(a instanceof vr){r=!1;break}if(s===r)throw new q("Arguments to apply() must be all SymbolicTensors or all Tensors");return gl(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of Ct(e))a.push(o.shape);this.build(us(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=Ct(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=us(i),this.activityRegularizer!=null)throw new Le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=ZB(e),o=this.computeOutputShape(a),i,l=YB(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((c,u)=>new vr(l,c,this,Ct(e),t,this.name,u)):i=new vr(l,o,this,Ct(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new na(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new na(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new yr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return am(this.weights)}build(e){this.built=!0}getWeights(e=!1){return lA(e?this.trainableWeights:this.weights)}setWeights(e){X(()=>{let t=this.weights;if(t.length!==e.length)throw new q(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=lA(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!v.arraysEqual(a.shape,i.shape))throw new q(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}uA(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new q(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():_t("zeros"));let l=s.apply(t,n),c=new Qw(l,n,e,a,o);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Ct(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=Ct(e);t=Ct(t),n=Ct(n),s=Ct(s),r=rm(r),a=rm(a);let l=[],c=[],u=[];for(let d of i)l.push(d.sourceLayer),c.push(d.nodeIndex),u.push(d.tensorIndex);new om({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function ZB(e){e=Ct(e);let t=[];for(let n of e)t.push(n.shape);return us(t)}function YB(e){return"float32"}function ek(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],l=s.nodeIndices[a],c=ek(o,i,l);for(let u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}var Ku=class extends rt{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:sm("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new q("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new q("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new q("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new vr(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new om({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new q(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Ku.className="InputLayer";ce.registerClass(Ku);function tk(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new q("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Ku({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Lo(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];te(s)}}function nk(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var sk;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(sk||(sk={}));var JB=125,Zu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},rk=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},QB=class extends Zu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=X(()=>le(this.totals[s],L(r,n)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:X(()=>{let s=L(de(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),yn(t[n])}))}},ak=class extends Zu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},ok=class extends Zu{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||yw,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=JB),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=oB(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Lo(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Lo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Lo(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Lo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Lo(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Lo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Lo(e),await this.trainEnd(e))}};function ik(e,t){return e==null&&(e={}),e instanceof Zu?[e]:Array.isArray(e)&&e[0]instanceof Zu?e:Ct(e).map(s=>new ok(s,t))}var Mr=class{constructor(){}static registerCallbackConstructor(e,t){v.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Mr.checkForDuplicate(t),Mr.constructors[e]==null&&(Mr.constructors[e]=[]),Mr.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Mr.constructors)Mr.constructors[+t].forEach(s=>{if(s===e)throw new q("Duplicate callback constructor.")})}static clear(){Mr.constructors={}}static createCallbacks(e){let t=[];for(let n in Mr.constructors){let s=+n;e>=s&&t.push(...Mr.constructors[s])}return t.map(n=>new n)}},cA=Mr;cA.constructors={};function lk(e,t,n,s,r,a,o,i,l){let c=new ak,u=[new QB,...cA.createCallbacks(t)];e!=null&&u.push(...e),u.push(c);let d=new rk(u);return d.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:d,history:c}}function wr(e,t={},n=!1){return Hd(e,ce.SerializationMap.getMap().classNameMap,t,"layer",n)}function im(e,t){return X(()=>{e.dtype!=="float32"&&(e=ge(e,"float32"));let n=we(Kd(e),t,!0),s=Lu(n.shape,ln()),r=Dn(Qr(n,s));return de(e,r)})}function yl(e,t){return X(()=>Vt(Kd(pe(t,e)),-1))}function lm(e,t){return X(()=>Vt(on(pe(t,e)),-1))}function Yu(e,t){return X(()=>{let n=pe(e,t),s=xs(on(e),ln(),Number.MAX_VALUE),r=on(de(n,s));return L(100,Vt(r,-1))})}function eW(e,t){return X(()=>{let n=xs(t,ln(),Number.MAX_VALUE),s=Ms(le(1,n)),r=xs(e,ln(),Number.MAX_VALUE),a=Ms(le(1,r));return Vt(Kd(pe(s,a)),-1)})}function tW(e,t){return X(()=>{let n=Qr(0,pe(1,L(e,t)));return Vt(Kd(n),-1)})}function nW(e,t){return X(()=>{let n=Qr(0,pe(1,L(e,t)));return Vt(n,-1)})}function sW(e,t){return X(()=>{let n=we(L(e,t),-1),s=xn(L(pe(1,e),t),-1);return Qr(0,le(1,pe(s,n)))})}function rW(e,t){return X(()=>{let n=Math.log(2),s=pe(t,e),r=pe(le(s,Wu(L(-2,s))),n);return Vt(r,-1)})}function Yd(e,t,n=!1){return X(()=>{if(n)t=Hu(t);else{let s=we(t,t.shape.length-1,!0);t=de(t,s)}return t=xs(t,ln(),1-ln()),Mt(we(L(ge(e,"float32"),Ms(t)),t.shape.length-1))})}function um(e,t,n=!1){return X(()=>{let s=ge(Md(vB(e)),"int32");t=xs(t,ln(),1-ln());let r=t.shape,a=H(_d(s,r[r.length-1]),r);return Yd(a,t,n)})}function aW(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new q(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return X(()=>{let n=Fr(t),s=Mt(on(t));return le(pe(n,L(t,e)),kf(Os(s)))})}function cm(e,t){return X(()=>{let n;return n=xs(t,ln(),1-ln()),n=Ms(de(n,pe(1,n))),Vt(aW(e,n),-1)})}function oW(e,t){return X(()=>{let n=xs(e,ln(),1),s=xs(t,ln(),1);return we(L(e,Ms(de(n,s))),-1)})}function iW(e,t){return X(()=>{let n=Ms(le(ln(),t));return Vt(pe(t,L(e,n)),-1)})}function dA(e,t){return X(()=>{let n=im(e,-1),s=im(t,-1),r=L(n,s);return Mt(we(r,-1))})}var dm={meanSquaredError:yl,meanAbsoluteError:lm,meanAbsolutePercentageError:Yu,meanSquaredLogarithmicError:eW,squaredHinge:tW,hinge:nW,categoricalHinge:sW,logcosh:rW,categoricalCrossentropy:Yd,sparseCategoricalCrossentropy:um,binaryCrossentropy:cm,kullbackLeiblerDivergence:oW,poisson:iW,cosineProximity:dA};function pA(e){if(typeof e=="string"){if(e in dm)return dm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new q(t)}else return e}function hA(e,t){return X(()=>{let n=L(.5,zs(t)),s=jf(bs(t,n),e.dtype);return Vt(Ps(e,s),-1)})}function fA(e,t){return X(()=>jf(Ps(ys(e,-1),ys(t,-1)),"float32"))}function uk(e,t){return X(()=>ge(we(mr(Ps(e,1),Ps(t,1))),"float32"))}function lW(e,t){return X(()=>ge(we(mr(Ps(e,1),Ps(t,0))),"float32"))}function uW(e,t){return X(()=>ge(we(mr(Ps(e,0),Ps(t,1))),"float32"))}function ck(e,t){return X(()=>{let n=uk(e,t),s=uW(e,t),r=le(n,s);return ge(Vn(bs(r,0),de(n,r),0),"float32")})}function cW(e,t){return X(()=>{let n=uk(e,t),s=lW(e,t),r=le(n,s);return ge(Vn(bs(r,0),de(n,r),0),"float32")})}function dk(e,t){return cm(e,t)}function pk(e,t){return e.rank===t.rank&&(e=Ge(e,[e.rank-1])),t=ys(t,-1),t.dtype!==e.dtype&&(t=ge(t,e.dtype)),ge(Ps(e,t),"float32")}var dW=yl,pW=yl,hW=lm,fW=lm,mW=Yu,gW=Yu,mA=Yd,AW=dA,hk=um,pm={binaryAccuracy:hA,categoricalAccuracy:fA,precision:ck,categoricalCrossentropy:mA,sparseCategoricalCrossentropy:hk,mse:dW,MSE:pW,mae:hW,MAE:fW,mape:mW,MAPE:gW,cosine:AW};function yW(e){if(typeof e=="string"&&e in pm)return pm[e];if(typeof e!="string"&&e!=null)return e;throw new q(`Unknown metric ${e}`)}function hm(e){if(Pr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(dm))if(dm[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(pm))if(pm[n]===e){t=n;break}return t!==void 0?t:e.name}}function xW(e){let t={Adagrad:()=>pl.adagrad(.01),Adadelta:()=>pl.adadelta(1,.95,ln()),Adam:()=>pl.adam(.001,.9,.999,ln()),Adamax:()=>pl.adamax(.002,.9,.999,ln(),0),RMSProp:()=>pl.rmsprop(.001,.9,0,ln()),SGD:()=>pl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new q(`Unknown Optimizer ${e}`)}var fk=1*1024*1024;function mk(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!gA(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>fk&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${fk}.`)}}function gA(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!gA(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!gA(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function bW(e,t,n,s=console.log){let r=wW(e),a=["Layer (type)","Output shape","Param #"];r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let o;if(!r){a.push("Receives inputs"),o=[];for(let u in e.nodesByDepth)o.push(...e.nodesByDepth[u])}s("_".repeat(t)),fm(a,n,s),s("=".repeat(t));let i=e.layers;for(let u=0;u<i.length;++u)r?kW(i[u],n,s):IW(i[u],n,o,s),s((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=vW(e),c=am(e.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function vW(e){let t;return e.collectedTrainableWeights!=null?t=am(e.collectedTrainableWeights):t=am(e.trainableWeights),t}function wW(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function fm(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function kW(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(i){s="multiple"}let r=e.name,a=e.getClassName(),o=[`${r} (${a})`,s,e.countParams().toString()];fm(o,t,n)}function IW(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}let a=[];for(let u of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(u)===-1))for(let d=0;d<u.inboundLayers.length;++d){let p=u.inboundLayers[d].name,h=u.nodeIndices[d],f=u.tensorIndices[d];a.push(`${p}[${h}][${f}]`)}let o=e.name,i=e.getClassName(),l=a.length===0?"":a[0],c=[`${o} (${i})`,r,e.countParams().toString(),l];fm(c,t,s);for(let u=1;u<a.length;++u)fm(["","","",a[u]],t,s)}function gk(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Jd(e,t){if(e===null)return null;if(typeof e=="string")return fl(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];gk(t,r,a)?n.push(a):n.push(Jd(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=fl(s);n[a]=Jd(r,a)}}return n}}function AA(e,t){if(e==null)return null;if(typeof e=="string")return sa(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];gk(t,r,a)?n.push(a):n.push(AA(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=sa(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=AA(r,s)}return n}}var yA="0.0.0";function SW(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ge(t,e.dtype)}catch(n){throw new q(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var xl=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof xl)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=SW(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new q(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof vr){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof vr){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&te(this.id2Mask)}},xA={},Ak={};function Qd(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],c=t.names();for(let f of i)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let u=i.join(",")+"|"+t.names().join(","),d,p;if(xA[u]==null){let f=CW(o,t);d=f.sorted,p=f.recipientCounts,xA[u]=d,Ak[u]=p}d=xA[u],p={},r||Object.assign(p,Ak[u]);let h=new xl(t);for(let f=0;f<d.length;++f){if(s!=null){let R=pf().numTensors;R>s.maxNumTensors&&(s.maxNumTensors=R),R<s.minNumTensors&&(s.minNumTensors=R)}let m=d[f],g=m.sourceLayer;if(g instanceof Ku)continue;let A=[],x=[],y=[],b=!1;for(let R of m.inputs){let M=h.getValue(R),D=h.getMask(R);A.push(M),x.push(D),D!=null&&(b=!0),r||(p[R.name]--,p[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!M.isDisposed&&R.sourceLayer.stateful!==!0&&y.push(M))}b&&(n=n||{},n.mask=x[0]);let w=Ct(g.apply(A,n)),k=null;g.supportsMasking&&(k=g.computeMask(A,x));let S=NW(m),N=Array.isArray(S)?S:[S];for(let R=0;R<N.length;++R){h.hasKey(N[R])||h.add(N[R],w[R],Array.isArray(k)?k[0]:k);let M=i.indexOf(N[R].name);M!==-1&&(l[M]=w[R])}r||te(y)}return h.disposeMasks(),a?l:l[0]}function CW(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=yk(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=yk(a,t);for(let l of o)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(c=>s[l].add(c))}}return{sorted:n,recipientCounts:TW(s)}}function TW(e){let t={};for(let n in e)t[n]=e[n].size;return t}function yk(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),s.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!n.has(c.name)&&a.push(c)}}return{sorted:s,recipientMap:r}}function NW(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var zr=class extends rt{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let A=this.getClassName().toLowerCase();this.name=sm(A)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Oo(this.inputs).length!==this.inputs.length)throw new q(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(A=>A.name)}`);Oo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(A=>A.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let A of this.outputs){let x=A.sourceLayer,y=A.nodeIndex,b=A.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(b)}for(let A of this.inputs){let x=A.sourceLayer,y=A.nodeIndex,b=A.tensorIndex;Pr(y===0,"input layer has >1 nodes"),Pr(b===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let A=0;A<this.inputLayers.length;A++){let x=this.inputLayers[A];if(!(x instanceof Ku))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${A} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let A of this.outputLayers)this.outputNames.push(A.name);this.internalInputShapes=this.inputs.map(A=>A.shape),this.internalOutputShapes=this.outputs.map(A=>A.shape);let t={},n={},s={},r={},a={},o=[],i=(A,x,y,b,w,k)=>{(b==null||w==null||k==null)&&(b=A.sourceLayer,w=A.nodeIndex,k=A.tensorIndex);let S=b.inboundNodes[w];if(y.indexOf(S)!==-1)throw new yr(`The tensor ${A.name} at layer "${b.name}" is part of a cycle.`);if(x.indexOf(S)!==-1)return;this.containerNodes.add(zr.nodeKey(b,w)),b.id in a||(a[b.id]=Object.keys(a).length),y.indexOf(S)===-1&&y.push(S);let N=S.inboundLayers.length;for(let R=0;R<N;R++){let M=S.inputTensors[R],D=S.inboundLayers[R],$=S.nodeIndices[R],T=S.tensorIndices[R];i(M,x,y,D,$,T)}for(x.push(S);y.indexOf(S)>=0;)y.splice(y.indexOf(S),1);o.push(S)},l=[],c=[];for(let A of this.outputs)i(A,l,c);let u=o.slice().reverse();for(let A of u){n[A.id]=A,A.id in t||(t[A.id]=0);let x=t[A.id],y=s[A.outboundLayer.id]==null?0:s[A.outboundLayer.id];x=Math.max(x,y),s[A.outboundLayer.id]=x,r[A.outboundLayer.id]=A.outboundLayer,t[A.id]=x;for(let b=0;b<A.inboundLayers.length;b++){let w=A.inboundLayers[b],k=A.nodeIndices[b],S=w.inboundNodes[k],N=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(x+1,N),n[S.id]=S}}let d={};for(let A in t){let x=t[A];x in d||(d[x]=[]),d[x].push(n[A])}let p={};for(let A in s){let x=s[A];x in p||(p[x]=[]),p[x].push(r[A])}let h=Object.keys(p).map(A=>parseInt(A,10)).sort(Hf);this.layers=[];for(let A of h){let x=p[A];x.sort((y,b)=>{let w=a[y.id],k=a[b.id];return w<k?-1:w>k?1:0});for(let y of x)y instanceof zr&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=p,h=Object.keys(d).map(A=>parseInt(A,10)).sort(Hf);let f=this.inputs.slice(),m=[];for(let A of h)for(let x of d[A]){let y=x.outboundLayer;if(y!=null){for(let b of x.inputTensors)if(f.indexOf(b)===-1)throw new yr(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${y.name}". The following previous layers were accessed without issue: ${m}`);for(let b of x.outputTensors)f.push(b);m.push(y.name)}}this.nodesByDepth=d;let g=this.layers.map(A=>A.name);for(let A of g){let x=g.filter(y=>y===A).length;if(x!==1)throw new yr(`The name "${A}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new om({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(A=>null),outputMasks:this.outputs.map(A=>null),inputShapes:this.inputs.map(A=>A.shape),outputShapes:this.outputs.map(A=>A.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new q("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new q(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new q(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new q(`${a.length} of ${s} weights are not set: ${a}`)}uA(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${yA}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=AA(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return X(()=>{e=Ct(e);let n=new xl;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return Qd(this.outputs,n,t)})}computeMask(e,t){return X(()=>{e=Ct(e);let n;return t==null?n=hl(null,e.length):n=Ct(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=rm(e);if(t.length!==this.inputLayers.length)throw new q(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],c=i.name+"_0_0";n[c]=l}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Hf);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let l of i){let c=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(c.id)!==-1)continue;let u=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],A=l.tensorIndices[f],x=`${m.name}_${g}_${A}`,y=n[x];u.push(y)}let d=c.computeOutputShape(us(u)),p=rm(d),h=c.inboundNodes.indexOf(l);for(let f=0;f<p.length;f++){let m=`${c.name}_${h}_${f}`;n[m]=p[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],u=`${i.name}_${l}_${c}`;a.push(u)}for(let o=0;o<a.length;o++){let i=a[o];Pr(i in n),r.push(n[i])}return us(r)}runInternalGraph(e,t){t==null&&(t=hl(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],c=e[i],u=t[i];n[l.id]=[c,u]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Hf);for(let i of s){let l=this.nodesByDepth[i];for(let c of l){let u=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,h=new Array;for(let f of d)f.id in n&&h.push(n[f.id]);if(h.length===d.length){let f={},m,g,A,x;if(c.callArgs!=null&&(f=c.callArgs),h.length===1){let[y,b]=h[0];f.mask==null&&(f.mask=b),A=Ct(u.call(y,f)),x=Ct(u.computeMask(y,b)),m=[y],g=[b]}else m=h.map(y=>y[0]),g=h.map(y=>y[1]),f.mask==null&&(f.mask=g),A=Ct(u.call(m,f)),x=Ct(u.computeMask(m,g));if(u.activityRegularizer)throw new Le("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<p.length;++y){let b=p[y],w=A[y],k=x[y];n[b.id]=[w,k]}}}}let r=[],a=[],o=[];for(let i of this.outputs){Pr(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,c]=n[i.id];o.push(l.shape),r.push(l),a.push(c)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof zr?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=zr.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new q(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new q("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new q(`No such layer: ${e}`)}calculateLosses(){return X(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=zr.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let u=0;u<a.inboundNodes.length;u++){let d=a.inboundNodes[u],p=zr.nodeKey(a,u),h={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],A=d.nodeIndices[m],x=d.tensorIndices[m],y=zr.nodeKey(g,A),b=t[y];b==null&&(b=0),f.push([g.name,b,x,h])}l.push(f)}}}let c={};c.name=a.name,c.className=o,c.config=i,c.inboundNodes=l,n.push(c)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=zr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.inputLayersTensorIndices[a];s.push([o.name,c,u])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=zr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.outputLayersTensorIndices[a];r.push([o.name,c,u])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let A=[],x;for(let y of g){let b=y[0],w=y[1],k=y[2];if(x=y[3]==null?{}:y[3],!(b in r)){o(m,g);return}let S=r[b];if(S.inboundNodes.length<=w){o(m,g);return}let N=S.inboundNodes[w];A.push(N.outputTensors[k])}A.length>0&&m.apply(us(A),x)}function l(m){let g=m.name,A=wr(m,t.customObjects!=null?t.customObjects:{});A.setFastWeightInitDuringBuild(s),r[g]=A,m.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new q(`Corrupted configuration, expected array for nodeData: ${y}`);o(A,y)})}let c=t.name,u=t.layers;for(let m of u)l(m);for(;!aB(a);)for(let m of u){let g=r[m.name];if(g.name in a){let A=a[g.name];delete a[g.name];for(let x of A)i(g,x)}}let d=[],p=[],h=t.inputLayers;for(let m of h){let g=m[0],A=m[1],x=m[2];Pr(g in r);let b=r[g].inboundNodes[A].outputTensors;d.push(b[x])}let f=t.outputLayers;for(let m of f){let g=m[0],A=m[1],x=m[2];Pr(g in r);let b=r[g].inboundNodes[A].outputTensors;p.push(b[x])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new q("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){X(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function EW(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function xk(e,t){return EW(e,t,"classWeight")}async function bk(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=X(()=>{if(e.shape.length===1)return Bn(e);if(e.shape.length===2){if(e.shape[1]>1)return ys(e,1);if(e.shape[1]===1)return H(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());te(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),St(o,"float32")}else return null}function RW(e,t){return L(e,t)}var $W=32;function vk(e,t){let n,s,r=t;n=r.xs,s=r.ys,v.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=wk("input",e.inputNames,n),o=wk("output",e.outputNames,s),i=a[0].shape[0];v.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)v.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)v.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function wk(e,t,n){if(n instanceof tt)return[n];if(Array.isArray(n))return v.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new q(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function _W(e){if(e.length===3)throw new Le("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function DW(e,t,n){let s=n.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),v.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),v.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(kk(n.validationData))v.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=_W(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=ik(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:h}=lk(u,d,n.epochs,null,null,FW(t,n),null,r,c);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await p.onEpochBegin(f);let A=0,x=0;for(s||(m=await t.iterator());s?A<n.batchesPerEpoch:!0;){let y=await m.next();if(s&&y.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${A} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(y.value!=null){let{xs:b,ys:w}=vk(e,y.value),k={};k.batch=x,k.size=b[0].shape[0],await p.onBatchBegin(x,k);let S=[];if(n.classWeight!=null){let M=xk(n.classWeight,e.outputNames);for(let D=0;D<M.length;++D)S.push(await bk(w[D],null,M[D]))}let N=b.concat(w).concat(S),R=i(N);te(N);for(let M=0;M<l.length;++M){let D=l[M],$=R[M];k[D]=$,yn($)}await p.onBatchEnd(x,k),nk(k),x++,A++}if(s?A>=n.batchesPerEpoch:y.done){if(r){let b;kk(n.validationData)?b=Ct(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=Ct(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?$W:n.validationBatchSize,verbose:0}));for(let w=0;w<e.metricsNames.length;++w)g[`val_${e.metricsNames[w]}`]=b[w]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function FW(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function kk(e){return typeof e.iterator=="function"}function PW(e){return typeof e.next=="function"}async function OW(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Le("Verbose mode is not implemented yet.");v.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=PW(t)?t:await t.iterator(),i=0,l=0;for(;s?l<n.batches:!0;){let c=await o.next();if(a=X(()=>{if(c.value){let{xs:u,ys:d}=vk(e,c.value),p=u.concat(d),h=X(()=>r(p));if(te(p),l===0)for(let m=0;m<h.length;++m)a.push(Ce(0));let f=p[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],A=a[m];a[m]=X(()=>le(a[m],L(f,g))),l>0&&te(A)}te(h),i+=f,++l}return a}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<a.length;++c){let u=a[c];a[c]=de(a[c],i),te(u)}return us(a)}function bA(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function ep(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>Al(s,t,n-t)):Al(e,t,n-t)}function vA(e,t){return X(()=>e==null?null:Array.isArray(e)?e.map(n=>vA(n,t)):jw(e,t.dtype==="int32"?t:ge(t,"int32")))}function wA(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function MW(e,t,n,s,r,a,o,i,l,c,u,d,p,h,f){r==null&&(r=32),a==null&&(a=1),u==null&&(u=!0),p==null&&(p=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new q("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),A;g!=null&&(A=xr(0,g)),o==null&&(o=1);let{callbackList:x,history:y}=lk(i,o,a,p,g,h,r,m,d);x.setModel(e),e.history=y,await x.onTrainBegin(),e.stopTraining_=!1;for(let b=p;b<a;++b){await x.onEpochBegin(b);let w={};if(h!=null)throw new Le("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Le("batch shuffling is not implemneted yet");u&&v.shuffle(A);let k=St(A),S=wA(g,r);for(let N=0;N<S.length;++N){let R={};if(await x.onBatchBegin(N,R),X(()=>{let M=S[N][0],D=S[N][1],$=Al(k,M,D-M);R.batch=N,R.size=D-M;let T=vA(n,$),P=t(T);for(let W=0;W<s.length;++W){let K=s[W],z=P[W];R[K]=z,yn(z)}if(N===S.length-1&&m){let W=e.testLoop(l,c,r);for(let K=0;K<s.length;++K){let z=s[K],j=W[K];yn(j),w["val_"+z]=j}}}),await x.onBatchEnd(N,R),nk(R),e.stopTraining_)break}k.dispose()}if(await x.onEpochEnd(b,w),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}async function zW(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,l,c,u;try{let d=s.batchSize==null?32:s.batchSize;bA(d);let p=!1,h=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,p,d);r=h[0],a=h[1],u=h[2];let f=!1,m;if(s.validationData!=null&&s.validationData.length>0){if(f=!0,s.validationData.length===2)o=s.validationData[0],i=s.validationData[1];else throw s.validationData.length===3?new Le("validationData including sample weights is not supported yet."):new q(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let S=!0,N=await e.standardizeUserData(o,i,null,null,S,d);l=N[0],c=N[1],m=l.concat(c)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){f=!0;let S=Math.floor(r[0].shape[0]*(1-s.validationSplit)),N=r[0].shape[0];l=ep(r,S,N),r=ep(r,0,S),c=ep(a,S,N),a=ep(a,0,S),m=l.concat(c)}else s.validationSteps!=null&&(f=!0);let g=r.concat(a).concat(u);e.checkTrainableWeightsConsistency();let A=e.makeTrainFunction(),x=e.getDedupedMetricsNames(),y,b;f?(e.makeTestFunction(),y=e.testFunction,b=x.slice().concat(x.map(S=>"val_"+S))):(y=null,m=[],b=x.slice());let w=ik(s.callbacks,s.yieldEvery);return await MW(e,A,g,x,d,s.epochs,s.verbose,w,y,m,s.shuffle,b,s.initialEpoch,null,null)}finally{e.isTraining=!1,bl(r,t),bl(a,n),bl(l,o),bl(c,i),u!=null&&te(u)}}function Ik(e){let t=[];e instanceof tt&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(Xd(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function bl(e,t){if(e==null)return;let n=[];if(t instanceof tt)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof tt)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function LW(e){return e instanceof tt}function kA(e){return Array.isArray(e)}function Sk(e){return!LW(e)&&!kA(e)}function Ck(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(kA(e)&&e.length>0)o=!0;else if(Sk(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new q(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(Sk(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new q(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(kA(e)){if(e=e,e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new q(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Ik(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u>=0&&c!==u)throw new q(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function BW(e,t,n){let s=Oo(e.map(a=>a.shape[0]));s.sort();let r=Oo(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new q(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new q(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!v.arraysEqual(s,r))throw new q(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function WW(e,t,n){let s=[yl,cm,Yd];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===Yd&&a.shape[a.shape.length-1]===1)throw new q(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let l=a.shape.slice(1),c=i.slice(1);for(let u=0;u<l.length;++u){let d=l[u],p=c[u];if(p!=null&&d!==p)throw new q(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Tk(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new q(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u!==c)throw new q(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function VW(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var UW="layers-model",ra=class extends zr{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new q("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");bW(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=xW(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ta))throw new q("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new q(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(pA(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new q(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>pA(o))}else{let a=pA(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],gl("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=VW(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};gl("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(l=>{let c="",u,d,p;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===cm?["accuracy","acc"].indexOf(h)!==-1?d=hA:["crossentropy","ce"].indexOf(h)!==-1&&(d=dk):this.lossFunctions[a]===um?["accuracy","acc"].indexOf(h)!==-1?d=pk:["crossentropy","ce"].indexOf(h)!==-1&&(d=hk):["accuracy","acc"].indexOf(h)!==-1?d=fA:["crossentropy","ce"].indexOf(h)!==-1&&(d=mA);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),p=d,u=c+g}else p=yW(h),u=c+hm(h);let f;gl(u,()=>{f=p}),r(a,u,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;bA(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,s,n.verbose,n.steps);return us(l)}finally{bl(a[0],e),bl(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),OW(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new q(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new q(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new q("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new xl;if(e instanceof tt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new q(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new q(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=Qd(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=hl(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new q(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return X(()=>{let s=this.checkNumSamples(e);if(n)throw new Le("Verbose predictLoop() is not implemented yet.");let r=wA(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)X(()=>{let l=r[o][0],c=r[o][1],u=ep(e,l,c),d=[];if(Array.isArray(u))for(let h=0;h<u.length;++h)d.push({key:this.inputs[h],value:u[h]});else d.push({key:this.inputs[0],value:u});let p=new xl(d);return Qd(this.outputs,p)}).forEach((l,c)=>a[c].push(l));return us(a.map(o=>It(o,0)))})}predict(e,t={}){let n=Ik(e);Tk(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return bA(s),this.predictLoop(n,s)}finally{bl(n,e)}}predictOnBatch(e){Tk(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new yr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===um?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=Ck(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ck(t,this.feedOutputNames,r,!1,"target"),BW(e,t,null),WW(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!=0)throw new q(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let c=xk(s,this.outputNames);l=[];for(let u=0;u<c.length;++u)l.push(await bk(i[u],null,c[u]))}return[o,i,l]}testLoop(e,t,n,s=0,r){return X(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new Le("Verbose mode is not implemented yet.");if(r!=null)throw new Le("steps mode in testLoop() is not implemented yet");{let i=wA(a,n),l=St(xr(0,a));for(let c=0;c<i.length;++c){let u=i[c][0],d=i[c][1],p=Al(l,u,d-u),h=vA(t,p),f=e(h);if(c===0)for(let m=0;m<f.length;++m)o.push(Ce(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=le(o[m],L(d-u,g))}}for(let c=0;c<o.length;++c)o[c]=de(o[c],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;Fw(e,s)>1&&(r+=`_${Fw(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let u=[];for(let f=0;f<this.inputs.length;++f)u.push({key:this.inputs[f],value:n[f]});let d=new xl(u),p=Qd(this.outputs,d,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](s[f],p[f]);r[f]!=null&&(g=RW(g,r[f]));let A=Vt(g);t.push(A),f===0?h=g:h=le(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],A=this.metricsTensors[f][1];m=Vt(g(s[A],p[A]))}yn(m),a.push(m)}return h=Vt(h),this.calculateLosses().forEach(f=>{h=le(h,f)}),h},i=this.collectedTrainableWeights.map(u=>u.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>X(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:s[l]});let o=new xl(a),i=Qd(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let c=this.lossFunctions[l],u=Vt(c(r[l],i[l]));l===0?n=u:n=le(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let c=this.metricsTensors[l][0],u=this.metricsTensors[l][1],d=Vt(c(r[u],i[u]));t.push(d)}return t})}async fit(e,t,n={}){return zW(this,e,t,n)}async fitDataset(e,t){return DW(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let l of o){let c=await l.data();i.push(c[0])}return te(o),us(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=pf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-pf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=sa(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>sa(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=sa(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[sa(hm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>sa(hm(e)));{let e={};for(let t in this.metrics)e[t]=sa(hm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Jd(e.optimizer_config),n=wr(t),s;if(typeof e.loss=="string")s=fl(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>fl(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=fl(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>fl(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=fl(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=os.getSaveHandlers(e);if(l.length===0)throw new q(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new q(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new q("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await os.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:UW,generatedBy:`TensorFlow.js tfjs-layers v${yA}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:c,specs:u}=await os.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...u),n.data=os.concatenateArrayBuffers([n.data,c])}if(this.userDefinedMetadata!=null){let l=!0;mk(this.userDefinedMetadata,this.name,l),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){mk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};ra.className="Model";ce.registerClass(ra);var Nk=class extends ra{};Nk.className="Functional";ce.registerClass(Nk);async function GW(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=Jd(n),r=wr(s,t);if(e.weightsManifest!=null){let a=await os.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),te(a)}return r}async function HW(e,t){if(t==null&&(t={}),typeof e=="string"){let n=os.getLoadHandlers(e,t);if(n.length===0)n.push(os.browserHTTPRequest(e,t));else if(n.length>1)throw new q(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return jW(e,void 0,t)}async function jW(e,t,n){if(n==null&&(n={}),e.load==null)throw new q("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&a,i=wr(Jd(r),t,o),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new q("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:c,optimizerWeights:u}=qW(s.weightData,s.weightSpecs);i.loadWeights(c,a),i.optimizer!=null&&u.length>0&&await i.optimizer.setWeights(u),te(c),te(u.map(d=>d.tensor))}return i}function qW(e,t){let n=os.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var IA=class extends ra{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:sm("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new q(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof IA||e instanceof ra,n;if(t){if(n=e,n.outputs.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new q("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new q("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=tk({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new q(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ek(this.outputs[0])}this.inboundNodes=[],new om({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:hl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(ft(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ra({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new yr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new yr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new yr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new yr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new q("Legacy serialization format not supported yet.");r=t}else v.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof IA))throw new Le(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let c=wr(i,void 0,s);s&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new q("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new q("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},mm=IA;mm.className="Sequential";ce.registerClass(mm);function XW(e){return new ra(e)}function KW(e){return new mm(e)}function ZW(e,t){return t==null&&(t={}),HW(e,t)}function Ek(e){return tk(e)}function YW(e,t){cA.registerCallbackConstructor(e,t)}var ds=class extends ce.Serializable{getConfig(){return{}}},Rk=class extends ds{apply(e,t=1){return kB(e,t)}};Rk.className="elu";ce.registerClass(Rk);var $k=class extends ds{apply(e){return C1(e)}};$k.className="selu";ce.registerClass($k);var _k=class extends ds{apply(e){return Fr(e)}};_k.className="relu";ce.registerClass(_k);var Dk=class extends ds{apply(e){return X(()=>zd(6,Fr(e)))}};Dk.className="relu6";ce.registerClass(Dk);var Fk=class extends ds{apply(e){return e}};Fk.className="linear";ce.registerClass(Fk);var Pk=class extends ds{apply(e){return Wn(e)}};Pk.className="sigmoid";ce.registerClass(Pk);var Ok=class extends ds{apply(e){return SB(e)}};Ok.className="hardSigmoid";ce.registerClass(Ok);var Mk=class extends ds{apply(e){return Wu(e)}};Mk.className="softplus";ce.registerClass(Mk);var zk=class extends ds{apply(e){return IB(e)}};zk.className="softsign";ce.registerClass(zk);var Lk=class extends ds{apply(e){return Ou(e)}};Lk.className="tanh";ce.registerClass(Lk);var SA=class extends ds{apply(e,t=-1){return Hu(e,t)}};SA.className="softmax";ce.registerClass(SA);var Bk=class extends ds{apply(e,t=-1){return m1(e,t)}};Bk.className="logSoftmax";ce.registerClass(Bk);var Wk=class extends ds{apply(e,t=1){return X(()=>L(Wn(L(e,t)),e))}};Wk.className="swish";ce.registerClass(Wk);var Vk=class extends ds{apply(e){return X(()=>L(e,Ou(Wu(e))))}};Vk.className="mish";ce.registerClass(Vk);function Bo(e){return e.getClassName()}function CA(e,t={}){return Hd(e,ce.SerializationMap.getMap().classNameMap,t,"activation")}function Wo(e){if(e==null){let t={};return t.className="linear",t.config={},CA(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},CA(t)}else return e instanceof ds?e:CA(e)}function TA(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var Uk=class extends ce.Serializable{},tp=class extends Uk{constructor(e){super();TA(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return X(()=>{let t=Ht([1]);return this.hasL1&&(t=le(t,we(L(this.l1,on(e))))),this.hasL2&&(t=le(t,we(L(this.l2,Kd(e))))),H(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};tp.className="L1L2";ce.registerClass(tp);function JW(e){return TA(e),new tp({l1:e!=null?e.l1:null,l2:0})}function QW(e){return TA(e),new tp({l2:e!=null?e.l2:null,l1:0})}var Gk={l1l2:"L1L2"};function bt(e){return V1(e)}function Hk(e,t={}){return Hd(e,ce.SerializationMap.getMap().classNameMap,t,"regularizer")}function Dt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Gk?Gk[e]:e,config:{}};return Hk(n)}else return e instanceof Uk?e:Hk(e)}var NA=class extends rt{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ve(e);let n=Fr(e);return this.maxValue!=null&&(n=xs(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};NA.className="ReLU";ce.registerClass(NA);var EA=class extends rt{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ve(e);return wf(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};EA.className="LeakyReLU";ce.registerClass(EA);var RA=class extends rt{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=_t(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Dt(e.alphaRegularizer),this.alphaConstraint=cn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new q(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=ft(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Jt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ve(e),Ef(e,this.alpha.read())}getConfig(){let e={alphaInitializer:zt(this.alphaInitializer),alphaRegularizer:bt(this.alphaRegularizer),alphaConstraint:un(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};RA.className="PReLU";ce.registerClass(RA);var $A=class extends rt{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Le(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ve(e);return Od(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};$A.className="ELU";ce.registerClass($A);var _A=class extends rt{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ve(e);return L(n,ge(bs(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};_A.className="ThresholdedReLU";ce.registerClass(_A);var DA=class extends rt{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new SA().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Ve(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};DA.className="Softmax";ce.registerClass(DA);function Ju(e,t,n){if(typeof e=="number")return hl(e,t);if(e.length!==t)throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!xB(r))throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function kr(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function Lr(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+zo([n-t,0]);else if(s==="same")e=e*t;else throw new q(`Unsupport padding mode: ${s}.`);return e}function FA(e,t){return X(()=>(qt(t),t==="channelsFirst"?nt(e,[0,2,3,1]):e))}function jk(e,t){return X(()=>(qt(t),t==="channelsFirst"?nt(e,[0,2,3,4,1]):e))}function eV(e,t,n,s=1,r="valid",a,o=1){return X(()=>{if(a==null&&(a=Ar()),qt(a),e.shape.length!==3)throw new q(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new q(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new q(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=nt(e,[0,2,1])),r==="causal")throw new Le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=i1(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=br(i,n)),i})}function qk(e,t,n,s=[1,1],r="valid",a,o,i=null){return X(()=>{if(a==null&&(a=Ar()),qt(a),e.rank!==3&&e.rank!==4)throw new q(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new q(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=FA(e,a);if(r==="causal")throw new Le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Fo.conv2d({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=nt(l,[0,3,1,2])),l})}function tV(e,t,n,s=[1,1,1],r="valid",a,o){return X(()=>{if(a==null&&(a=Ar()),qt(a),e.rank!==4&&e.rank!==5)throw new q(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new q(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=jk(e,a);if(r==="causal")throw new Le("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=c1(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=br(i,n)),a==="channelsFirst"&&(i=nt(i,[0,4,1,2,3])),i})}var PA=class extends rt{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",PA.verifyArgs(t),this.rank=e,bn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Le(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ju(t.kernelSize,e,"kernelSize"),this.strides=Ju(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Bs(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,qt(this.dataFormat),this.activation=Wo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=_t(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=cn(t.biasConstraint),this.biasRegularizer=Dt(t.biasRegularizer),this.activityRegularizer=Dt(t.activityRegularizer),this.dilationRate=Ju(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new q(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new q(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new q(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Pr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!G1(e.kernelSize,"number",1,3))throw new q(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Bo(this.activation),useBias:this.useBias,biasInitializer:zt(this.biasInitializer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),biasConstraint:un(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},np=class extends PA{constructor(e,t){super(e,t);this.kernel=null,np.verifyArgs(t),this.filters=t.filters,bn(this.filters,"filters"),this.kernelInitializer=_t(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=cn(t.kernelConstraint),this.kernelRegularizer=Dt(t.kernelRegularizer)}build(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return X(()=>{e=Ve(e);let n,s=this.bias==null?null:this.bias.read(),r=Ow(this.activation.getClassName());if(r!=null&&this.rank===2)n=qk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=eV(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=qk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=tV(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Le("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=ft(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=kr(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:zt(this.kernelInitializer),kernelRegularizer:bt(this.kernelRegularizer),kernelConstraint:un(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new q(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Xk=class extends np{constructor(e){super(2,e);Xk.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!G1(e.kernelSize,"number",1,2))throw new q(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},gm=Xk;gm.className="Conv2D";ce.registerClass(gm);var Kk=class extends np{constructor(e){super(3,e);Kk.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new q(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},Am=Kk;Am.className="Conv3D";ce.registerClass(Am);var OA=class extends gm{constructor(e){super(e);if(this.inputSpec=[new Jt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ft(e),e.length!==4)throw new q("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{let n=Ve(e);if(n.shape.length!==4)throw new q(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],l=s[o],c=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=Lr(i,d,c,this.padding),f=Lr(l,p,u,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=nt(n,[0,2,3,1]));let g=u1(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=nt(g,[0,3,1,2])),this.bias!=null&&(g=br(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=ft(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Lr(t[s],i,a,this.padding),t[r]=Lr(t[r],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};OA.className="Conv2DTranspose";ce.registerClass(OA);var MA=class extends Am{constructor(e){super(e);if(this.inputSpec=[new Jt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ft(e),e.length!==5)throw new q("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{let n=Ve(e);if(n.shape.length!==5)throw new q(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=s[i],c=s[a],u=s[o],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],A=Lr(l,f,d,this.padding),x=Lr(c,m,p,this.padding),y=Lr(u,g,h,this.padding),b=[r,A,x,y,this.filters];this.dataFormat!=="channelsLast"&&(n=nt(n,[0,2,3,4,1]));let w=Tv(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=nt(w,[0,4,1,2,3])),this.bias!==null&&(w=br(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=ft(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[s]=Lr(t[s],c,o,this.padding),t[r]=Lr(t[r],u,i,this.padding),t[a]=Lr(t[a],d,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};MA.className="Conv3DTranspose";ce.registerClass(MA);var Zk=class extends np{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new q("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new q("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new q(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=_t(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Dt(t.depthwiseRegularizer),this.depthwiseConstraint=cn(t.depthwiseConstraint),this.pointwiseInitializer=_t(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Dt(t.pointwiseRegularizer),this.pointwiseConstraint=cn(t.pointwiseConstraint)}build(e){if(e=ft(e),e.length<this.rank+2)throw new q(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Jt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{e=Ve(e);let n;if(this.rank===1)throw new Le("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=nt(e,[0,2,3,1])),n=Xv(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=br(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=nt(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=zt(this.depthwiseInitializer),e.pointwiseInitializer=zt(this.pointwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.pointwiseRegularizer=bt(this.pointwiseRegularizer),e.depthwiseConstraint=un(this.depthwiseConstraint),e.pointwiseConstraint=un(this.pointwiseConstraint),e}};Zk.className="SeparableConv";var zA=class extends Zk{constructor(e){super(2,e)}};zA.className="SeparableConv2D";ce.registerClass(zA);var Yk=class extends np{constructor(e){super(1,e);Yk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!G1(e.kernelSize,"number",1,1))throw new q(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},LA=Yk;LA.className="Conv1D";ce.registerClass(LA);var BA=class extends rt{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return X(()=>{if(e=Ve(e),this.dataFormat==="channelsLast"){let n=qf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return qf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=qf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return qf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};BA.className="Cropping2D";ce.registerClass(BA);var WA=class extends rt{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,qt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,gB(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return X(()=>{let n=Ve(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=nt(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?Ie.resizeNearestNeighbor(n,[r,a]):Ie.resizeBilinear(n,[r,a]);return nt(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Ie.resizeNearestNeighbor(n,[r,a]):Ie.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};WA.className="UpSampling2D";ce.registerClass(WA);function nV(e,t,n=[1,1],s="valid",r,a){return X(()=>{r==null&&(r=Ar()),qt(r);let o=FA(e,r);if(e.rank!==4)throw new q(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new q(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Pd(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=nt(o,[0,3,1,2])),o})}var VA=class extends PA{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=_t(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=cn(e.depthwiseConstraint),this.depthwiseRegularizer=Dt(e.depthwiseRegularizer)}build(e){if(e=ft(e),e.length<4)throw new q(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{e=Ve(e);let n=nV(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=br(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=kr(t,this.kernelSize[0],this.padding,this.strides[0]),a=kr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=zt(this.depthwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.depthwiseConstraint=un(this.depthwiseRegularizer),e}};VA.className="DepthwiseConv2D";ce.registerClass(VA);function Jk(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new q("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function Qk(e,t,n,s=!1,r,a,o=!1,i=!1){return X(()=>{let l=t.shape.length;if(l<3)throw new q(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(xr(2,l));if(t=nt(t,c),a!=null)throw new Le("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=ge(ge(r,"bool"),"float32"),r.rank===l-1&&(r=Zt(r,-1)),r=nt(r,c)),s&&(t=Ls(t,0),r!=null&&(r=Ls(r,0)));let u=[],d,p=n,h=t.shape[0],f=ls(t),m;r!=null&&(m=ls(r));for(let A=0;A<h;++A){let x=f[A],y=X(()=>e(x,p));if(r==null)d=y[0],p=y[1];else{let b=X(()=>{let w=m[A],k=pe(zs(w),w),S=le(L(y[0],w),L(p[0],k)),N=p.map((R,M)=>le(L(y[1][M],w),L(R,k)));return{output:S,newStates:N}});d=b.output,p=b.newStates}i&&u.push(d)}let g;return i&&(g=Yt(u,1)),[d,g,p]})}var e7=class extends rt{constructor(e){super(e);let t;if(e.cell==null)throw new q("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new bm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new q("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Jt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return xr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){iA(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return X(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Le("Constants support is not implemented in RNN yet.");iA(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Jt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));if(t!=null)throw new Le("Constants support is not implemented in RNN yet.");this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new q(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new Jt({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){X(()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Ht([n,s])):this.states_=[Ht([n,this.cell.stateSize])];else if(e==null)te(this.states_),this.keptStates!=null&&(te(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Ht([n,s])):this.states_[0]=Ht([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):te(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!v.arraysEqual(r.shape,o))throw new q(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>yn(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=Jk(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Jt({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof vr){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return X(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=Ve(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new q(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=Qk((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=l[0],u=l[1],d=l[2];this.stateful&&this.resetStates(d,s);let p=this.returnSequences?u:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return X(()=>{let t=Ht(e.shape);return t=we(t,[1,2]),t=Xd(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?J1(t,[1,n]):t):this.cell.stateSize>1?[J1(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===e7.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=wr(s,n);return new e(Object.assign(t,{cell:r}))}},aa=e7;aa.className="RNN";ce.registerClass(aa);var sp=class extends rt{},ym=class extends sp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,bn(this.units,"units"),this.activation=Wo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=_t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Dt(e.kernelRegularizer),this.recurrentRegularizer=Dt(e.recurrentRegularizer),this.biasRegularizer=Dt(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=Xu([1,zo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Xu([1,zo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ft(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{if(e=e,e.length!==2)throw new q(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>zs(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>zs(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=Or(L(e,a),this.kernel.read()):r=Or(e,this.kernel.read()),this.bias!=null&&(r=br(r,this.bias.read())),o!=null&&(n=L(n,o));let i=le(r,Or(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Bo(this.activation),useBias:this.useBias,kernelInitializer:zt(this.kernelInitializer),recurrentInitializer:zt(this.recurrentInitializer),biasInitializer:zt(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};ym.className="SimpleRNNCell";ce.registerClass(ym);var UA=class extends aa{constructor(e){e.cell=new ym(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};UA.className="SimpleRNN";ce.registerClass(UA);var xm=class extends sp{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new q("GRUCell does not support reset_after parameter set to true.");this.units=e.units,bn(this.units,"units"),this.activation=Wo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=_t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Dt(e.kernelRegularizer),this.recurrentRegularizer=Dt(e.recurrentRegularizer),this.biasRegularizer=Dt(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=Xu([1,zo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Xu([1,zo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ft(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{if(e=e,e.length!==2)throw new q(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>zs(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>zs(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=L(e,r[0]));let c=Or(e,this.kernel.read());this.useBias&&(c=br(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,a[0]));let u=this.recurrentKernel.read(),[d,p]=jt(u,[2*this.units,this.units],u.rank-1),h=Or(s,d),[f,m,g]=jt(c,3,c.rank-1),[A,x]=jt(h,2,h.rank-1);o=this.recurrentActivation.apply(le(f,A)),i=this.recurrentActivation.apply(le(m,x));let y=Or(L(i,s),p);l=this.activation.apply(le(g,y));let b=le(L(o,s),L(le(1,Mt(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Bo(this.activation),recurrentActivation:Bo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:zt(this.kernelInitializer),recurrentInitializer:zt(this.recurrentInitializer),biasInitializer:zt(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};xm.className="GRUCell";ce.registerClass(xm);var GA=class extends aa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new xm(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};GA.className="GRU";ce.registerClass(GA);var rp=class extends sp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,bn(this.units,"units"),this.activation=Wo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=_t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Dt(e.kernelRegularizer),this.recurrentRegularizer=Dt(e.recurrentRegularizer),this.biasRegularizer=Dt(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=Xu([1,zo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Xu([1,zo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=ft(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends rr{apply(o,i){let l=r.apply([a]),c=new Kf().apply([a]),u=r.apply([a*2]);return Hw(Hw(l,c),u)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return X(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new q(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>zs(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>zs(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,c,u;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let d=Or(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,o[0])),d=le(d,Or(s,this.recurrentKernel.read())),this.useBias&&(d=br(d,this.bias.read()));let[p,h,f,m]=jt(d,4,d.rank-1);i=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(h),c=le(L(l,r),L(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);let g=L(u,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Bo(this.activation),recurrentActivation:Bo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:zt(this.kernelInitializer),recurrentInitializer:zt(this.recurrentInitializer),biasInitializer:zt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};rp.className="LSTMCell";ce.registerClass(rp);var HA=class extends aa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rp(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};HA.className="LSTM";ce.registerClass(HA);var bm=class extends sp{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return X(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){iA(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{gl(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(wr(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return lA(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}uA(t)}};bm.className="StackedRNNCells";ce.registerClass(bm);function Vo(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):qw(t(),n),i=()=>Zd(o,t,s);return!r||r<=1?yn(i().clone()):Array(r).fill(void 0).map(i).map(c=>yn(c.clone()))}var t7=class extends aa{constructor(e){if(e.unroll)throw new Le("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Le("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Jt({ndim:5})]}call(e,t){return X(()=>{if(this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new q("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return X(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Ht(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){X(()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(r)):this.states_=[Ht(r)];else if(e==null)te(this.states_),this.keptStates!=null&&(te(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(r)):this.states_[0]=Ht(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):te(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=r;if(!v.arraysEqual(i.shape,l))throw new q(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>yn(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],c=e[i?4:3],u=kr(l,s[0],r,a[0],o[0]),d=kr(c,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}};t7.className="ConvRNN2D";var vm=class extends rp{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super({...e,units:t});this.filters=t,bn(this.filters,"filters"),this.kernelSize=Ju(n,2,"kernelSize"),this.kernelSize.forEach(i=>bn(i,"kernelSize")),this.strides=Ju(s||1,2,"strides"),this.strides.forEach(i=>bn(i,"strides")),this.padding=r||"valid",Bs(this.padding),this.dataFormat=a||"channelsLast",qt(this.dataFormat),this.dilationRate=Ju(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>bn(i,"dilationRate"))}build(e){var t;e=ft(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;i=new(t=class extends rr{apply(u,d){let p=l.apply([c]),h=vs([c]),f=l.apply([c*2]);return Y1([p,h,f])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return X(()=>{if(e.length!==3)throw new q(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>zs(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(Z,Q,ne)=>!Q||!Q[ne]?Z:L(Q[ne],Z),c=l(s,i,0),u=l(s,i,1),d=l(s,i,2),p=l(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>zs(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=l(r,h,0),m=l(r,h,1),g=l(r,h,2),A=l(r,h,3),x=3,[y,b,w,k]=jt(this.kernel.read(),o,x),[S,N,R,M]=this.useBias?jt(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,y,S,this.padding),u=this.inputConv(u,b,N,this.padding),d=this.inputConv(d,w,R,this.padding),p=this.inputConv(p,k,M,this.padding);let[D,$,T,P]=jt(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,D),m=this.recurrentConv(m,$),g=this.recurrentConv(g,T),A=this.recurrentConv(A,P);let W=this.recurrentActivation.apply(le(c,f)),K=this.recurrentActivation.apply(le(u,m)),z=le(L(K,a),L(W,this.activation.apply(le(d,g)))),j=L(this.recurrentActivation.apply(le(p,A)),this.activation.apply(z));return[j,j,z]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=$o(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?br(r,n,this.dataFormat):r}recurrentConv(e,t){return $o(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};vm.className="ConvLSTM2DCell";ce.registerClass(vm);var jA=class extends t7{constructor(e){let t=new vm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};jA.className="ConvLSTM2D";ce.registerClass(jA);var wm=class extends rt{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Zd(()=>qw(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};wm.className="Dropout";ce.registerClass(wm);var qA=class extends wm{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};qA.className="SpatialDropout1D";ce.registerClass(qA);var XA=class extends rt{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,bn(this.units,"units"),this.activation=Wo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=_t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=_t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=cn(e.kernelConstraint),this.biasConstraint=cn(e.biasConstraint),this.kernelRegularizer=Dt(e.kernelRegularizer),this.biasRegularizer=Dt(e.biasRegularizer),this.activityRegularizer=Dt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=ft(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=ft(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e),s=Ow(this.activation.getClassName()),r;return s!=null?r=Or(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Or(n,this.kernel.read()),this.bias!=null&&(r=br(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:Bo(this.activation),useBias:this.useBias,kernelInitializer:zt(this.kernelInitializer),biasInitializer:zt(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),biasConstraint:un(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};XA.className="Dense";ce.registerClass(XA);var KA=class extends rt{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ft(e);for(let t of e.slice(1))if(t==null)throw new q(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Mo(e,1)]}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=nt(n,s)}return wB(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};KA.className="Flatten";ce.registerClass(KA);var ZA=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.activation=Wo(e.activation)}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);return this.activation.apply(n)})}getConfig(){let e={activation:Bo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};ZA.className="Activation";ce.registerClass(ZA);var YA=class extends rt{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return X(()=>(e=Ve(e),bB(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};YA.className="RepeatVector";ce.registerClass(YA);var JA=class extends rt{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let l=s[i];if(this.isUnknown(l))if(a===null)a=i;else throw new q("Can only specifiy one unknown dimension.");else r*=l}let o=Mo(e);if(a!==null){if(r===0||o%r!=0)throw new q(n);s[a]=o/r}else if(o!==r)throw new q(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return H(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};JA.className="Reshape";ce.registerClass(JA);var QA=class extends rt{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=xr(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Jt({ndim:this.dims.length+1})]}computeOutputShape(e){e=ft(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return nt(Ve(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};QA.className="Permute";ce.registerClass(QA);var ey=class extends rt{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ve(e),s=-1;return gf(Vu(n,this.maskValue),s)}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e),s=-1,r=!0,a=gf(Vu(n,this.maskValue),s,r);return L(n,ge(a,n.dtype))})}};ey.className="Masking";ce.registerClass(ey);var ty=class extends rt{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ct(e.inputLength))}this.inputDim=e.inputDim,bn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,bn(this.outputDim,"outputDim"),this.embeddingsInitializer=_t(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Dt(e.embeddingsRegularizer),this.activityRegularizer=Dt(e.activityRegularizer),this.embeddingsConstraint=cn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return X(()=>this.maskZero?(e=Ve(e),Vu(e,st(e))):null)}computeOutputShape(e){if(e=ft(e),this.inputLength==null)return[...e,this.outputDim];let t=Ct(this.inputLength);if(t.length!==e.length-1)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);n.dtype!=="int32"&&(n=jf(n,"int32"));let s=jw(this.embeddings.read(),H(n,[n.size]));return H(s,ft(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:zt(this.embeddingsInitializer),embeddingsRegularizer:bt(this.embeddingsRegularizer),activityRegularizer:bt(this.activityRegularizer),embeddingsConstraint:un(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};ty.className="Embedding";ce.registerClass(ty);var vl=class extends rt{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Le}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new q("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ft(e)]),e=e,e.length<2)throw new q(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Oo(t),t.length>1)throw new q(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&Oo(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return X(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=zo(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=Xd(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let l=i.rank;if(l==null){let c=i.shape,u=c[0],d=c.slice(1).concat([u]),p=H(i,[u].concat(Mo(c.slice(1))));p=nt(p,[1,0]),p=H(p,d),n.push(p),r=!0}else if(l>1){let c=xr(1,l).concat([0]);n.push(nt(i,c)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,l=i.length,c=i[l-1],u=[c].concat(i.slice(0,i.length-1));a=H(nt(H(a,[-1,c]),[1,0]),u)}else if(o>1){let i=[o-1].concat(xr(0,o-1));a=nt(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=Oo(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return X(()=>{if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an Array");if(!Array.isArray(e))throw new q("`inputs` should be an Array");if(t.length!==e.length)throw new q(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Zt(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=mr(n,t[s]);return n})}},ny=class extends vl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=le(t,e[n]);return t})}};ny.className="Add";ce.registerClass(ny);var sy=class extends vl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};sy.className="Multiply";ce.registerClass(sy);var ry=class extends vl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=le(t,e[n]);return L(1/e.length,t)})}};ry.className="Average";ce.registerClass(ry);var ay=class extends vl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Qr(t,e[n]);return t})}};ay.className="Maximum";ce.registerClass(ay);var oy=class extends vl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=zd(t,e[n]);return t})}};oy.className="Minimum";ce.registerClass(oy);var iy=class extends vl{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new q("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(v.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new q("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return X(()=>Y1(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new q("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new q("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new q(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return X(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(ge(zs(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Zt(t[a],-1)):s.push(t[a]);let r=It(s,this.axis);return n1(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};iy.className="Concatenate";ce.registerClass(iy);function ap(e,t){for(;e<0;)e+=t;return e}function sV(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Le("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Le("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return X(()=>{let o;if(s>r){o=s-r;let l=[];for(let c=0;c<o;++c)l.push(1);t=H(t,t.shape.concat(l))}else if(r>s){o=r-s;let l=[];for(let c=0;c<o;++c)l.push(1);e=H(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=we(L(e,t),a[0]):i=we(L(nt(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,c=a[1]===t.shape.length-1;i=qe(e,t,l,c)}if(o>0){let l;s>r?l=s+r-3:l=s-1;let c=[];for(let u=l;u<l+o;++u)c.push(u);i=Ge(i,c)}return i.shape.length===1&&(i=Zt(i,1)),i})}var ly=class extends vl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Le("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new q(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new q(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>ap(r,e[a].shape.length)):s=[ap(this.axes,t.shape.length),ap(this.axes,n.shape.length)],this.normalize&&(t=im(t,s[0]),n=im(n,s[1])),sV(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[ap(this.axes,e.length),ap(this.axes,t.length)],n}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Le("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};ly.className="Dot";ce.registerClass(ly);var uy=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);return Zd(()=>le(Xf(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};uy.className="GaussianNoise";ce.registerClass(uy);var cy=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);return this.rate>0&&this.rate<1?Zd(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return L(n,Xf(n.shape,1,r))},()=>n,t.training||!1):n})}};cy.className="GaussianDropout";ce.registerClass(cy);var dy=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ve(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return X(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Zd(()=>{let r=Ve(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=il(Uu(n),this.rate);l=jf(l,"float32");let c=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-c*i*this.rate,d=le(L(r,l),L(le(l,-1),i));return le(L(d,c),u)},()=>Ve(e),t.training||!1)}return e})}};dy.className="AlphaDropout";ce.registerClass(dy);function op(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=yv(e,t,n,s,r,a);else if(e.rank===3)o=xv(e,t,n,s,r,a);else if(e.rank===4)o=bv(e,t,n,s,r,a);else throw new Le(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function rV(e,t,n,s,r=.001){return X(()=>{let a=Tf(e,s),o=a.mean,i=a.variance;return[op(e,o,i,n,t,r),o,i]})}function aV(e,t,n,s,r=.001){return X(()=>{let a=Tf(e,s),o=a.mean,i=a.variance,l=[];for(let f of xr(0,e.rank))s.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let c=H(o,l),u=H(i,l),d=t==null?null:H(t,l),p=n==null?null:H(n,l);return[op(e,c,u,p,d,r),o,i]})}function oV(e,t,n,s,r=.001){return v.arraysEqual(s.slice().sort(),xr(0,e.rank-1))?rV(e,t,n,s,r):aV(e,t,n,s,r)}var py=class extends rt{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=_t(e.betaInitializer||"zeros"),this.gammaInitializer=_t(e.gammaInitializer||"ones"),this.movingMeanInitializer=_t(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=_t(e.movingVarianceInitializer||"ones"),this.betaConstraint=cn(e.betaConstraint),this.gammaConstraint=cn(e.gammaConstraint),this.betaRegularizer=Dt(e.betaRegularizer),this.gammaRegularizer=Dt(e.gammaRegularizer)}build(e){e=ft(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new q(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Jt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return X(()=>{let n=t.training==null?!1:t.training,s=Ve(e),r=s.shape,a=r.length,o=xr(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=hl(1,a);l[i]=r[i];let c=o.slice();c.sort();let u=!v.arraysEqual(c,xr(0,a).slice(0,a-1)),d=()=>{if(u){let A=H(this.movingMean.read(),l),x=H(this.movingVariance.read(),l),y=this.center?H(this.beta.read(),l):null,b=this.scale?H(this.gamma.read(),l):null;return op(s,A,x,y,b,this.epsilon)}else return op(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[p,h,f]=oV(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(A,x,y)=>{X(()=>{let b=1-y,w=A.read(),k=L(pe(w,x),b);A.write(pe(w,k))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:zt(this.betaInitializer),gammaInitializer:zt(this.gammaInitializer),movingMeanInitializer:zt(this.movingMeanInitializer),movingVarianceInitializer:zt(this.movingVarianceInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer),betaConstraint:un(this.betaConstraint),gammaConstraint:un(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};py.className="BatchNormalization";ce.registerClass(py);var hy=class extends rt{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=_t(e.betaInitializer||"zeros"),this.gammaInitializer=_t(e.gammaInitializer||"ones"),this.betaRegularizer=Dt(e.betaRegularizer),this.gammaRegularizer=Dt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=ft(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Oo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=Ve(e),s=n.shape,r=s.length;return X(()=>{let a=!0,{mean:o,variance:i}=Tf(n,this.axis,a),l=hl(1,r);for(let f of this.axis)l[f]=s[f];let c=f=>f!=null&&f.shape.length!==r?H(f,l):f,u=c(this.gamma.read()),d=c(this.beta.read()),p=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(p.push(s[f]),h.push(1)):(p.push(1),h.push(s[f]));return o=er(o,p),i=er(i,p),u=er(u,h),d=er(d,h),op(n,o,i,d,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:zt(this.betaInitializer),gammaInitializer:zt(this.gammaInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};hy.className="LayerNormalization";ce.registerClass(hy);function iV(e,t,n){return X(()=>{if(e.rank!==4)throw new q(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new q("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Ar()),n!=="channelsLast"&&n!=="channelsFirst")throw new q(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],tr(e,s)})}var fy=class extends rt{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?Ar():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new q(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new q(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new q(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Jt({ndim:4})]}computeOutputShape(e){e=ft(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return X(()=>iV(Ve(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};fy.className="ZeroPadding2D";ce.registerClass(fy);function km(e,t,n,s,r,a){return X(()=>{qt(r),Bw(a),Bs(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=Ar()),a==null&&(a="max"),e=FA(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=Cf(e,t,n,i):o=yf(e,t,n,i),r==="channelsFirst"&&(o=nt(o,[0,3,1,2])),o})}function n7(e,t,n,s,r,a){return X(()=>{qt(r),Bw(a),Bs(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Ar()),a==null&&(a="max"),e=jk(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=x1(e,t,n,i):o=a1(e,t,n,i),r==="channelsFirst"&&(o=nt(o,[0,4,1,2,3])),o})}var s7=class extends rt{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new q(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(bn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new q(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);bn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Bs(this.padding),this.inputSpec=[new Jt({ndim:3})]}computeOutputShape(e){e=ft(e);let t=kr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return X(()=>{this.invokeCallHook(e,t),e=Xd(Ve(e),2);let n=this.poolingFunction(Ve(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ge(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},my=class extends s7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return qt(r),Bs(s),km(e,t,n,s,r,"max")}};my.className="MaxPooling1D";ce.registerClass(my);var gy=class extends s7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return qt(r),Bs(s),km(e,t,n,s,r,"avg")}};gy.className="AveragePooling1D";ce.registerClass(gy);var r7=class extends rt{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new q(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];bn(this.poolSize,"poolSize"),bn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,qt(this.dataFormat),Bs(this.padding),this.inputSpec=[new Jt({ndim:4})]}computeOutputShape(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=kr(t,this.poolSize[0],this.padding,this.strides[0]),n=kr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return X(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ve(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ay=class extends r7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return qt(r),Bs(s),km(e,t,n,s,r,"max")}};Ay.className="MaxPooling2D";ce.registerClass(Ay);var yy=class extends r7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return qt(r),Bs(s),km(e,t,n,s,r,"avg")}};yy.className="AveragePooling2D";ce.registerClass(yy);var a7=class extends rt{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new q(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];bn(this.poolSize,"poolSize"),bn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,qt(this.dataFormat),Bs(this.padding),this.inputSpec=[new Jt({ndim:5})]}computeOutputShape(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=kr(t,this.poolSize[0],this.padding,this.strides[0]),n=kr(n,this.poolSize[1],this.padding,this.strides[1]),s=kr(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return X(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ve(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xy=class extends a7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return qt(r),Bs(s),n7(e,t,n,s,r,"max")}};xy.className="MaxPooling3D";ce.registerClass(xy);var by=class extends a7{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return qt(r),Bs(s),n7(e,t,n,s,r,"avg")}};by.className="AveragePooling3D";ce.registerClass(by);var o7=class extends rt{constructor(e){super(e);this.inputSpec=[new Jt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Le}},vy=class extends o7{constructor(e){super(e||{})}call(e,t){return X(()=>{let n=Ve(e);return Vt(n,1)})}};vy.className="GlobalAveragePooling1D";ce.registerClass(vy);var wy=class extends o7{constructor(e){super(e||{})}call(e,t){return X(()=>{let n=Ve(e);return xn(n,1)})}};wy.className="GlobalMaxPooling1D";ce.registerClass(wy);var i7=class extends rt{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,qt(this.dataFormat),this.inputSpec=[new Jt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Le}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ky=class extends i7{call(e,t){return X(()=>{let n=Ve(e);return this.dataFormat==="channelsLast"?Vt(n,[1,2]):Vt(n,[2,3])})}};ky.className="GlobalAveragePooling2D";ce.registerClass(ky);var Iy=class extends i7{call(e,t){return X(()=>{let n=Ve(e);return this.dataFormat==="channelsLast"?xn(n,[1,2]):xn(n,[2,3])})}};Iy.className="GlobalMaxPooling2D";ce.registerClass(Iy);var l7=class extends rt{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=wr(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},Sy=class extends l7{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=ft(e),e.length<3)throw new q(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=ft(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return X(()=>(e=Ve(e),Qk((a,o)=>[Ve(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Sy.className="TimeDistributed";ce.registerClass(Sy);function lV(e){ml(mB,"BidirectionalMergeMode",e)}var uV="concat",Cy=class extends l7{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=wr(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=wr(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?uV:e.mergeMode,lV(this.mergeMode),e.weights)throw new Le("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):us(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=Jk(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new q("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(u=>new Jt({shape:u.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),o.push(...c)}if(s!=null)throw new Le("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof vr;for(let l of a)if(l instanceof vr!==i)throw new q("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return X(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Ls(r,1));let o;return this.mergeMode==="concat"?o=Y1([s,r]):this.mergeMode==="sum"?o=le(s,r):this.mergeMode==="ave"?o=L(.5,le(s,r)):this.mergeMode==="mul"?o=L(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){gl(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),gl(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=wr(t.layer);if(delete t.layer,t.numConstants!=null)throw new Le("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};Cy.className="Bidirectional";ce.registerClass(Cy);function cV(e){return new Ku(e)}function dV(e){return new $A(e)}function pV(e){return new NA(e)}function hV(e){return new EA(e)}function fV(e){return new RA(e)}function mV(e){return new DA(e)}function gV(e){return new _A(e)}function AV(e){return new LA(e)}function yV(e){return new gm(e)}function xV(e){return new OA(e)}function bV(e){return new Am(e)}function vV(e){return new MA(e)}function wV(e){return new zA(e)}function kV(e){return new BA(e)}function IV(e){return new WA(e)}function SV(e){return new VA(e)}function CV(e){return new ZA(e)}function TV(e){return new XA(e)}function NV(e){return new wm(e)}function EV(e){return new qA(e)}function RV(e){return new KA(e)}function $V(e){return new YA(e)}function _V(e){return new JA(e)}function DV(e){return new QA(e)}function FV(e){return new ty(e)}function PV(e){return new ny(e)}function OV(e){return new ry(e)}function MV(e){return new iy(e)}function zV(e){return new ay(e)}function LV(e){return new oy(e)}function BV(e){return new sy(e)}function WV(e){return new ly(e)}function VV(e){return new py(e)}function UV(e){return new hy(e)}function GV(e){return new fy(e)}function Ty(e){return new gy(e)}function HV(e){return Ty(e)}function jV(e){return Ty(e)}function Ny(e){return new yy(e)}function qV(e){return Ny(e)}function XV(e){return Ny(e)}function Ey(e){return new by(e)}function KV(e){return Ey(e)}function ZV(e){return Ey(e)}function YV(e){return new vy(e)}function JV(e){return new ky(e)}function u7(e){return new wy(e)}function c7(e){return new Iy(e)}function d7(e){return new my(e)}function p7(e){return new Ay(e)}function QV(e){return new xy(e)}function eU(e){return new GA(e)}function tU(e){return new xm(e)}function nU(e){return new HA(e)}function sU(e){return new rp(e)}function rU(e){return new UA(e)}function aU(e){return new ym(e)}function oU(e){return new jA(e)}function iU(e){return new vm(e)}function lU(e){return new aa(e)}function uU(e){return new bm(e)}function cU(e){return new Cy(e)}function dU(e){return new Sy(e)}var pU=u7,hU=c7,fU=d7,mU=p7;function gU(e){return new uy(e)}function AU(e){return new cy(e)}function yU(e){return new dy(e)}function xU(e){return new ey(e)}var h7={};Me(h7,{MAPE:()=>RU,MSE:()=>DU,binaryAccuracy:()=>bU,binaryCrossentropy:()=>vU,categoricalAccuracy:()=>kU,categoricalCrossentropy:()=>IU,cosineProximity:()=>TU,mape:()=>$U,meanAbsoluteError:()=>NU,meanAbsolutePercentageError:()=>EU,meanSquaredError:()=>_U,mse:()=>FU,precision:()=>SU,recall:()=>CU,sparseCategoricalAccuracy:()=>wU});function bU(e,t){return hA(e,t)}function vU(e,t){return dk(e,t)}function wU(e,t){return pk(e,t)}function kU(e,t){return fA(e,t)}function IU(e,t){return mA(e,t)}function SU(e,t){return ck(e,t)}function CU(e,t){return cW(e,t)}function TU(e,t){return dA(e,t)}function NU(e,t){return lm(e,t)}function EU(e,t){return Yu(e,t)}function RU(e,t){return Yu(e,t)}function $U(e,t){return Yu(e,t)}function _U(e,t){return yl(e,t)}function DU(e,t){return yl(e,t)}function FU(e,t){return yl(e,t)}var f7={};Me(f7,{modelFromJSON:()=>GW});var m7={};Me(m7,{l1:()=>OU,l1l2:()=>PU,l2:()=>MU});function PU(e){return new tp(e)}function OU(e){return JW(e)}function MU(e){return QW(e)}var g7=class extends Zu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof ra))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Im(e,t){return e<t}function A7(e,t){return e>t}var y7=class extends g7{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Le("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Im:this.mode==="max"?this.monitorFunc=A7:this.monitor.indexOf("acc")!==-1?this.monitorFunc=A7:this.monitorFunc=Im,this.monitorFunc===Im&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Im?1/0:-1/0}async onEpochEnd(e,t){await Lo(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function zU(e){return new y7(e)}var LU={earlyStopping:zU},BU=Y();BU.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var ar;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(ar||(ar={}));var x7;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(x7||(x7={}));var Ry={};function WU(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Ry[e]=n}function b7(e){return Ry[e]}function VU(e){delete Ry[e]}function I(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return Gn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(i,l).map(p=>Gn(p,n,s,r));let c=Gn(t.inputNames.slice(i)[0],n,s,r),u=c.dataSync();return a.type==="number"?u[0]:v.toNestedArray(c.shape,u)}let o=t.attrParams[e];return o&&o.value}function Gn(e,t,n,s){let[r,a]=ws(e);if(s!=null){let i=s.getHashTableHandleByName(r);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[Sm(r,i)]);return o!==void 0?t[Sm(r,o)][a]:void 0}function UU(e,t,n){return t[Sm(e,n.currentContextId)]}function Br(e,t){let[n,s,r]=ws(e);return[Sm(n,t&&t.currentContextId),s,r]}function Sm(e,t){return t?`${e}-${t}`:e}function ws(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function Cm(e,t,n){let s=I("pad",e,t,n);if(s==="explicit"){s=I("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function oa(e){return e.kept?e:Bn(e)}var v7={};Me(v7,{json:()=>GU});var GU=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],w7={};Me(w7,{json:()=>HU});var HU=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],k7={};Me(k7,{json:()=>jU});var jU=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],I7={};Me(I7,{json:()=>qU});var qU=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],S7={};Me(S7,{json:()=>XU});var XU=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],C7={};Me(C7,{json:()=>KU});var KU=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],T7={};Me(T7,{json:()=>ZU});var ZU=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],N7={};Me(N7,{json:()=>YU});var YU=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],E7={};Me(E7,{json:()=>JU});var JU=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],R7={};Me(R7,{json:()=>QU});var QU=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],$7={};Me($7,{json:()=>eG});var eG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_7={};Me(_7,{json:()=>tG});var tG=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],D7={};Me(D7,{json:()=>nG});var nG=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],F7={};Me(F7,{json:()=>sG});var sG=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],P7={};Me(P7,{json:()=>rG});var rG=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],O7={};Me(O7,{json:()=>aG});var aG=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],M7={};Me(M7,{json:()=>oG});var oG=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],z7={};Me(z7,{json:()=>iG});var iG=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],L7={};Me(L7,{json:()=>lG});var lG=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],B7=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[v7,w7,k7,I7,S7,C7,T7,N7,E7,R7,$7,_7,D7,F7,P7,O7,M7,z7,L7],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],c={},u={};t!=null&&(c=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let d=Object.keys(o);d.forEach(f=>{let m=o[f];m.inputNames.forEach((g,A)=>{let[x,,y]=Br(g),b=o[x];if(b.outputs!=null){let w=b.outputs.indexOf(y);if(w!==-1){let k=`${x}:${w}`;m.inputNames[A]=k}}m.inputs.push(b),b.children.push(m)})}),Object.keys(u).length===0?d.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(u).forEach(f=>{let[m]=Br(f),g=o[m];g!=null&&(g.signatureKey=u[f],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(f=>{let[m]=Br(f),g=o[m];g&&(g.signatureKey=c[f],i.push(g))}):i=s;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:l,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=b7(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.substr(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,o;switch(r.type){case"string":o=$y(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=$y(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=Ly(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Ly(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=Dy(e.attr,r.tfName,r.defaultValue||0),o===void 0&&!!r.tfDeprecatedName&&(o=Dy(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=zy(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=zy(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=_y(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=_y(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=Wy(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Wy(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=My(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=My(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=By(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=By(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=Py(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Py(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=Oy(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Oy(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=V7(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=V7(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:o,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&s.push(u[d.name]),u),{}));let a=[],o=[];e.signature.inputArg.forEach(u=>{let[d]=Br(u.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Fy(u.type),type:"dtype"}},children:[]};p.signatureKey=u.name,a.push(p),r[d]=p}),Object.keys(r).forEach(u=>{let d=r[u];d.inputNames.forEach((p,h)=>{let[f,,m]=Br(p),g=r[f];if(g.outputs!=null){let A=g.outputs.indexOf(m);if(A!==-1){let x=`${f}:${A}`;d.inputNames[h]=x}}d.inputs.push(g),g.children.push(d)})});let l=e.ret;e.signature.outputArg.forEach(u=>{let[d,p]=Br(l[u.name]),h=r[d];h!=null&&(h.defaultOutput=p,o.push(h))});let c=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:s,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function uG(e){let t=Y().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function W7(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):uG(e);return t?n:n.toLowerCase()}function $y(e,t,n,s=!1){let r=e[t];return r!=null?W7(r.s,s):n}function _y(e,t,n){let s=e[t];return s?s.b:n}function Dy(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function Fy(e){switch(typeof e=="string"&&(e=ar[e]),e){case ar.DT_FLOAT:case ar.DT_HALF:return"float32";case ar.DT_INT32:case ar.DT_INT64:case ar.DT_INT8:case ar.DT_UINT8:return"int32";case ar.DT_BOOL:return"bool";case ar.DT_DOUBLE:return"float32";case ar.DT_STRING:return"string";default:return null}}function V7(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function Py(e,t,n){let s=e[t];return s&&s.type?Fy(s.type):n}function Oy(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>Fy(r)):n}function U7(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function My(e,t,n){let s=e[t];return s&&s.shape?U7(s.shape):n}function zy(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function Ly(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>W7(a,s)):n}function By(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>U7(r)):n}function Wy(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var cG=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return Gn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Gn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Dy(this.node.rawAttrs,e,t);if(n.s!=null)return $y(this.node.rawAttrs,e,t);if(n.b!=null)return _y(this.node.rawAttrs,e,t);if(n.shape!=null)return My(this.node.rawAttrs,e,t);if(n.type!=null)return Py(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return zy(this.node.rawAttrs,e,t);if(n.list.s!=null)return Ly(this.node.rawAttrs,e,t);if(n.list.shape!=null)return By(this.node.rawAttrs,e,t);if(n.list.b!=null)return Wy(this.node.rawAttrs,e,t);if(n.list.type!=null)return Oy(this.node.rawAttrs,e,t)}return t}},dG=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[le(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[mf(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[Ld(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[L(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[de(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[$v(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[ff(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[pe(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[zd(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[Qr(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[Do(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[$1(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},pG=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[on(I("x",e,t,n))];case"Acos":return[iv(I("x",e,t,n))];case"Acosh":return[lv(I("x",e,t,n))];case"Asin":return[cv(I("x",e,t,n))];case"Asinh":return[dv(I("x",e,t,n))];case"Atan":return[pv(I("x",e,t,n))];case"Atan2":return[hv(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[fv(I("x",e,t,n))];case"Ceil":return[wv(I("x",e,t,n))];case"Complex":return[Co(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[bf(I("x",e,t,n))];case"Cosh":return[d1(I("x",e,t,n))];case"Elu":return[Od(I("x",e,t,n))];case"Erf":return[Dv(I("x",e,t,n))];case"Exp":return[Os(I("x",e,t,n))];case"Expm1":return[Fv(I("x",e,t,n))];case"Floor":return[Md(I("x",e,t,n))];case"Log":return[Ms(I("x",e,t,n))];case"Log1p":return[kf(I("x",e,t,n))];case"Imag":return[vf(I("x",e,t,n))];case"Neg":return[Mt(I("x",e,t,n))];case"Reciprocal":return[qv(I("x",e,t,n))];case"Real":return[Bd(I("x",e,t,n))];case"Relu":return[Fr(I("x",e,t,n))];case"Round":return[I1(I("x",e,t,n))];case"Selu":return[C1(I("x",e,t,n))];case"Sigmoid":return[Wn(I("x",e,t,n))];case"Sin":return[T1(I("x",e,t,n))];case"Sign":return[Zv(I("x",e,t,n))];case"Sinh":return[N1(I("x",e,t,n))];case"Softplus":return[Wu(I("x",e,t,n))];case"Sqrt":return[Dn(I("x",e,t,n))];case"Square":return[xt(I("x",e,t,n))];case"Tanh":return[Ou(I("x",e,t,n))];case"Tan":return[Jv(I("x",e,t,n))];case"ClipByValue":return[xs(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[k1(I("x",e,t,n))];case"Rsqrt":return[S1(Gn(e.inputNames[0],t,n))];case"Prod":return[b1(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[wf(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[Ef(I("x",e,t,n),I("alpha",e,t,n))];case"IsNan":return[Pv(Gn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function or(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];v.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function G7(e){return!(typeof e=="number"||e.some(t=>t<0))}function ip(e,t,n){let s=Vy(e,n),r=!G7(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=Vy(a.shape,s)}),!G7(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Vy(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var hG=class{constructor(e,t,n,s,r,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ce(0),yn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),or(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,yn(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return pt([],[0].concat(this.elementShape));let n=this.readMany(e);return or(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Yt(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return pt([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return or(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),It(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ls(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];X(()=>{t=H(t,[1,n,r]);for(let i=0;i<e.length;++i){let l=i===0?0:s[i-1],c=[0,l,0],u=[1,e[i],r];a[i]=H(De(t,c,u),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},lp=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);or(t,r.shape,"TensorList shape mismatch: "),yn(r)}),this.idTensor=Ce(0),this.maxNumElements=s,yn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new lp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);or(e,this.elementShape,"TensorList shape mismatch: ");let s=ip(this.elementShape,this.tensors,e);return X(()=>{let r=this.tensors.map(a=>H(a,s));return Yt(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=ip(this.elementShape,this.tensors,e),s=this.tensors.pop();return or(s.shape,e,"TensorList shape mismatch: "),H(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(or(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");yn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);or(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=ip(this.elementShape,this.tensors,t);return H(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);or(this.elementShape,t.shape,"TensorList shape mismatch: "),yn(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);or(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=ip(this.elementShape,this.tensors,n);return e.length===0?pt([],[0].concat(s)):X(()=>{let r=e.map(a=>H(this.tensors[a],s));return Yt(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);or(this.elementShape,t,"TensorList shape mismatch: ");let n=ip(this.elementShape,this.tensors,t);return this.size()===0?pt([],[0].concat(n)):X(()=>{let s=this.tensors.map(r=>H(r,n));return It(s,0)})}};function fG(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);or(r,t,"TensorList shape mismatch: ");let a=ls(e);return new lp(a,t,s)}function mG(e,t,n){return new lp([],e,t,n)}function gG(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new lp([],n,e.dtype,s),o=ls(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function AG(e,t,n){let s=0,r=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=Vy(a,n),i=s===0?0:e.size/s,l=X(()=>{let u=[];e=H(e,[1,s,i]);for(let d=0;d<t.length;++d){let p=d===0?0:r[d-1],h=[0,p,0],f=[1,t[d],i];u[d]=H(De(e,h,f),o)}return e.dispose(),u}),c=new lp([],n,e.dtype,t.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}var yG=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=I("thenBranch",e,t,n),r=I("elseBranch",e,t,n),a=I("cond",e,t,n),o=I("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=I("body",e,t,n),r=I("cond",e,t,n),a=I("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(u=>u.id),l=await o[0].data();o.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let c=a;for(;l[0];){let u=c;c=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);let d=c.map(h=>h.id);u.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});let p=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);l=await p[0].data(),p.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return c}case"LoopCond":{let s=I("pred",e,t,n);return[oa(s)]}case"Switch":{let s=I("pred",e,t,n),r=I("data",e,t,n);return r.kept||(r=oa(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>Gn(r,t,n)!==void 0);if(s){let r=Gn(s,t,n);return[oa(r)]}return}case"Enter":{let s=I("frameName",e,t,n),r=I("tensor",e,t,n);return n.enterFrame(s),[oa(r)]}case"Exit":{let s=I("tensor",e,t,n);return n.exitFrame(),[oa(s)]}case"NextIteration":{let s=I("tensor",e,t,n);return n.nextIteration(),[oa(s)]}case"TensorArrayV3":{let s=I("size",e,t,n),r=I("dtype",e,t,n),a=I("elementShape",e,t,n),o=I("dynamicSize",e,t,n),i=I("clearAfterRead",e,t,n),l=I("identicalElementShapes",e,t,n),c=I("name",e,t,n),u=new hG(c,r,s,a,l,o,i);return n.addTensorArray(u),[u.idTensor,Ce(1)]}case"TensorArrayWriteV3":{let s=I("tensorArrayId",e,t,n),r=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{let s=I("tensorArrayId",e,t,n),r=I("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),a=I("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=I("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=I("tensorArrayId",e,t,n),r=I("tensor",e,t,n),a=I("lengths",e,t,n),o=n.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Ce(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=I("tensorListId",e,t,n),r=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{let s=I("tensorListId",e,t,n),r=I("index",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let s=I("indices",e,t,n),r=I("tensor",e,t,n),a=I("elementShape",e,t,n),o=I("numElements",e,t,n),i=gG(r,s,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=I("elementShape",e,t,n),r=I("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=I(a,e,t,n),i=mG(s,r,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let s=I("tensorListId",e,t,n),r=I("indices",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{let s=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=I("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{let s=I("tensor",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=fG(s,r,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":{let s=I("tensorListId",e,t,n),r=n.getTensorList(s.id),a=I("dtype",e,t,n),o=I("elementShape",e,t,n);return[r.concat(a,o)]}case"TensorListPushBack":{let s=I("tensorListId",e,t,n),r=I("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=I("tensor",e,t,n),r=I("elementShape",e,t,n),a=I("lengths",e,t,n),o=AG(s,a,r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function H7(e,t,n){let[s,r]=I("fusedOps",e,t,n),a=s==="biasadd",o=!a,i=r==="prelu",l=s==="fusedbatchnorm",c=I("numArgs",e,t,n);if(a){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=I("strides",e,t,n),d=Cm(e,t,n),p=I("dataFormat",e,t,n).toUpperCase(),h=I("dilations",e,t,n),[f,m]=I("args",e,t,n);o&&(m=f,f=void 0);let g=I("leakyreluAlpha",e,t,n);return{stride:u,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var xG=(e,t,n)=>{switch(e.op){case"Conv1D":{let s=I("stride",e,t,n),r=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilation",e,t,n);return[i1(I("x",e,t,n),I("filter",e,t,n),s,r,a,o)]}case"Conv2D":{let s=I("strides",e,t,n),r=Cm(e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[$o(I("x",e,t,n),I("filter",e,t,n),[s[1],s[2]],r,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=H7(e,t,n);return[Fo.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=H7(e,t,n);return[Fo.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let s=I("outputShape",e,t,n),r=I("strides",e,t,n),a=Cm(e,t,n);return[u1(I("x",e,t,n),I("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let s=I("strides",e,t,n),r=Cm(e,t,n),a=I("dilations",e,t,n),o=I("dataFormat",e,t,n).toUpperCase();return[Pd(I("input",e,t,n),I("filter",e,t,n),[s[1],s[2]],r,o,[a[1],a[2]])]}case"Conv3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[c1(I("x",e,t,n),I("filter",e,t,n),[s[1],s[2],s[3]],r,a,[o[1],o[2],o[3]])]}case"AvgPool":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[yf(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Cf(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n),o=I("includeBatchInIndex",e,t,n),{result:i,indexes:l}=Uv(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,o);return[i,l]}case"AvgPool3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[a1(I("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[x1(I("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("dilations",e,t,n),o=s[1],i=s[2],l=a[1],c=a[2];return[Rv(I("x",e,t,n),I("filter",e,t,n),[o,i],r,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},bG=(e,t,n)=>{switch(e.op){case"Fill":{let s=I("shape",e,t,n),r=I("dtype",e,t,n),a=I("value",e,t,n);return[Lu(s,a,r)]}case"LinSpace":{let s=I("start",e,t,n),r=I("stop",e,t,n),a=I("num",e,t,n);return[Ov(s,r,a)]}case"Multinomial":{let s=I("logits",e,t,n),r=I("numSamples",e,t,n),a=I("seed",e,t,n);return[Hv(s,r,a)]}case"OneHot":{let s=I("indices",e,t,n),r=I("depth",e,t,n),a=I("onValue",e,t,n),o=I("offValue",e,t,n);return[_d(s,r,a,o)]}case"Ones":return[vs(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[zs(I("x",e,t,n))];case"RandomUniform":return[Uu(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{let s=I("start",e,t,n),r=I("stop",e,t,n),a=I("step",e,t,n);return[Gu(s,r,a,I("dtype",e,t,n))]}case"TruncatedNormal":{let s=I("shape",e,t,n),r=I("mean",e,t,n),a=I("stdDev",e,t,n),o=I("seed",e,t,n);return[Df(s,r,a,I("dtype",e,t,n),o)]}case"Zeros":return[Ht(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[st(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Uy(e,t,n){let s=I("boxes",e,t,n),r=I("scores",e,t,n),a=I("maxOutputSize",e,t,n),o=I("iouThreshold",e,t,n),i=I("scoreThreshold",e,t,n),l=I("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var vG=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=Uy(e,t,n),c=await Ie.nonMaxSuppressionWithScoreAsync(s,r,a,o,i,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=Uy(e,t,n),l=I("padToMaxOutputSize",e,t,n),c=await Ie.nonMaxSuppressionPaddedAsync(s,r,a,o,i,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=Uy(e,t,n);return[await Ie.nonMaxSuppressionAsync(s,r,a,o,i)]}case"Where":{let s=ge(I("condition",e,t,n),"bool"),r=[await D1(s)];return s.dispose(),r}case"ListDiff":return Kv(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},wG=(e,t,n)=>{switch(e.op){case"TopKV2":{let s=I("x",e,t,n),r=I("k",e,t,n),a=I("sorted",e,t,n),o=Qv(s,r,a);return[o.values,o.indices]}case"Unique":{let s=I("x",e,t,n),r=_1(s);return[r.values,r.indices]}case"UniqueV2":{let s=I("x",e,t,n),r=I("axis",e,t,n),a=_1(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},kG=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let s=I("default",e,t,n);return[Gn(e.name,t,n)||s];case"Placeholder":return[Gn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=I("x",e,t,n);return[oa(c)]}case"IdentityN":return I("x",e,t,n).map(c=>oa(c));case"Snapshot":let r=I("x",e,t,n);return[oa(r)];case"Shape":return[St(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map(c=>St(c.shape));case"Size":return[Ce(I("x",e,t,n).size,"int32")];case"Rank":return[Ce(I("x",e,t,n).rank,"int32")];case"NoOp":return[Ce(1)];case"Print":let a=I("x",e,t,n),o=I("data",e,t,n),i=I("message",e,t,n),l=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},IG=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ce(0),this.tensorMap=new Map,yn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),X(()=>{let s=ls(t),r=n.length,a=s.length;v.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){let i=n[o],l=s[o];yn(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return X(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],o=this.findWithDefault(a,t);s.push(o)}return Yt(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},SG=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=I("keyDType",e,t,n),a=I("valueDType",e,t,n),o=new IG(r,a);return s.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=I("tableHandle",e,t,n,s),a=I("keys",e,t,n),o=I("values",e,t,n);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=I("tableHandle",e,t,n,s),a=I("keys",e,t,n),o=I("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=I("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},CG=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let s=I("images",e,t,n),r=I("size",e,t,n),a=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[Ie.resizeBilinear(s,[r[0],r[1]],a,o)]}case"ResizeNearestNeighbor":{let s=I("images",e,t,n),r=I("size",e,t,n),a=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[Ie.resizeNearestNeighbor(s,[r[0],r[1]],a,o)]}case"CropAndResize":{let s=I("image",e,t,n),r=I("boxes",e,t,n),a=I("boxInd",e,t,n),o=I("cropSize",e,t,n),i=I("method",e,t,n),l=I("extrapolationValue",e,t,n);return[Ie.cropAndResize(s,r,a,o,i,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},TG=(e,t,n)=>{switch(e.op){case"Equal":return[Ps(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[Vu(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[bs(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[il(I("a",e,t,n),I("b",e,t,n))];case"Less":return[f1(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[ll(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[mr(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[Sf(I("a",e,t,n))];case"LogicalOr":return[y1(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[Vn(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},NG=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[qe(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Einsum":return[_v(I("equation",e,t,n),...I("tensors",e,t,n))];case"Transpose":return[nt(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":let[s,r]=I("fusedOps",e,t,n),a=s==="biasadd",o=r==="prelu",i=I("numArgs",e,t,n),l=I("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,u]=I("args",e,t,n);return[Fo.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:c,activation:r,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},EG=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Mu(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"FusedBatchNormV3":return[Mu(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[Mv(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[Hu(I("x",e,t,n))];case"LogSoftmax":return[m1(I("x",e,t,n))];case"SparseToDense":return[P1(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},RG=(e,t,n)=>{switch(e.op){case"Max":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[xn(I("x",e,t,n),o,i)]}case"Mean":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Vt(I("x",e,t,n),o,i)]}case"Min":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[_o(I("x",e,t,n),o,i)]}case"Sum":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[we(I("x",e,t,n),o,i)]}case"All":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[n1(I("x",e,t,n),o,i)]}case"Any":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[gf(I("x",e,t,n),o,i)]}case"ArgMax":{let o=I("axis",e,t,n);return[ys(I("x",e,t,n),o)]}case"ArgMin":{let o=I("axis",e,t,n);return[uv(I("x",e,t,n),o)]}case"Prod":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[b1(I("x",e,t,n),o,i)]}case"Cumsum":{let o=I("axis",e,t,n),i=I("exclusive",e,t,n),l=I("reverse",e,t,n);return[p1(I("x",e,t,n),o,i,l)]}case"Bincount":let s=I("x",e,t,n),r=I("weights",e,t,n),a=I("size",e,t,n);return[o1(s,r,a)];case"DenseBincount":{let o=I("x",e,t,n),i=I("weights",e,t,n),l=I("size",e,t,n),c=I("binaryOutput",e,t,n);return[Nv(o,i,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},$G=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let s=I("n",e,t,n),r=I("axis",e,t,n),a=I("tensors",e,t,n);return a=a.slice(0,s),[It(a,r)]}case"Gather":{let s=I("x",e,t,n),r=I("indices",e,t,n);return[Bu(s,ge(r,"int32"),0)]}case"GatherV2":{let s=I("axis",e,t,n),r=I("batchDims",e,t,n),a=I("x",e,t,n),o=I("indices",e,t,n);return[Bu(a,ge(o,"int32"),s,r)]}case"Reverse":{let s=I("dims",e,t,n),r=[];for(let o=0;o<s.length;o++)s[o]&&r.push(o);let a=I("x",e,t,n);return[Ls(a,r)]}case"ReverseV2":{let s=I("axis",e,t,n),r=I("x",e,t,n);return[Ls(r,s)]}case"Slice":{let s=I("begin",e,t,n),r=I("size",e,t,n);return[De(I("x",e,t,n),s,r)]}case"StridedSlice":{let s=I("begin",e,t,n),r=I("end",e,t,n),a=I("strides",e,t,n),o=I("beginMask",e,t,n),i=I("endMask",e,t,n),l=I("ellipsisMask",e,t,n),c=I("newAxisMask",e,t,n),u=I("shrinkAxisMask",e,t,n),d=I("x",e,t,n);return[Yv(d,s,r,a,o,i,l,c,u)]}case"Pack":return X(()=>{let s=I("axis",e,t,n),r=I("tensors",e,t,n),a=r[0].shape,o=Ge(r[0]).shape,i=r.map(l=>{let c=v.arraysEqual(l.shape,a);if(!c&&!v.arraysEqual(Ge(l).shape,o))throw new Error("the input tensors shape does not match");return c?l:H(l,a)});return[Yt(i,s)]});case"Unpack":{let s=I("axis",e,t,n),r=I("tensor",e,t,n);return ls(r,s)}case"Tile":{let s=I("reps",e,t,n);return[er(I("x",e,t,n),s)]}case"Split":case"SplitV":{let s=I("axis",e,t,n),r=I("numOrSizeSplits",e,t,n),a=I("x",e,t,n);return jt(a,r,s)}case"ScatterNd":{let s=I("indices",e,t,n),r=I("values",e,t,n),a=I("shape",e,t,n);return[rw(s,r,a)]}case"GatherNd":{let s=I("x",e,t,n),r=I("indices",e,t,n);return[aw(s,r)]}case"SparseToDense":{let s=I("sparseIndices",e,t,n),r=I("outputShape",e,t,n),a=I("sparseValues",e,t,n),o=I("defaultValue",e,t,n);return[P1(s,a,r,a.dtype===o.dtype?o:ge(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},_G=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:o}=Ud.sparseFillEmptyRows(I("indices",e,t,n),I("values",e,t,n),I("denseShape",e,t,n),I("defaultValue",e,t,n));return[s,r,a,o]}case"SparseReshape":{let{outputIndices:s,outputShape:r}=Ud.sparseReshape(I("inputIndices",e,t,n),I("inputShape",e,t,n),I("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[Ud.sparseSegmentMean(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];case"SparseSegmentSum":return[Ud.sparseSegmentSum(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},DG=(e,t,n)=>{switch(e.op){case"FFT":return[$f(I("x",e,t,n))];case"IFFT":return[Wd(I("x",e,t,n))];case"RFFT":return[_f(I("x",e,t,n))];case"IRFFT":return[R1(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},FG=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:s,nGramsSplits:r}=zf.stringNGrams(I("data",e,t,n),I("dataSplits",e,t,n),I("separator",e,t,n),I("nGramWidths",e,t,n),I("leftPad",e,t,n),I("rightPad",e,t,n),I("padWidth",e,t,n),I("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{let{indices:s,values:r,shape:a}=zf.stringSplit(I("input",e,t,n),I("delimiter",e,t,n),I("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[zf.stringToHashBucketFast(I("input",e,t,n),I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},PG=(e,t,n)=>{switch(e.op){case"Cast":return[ge(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{let s=I("axis",e,t,n);return[Zt(I("x",e,t,n),s)]}case"Squeeze":{let s=I("axis",e,t,n);return[Ge(I("x",e,t,n),s)]}case"Reshape":return[H(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[Gv(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[tr(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{let s=I("blockShape",e,t,n),r=I("paddings",e,t,n);return[Nf(I("x",e,t,n),s,r)]}case"BatchToSpaceND":{let s=I("blockShape",e,t,n),r=I("crops",e,t,n);return[xf(I("x",e,t,n),s,r)]}case"DepthToSpace":{let s=I("blockSize",e,t,n),r=I("dataFormat",e,t,n).toUpperCase();return[Ev(I("x",e,t,n),s,r)]}case"BroadcastTo":return[Fd(I("x",e,t,n),I("shape",e,t,n))];case"BroadcastArgs":return[vv(I("s0",e,t,n),I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function j7(e,t,n,s){let r=((a,o,i)=>{switch(a.category){case"arithmetic":return X(()=>dG(a,o,i));case"basic_math":return X(()=>pG(a,o,i));case"control":return yG(a,o,i);case"convolution":return X(()=>xG(a,o,i));case"creation":return X(()=>bG(a,o,i));case"dynamic":return vG(a,o,i);case"evaluation":return X(()=>wG(a,o,i));case"image":return X(()=>CG(a,o,i));case"graph":return X(()=>kG(a,o,i));case"logical":return X(()=>TG(a,o,i));case"matrices":return X(()=>NG(a,o,i));case"normalization":return X(()=>EG(a,o,i));case"reduction":return X(()=>RG(a,o,i));case"slice_join":return X(()=>$G(a,o,i));case"sparse":return X(()=>_G(a,o,i));case"spectral":return X(()=>DG(a,o,i));case"string":return X(()=>FG(a,o,i));case"transformation":return X(()=>PG(a,o,i));case"hash_table":return SG(a,o,i,s);case"custom":let l=b7(a.op);if(l&&l.customExecutor)return l.customExecutor(new cG(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return v.isPromise(r)?r.then(a=>[].concat(a)):[].concat(r)}var q7=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function X7(e,t,n,s){let r=new Set,a=[],o=null,i=null,l=new Set,c=Object.keys(e).map(p=>ws(p)[0]),u=[];s!=null&&(u=s.map(p=>ws(p.name)[0]));let d=[...t];for(;d.length>0;){let p=d.pop();if((K7(p)||BG(p)||WG(p))&&o==null&&(o=p,i=o.children.map(h=>h.name).filter(h=>r.has(h))),r.add(p.name),n[p.name]==null&&c.indexOf(p.name)===-1&&u.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),d.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function OG(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],o=Object.keys(r).map(u=>ws(u)[0]).map(u=>e.nodes[u]),i=e.initNodes;o.forEach(u=>{s.has(u.name)&&a.push(u)}),e.weights.forEach(u=>{s.has(u.name)&&a.push(u)}),i!=null&&i.forEach(u=>{s.has(u.name)&&a.push(u)});let l=new Set,c=[];for(;a.length>0;){let u=a.pop();l.add(u.name),t[u.name]||c.push(u),u.children.forEach(d=>{!l.has(d.name)&&s.has(d.name)&&d.inputs.every(p=>l.has(p.name))&&a.push(d)})}return c}var MG=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],zG=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],LG=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function K7(e){return MG.indexOf(e.op)>=0}function BG(e){return zG.indexOf(e.op)>=0}function WG(e){return LG.indexOf(e.op)>=0}var Gy=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Gy(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=X7(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${s}]`)}return OG(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(u=>this.graph.nodes[ws(u)[0]]),r=t.map(u=>ws(u)[0]),a=r.map(u=>this.graph.nodes[u]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let o=this.getCompilationKey(s,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},c={};return X(()=>{let u=new q7(this.weightMap,l,c,this.functionExecutorMap),d={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=ws(f),A=[];A[g]=e[f],d[m]=A});let p=this.getFrozenTensorIds(d),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!d[m.name]){let g=j7(m,d,u,this._resourceManager);if(v.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);d[m.name]=g,this.checkTensorForDisposal(m.name,m,d,u,p,r,h)}}return this.parent==null&&u.dispose(p),t.map(f=>Gn(f,d,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=UU(i.name,n,s);l!=null&&l.forEach(c=>{if(c&&!c.kept&&!r.has(c.id)){let u=o[c.id];if(u===1){if(!this.keepTensorForDebug)c.dispose();else{let[d,p]=Br(t.name,s);this.intermediateTensors[d]?this.intermediateTensors[d][p]=c:(this.intermediateTensors[d]=[],this.intermediateTensors[d][p]=c)}delete o[c.id]}else u!=null&&o[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Y().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){console.warn(c.message)}this.resetIntermediateTensors();let a=new q7(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let o=t.map(c=>Gn(c,this.tensorsMap,a)),i=o.map(c=>c.id),l=Object.keys(e).map(c=>e[c].id);return this.keepIds=new Set([...i,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(x=>this.graph.nodes[ws(x)[0]]),o=n.map(x=>ws(x)[0]),i=o.map(x=>this.graph.nodes[x]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:c,dynamicNode:u,syncInputs:d}=X7(e,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),h={...this.weightMap};Object.keys(e).forEach(x=>{let[y,b]=ws(x),w=[];w[b]=e[x],h[y]=w});let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let x=this.processStack(a,p,t,h,g,m,o,f,l);await Promise.all(x)}u==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let A=i.filter(x=>!K7(x)&&!Gn(x.name,h,t)).map(x=>x.name);if(A.length>0){let x="";throw u!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${A}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${x}`)}return h}processStack(e,t,n,s,r,a,o,i,l){let c=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let d="";if(u.node.op==="Enter"&&I("isConstant",u.node,s,n)&&([d]=Br(u.node.name,n)),s[u.node.name]==null){let p=j7(u.node,s,n,this._resourceManager);d||([d]=Br(u.node.name,n));let h=n.currentContext;v.isPromise(p)?c.push(p.then(f=>(s[d]=f,n.currentContext=h,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l),f))):(s[d]=p,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l))}else this.processChildNodes(u.node,t,n,s,r,l)}return c}processChildNodes(e,t,n,s,r,a){e.children.forEach(o=>{let[i]=Br(o.name,n);r[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!Gn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!Gn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=ws(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);v.assert(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&v.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=ws(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=ws(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},VG=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},UG="?tfjs-format=file",GG="model.json",Z7=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new VG}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=os.browserHTTPRequest(e,this.loadOptions);else{let t=os.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(os.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=os.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Gy(B7.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=B7.Instance.transformGraph(e.modelInitializer);this.initializer=new Gy(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=os.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof tt)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Be(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${GG}${UG}`);let n=new Z7(e,t);return await n.load(),n}var HG="0.0.0",Y7={};Me(Y7,{CSVDataset:()=>dI,Dataset:()=>ec,FileDataSource:()=>yI,TextLineDataset:()=>lI,URLDataSource:()=>xI,array:()=>fH,csv:()=>SH,func:()=>CH,generator:()=>TH,microphone:()=>EH,version_data:()=>RH,webcam:()=>NH,zip:()=>mH});var jG=ii(bh()),qG=ii(bh());function XG(e,t){return Tm(e,t)}function Tm(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(Qu(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],l=Tm(i,t,n,s);a[o]=l}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function KG(e,t=Q7){return J7(e,t)}function J7(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(Qu(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(c=>c[o]),l=J7(i,t,n);a[o]=l}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function Q7(e){return e===null?null:Qu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function eI(e,t){let n=new Map;Tm(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(v.isPromise(a)){let o=await a;n.set(r,o)}}return Tm(e,t,n)}function Qu(e){let t=!1;if(Y().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=G5();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof tt)&&!(e instanceof Promise)&&!t)}function ZG(e){return e==null||YG(e)||Array.isArray(e)||typeof e=="object"&&e instanceof tt||v.isTypedArray(e)}function YG(e){return e===null||typeof e!="object"&&typeof e!="function"}function JG(e){return XG(e,QG)}function QG(e){return e instanceof tt?{value:e.clone(),recurse:!1}:Qu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var tI=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},nI=class extends tI{constructor(){super(nI.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},sI=nI;sI.INITIAL_CAPACITY=32;function rI(e){return new nH(e)}function Hy(e){return new sH(e)}function eH(e,t){return new oI(e,t)}function tH(e,t=Nm.FAIL){return new pH(e,t)}var vn=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new cH(this,e)}filter(e){return new lH(this,e)}map(e){return new uH(this,e)}mapAsync(e){return new aI(this,e)}serialMapAsync(e){return new aI(this,e).serial()}flatmap(e){return new dH(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new iH(this,e,t)}columnMajorBatch(e,t=!0,n=Q7){return this.rowMajorBatch(e,t).map(r=>KG(r,n))}concatenate(e,t){return new oI(rI([this,e]),t)}take(e){return e<0||e==null?this:new oH(this,e)}skip(e){return e<0||e==null?this:new aH(this,e)}prefetch(e){return new iI(this,e)}shuffle(e,t){return new hH(this,e,t)}serial(){return new rH(this)}},nH=class extends vn{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:JG(e),done:!1}}},sH=class extends vn{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},rH=class extends vn{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},aH=class extends vn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;te(e.value)}return this.upstream.next()}},oH=class extends vn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},iH=class extends vn{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},lH=class extends vn{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;te(e.value)}}},uH=class extends vn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=hr.getTensorsInContainer(e.value),n=this.transform(e.value),s=hr.getTensorsInContainer(n);for(let r of t)hr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},cH=class extends vn{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},aI=class extends vn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=hr.getTensorsInContainer(e.value),n=await this.transform(e.value),s=hr.getTensorsInContainer(n);for(let r of t)hr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},jy=class extends vn{constructor(){super();this.outputQueue=new sI,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},dH=class extends jy{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=hr.getTensorsInContainer(e.value),n=this.transform(e.value),s=hr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)hr.isTensorInList(r,s)||r.dispose();return!0}},oI=class extends vn{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Nm;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(Nm||(Nm={}));var pH=class extends vn{constructor(e,t=0){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof vn?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await eI(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},iI=class extends vn{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new tI(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},hH=class extends iI{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=qG.alea(n||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},ec=class{constructor(){this.size=null}batch(e,t=!0){let n=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),ks(async()=>(await n.iterator()).columnMajorBatch(e,t,gH),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,ks(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,ks(async()=>(await t.iterator()).filter(s=>X(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return ks(async()=>(await t.iterator()).map(n=>X(()=>e(n))),this.size)}mapAsync(e){let t=this;return ks(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return ks(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,ks(async()=>{let s=Hy(async()=>({value:await t.iterator(),done:!1}));return eH(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,ks(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=jG.alea(t||v.now().toString());return ks(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,ks(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};ec.MAX_BUFFER_SIZE=1e4;function ks(e,t=null){return new class extends ec{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function fH(e){return ks(async()=>rI(e),e.length)}function mH(e){if(!Qu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return ks(async()=>{let n=await eI(e,s=>{if(s instanceof ec)return{value:s.iterator(),recurse:!1};if(Qu(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return tH(n,Nm.SHORTEST)},t)}function gH(e){if(e===null)return null;let t=e[0];return ZG(t)?{value:AH(e),recurse:!1}:{value:null,recurse:!0}}function AH(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof tt?Yt(e):pt(e)}var lI=class extends ec{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},Em='"',up=Symbol("out"),uI=Symbol("field"),Rm=Symbol("quote"),qy=Symbol("quoteafterquote"),cI=Symbol("quoteinquote"),dI=class extends ec{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new lI(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(v.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let c=Number(i);if(isNaN(c))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=c;else switch(o.dtype){case"float32":l=c;break;case"int32":l=Math.floor(c);break;case"bool":l=this.getBoolean(i);break;default:l=c}}o&&o.isLabel?s[a]=l:n[a]=l}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=up;for(let o=0;o<r;o++)switch(a){case up:switch(e.charAt(o)){case Em:s=o+1,a=Rm;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=up;break;default:a=uI,s=o;break}break;case uI:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=up,s=o+1;break;default:}break;case Rm:switch(e.charAt(o)){case Em:a=qy;break;default:}break;case qy:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=up,s=o+1;break;case Em:a=Rm;break;default:a=cI;break}break;case cI:switch(e.charAt(o)){case Em:a=Rm;break;default:}break;default:}if(a===qy?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},pI=class extends vn{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Y().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new pI(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(v.sizeFromShape(t));return n.set(e,n.length-e.length),pt(n,t)}},hI=class extends vn{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=St([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=gr([a,r,i,o],[1,4])}else this.cropBox=gr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Y().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new hI(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Qs.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return X(()=>{let t=Zt(ge(e,"float32"),0),n;n=Ie.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return H(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},fI=class{},mI=class extends vn{split(e){return new yH(this,e)}},yH=class extends mI{constructor(e,t){super();this.upstream=e,this.impl=new xH(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},xH=class extends jy{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},bH=class extends vn{decodeUTF8(){return new vH(this)}},vH=class extends mI{constructor(e){super();this.upstream=e,this.impl=new wH(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},wH=class extends jy{constructor(e){super();if(this.upstream=e,Y().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=G5();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Y().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},gI=class extends bH{constructor(e,t={}){super();this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(Y().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function kH(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=IH(e));let a=await(n||v.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new gI(o,t)}else throw new Error(a.statusText)}var IH=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function AI(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var yI=class extends fI{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(AI(this.input)&&Y().get("IS_NODE")){let e=vh();this.input=e.readFileSync(this.input.substr(7))}return new gI(this.input,this.options)}},xI=class extends fI{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return AI(this.url)?new yI(this.url,this.fileOptions).iterator():kH(this.url,this.fileOptions)}};function SH(e,t={}){return new dI(new xI(e),t)}function CH(e){let t=Hy(e);return ks(async()=>t)}function TH(e){return ks(async()=>{let t=await e();return Hy(()=>t.next())})}async function NH(e,t){return hI.create(e,t)}async function EH(e){return pI.create(e)}var RH="0.0.0";function Re(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var $H=nr.whereImpl,bI=class extends tu{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new sd(this,is())}nextDataId(){return bI.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&E.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return E.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,n)}makeOutput(e,t,n){let s=this.write(e,t,n);return is().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Re([e],"where");let t=this.readSync(e.dataId);return $H(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Xy=bI;Xy.nextDataId=0;var $m={};Me($m,{addImpl:()=>wI,bincountImpl:()=>Zy,bincountReduceImpl:()=>kI,ceilImpl:()=>II,concatImpl:()=>Yy,equalImpl:()=>SI,expImpl:()=>TI,expm1Impl:()=>EI,floorImpl:()=>RI,gatherNdImpl:()=>$I,gatherV2Impl:()=>_I,greaterEqualImpl:()=>FI,greaterImpl:()=>DI,lessEqualImpl:()=>OI,lessImpl:()=>PI,linSpaceImpl:()=>MI,logImpl:()=>zI,maxImpl:()=>LI,maximumImpl:()=>BI,minimumImpl:()=>WI,multiplyImpl:()=>Jy,negImpl:()=>VI,notEqualImpl:()=>UI,prodImpl:()=>GI,rangeImpl:()=>ex,rsqrtImpl:()=>HI,sigmoidImpl:()=>xj,simpleAbsImpl:()=>vI,sliceImpl:()=>Fm,sparseFillEmptyRowsImpl:()=>qI,sparseReshapeImpl:()=>XI,sparseSegmentReductionImpl:()=>tx,sqrtImpl:()=>wj,squaredDifferenceImpl:()=>KI,stridedSliceImpl:()=>ZI,stringNGramsImpl:()=>YI,stringSplitImpl:()=>JI,stringToHashBucketFastImpl:()=>QI,subImpl:()=>eS,tileImpl:()=>tS,topKImpl:()=>sS,transposeImpl:()=>Qy,uniqueImpl:()=>rS});function vI(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var _H=e=>{let{x:t}=e.inputs,n=e.backend;Re(t,"abs");let s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=vI(r),n.makeOutput(s,t.shape,t.dtype)},DH={kernelName:ci,backendName:"cpu",kernelFunc:_H};function Qt(e){return(t,n,s,r,a)=>{let o=E.assertAndGetBroadcastShape(t,n),i=o.length,l=v.computeStrides(o),c=v.sizeFromShape(o),u=v.getTypedArrayFromDType(a,c),d=t.length,p=n.length,h=v.computeStrides(t),f=v.computeStrides(n),m=E.getBroadcastDims(t,o),g=E.getBroadcastDims(n,o);if(m.length+g.length===0)for(let A=0;A<u.length;++A)u[A]=e(s[A%s.length],r[A%r.length]);else for(let A=0;A<u.length;++A){let x=v.indexToLoc(A,i,l),y=x.slice(-d);m.forEach(S=>y[S]=0);let b=v.locToIndex(y,d,h),w=x.slice(-p);g.forEach(S=>w[S]=0);let k=v.locToIndex(w,p,f);u[A]=e(s[b],r[k])}return[u,o]}}function Is(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var FH={kernelName:id,backendName:"cpu",kernelFunc:Is};function _m(e,t,n="float32"){if(n==="complex64"){let r=_m(e,t,"float32"),a=_m(e,t,"float32");return Is({inputs:{real:r,imag:a},backend:e})}let s=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Wr(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var PH={kernelName:qa,backendName:"cpu",kernelFunc:Wr};function wl(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var OH={kernelName:gd,backendName:"cpu",kernelFunc:wl};function Uo(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Wr({inputs:{x:r},backend:n});let o=_m(n,r.shape,r.dtype),i=Uo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Is({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=wl({inputs:{input:r},backend:n}),i=Uo({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Wr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=v.toTypedArray([0],r.dtype),[l,c]=Qt((u,d)=>u!==d?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var MH={kernelName:Da,backendName:"cpu",kernelFunc:Uo};function wn(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;Re([o,i],e);let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=o.dtype==="string"?E.fromUint8ToStringArray(c):c,p=o.dtype==="string"?E.fromUint8ToStringArray(u):u,h=s||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let c=Uo({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),d=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,h=l.data.get(d.dataId).values,f=l.data.get(p.dataId).values,m=Uo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),A=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,y=l.data.get(A.dataId).values,b=l.data.get(x.dataId).values,[w,k,S]=n(o.shape,i.shape,h,f,y,b),N=l.makeTensorInfo(S,"float32",w),R=l.makeTensorInfo(S,"float32",k),M=Is({inputs:{real:N,imag:R},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(N),l.disposeIntermediateTensorInfo(R),M}else{let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=s||o.dtype,[p,h]=t(o.shape,i.shape,c,u,d);return l.makeTensorInfo(h,d,p)}}}function Ky(e){return(t,n,s,r,a,o)=>{let i=E.assertAndGetBroadcastShape(t,n),l=v.sizeFromShape(i),c=i.length,u=v.computeStrides(i),d=v.getTypedArrayFromDType("float32",l),p=v.getTypedArrayFromDType("float32",l),h=E.getBroadcastDims(t,i),f=E.getBroadcastDims(n,i),m=E.mergeRealAndImagArrays(s,r),g=E.mergeRealAndImagArrays(a,o),A=t.length,x=v.computeStrides(t),y=n.length,b=v.computeStrides(n);if(h.length+f.length===0)for(let w=0;w<d.length;w++){let k=w%m.length,S=w%g.length,N=e(m[k*2],m[k*2+1],g[S*2],g[S*2+1]);d[w]=N.real,p[w]=N.imag}else for(let w=0;w<d.length;w++){let k=v.indexToLoc(w,c,u),S=k.slice(-A);h.forEach($=>S[$]=0);let N=v.locToIndex(S,A,x),R=k.slice(-y);f.forEach($=>R[$]=0);let M=v.locToIndex(R,y,b),D=e(m[N*2],m[N*2+1],g[M*2],g[M*2+1]);d[w]=D.real,p[w]=D.imag}return[d,p,i]}}var wI=Qt((e,t)=>e+t),zH=Ky((e,t,n,s)=>({real:e+n,imag:t+s})),cp=wn(Xr,wI,zH),LH={kernelName:Xr,backendName:"cpu",kernelFunc:cp};function Zy(e,t,n,s,r){let a=v.sizeFromShape(s),o=v.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function kI(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=ze([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let c=e.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(s?o.set(1,i,c):t.size>0?o.set(o.get(i,c)+t.get(i,l),i,c):o.set(o.get(i,c)+1,i,c))}return o}function Go(e){return(t,n,s)=>{let r=v.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function mt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Re(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=v.sizeFromShape(o.shape),u=n||o.dtype,d=v.getArrayFromDType(u,c);for(let p=0;p<c;++p)d[p]=t(l[p],r);return i.makeTensorInfo(o.shape,u,d)}}function tc(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Re(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=n||o.dtype,u=t(l,c,r);return i.makeTensorInfo(o.shape,c,u)}}var II=Go(e=>Math.ceil(e)),BH=tc(Fa,II),WH={kernelName:Fa,backendName:"cpu",kernelFunc:BH};function Yy(e,t,n,s){let r=v.getArrayFromDType(n,v.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=v.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?E.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let c=0;c<o.shape[0];++c){let u=c*t[1]+a;for(let d=0;d<o.shape[1];++d)r[u+d]=i[l++]}a+=o.shape[1]})}return r}var SI=Qt((e,t)=>e===t?1:0),CI=wn(gi,SI,null,"bool"),VH={kernelName:gi,backendName:"cpu",kernelFunc:CI},TI=Go(e=>Math.exp(e)),NI=tc(Va,TI,"float32"),UH={kernelName:Va,backendName:"cpu",kernelFunc:NI},EI=Go(e=>Math.expm1(e)),GH=tc(yi,EI),HH={kernelName:yi,backendName:"cpu",kernelFunc:GH},RI=Go(e=>Math.floor(e)),jH=tc(Ua,RI),qH={kernelName:Ua,backendName:"cpu",kernelFunc:jH};function $I(e,t,n,s,r,a,o,i,l){let c=ze([s,a],n);for(let u=0;u<s;u++){let d=[],p=0;for(let h=0;h<r;h++){let f=e[u*r+h];p+=f*o[h],d.push(f)}if(p<0||p>=l/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<a;h++)c.values[u*a+h]=t.get(...t.indexToLoc(p*a+h))}return c}function _I(e,t,n){let s=ze(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],c=t.locToIndex([i,l]);o[2]=t.values[c];let u=e.locToIndex(o);s.values[r]=e.values[u]}return s}var DI=Qt((e,t)=>e>t?1:0),XH=wn(wi,DI,null,"bool"),KH={kernelName:wi,backendName:"cpu",kernelFunc:XH},FI=Qt((e,t)=>e>=t?1:0),ZH=wn(ja,FI,null,"bool"),YH={kernelName:ja,backendName:"cpu",kernelFunc:ZH},PI=Qt((e,t)=>e<t?1:0),JH=wn(Ii,PI,null,"bool"),QH={kernelName:Ii,backendName:"cpu",kernelFunc:JH},OI=Qt((e,t)=>e<=t?1:0),ej=wn(Si,OI,null,"bool"),tj={kernelName:Si,backendName:"cpu",kernelFunc:ej};function MI(e,t,n){let s=(t-e)/(n-1),r=v.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var zI=Go(e=>Math.log(e)),nj=tc(Xa,zI),sj={kernelName:Xa,backendName:"cpu",kernelFunc:nj};function LI(e,t,n,s){let r=v.getTypedArrayFromDType(s,v.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let c=e[o+l];(Number.isNaN(c)||c>i)&&(i=c)}r[a]=i}return r}var BI=Qt((e,t)=>Math.max(e,t)),rj=wn(Za,BI),aj={kernelName:Za,backendName:"cpu",kernelFunc:rj},WI=Qt((e,t)=>Math.min(e,t)),oj=wn(eo,WI),ij={kernelName:eo,backendName:"cpu",kernelFunc:oj},Jy=Qt((e,t)=>e*t),lj=Ky((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Dm=wn(no,Jy,lj),uj={kernelName:no,backendName:"cpu",kernelFunc:Dm};function VI(e,t,n){let s=v.createScalarValue(-1,n);return Jy([],t,s,e,n)}function cj(e){let{inputs:t,backend:n}=e,{x:s}=t;Re(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=VI(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var dj={kernelName:Ti,backendName:"cpu",kernelFunc:cj},UI=Qt((e,t)=>e!==t?1:0),pj=wn(Ni,UI,null,"bool"),hj={kernelName:Ni,backendName:"cpu",kernelFunc:pj};function Qy(e,t,n,s,r){let a=t.length,o=v.sizeFromShape(t),i=v.computeStrides(t),l=v.computeStrides(r),c=v.getTypedArrayFromDType(n,v.sizeFromShape(r));for(let u=0;u<o;++u){let d=v.indexToLoc(u,a,i),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[s[f]];let h=v.locToIndex(p,a,l);c[h]=e[u]}return c}function Ws(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Re(r,"transpose");let o=r.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=r.shape[a[d]];let l=s.data.get(r.dataId).values,c=Qy(l,r.shape,r.dtype,a,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}var fj={kernelName:xo,backendName:"cpu",kernelFunc:Ws};function GI(e,t,n,s){let[r,a]=E.computeOutAndReduceShapes(e,s),o=Ln(t,"int32"),i=v.makeZerosTypedArray(v.sizeFromShape(r),o),l=v.sizeFromShape(a);for(let c=0;c<i.length;++c){let u=c*l,d=1;for(let p=0;p<l;++p)d*=n[u+p];i[c]=d}return{outVals:i,outShape:r,outDtype:o}}function mj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Re(r,"prod");let i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=E.getAxesPermutation(l,i),u=l,d=r,p=[];c!=null&&(d=Ws({inputs:{x:r},backend:n,attrs:{perm:c}}),p.push(d),u=E.getInnerMostAxes(u.length,i));let h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=GI(d.shape,d.dtype,h,u),A=m;return o&&(A=E.expandShapeToKeepDim(m,l)),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(A,g,f)}var gj={kernelName:Fi,backendName:"cpu",kernelFunc:mj};function ex(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return v.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=v.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}var HI=Go(e=>1/Math.sqrt(e)),Aj=tc(uo,HI),yj={kernelName:uo,backendName:"cpu",kernelFunc:Aj},xj=Go(e=>1/(1+Math.exp(-e))),jI=mt(po,e=>1/(1+Math.exp(-e))),bj={kernelName:po,backendName:"cpu",kernelFunc:jI};function Fm(e,t,n,s,r){let a=Ot.isSliceContinous(s,t,n),o=v.sizeFromShape(n),i=v.computeStrides(s);if(a){let d=Ot.computeFlatOffset(t,i);return r==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let l=r==="string"?E.fromUint8ToStringArray(e):e,c=ze(s,r,l),u=ze(n,r);for(let d=0;d<u.size;++d){let p=u.indexToLoc(d),h=p.map((f,m)=>f+t[m]);u.set(c.get(...h),...p)}return r==="string"?E.fromStringArrayToUint8(u.values):u.values}function kl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;Re(r,"slice");let[i,l]=Ot.parseSliceParams(r,a,o);Ot.assertParamsValid(r,i,l);let c=n.data.get(r.dataId).values,u=Fm(c,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var vj={kernelName:Bi,backendName:"cpu",kernelFunc:kl};function qI(e,t,n,s,r,a,o){let i=t[0],l=a[0],c=new Array(l),u=new Array(i),d=t[1];if(l===0){if(i!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${i}`);let g=v.getArrayFromDType(n,0),A=v.getArrayFromDType(r,0);return[g,[0,d],A,c,u]}let p=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let A=e[g*d];if(A<0)throw new Error(`indices(${g}, 0) is invalid: ${A} < 0`);if(A>=l)throw new Error(`indices(${g}, 0) is invalid: ${A} >= ${l}`);++f[A],p=p&&A>=h,h=A}let m=!0;for(let g=0;g<l;++g){let A=f[g]===0;c[g]=A,m=m&&!A,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,A=s;for(let x=0;x<i;++x)u[x]=x;return[g,[i,d],A,c,u]}else{let g=f[l-1],A=v.getArrayFromDType(n,g*d),x=v.getArrayFromDType(r,g),y=new Array(l).fill(0);for(let b=0;b<i;++b){let w=e[b*d],k=y[w],S=(w===0?0:f[w-1])+k;y[w]++;for(let N=0;N<d;++N)A[S*d+N]=e[b*d+N];x[S]=s[b],u[b]=S}for(let b=0;b<l;++b)if(y[b]===0){let k=b===0?0:f[b-1];A[k*d+0]=b;for(let S=1;S<d;++S)A[k*d+S]=0;x[k]=o}return[A,[g,d],x,c,u]}}function XI(e,t,n,s,r){let a=v.sizeFromShape(s),o=t[0],i=r.length,l=[],c=1,u=-1;for(let g=0;g<i;++g){let A=r[g];if(A===-1){if(u!==-1)throw new Error(`only one output dimension may be -1, not both ${u} and ${g}`);u=g,l.push(1)}else{if(A<0)throw new Error(`size ${g} must be non-negative, not ${A}`);c*=A,l.push(A)}}if(u!==-1){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");let g=Math.trunc(a/c);if(c*g!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}
          dense values, but the requested shape requires a multiple of ${c}. inputShape=${s} outputShape= ${l}`);l[u]=g}let d=v.sizeFromShape(l);if(d!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${d}. inputShape=${s} outputShape=${l}`);let p=s.length,h=[];if(p>0){h[p-1]=1;for(let g=p-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=v.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let A=0;for(let x=0;x<p;++x)A+=e[g*p+x]*h[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(A/f[x]),A%=f[x]}return[m,[o,i],l]}function tx(e,t,n,s,r,a=!1,o=0){let i=s.length;if(i!==r.length)throw new Error("segmentIds and indices should have same size.");let l=[t[0],e.length/t[0]],c=l[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");let p=t.slice();p[0]=d;let h=p.reduce((y,b)=>y*b,1),f=v.getArrayFromDType(n,h);if(i===0)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,A=0,x=r[m];for(;;){let y=0;if(g<i){if(y=r[g],x===y){++g;continue}if(x>=y)throw new Error("segment ids are not increasing")}if(x<0||x>=d)throw new Error(`Segment id ${x} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);x>A&&f.fill(o,A*c,x*c);for(let b=m;b<g;++b){let w=s[b];if(w<0||w>=l[0])throw new Error(`Bad: indices[${b}] == ${s[b]} out of range [0, ${l[0]})`);for(let k=0;k<c;k++)f[x*c+k]+=e[w*c+k]}if(a)for(let b=0;b<c;b++)f[x*c+b]/=g-m;if(m=g,++g,A=x+1,x=y,g>i)break}return A<d&&f.fill(o,A*c,d*c),[f,p]}var wj=Go(e=>Math.sqrt(e)),kj=mt(ho,e=>Math.sqrt(e)),Ij={kernelName:ho,backendName:"cpu",kernelFunc:kj},KI=Qt((e,t)=>{let n=e-t;return n*n}),Sj=wn(go,KI),Cj={kernelName:go,backendName:"cpu",kernelFunc:Sj};function ZI(e,t,n,s){let r=ze(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var Tj=class{constructor(e,t,n,s,r,a){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),c=Math.max(0,i-(r-(o+1))),u=a-(l+c),d=t+(l>0?0:o-i),p=0;p+=l*this.leftPad.length;for(let A=0;A<u;++A)p+=e[d+A].length;p+=c*this.rightPad.length,p+=(l+c+u-1)*this.separator.length,n[s+o]=new Uint8Array(p);let f=n[s+o],m=0,g=A=>A.forEach(x=>f[m++]=x);for(let A=0;A<l;++A)g(this.leftPad),g(this.separator);for(let A=0;A<u-1;++A)g(e[d+A]),g(this.separator);if(u>0){g(e[d+u-1]);for(let A=0;A<c;++A)g(this.separator),g(this.rightPad)}else{for(let A=0;A<c-1;++A)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let c=t[l]>=i;if(c=c&&t[l]<=n,!c)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=v.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],c=0;this.nGramWidths.forEach(u=>{c+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&c===0&&(c=1),a[i]=a[i-1]+c}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],c=a[i];if(this.nGramWidths.forEach(u=>{let d=t[i+1]-t[i],p=this.getNumNGrams(d,u);this.createNGrams(e,l,o,c,p,u),c+=p}),this.preserveShort&&c===a[i]){let u=t[i+1]-t[i];if(u===0)continue;let d=u+2*this.padWidth,p=1;this.createNGrams(e,l,o,c,p,d)}}return[o,a]}};function YI(e,t,n,s,r,a,o,i){return new Tj(n,s,r,a,o,i).compute(e,t)}function Nj(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function JI(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let p=0;p<s;++p){let h=r.length;Nj(e[p],t,n,r);let f=r.length-h;i[p]=f,a+=f,o=Math.max(o,f)}let l=v.getArrayFromDType("int32",a*2),c=new Array(a),u=[s,o],d=0;for(let p=0;p<s;++p)for(let h=0;h<i[p];++h)l[d*2]=p,l[d*2+1]=h,c[d]=r[d],++d;return[l,c,u]}function QI(e,t){let n=v.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=v.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var eS=Qt((e,t)=>e-t),Ej=Ky((e,t,n,s)=>({real:e-n,imag:t-s})),nx=wn(Ao,eS,Ej),Rj={kernelName:Ao,backendName:"cpu",kernelFunc:nx};function tS(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=ze(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var dp=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function nS(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,c=Math.log(i),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(i-u)/i)*Math.sign(l-i/2),p=Math.max(n,Math.floor(t-l*u/i+d)),h=Math.min(s,Math.floor(t+(i-l)*u/i+d));nS(e,t,p,h)}let r=e[t],a=n,o=s;for(v.swap(e,n,t),dp(e[s],r)>0&&v.swap(e,n,s);a<o;){for(v.swap(e,a,o),a++,o--;dp(e[a],r)<0;)a=a+1;for(;dp(e[o],r)>0;)o=o-1}dp(e[n],r)===0?v.swap(e,n,o):(o=o+1,v.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function sS(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=v.getTypedArrayFromDType(n,o*s),c=v.getTypedArrayFromDType("int32",o*s);for(let d=0;d<o;d++){let p=d*i,h=e.subarray(p,p+i),f=new Array(h.length);h.forEach((x,y)=>f[y]={value:x,index:y}),s<f.length&&(nS(f,s),f=f.slice(0,s)),r&&f.sort(dp);let m=d*s,g=l.subarray(m,m+s),A=c.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,A[x]=f[x].index}let u=t.slice();return u[u.length-1]=s,[ze(u,n,l),ze(u,"int32",c)]}function rS(e,t,n,s){let r=v.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new an(a,s,e),c=[],u=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let A=0;A<a[0];A++)for(let x=0;x<a[2];x++)g.push(l.get(A,f,x));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,c.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let p=new an(d,s);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let A=0;A<a[2];A++)p.set(l.get(g,f,A),g,m,A)});let h=n.slice();return h[r]=d[1],{outputValues:p.values,outputShape:h,indices:i}}var $j="0.0.0";al("cpu",()=>new Xy,1);var aS=mt(Wa,e=>e>=0?e:Math.exp(e)-1),_j={kernelName:Wa,backendName:"cpu",kernelFunc:aS};function oS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Re([r],"leakyRelu");let o=v.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,l=v.getTypedArrayFromDType("float32",o);for(let c=0;c<i.length;c++)l[c]=i[c]<0?a*i[c]:i[c];return n.makeTensorInfo(r.shape,"float32",l)}var Dj={kernelName:ki,backendName:"cpu",kernelFunc:oS},Fj=Qt((e,t)=>e<0?t*e:e);function iS(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Re([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,l]=Fj(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var Pj={kernelName:ao,backendName:"cpu",kernelFunc:iS},lS=mt(oo,e=>Math.max(0,e)),Oj={kernelName:oo,backendName:"cpu",kernelFunc:lS},uS=mt(lo,e=>Math.min(Math.max(0,e),6)),Mj={kernelName:lo,backendName:"cpu",kernelFunc:uS};function sx(e,t,n,s,r){if(n==="linear")return Wr({inputs:{x:t},backend:e});if(n==="relu")return lS({inputs:{x:t},backend:e});if(n==="elu")return aS({inputs:{x:t},backend:e});if(n==="relu6")return uS({inputs:{x:t},backend:e});if(n==="prelu")return iS({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return oS({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return jI({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Ft(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=v.sizeFromShape(r.shape),i=v.inferFromImplicitShape(a,o),l=v.sizeFromShape(i);v.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var zj={kernelName:Pi,backendName:"cpu",kernelFunc:Ft};function cS(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;Re([r,a],"matMul");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),A=v.sizeFromShape(m),y=nl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);v.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,p]:[g,p,u],w=i?[A,h,d]:[A,d,h],k=Ft({inputs:{x:r},backend:n,attrs:{shape:b}}),S=Ft({inputs:{x:a},backend:n,attrs:{shape:w}}),N=o?k.shape[1]:k.shape[2],R=o?k.shape[2]:k.shape[1],M=i?S.shape[1]:S.shape[2],D=Math.max(g,A),$=n.data.get(k.dataId).values,T=n.data.get(S.dataId).values,P=v.computeStrides(k.shape),W=v.computeStrides(S.shape),[K,z,j]=o?[P[0],1,P[1]]:[P[0],P[1],1],[Z,Q,ne]=i?[1,W[1],W[0]]:[W[1],1,W[0]],ae=R*M,U=ze([D,R,M],k.dtype),oe=U.values,re=n.blockSize;for(let me=0;me<D;me++)for(let ye=0;ye<R;ye+=re)for(let Te=0;Te<M;Te+=re)for(let Ne=0;Ne<N;Ne+=re){let Pe=Math.min(ye+re,R),Ue=Math.min(Te+re,M),ot=Math.min(Ne+re,N);for(let Qe=ye;Qe<Pe;Qe++)for(let Ye=Te;Ye<Ue;Ye++){let gt=0;for(let it=Ne;it<ot;it++){let At=Math.min(me,g-1)*K,Rt=Math.min(me,A-1)*ne,ts=$[At+Qe*z+it*j],lt=T[it*Z+Ye*Q+Rt];gt+=ts*lt}oe[me*ae+(Qe*M+Ye)]+=gt}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(y,U.dtype,U.values)}var Lj={kernelName:_a,backendName:"cpu",kernelFunc:cS};function Bj(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,p,h,f,m=[];p=cS({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:c},backend:n}),o&&(h=cp({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),u&&(f=sx(n,p,u,i,d),m.push(p),p=f);for(let A of m)n.disposeIntermediateTensorInfo(A);return p}var Wj={kernelName:vo,backendName:"cpu",kernelFunc:Bj},Vj=mt(ru,e=>Math.acos(e)),Uj={kernelName:ru,backendName:"cpu",kernelFunc:Vj},Gj=mt(au,e=>Math.acosh(e)),Hj={kernelName:au,backendName:"cpu",kernelFunc:Gj};function jj(e){let{inputs:t,backend:n}=e,s=t;Re(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=ze(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let l=r[i];for(let c=0;c<o.length;c++)o[c]+=l[c]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var qj={kernelName:Ea,backendName:"cpu",kernelFunc:jj};function Xj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Re(r,"all");let i=v.parseAxisParam(a,r.shape),l=i,c=E.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Ws({inputs:{x:r},backend:n,attrs:{perm:c}}),l=E.getInnerMostAxes(l.length,r.shape.length)),E.assertAxesAreInnerMostDims("all",l,u.shape.length);let[d,p]=E.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let A=0;A<f.length;++A){let x=A*h,y=m[x];for(let b=0;b<h;++b){let w=m[x+b];y=y&&w}f[A]=y}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let A=E.expandShapeToKeepDim(d,i),x=Ft({inputs:{x:g},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(g),x}return g}var Kj={kernelName:ou,backendName:"cpu",kernelFunc:Xj};function Zj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Re(r,"any");let i=v.parseAxisParam(a,r.shape),l=i,c=E.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Ws({inputs:{x:r},backend:n,attrs:{perm:c}}),l=E.getInnerMostAxes(l.length,r.shape.length)),E.assertAxesAreInnerMostDims("any",l,u.shape.length);let[d,p]=E.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let A=0;A<f.length;++A){let x=A*h,y=m[x];for(let b=0;b<h;++b){let w=m[x+b];y=y||w}f[A]=y}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let A=E.expandShapeToKeepDim(d,i),x=Ft({inputs:{x:g},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(g),x}return g}var Yj={kernelName:iu,backendName:"cpu",kernelFunc:Zj};function Jj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Re(r,"argMax");let o=v.parseAxisParam(a,r.shape),i=E.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Ws({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=E.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],E.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[u,d]=E.computeOutAndReduceShapes(l.shape,o),p=v.sizeFromShape(u),h=v.makeZerosTypedArray(p,"int32"),f=v.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let A=g*f,x=m[A],y=0;for(let b=0;b<f;++b){let w=m[A+b];w>x&&(x=w,y=b)}h[g]=y}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var Qj={kernelName:Ra,backendName:"cpu",kernelFunc:Jj};function eq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Re(r,"argMin");let o=v.parseAxisParam(a,r.shape),i=E.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Ws({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=E.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],E.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[u,d]=E.computeOutAndReduceShapes(l.shape,o),p=v.sizeFromShape(u),h=v.makeZerosTypedArray(p,"int32"),f=v.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let A=g*f,x=m[A],y=0;for(let b=0;b<f;++b){let w=m[A+b];w<x&&(x=w,y=b)}h[g]=y}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var tq={kernelName:lu,backendName:"cpu",kernelFunc:eq},nq=mt(uu,e=>Math.asin(e)),sq={kernelName:uu,backendName:"cpu",kernelFunc:nq},rq=mt(cu,e=>Math.asinh(e)),aq={kernelName:cu,backendName:"cpu",kernelFunc:rq},oq=mt(du,e=>Math.atan(e)),iq={kernelName:du,backendName:"cpu",kernelFunc:oq},lq=Qt((e,t)=>Math.atan2(e,t)),uq=wn(hu,lq),cq={kernelName:hu,backendName:"cpu",kernelFunc:uq},dq=mt(pu,e=>Math.atanh(e)),pq={kernelName:pu,backendName:"cpu",kernelFunc:dq};function rx(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ze(r.outShape,n),g=m.values,A=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let b=0;b<r.batchSize;++b){let w=b*A,k=b*s[0];for(let S=0;S<r.inChannels;++S)for(let N=0;N<r.outHeight;++N){let R=N*o-p,M=Math.max(0,R),D=Math.min(r.inHeight,u+R),$=w+N*x;for(let T=0;T<r.outWidth;++T){let P=T*i-h,W=Math.max(0,P),K=Math.min(r.inWidth,d+P),z=f,j=0,Z=0;for(let ne=M;ne<D;ne+=l){let ae=k+ne*s[1];for(let U=W;U<K;U+=c){let oe=ae+U*s[2],re=e[oe+S];a==="max"&&re>z?z=re:a==="avg"&&(j+=re,Z++)}if(isNaN(z))break}let Q=$+T*y+S;g[Q]=a==="avg"?j/Z:z}}}return m}function dS(e,t,n,s,r=!1,a=!1){let o=ze(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=ze(t,n,e);for(let g=0;g<s.batchSize;++g)for(let A=0;A<s.inChannels;++A)for(let x=0;x<s.outHeight;++x){let y=x*i-h,b=y;for(;b<0;)b+=c;let w=Math.min(s.inHeight,d+y);for(let k=0;k<s.outWidth;++k){let S=k*l-f,N=S;for(;N<0;)N+=u;let R=Math.min(s.inWidth,p+S),M=Number.NEGATIVE_INFINITY,D=-1;for(let $=b;$<w;$+=c){let T=$-y;for(let P=N;P<R;P+=u){let W=P-S,K=m.get(g,$,P,A);K>M&&(M=K,r?D=a?((g*s.inHeight+$)*s.inWidth+P)*s.inChannels+A:($*s.inWidth+P)*s.inChannels+A:D=T*p+W)}}o.set(D,g,x,k,A)}}return o}function pS(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,A=r.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ze(r.outShape,n),b=y.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let R=0;R<r.batchSize;++R){let M=R*w,D=R*s[0];for(let $=0;$<r.inChannels;++$)for(let T=0;T<r.outDepth;++T){let P=T*o-m,W=P;for(;W<0;)W+=c;let K=Math.min(r.inDepth,p+P),z=M+T*k;for(let j=0;j<r.outHeight;++j){let Z=j*i-g,Q=Z;for(;Q<0;)Q+=u;let ne=Math.min(r.inHeight,h+Z),ae=z+j*S;for(let U=0;U<r.outWidth;++U){let oe=U*l-A,re=oe;for(;re<0;)re+=d;let me=Math.min(r.inWidth,f+oe),ye=ae+U*N,Te=x,Ne=0,Pe=0;for(let ot=W;ot<K;ot+=c){let Qe=D+ot*s[1];for(let Ye=Q;Ye<ne;Ye+=u){let gt=Qe+Ye*s[2];for(let it=re;it<me;it+=d){let At=gt+it*s[3],Rt=e[At+$];if(a==="max"&&Rt>Te?Te=Rt:a==="avg"&&(Ne+=Rt,Pe++),isNaN(Te))break}if(isNaN(Te))break}if(isNaN(Te))break}let Ue=ye+$;b[Ue]=a==="avg"?Ne/Pe:Te}}}}return y}function hq(e,t){let n=ze(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let A=0;A<t.outDepth;++A){let x=A*s-p,y=x;for(;y<0;)y+=o;let b=Math.min(t.inDepth,c+x);for(let w=0;w<t.outHeight;++w){let k=w*r-h,S=k;for(;S<0;)S+=i;let N=Math.min(t.inHeight,u+k);for(let R=0;R<t.outWidth;++R){let M=R*a-f,D=M;for(;D<0;)D+=l;let $=Math.min(t.inWidth,d+M),T=Number.NEGATIVE_INFINITY,P=-1;for(let W=y;W<b;W+=o){let K=W-x;for(let z=S;z<N;z+=i){let j=z-k;for(let Z=D;Z<$;Z+=l){let Q=Z-M,ne=e.get(m,W,z,Z,g);ne>=T&&(T=ne,P=K*u*d+j*u+Q)}}}n.set(P,m,A,w,R,g)}}}return n}function fq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Re(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(E.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=E.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))d=Wr({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=rx(p,r.shape,r.dtype,h,u,"avg");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var mq={kernelName:$a,backendName:"cpu",kernelFunc:fq};function gq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Re(r,"avgPool3d");let u=E.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,p=pS(d,r.shape,r.dtype,v.computeStrides(r.shape),u,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var Aq={kernelName:od,backendName:"cpu",kernelFunc:gq};function yq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Re([r,a],"avgPool3DGrad");let u=E.computePool3DInfo(a.shape,o,i,1,l,c),d=u.strideDepth,p=u.strideHeight,h=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,A=u.dilationDepth,x=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,w=u.effectiveFilterHeight,k=u.effectiveFilterWidth,S=b-1-u.padInfo.front,N=k-1-u.padInfo.left,R=w-1-u.padInfo.top,M=ze(a.shape,"float32"),D=1/(f*m*g),$=n.bufferSync(r);for(let T=0;T<u.batchSize;++T)for(let P=0;P<u.inChannels;++P)for(let W=0;W<u.inDepth;++W)for(let K=0;K<u.inHeight;++K)for(let z=0;z<u.inWidth;++z){let j=W-S,Z=K-R,Q=z-N,ne=0;for(let ae=0;ae<b;ae+=A){let U=(j+ae)/d;if(!(U<0||U>=u.outDepth||Math.floor(U)!==U))for(let oe=0;oe<w;oe+=x){let re=(Z+oe)/p;if(!(re<0||re>=u.outHeight||Math.floor(re)!==re))for(let me=0;me<k;me+=y){let ye=(Q+me)/h;if(ye<0||ye>=u.outWidth||Math.floor(ye)!==ye)continue;ne+=$.get(T,U,re,ye,P)}}}M.set(ne*D,T,W,K,z,P)}return n.makeTensorInfo(M.shape,M.dtype,M.values)}var xq={kernelName:Th,backendName:"cpu",kernelFunc:yq};function bq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Re([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=E.computePool2DInfo(o.shape,i,l,1,c),d=u.strideHeight,p=u.strideWidth,h=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,A=u.effectiveFilterHeight,x=u.effectiveFilterWidth,y=x-1-u.padInfo.left,b=A-1-u.padInfo.top,w=ze(o.shape,"float32"),k=1/(h*f),S=n.data.get(r.dataId).values,N=ze(r.shape,"float32",S);for(let R=0;R<u.batchSize;++R)for(let M=0;M<u.inChannels;++M)for(let D=0;D<u.inHeight;++D)for(let $=0;$<u.inWidth;++$){let T=D-b,P=$-y,W=0;for(let K=0;K<A;K+=m){let z=(T+K)/d;if(!(z<0||z>=u.outHeight||Math.floor(z)!==z))for(let j=0;j<x;j+=g){let Z=(P+j)/p;if(Z<0||Z>=u.outWidth||Math.floor(Z)!==Z)continue;W+=N.get(R,z,Z,M)}}w.set(W*k,R,D,$,M)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var vq={kernelName:Ch,backendName:"cpu",kernelFunc:bq};function wq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:l}=t;v.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Re([r,i,l,a,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);let u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(l.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,A=h.length,x=p.length,y=d.length,b=0,w=0,k=0,S=0;for(let N=0;N<u.length;++N)m[N]=f[b++]+(u[N]-d[w++])*h[k++]/Math.sqrt(p[S++]+c),b>=g&&(b=0),w>=y&&(w=0),k>=A&&(k=0),S>=x&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var kq={kernelName:Ha,backendName:"cpu",kernelFunc:wq};function Iq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;Re([r],"batchToSpaceND");let i=a.reduce((A,x)=>A*x),l=E.getReshaped(r.shape,a,i),c=E.getPermuted(l.length,a.length),u=E.getReshapedPermuted(r.shape,a,i),d=E.getSliceBeginCoords(o,a.length),p=E.getSliceSize(u,o,a.length),h=Ft({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Ws({inputs:{x:h},backend:n,attrs:{perm:c}}),m=Ft({inputs:{x:f},backend:n,attrs:{shape:u}}),g=kl({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var Sq={kernelName:di,backendName:"cpu",kernelFunc:Iq};function Cq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=Zy(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var Tq={kernelName:Nh,backendName:"cpu",kernelFunc:Cq};function Nq(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=E.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var Eq={kernelName:Eh,backendName:"cpu",kernelFunc:Nq},Rq=mt(Kr,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),$q={kernelName:Kr,backendName:"cpu",kernelFunc:Rq},_q=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){let u=i[c],d=l[c];s[c]=Math.hypot(u,d)}return n.makeOutput(s,t.shape,"float32")},Dq={kernelName:ld,backendName:"cpu",kernelFunc:_q};function nc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var Fq={kernelName:pd,backendName:"cpu",kernelFunc:nc};function sc(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=E.computeOutShape(t.map(m=>m.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>v.sizeFromShape(m.shape)>0);if(i.length===1)return Wr({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(E.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>wl({inputs:{input:b},backend:n})),g=i.map(b=>nc({inputs:{input:b},backend:n})),A=sc({inputs:m,backend:n,attrs:{axis:a}}),x=sc({inputs:g,backend:n,attrs:{axis:a}}),y=Is({inputs:{real:A,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(x),y}let c=i.map(m=>{let g=v.sizeFromShape(m.shape.slice(a));return Ft({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),u=c.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=E.computeOutShape(c.map(m=>m.shape),1);let d=c[0].shape[0]===1,p=Yy(u,o,t[0].dtype,d),h=E.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,p);return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Pq={kernelName:pi,backendName:"cpu",kernelFunc:sc};function hS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s;Re([r,a],"conv2d");let d=E.convertConv2DDataFormat(l),p=E.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,A=p.padInfo.left,x=p.padInfo.top,y=p.dataFormat==="channelsLast",b=new an(p.outShape,r.dtype),w=v.computeStrides(r.shape),k=v.computeStrides(a.shape),S=w[0],N=y?w[1]:w[2],R=y?w[2]:1,M=y?1:w[1],D=b.strides[0],$=y?b.strides[1]:b.strides[2],T=y?b.strides[2]:1,P=y?1:b.strides[1],W=n.data.get(r.dataId).values,K=n.data.get(a.dataId).values,z=b.values;for(let j=0;j<p.batchSize;++j){let Z=j*S,Q=j*D;for(let ne=0;ne<p.outHeight;++ne){let ae=Q+ne*$,U=ne*p.strideHeight-x;for(let oe=0;oe<h;++oe){let re=U+oe*m;if(re<0||re>=p.inHeight)continue;let me=oe*k[0],ye=Z+re*N;for(let Te=0;Te<p.outWidth;++Te){let Ne=ae+Te*T,Pe=Te*p.strideWidth-A;for(let Ue=0;Ue<f;++Ue){let ot=Pe+Ue*g;if(ot<0||ot>=p.inWidth)continue;let Qe=me+Ue*k[1],Ye=ye+ot*R,gt=Qe;for(let it=0;it<p.inChannels;++it){let At=W[Ye+it*M];for(let Rt=0;Rt<p.outChannels;++Rt)z[Ne+Rt*P]+=At*K[gt+Rt];gt+=p.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,z)}var Oq={kernelName:Pa,backendName:"cpu",kernelFunc:hS};function Mq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;Re([r,a],"conv2dBackpropFilter");let d=E.convertConv2DDataFormat(l),p=E.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,A=p.dataFormat==="channelsLast",x=new an(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,S=new an(r.shape,r.dtype,w),N=new an(a.shape,a.dtype,k);for(let R=0;R<m;++R){let M=Math.max(0,Math.ceil((b-R)/h)),D=Math.min(p.outHeight,(p.inHeight+b-R)/h);for(let $=0;$<g;++$){let T=Math.max(0,Math.ceil((y-$)/f)),P=Math.min(p.outWidth,(p.inWidth+y-$)/f);for(let W=0;W<p.inChannels;++W)for(let K=0;K<p.outChannels;++K){let z=0;for(let j=0;j<p.batchSize;++j)for(let Z=M;Z<D;++Z){let Q=R+Z*h-b;for(let ne=T;ne<P;++ne){let ae=$+ne*f-y;A?z+=S.get(j,Q,ae,W)*N.get(j,Z,ne,K):z+=S.get(j,W,Q,ae)*N.get(j,K,Z,ne)}}x.set(z,R,$,W,K)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var zq={kernelName:Rh,backendName:"cpu",kernelFunc:Mq};function Lq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s;Re([r,a],"conv2dBackpropInput");let d=v.computeStrides(a.shape),p=v.computeStrides(r.shape),h=E.convertConv2DDataFormat(c),f=E.computeConv2DInfo(o,a.shape,i,1,l,u,!1,h),m=new an(f.inShape,"float32"),g=m.values,A=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[y,b,w]=d,{batchSize:k,filterHeight:S,filterWidth:N,inChannels:R,inHeight:M,inWidth:D,outChannels:$,outHeight:T,outWidth:P,strideHeight:W,strideWidth:K}=f;h=f.dataFormat;let z=S-1-f.padInfo.top,j=N-1-f.padInfo.left,Z=h==="channelsLast",Q=m.strides[0],ne=Z?m.strides[1]:m.strides[2],ae=Z?m.strides[2]:1,U=Z?1:m.strides[1],oe=p[0],re=Z?p[1]:p[2],me=Z?p[2]:1,ye=Z?1:p[1];for(let Te=0;Te<k;++Te)for(let Ne=0;Ne<R;++Ne)for(let Pe=0;Pe<M;++Pe){let Ue=Pe-z,ot=Math.max(0,Math.ceil(Ue/W)),Qe=Math.min(T,(S+Ue)/W);for(let Ye=0;Ye<D;++Ye){let gt=Ye-j,it=Math.max(0,Math.ceil(gt/K)),At=Math.min(P,(N+gt)/K),Rt=0;for(let lt=ot;lt<Qe;++lt){let ms=lt*W-Ue;for(let In=it;In<At;++In){let Xs=In*K-gt,ns=oe*Te+re*lt+me*In,gs=y*(S-1-ms)+b*(N-1-Xs)+w*Ne;for(let Rs=0;Rs<$;++Rs){let Ks=A[ns+ye*Rs],$s=x[gs+Rs];Rt+=Ks*$s}}}let ts=Q*Te+ne*Pe+ae*Ye+U*Ne;g[ts]=Rt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var Bq={kernelName:Oa,backendName:"cpu",kernelFunc:Lq};function Wq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;Re([r,a],"conv3d");let c=E.computeConv3DInfo(r.shape,a.shape,o,l,i),{filterDepth:u,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=c,A=g.front,x=g.left,y=g.top,b=new an(c.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,S=b.values,N=v.computeStrides(r.shape),R=v.computeStrides(a.shape);for(let M=0;M<c.batchSize;++M){let D=M*N[0],$=M*b.strides[0];for(let T=0;T<c.outDepth;++T){let P=$+T*b.strides[1],W=T*c.strideDepth-A;for(let K=0;K<u;++K){let z=W+K*h;if(z<0||z>=c.inDepth)continue;let j=K*R[0],Z=D+z*N[1];for(let Q=0;Q<c.outHeight;++Q){let ne=P+Q*b.strides[2],ae=Q*c.strideHeight-y;for(let U=0;U<d;++U){let oe=ae+U*f;if(oe<0||oe>=c.inHeight)continue;let re=j+U*R[1],me=Z+oe*N[2];for(let ye=0;ye<c.outWidth;++ye){let Te=ne+ye*c.outChannels,Ne=ye*c.strideWidth-x;for(let Pe=0;Pe<p;++Pe){let Ue=Ne+Pe*m;if(Ue<0||Ue>=c.inWidth)continue;let ot=re+Pe*R[2],Qe=me+Ue*c.inChannels,Ye=ot;for(let gt=0;gt<c.inChannels;++gt){let it=w[Qe+gt];for(let At=0;At<c.outChannels;++At)S[Te+At]+=it*k[Ye+At];Ye+=c.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var Vq={kernelName:ud,backendName:"cpu",kernelFunc:Wq};function Uq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;Re([r,a],"conv3dBackpropFilterV2");let c=v.computeStrides(r.shape),u=v.computeStrides(a.shape),d=E.computeConv3DInfo(r.shape,l,o,1,i),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,A=d.filterWidth,x=new an(d.filterShape,"float32"),y=x.values,[b,w,k,S]=x.strides,N=n.data.get(a.dataId).values,[R,M,D,$]=u,T=n.data.get(r.dataId).values,[P,W,K,z]=c,j=d.padInfo.front,Z=d.padInfo.left,Q=d.padInfo.top;for(let ne=0;ne<m;++ne){let ae=Math.max(0,Math.ceil((j-ne)/p)),U=Math.min(d.outDepth,(d.inDepth+j-ne)/p),oe=ne*b;for(let re=0;re<g;++re){let me=Math.max(0,Math.ceil((Q-re)/h)),ye=Math.min(d.outHeight,(d.inHeight+Q-re)/h),Te=re*w+oe;for(let Ne=0;Ne<A;++Ne){let Pe=Math.max(0,Math.ceil((Z-Ne)/f)),Ue=Math.min(d.outWidth,(d.inWidth+Z-Ne)/f),ot=Ne*k+Te;for(let Qe=0;Qe<d.inChannels;++Qe){let Ye=Qe*S+ot;for(let gt=0;gt<d.outChannels;++gt){let it=0;for(let At=0;At<d.batchSize;++At){let Rt=At*P,ts=At*R;for(let lt=ae;lt<U;++lt){let In=(ne+lt*p-j)*W+Rt,Xs=lt*M+ts;for(let ns=me;ns<ye;++ns){let Rs=(re+ns*h-Q)*K+In,Ks=ns*D+Xs;for(let $s=Pe;$s<Ue;++$s){let Aa=(Ne+$s*f-Z)*z+Rs,Rn=$s*$+Ks;it+=T[Aa+Qe]*N[Rn+gt]}}}}y[Ye+gt]=it}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var Gq={kernelName:$h,backendName:"cpu",kernelFunc:Uq};function Hq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;Re([r],"conv3dBackpropInputV2");let c=v.computeStrides(r.shape),u=v.computeStrides(a.shape),d=E.computeConv3DInfo(l,a.shape,i,1,o),p=new an(d.inShape,"float32"),h=p.values,[f,m,g,A]=p.strides,x=n.data.get(r.dataId).values,[y,b,w,k]=c,S=n.data.get(a.dataId).values,[N,R,M,D]=u,{batchSize:$,filterDepth:T,filterHeight:P,filterWidth:W,inChannels:K,inDepth:z,inHeight:j,inWidth:Z,outChannels:Q,outDepth:ne,outHeight:ae,outWidth:U,strideDepth:oe,strideHeight:re,strideWidth:me}=d,ye=T-1-d.padInfo.front,Te=P-1-d.padInfo.top,Ne=W-1-d.padInfo.left;for(let Pe=0;Pe<$;++Pe)for(let Ue=0;Ue<K;++Ue)for(let ot=0;ot<z;++ot){let Qe=ot-ye,Ye=Math.max(0,Math.ceil(Qe/oe)),gt=Math.min(ne,(T+Qe)/oe);for(let it=0;it<j;++it){let At=it-Te,Rt=Math.max(0,Math.ceil(At/re)),ts=Math.min(ae,(P+At)/re);for(let lt=0;lt<Z;++lt){let ms=lt-Ne,In=Math.max(0,Math.ceil(ms/me)),Xs=Math.min(U,(W+ms)/me),ns=0;for(let gs=Ye;gs<gt;++gs){let Rs=gs*oe-Qe;for(let Ks=Rt;Ks<ts;++Ks){let $s=Ks*re-At;for(let ss=In;ss<Xs;++ss){let Aa=ss*me-ms,Rn=y*Pe+b*gs+w*Ks+k*ss,ya=N*(T-1-Rs)+R*(P-1-$s)+M*(W-1-Aa)+D*Ue;for(let _s=0;_s<Q;++_s){let Lc=x[Rn+_s],Bc=S[ya+_s];ns+=Lc*Bc}}}}h[f*Pe+m*ot+g*it+A*lt+Ue]=ns}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var jq={kernelName:_h,backendName:"cpu",kernelFunc:Hq},qq=mt(Ma,e=>Math.cos(e)),Xq={kernelName:Ma,backendName:"cpu",kernelFunc:qq},Kq=mt(za,e=>Math.cosh(e)),Zq={kernelName:za,backendName:"cpu",kernelFunc:Kq};function Yq(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,[u,d,p,h]=r.shape,f=a.shape[0],[m,g]=i,A=ze([f,m,g,h],"float32"),x=n.data.get(a.dataId).values,y=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,w=v.computeStrides(r.shape),k=v.computeStrides(A.shape);for(let S=0;S<f;S++){let N=S*4,R=x[N],M=x[N+1],D=x[N+2],$=x[N+3],T=y[S];if(T>=u)continue;let P=m>1?(D-R)*(d-1)/(m-1):0,W=g>1?($-M)*(p-1)/(g-1):0;for(let K=0;K<m;K++){let z=m>1?R*(d-1)+K*P:.5*(R+D)*(d-1);if(z<0||z>d-1){for(let j=0;j<g;j++)for(let Z=0;Z<h;Z++){let Q=Z+j*k[2]+K*k[1]+S*k[0];A.values[Q]=c}continue}if(l==="bilinear"){let j=Math.floor(z),Z=Math.ceil(z),Q=z-j;for(let ne=0;ne<g;ne++){let ae=g>1?M*(p-1)+ne*W:.5*(M+$)*(p-1);if(ae<0||ae>p-1){for(let me=0;me<h;me++){let ye=me+ne*k[2]+K*k[1]+S*k[0];A.values[ye]=c}continue}let U=Math.floor(ae),oe=Math.ceil(ae),re=ae-U;for(let me=0;me<h;me++){let ye=me+U*w[2]+j*w[1]+T*w[0],Te=b[ye];ye=me+oe*w[2]+j*w[1]+T*w[0];let Ne=b[ye];ye=me+U*w[2]+Z*w[1]+T*w[0];let Pe=b[ye];ye=me+oe*w[2]+Z*w[1]+T*w[0];let Ue=b[ye],ot=Te+(Ne-Te)*re,Qe=Pe+(Ue-Pe)*re;ye=me+ne*k[2]+K*k[1]+S*k[0],A.values[ye]=ot+(Qe-ot)*Q}}}else for(let j=0;j<g;++j){let Z=g>1?M*(p-1)+j*W:.5*(M+$)*(p-1);if(Z<0||Z>p-1){for(let ae=0;ae<h;ae++){let U=ae+j*k[2]+K*k[1]+S*k[0];A.values[U]=c}continue}let Q=Math.round(Z),ne=Math.round(z);for(let ae=0;ae<h;ae++){let U=ae+Q*w[2]+ne*w[1]+T*w[0],oe=ae+j*k[2]+K*k[1]+S*k[0];A.values[oe]=b[U]}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var Jq={kernelName:fi,backendName:"cpu",kernelFunc:Yq};function Qq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Re(r,"cumsum");let l=E.getAxesPermutation([a],r.shape.length),c=r;l!=null&&(c=Ws({inputs:{x:r},backend:n,attrs:{perm:l}}));let u=E.getInnerMostAxes(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let d=Ln(c.dtype,"int32"),p=v.makeZerosTypedArray(v.sizeFromShape(c.shape),d),h=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(A,x)=>A+f-x-1:(A,x)=>A+x;for(let A=0;A<h.length;A+=f)for(let x=0;x<f;x++){let y=m(A,x);if(x===0)p[y]=o?0:h[y];else{let b=m(A,x-1);p[y]=o?h[b]+p[b]:h[y]+p[b]}}let g=n.makeTensorInfo(c.shape,d,p);if(l!=null){let A=E.getUndoAxesPermutation(l),x=Ws({inputs:{x:g},backend:n,attrs:{perm:A}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),x}return g}var eX={kernelName:hi,backendName:"cpu",kernelFunc:Qq};function tX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=Zy(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=kI(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var nX={kernelName:Dh,backendName:"cpu",kernelFunc:tX};function sX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;v.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],d=l*a,p=c*a,h=u/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*d*p*h),g=0;for(let A=0;A<i;++A)for(let x=0;x<d;++x){let y=Math.floor(x/a),b=x%a;for(let w=0;w<p;++w){let k=Math.floor(w/a),S=w%a,N=(b*a+S)*h;for(let R=0;R<h;++R){let D=R+N+u*(k+c*(y+l*A));m[g++]=f[D]}}}return n.makeTensorInfo([i,d,p,h],r.dtype,m)}var rX={kernelName:mi,backendName:"cpu",kernelFunc:sX};function fS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s;Re([r,a],"depthwiseConv2DNative");let u=v.computeStrides(r.shape),d=v.computeStrides(a.shape),p=l;p==null&&(p=[1,1]),v.assert(E.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);let h=E.computeConv2DInfo(r.shape,a.shape,o,p,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:A,padInfo:x}=h,y=x.left,b=x.top,w=h.outChannels/h.inChannels,k=new an(h.outShape,r.dtype),S=n.data.get(r.dataId).values,N=n.data.get(a.dataId).values,R=k.values;for(let M=0;M<h.batchSize;++M){let D=M*u[0],$=M*k.strides[0];for(let T=0;T<h.outHeight;++T){let P=$+T*k.strides[1],W=T*h.strideHeight-b;for(let K=0;K<f;++K){let z=W+K*g;if(z<0||z>=h.inHeight)continue;let j=K*d[0],Z=D+z*u[1];for(let Q=0;Q<h.outWidth;++Q){let ne=P+Q*k.strides[2],ae=Q*h.strideWidth-y;for(let U=0;U<m;++U){let oe=ae+U*A;if(oe<0||oe>=h.inWidth)continue;let re=j+U*d[1],me=Z+oe*h.inChannels,ye=ne,Te=re;for(let Ne=0;Ne<h.inChannels;++Ne){let Pe=S[me+Ne];for(let Ue=0;Ue<w;++Ue)R[ye+Ue]+=Pe*N[Te+Ue];ye+=w,Te+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var aX={kernelName:La,backendName:"cpu",kernelFunc:fS};function oX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s;Re([r,a],"depthwiseConv2dNativeBackpropFilter");let d=E.computeConv2DInfo(r.shape,u,o,i,l,c,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new an(d.filterShape,"float32"),A=d.padInfo.left,x=d.padInfo.top,y=d.outChannels/d.inChannels,b=n.data.get(r.dataId).values,w=new an(r.shape,r.dtype,b),k=n.data.get(a.dataId).values,S=new an(a.shape,a.dtype,k);for(let N=0;N<f;++N){let R=Math.max(0,Math.ceil((x-N)/p)),M=Math.min(d.outHeight,(d.inHeight+x-N)/p);for(let D=0;D<m;++D){let $=Math.max(0,Math.ceil((A-D)/h)),T=Math.min(d.outWidth,(d.inWidth+A-D)/h);for(let P=0;P<d.outChannels;++P){let W=Math.trunc(P/y),K=P%y,z=0;for(let j=0;j<d.batchSize;++j)for(let Z=R;Z<M;++Z){let Q=N+Z*p-x;for(let ne=$;ne<T;++ne){let ae=D+ne*h-A;z+=w.get(j,Q,ae,W)*S.get(j,Z,ne,P)}}g.set(z,N,D,W,K)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var iX={kernelName:Fh,backendName:"cpu",kernelFunc:oX};function lX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s;Re([r,a],"depthwiseConv2DNativeBackpropInput");let d=v.computeStrides(r.shape),p=v.computeStrides(a.shape),h=E.computeConv2DInfo(u,a.shape,o,i,l,c,!0),f=new an(h.inShape,"float32"),m=f.values,[g,A,x]=f.strides,y=n.data.get(r.dataId).values,[b,w,k]=d,S=n.data.get(a.dataId).values,[N,R,M]=p,{batchSize:D,filterHeight:$,filterWidth:T,inChannels:P,inHeight:W,inWidth:K,outChannels:z,outHeight:j,outWidth:Z,strideHeight:Q,strideWidth:ne}=h,ae=$-1-h.padInfo.top,U=T-1-h.padInfo.left,oe=z/P;for(let re=0;re<D;++re)for(let me=0;me<P;++me)for(let ye=0;ye<W;++ye){let Te=ye-ae,Ne=Math.max(0,Math.ceil(Te/Q)),Pe=Math.min(j,($+Te)/Q);for(let Ue=0;Ue<K;++Ue){let ot=Ue-U,Qe=Math.max(0,Math.ceil(ot/ne)),Ye=Math.min(Z,(T+ot)/ne),gt=0;for(let it=Ne;it<Pe;++it){let At=it*Q-Te;for(let Rt=Qe;Rt<Ye;++Rt){let ts=Rt*ne-ot,lt=b*re+w*it+k*Rt,ms=N*($-1-At)+R*(T-1-ts)+M*me;for(let In=0;In<oe;++In){let Xs=me*oe+In,ns=y[lt+Xs],gs=S[ms+In];gt+=ns*gs}}}m[g*re+A*ye+x*Ue+me]=gt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var uX={kernelName:Ph,backendName:"cpu",kernelFunc:lX};function cX(e){let{inputs:t,backend:n}=e,{x:s}=t,r=v.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=ze([r,r],s.dtype),i=o.values;for(let c=0;c<a.length;c++)i[c*r+c]=a[c];let l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var dX={kernelName:Oh,backendName:"cpu",kernelFunc:cX},pX={kernelName:cd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,l=t,c=l.data.get(s.dataId).values,u=s.shape.length,d=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:A,outWidth:x,padInfo:y,strideHeight:b,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:R,outShape:M}=E.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),D=v.sizeFromShape(M),$=M.length,T=v.getArrayFromDType(s.dtype,D);for(let W=0;W<h;++W)for(let K=0;K<A;++K){let z=K*b-y.top;for(let j=0;j<x;++j){let Z=j*w-y.left;for(let Q=0;Q<g;++Q){let ne=Number.MIN_SAFE_INTEGER;for(let U=0;U<k;++U){let oe=z+U*N;if(oe>=0&&oe<f)for(let re=0;re<S;++re){let me=Z+re*R;if(me>=0&&me<m){let ye=v.locToIndex([W,oe,me,Q],u,v.computeStrides(s.shape)),Te=v.locToIndex([U,re,Q],p,v.computeStrides(r.shape)),Ne=c[ye]+d[Te];Ne>ne&&(ne=Ne)}}}let ae=v.locToIndex([W,K,j,Q],$,v.computeStrides(M));T[ae]=ne}}}return{dataId:l.write(v.toTypedArray(T,s.dtype),M,s.dtype),shape:M,dtype:s.dtype}}},hX={kernelName:zh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=v.toNestedArray(s.shape,c.data.get(s.dataId).values),d=v.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:A,padInfo:x,strideHeight:y,strideWidth:b,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:N,outShape:R}=E.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${zh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let M=v.toNestedArray(R,c.data.get(a.dataId).values),D=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let T=0;T<p;++T)for(let P=0;P<g;++P){let W=P*y-x.top;for(let K=0;K<A;++K){let z=K*b-x.left;for(let j=0;j<m;++j){let Z=Number.MIN_SAFE_INTEGER,Q=0,ne=0;for(let ae=0;ae<w;++ae){let U=W+ae*S;if(U>=0&&U<h)for(let oe=0;oe<k;++oe){let re=z+oe*N;if(re>=0&&re<f){let me=u[T][U][re][j]+d[ae][oe][j];me>Z&&(Z=me,Q=ae,ne=oe)}}}D[Q][ne][j]+=M[T][P][K][j]}}}return{dataId:c.write(v.toTypedArray(D,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},fX={kernelName:Mh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=v.toNestedArray(s.shape,c.data.get(s.dataId).values),d=v.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:A,padInfo:x,strideHeight:y,strideWidth:b,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:N,outShape:R}=E.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${Mh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let M=v.toNestedArray(R,c.data.get(a.dataId).values),D=v.makeZerosNestedTypedArray(s.shape,s.dtype);for(let T=0;T<p;++T)for(let P=0;P<g;++P){let W=P*y-x.top;for(let K=0;K<A;++K){let z=K*b-x.left;for(let j=0;j<m;++j){let Z=Number.MIN_SAFE_INTEGER,Q=W<0?0:W,ne=z<0?0:z;for(let ae=0;ae<w;++ae){let U=W+ae*S;if(U>=0&&U<h)for(let oe=0;oe<k;++oe){let re=z+oe*N;if(re>=0&&re<f){let me=u[T][U][re][j]+d[ae][oe][j];me>Z&&(Z=me,Q=U,ne=re)}}}D[T][Q][ne][j]+=M[T][P][K][j]}}}return{dataId:c.write(v.toTypedArray(D,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function pp(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Re(r,"sum");let i;r.dtype==="bool"?i=Uo({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=Wr({inputs:{x:r},backend:n});let l=i.shape.length,c=v.parseAxisParam(a,i.shape),u=E.getAxesPermutation(c,l),d=c,p=i;u!=null&&(p=Ws({inputs:{x:i},backend:n,attrs:{perm:u}}),d=E.getInnerMostAxes(d.length,l)),E.assertAxesAreInnerMostDims("sum",d,p.shape.length);let[h,f]=E.computeOutAndReduceShapes(p.shape,d),m=E.upcastType(p.dtype,"int32"),g=_m(n,h,m),A=v.sizeFromShape(f),x=n.data.get(g.dataId).values,y=n.data.get(p.dataId).values;for(let b=0;b<x.length;++b){let w=b*A,k=0;for(let S=0;S<A;++S)k+=y[w+S];x[b]=k}if(o){let b=E.expandShapeToKeepDim(g.shape,c),w=g;g=Ft({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(w)}return n.disposeIntermediateTensorInfo(i),u!=null&&n.disposeIntermediateTensorInfo(p),g}var mX={kernelName:fo,backendName:"cpu",kernelFunc:pp};function gX(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=E.decodeEinsumEquation(r,a.length);E.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=E.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:A,expandDims:x}=E.getEinsumPermutation(h,l[g]),y;E.isIdentityPermutation(A)?y=a[g]:(y=Ws({inputs:{x:a[g]},backend:n,attrs:{perm:A}}),f.push(y));let b=y.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(y.shape,b)||(y=Ft({inputs:{x:y},backend:n,attrs:{shape:b}}),f.push(y)),p===null?p=y:(p=Dm({inputs:{a:y,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=pp({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var AX={kernelName:dd,backendName:"cpu",kernelFunc:gX};function yX(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;Re([s,r],"eluGrad");let a=new Float32Array(v.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<o.length;++l){let c=o[l];c>=1?a[l]=i[l]:a[l]=i[l]*(c+1)}return n.makeTensorInfo(r.shape,"float32",a)}var xX={kernelName:Lh,backendName:"cpu",kernelFunc:yX},bX=E.ERF_P,vX=E.ERF_A1,wX=E.ERF_A2,kX=E.ERF_A3,IX=E.ERF_A4,SX=E.ERF_A5,CX=mt(fu,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+bX*n);return t*(1-((((SX*s+IX)*s+kX)*s+wX)*s+vX)*s*Math.exp(-n*n))}),TX={kernelName:fu,backendName:"cpu",kernelFunc:CX};function Pm(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),Ft({inputs:{x:r},backend:n,attrs:{shape:i}})}var NX={kernelName:Ai,backendName:"cpu",kernelFunc:Pm},EX=Qt((e,t)=>e/t),ax=wn(Ba,EX),ox={kernelName:Ba,backendName:"cpu",kernelFunc:ax};function mS(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[r,a],u=v.sizeFromShape(c),d=v.getTypedArrayFromDType("float32",u),p=v.getTypedArrayFromDType("float32",u);for(let g=0;g<r;g++){let A=kl({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=kl({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),y=Is({inputs:{real:A,imag:x},backend:n}),{real:b,imag:w}=RX(y,t,n),k=E.mergeRealAndImagArrays(b,w);for(let S=0;S<a;S++){let N=E.getComplexWithIndex(k,S);d[g*a+S]=N.real,p[g*a+S]=N.imag}n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(y)}let h=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",p),m=Is({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function RX(e,t,n){let s=v.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if($X(s)){let i=ix(a,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(l,"float32",i.real),u=n.makeTensorInfo(l,"float32",i.imag),d=n.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),p=Wr({inputs:{x:d},backend:n}),h=ox.kernelFunc({inputs:{a:c,b:d},backend:n}),f=ox.kernelFunc({inputs:{a:u,b:p},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=E.mergeRealAndImagArrays(a,o),l=_X(i,s,t);return E.splitRealAndImagArrays(l)}}function $X(e){return(e&e-1)==0}function ix(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=E.mergeRealAndImagArrays(e,t),o=n/2,i=E.complexWithEvenIndex(a),l=i.real,c=i.imag,u=[l.length],d=r.makeTensorInfo(u,"float32",l),p=r.makeTensorInfo(u,"float32",c),h=Is({inputs:{real:d,imag:p},backend:r}),f=E.complexWithOddIndex(a),m=f.real,g=f.imag,A=[m.length],x=r.makeTensorInfo(A,"float32",m),y=r.makeTensorInfo(A,"float32",g),b=Is({inputs:{real:x,imag:y},backend:r}),w=ix(l,c,o,s,r),k=w.real,S=w.imag,N=[k.length],R=r.makeTensorInfo(N,"float32",k),M=r.makeTensorInfo(N,"float32",S),D=Is({inputs:{real:R,imag:M},backend:r}),$=ix(m,g,o,s,r),T=$.real,P=$.imag,W=[T.length],K=r.makeTensorInfo(W,"float32",T),z=r.makeTensorInfo(W,"float32",P),j=Is({inputs:{real:K,imag:z},backend:r}),Z=E.exponents(n,s),Q=[Z.real.length],ne=r.makeTensorInfo(Q,"float32",Z.real),ae=r.makeTensorInfo(Q,"float32",Z.imag),U=Is({inputs:{real:ne,imag:ae},backend:r}),oe=Dm({inputs:{a:U,b:j},backend:r}),re=cp({inputs:{a:D,b:oe},backend:r}),me=nx({inputs:{a:D,b:oe},backend:r}),ye=wl({inputs:{input:re},backend:r}),Te=wl({inputs:{input:me},backend:r}),Ne=nc({inputs:{input:re},backend:r}),Pe=nc({inputs:{input:me},backend:r}),Ue=sc({inputs:[ye,Te],backend:r,attrs:{axis:0}}),ot=sc({inputs:[Ne,Pe],backend:r,attrs:{axis:0}}),Qe=r.data.get(Ue.dataId).values,Ye=r.data.get(ot.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(ye),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(Te),r.disposeIntermediateTensorInfo(Pe),r.disposeIntermediateTensorInfo(Ue),r.disposeIntermediateTensorInfo(ot),{real:Qe,imag:Ye}}function _X(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let l=E.exponent(r*i,t,n),c=E.getComplexWithIndex(e,i);a+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}n&&(a/=t,o/=t),E.assignToTypedArray(s,a,o,r)}return s}function DX(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Ft({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=mS(i,!1,n),c=Ft({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var FX={kernelName:Bh,backendName:"cpu",kernelFunc:DX};function lx(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||v.inferDtype(r),i=v.getArrayFromDType(o,v.sizeFromShape(s));return OX(i,r,o),t.makeTensorInfo(s,o,i)}var PX={kernelName:mu,backendName:"cpu",kernelFunc:lx};function OX(e,t,n){e.fill(t)}var MX={kernelName:xi,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[o,i,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let p=0;p<o;p++){let h=p*l*i*c;for(let f=0;f<i;f++){let m=f*(l*c);for(let g=0;g<l;g++){let A=g*c;for(let x=0;x<c;x++){let y=Math.round(l-g-1),b=h+m+A+x,w=u[b];if(y>=0&&y<l){let k=y*c,S=h+m+k+x;w=u[S]}a[b]=w}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},zX=Qt((e,t)=>Math.floor(e/t)),LX=wn(Ga,zX,null,"int32"),BX={kernelName:Ga,backendName:"cpu",kernelFunc:LX};function WX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=hS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=cp({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=sx(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var VX={kernelName:wo,backendName:"cpu",kernelFunc:WX};function UX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=fS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=cp({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=sx(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var GX={kernelName:ko,backendName:"cpu",kernelFunc:UX};function HX(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=v.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[l,c,u,d]=E.prepareAndValidate(s,r);if(c===0)return n.makeTensorInfo(l,s.dtype,[]);let p=n.data.get(r.dataId).values,h=n.bufferSync(s),f=$I(p,h,s.dtype,c,i,u,d,s.shape,a);return n.makeTensorInfo(l,s.dtype,f.values)}var jX={kernelName:vi,backendName:"cpu",kernelFunc:HX};function qX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;Re([r,a],"gatherV2");let l=v.parseAxisParam(o,r.shape)[0],c=n.data.get(a.dataId).values,u=r.shape[l];for(let b=0;b<c.length;++b){let w=c[b];v.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=i;i==null&&(d=0);let p=v.sizeFromShape(a.shape),h=E.segment_util.collectGatherOpShapeInfo(r,a,l,d),f=Ft({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=Ft({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],A=n.bufferSync(m),x=n.bufferSync(f),y=_I(x,A,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,y.dtype,y.values)}var XX={kernelName:bi,backendName:"cpu",kernelFunc:qX};function KX(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Ft({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=mS(i,!0,n),c=Ft({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var ZX={kernelName:Wh,backendName:"cpu",kernelFunc:KX},YX=mt(gu,e=>Number.isFinite(e)?1:0,"bool"),JX={kernelName:gu,backendName:"cpu",kernelFunc:YX},QX=mt(Au,e=>Math.abs(e)===1/0?1:0,"bool"),eK={kernelName:Au,backendName:"cpu",kernelFunc:QX},tK=mt(yu,e=>Number.isNaN(e)?1:0,"bool"),nK={kernelName:yu,backendName:"cpu",kernelFunc:tK};function sK(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=MI(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var rK={kernelName:Vh,backendName:"cpu",kernelFunc:sK},aK=mt(xu,e=>Math.log1p(e)),oK={kernelName:xu,backendName:"cpu",kernelFunc:aK},iK=Qt((e,t)=>e&&t),lK=wn(Ci,iK,null,"bool"),uK={kernelName:Ci,backendName:"cpu",kernelFunc:lK},cK=mt(bu,e=>e?0:1,"bool"),dK={kernelName:bu,backendName:"cpu",kernelFunc:cK},pK=Qt((e,t)=>e||t),hK=wn(hd,pK,null,"bool"),fK={kernelName:hd,backendName:"cpu",kernelFunc:hK};function mK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;Re(r,"LRN");let c=r.shape[3],u=c-1,d=n.data.get(r.dataId).values,p=v.sizeFromShape(r.shape),h=new Float32Array(p);function f(m){let g=m%c,A=m-g+Math.max(0,g-a),x=m-g+Math.min(g+a,u),y=0;for(;A<=x;A++){let b=d[A];y+=b*b}return y}for(let m=0;m<p;m++){let g=f(m),A=d[m]*Math.pow(o+i*g,-l);h[m]=A}return n.makeTensorInfo(r.shape,r.dtype,h)}var gK={kernelName:fd,backendName:"cpu",kernelFunc:mK};function AK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s;Re(o,"LRNGrad");let d=v.sizeFromShape(o.shape),p=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),A=d;for(let x=0;x<A;x++){let y=x%p,b=x-y+Math.max(0,y-i),w=x-y+Math.min(p,y+i+1),k=0;for(let S=b;S<w;S++)k+=Math.pow(f[S],2);k=c*k+l;for(let S=b;S<w;S++){let N=-2*c*u*f[S]*m[x]/k;x===S&&(N+=Math.pow(k,-u)),N*=h[x],g[S]+=N}}return n.makeTensorInfo(o.shape,r.dtype,g)}var yK={kernelName:Uh,backendName:"cpu",kernelFunc:AK};function gS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,l=r.shape,c=l.length,u=v.parseAxisParam(a,l),d=u,p=E.getAxesPermutation(d,c),h=i.data.get(r.dataId).values;if(p!=null){let b=new Array(c);for(let w=0;w<b.length;w++)b[w]=l[p[w]];h=Qy(h,l,r.dtype,p,b),d=E.getInnerMostAxes(d.length,c),l=b}Re(r,"max"),E.assertAxesAreInnerMostDims("max",d,c);let[f,m]=E.computeOutAndReduceShapes(l,d),g=v.sizeFromShape(m),A=LI(h,g,f,r.dtype),x=i.write(A,f,r.dtype),y=f;return o&&(y=E.expandShapeToKeepDim(f,u)),{dataId:x,shape:y,dtype:r.dtype}}var xK={kernelName:Ka,backendName:"cpu",kernelFunc:gS};function bK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Re(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(E.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=E.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))d=Wr({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=rx(p,r.shape,r.dtype,h,u,"max");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var vK={kernelName:Ya,backendName:"cpu",kernelFunc:bK};function wK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Re(r,"maxPool3d");let u=E.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,p=pS(d,r.shape,r.dtype,v.computeStrides(r.shape),u,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var kK={kernelName:md,backendName:"cpu",kernelFunc:wK};function IK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Re([r,a],"maxPool3DGrad");let u=E.computePool3DInfo(a.shape,o,i,1,l,c),d=n.bufferSync(a),p=hq(d,u),h=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,A=u.dilationHeight,x=u.dilationWidth,y=u.effectiveFilterDepth,b=u.effectiveFilterHeight,w=u.effectiveFilterWidth,k=y-1-u.padInfo.front,S=w-1-u.padInfo.left,N=b-1-u.padInfo.top,R=ze(a.shape,"float32"),M=n.bufferSync(r);for(let D=0;D<u.batchSize;++D)for(let $=0;$<u.inChannels;++$)for(let T=0;T<u.inDepth;++T)for(let P=0;P<u.inHeight;++P)for(let W=0;W<u.inWidth;++W){let K=T-k,z=P-N,j=W-S,Z=0;for(let Q=0;Q<y;Q+=g){let ne=(K+Q)/h;if(!(ne<0||ne>=u.outDepth||Math.floor(ne)!==ne))for(let ae=0;ae<b;ae+=A){let U=(z+ae)/f;if(!(U<0||U>=u.outHeight||Math.floor(U)!==U))for(let oe=0;oe<w;oe+=x){let re=(j+oe)/m;if(re<0||re>=u.outWidth||Math.floor(re)!==re)continue;let me=y*b*w-1-p.get(D,ne,U,re,$),ye=Q*b*w+ae*w+oe,Te=me===ye?1:0;if(Te===0)continue;Z+=M.get(D,ne,U,re,$)*Te}}}R.set(Z,D,T,P,W,$)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var SK={kernelName:Hh,backendName:"cpu",kernelFunc:IK};function CK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Re([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,p=E.computePool2DInfo(i.shape,l,c,1,u,d),h=n.data.get(i.dataId).values,f=ze(p.outShape,i.dtype,dS(h,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,A=p.dilationHeight,x=p.dilationWidth,y=p.effectiveFilterHeight,b=p.effectiveFilterWidth,w=b-1-p.padInfo.left,k=y-1-p.padInfo.top,S=ze(i.shape,"float32"),N=n.data.get(r.dataId).values,R=ze(r.shape,"float32",N);for(let M=0;M<p.batchSize;++M)for(let D=0;D<p.inChannels;++D)for(let $=0;$<p.inHeight;++$)for(let T=0;T<p.inWidth;++T){let P=$-k,W=T-w,K=0;for(let z=0;z<y;z+=A){let j=(P+z)/m;if(!(j<0||j>=p.outHeight||Math.floor(j)!==j))for(let Z=0;Z<b;Z+=x){let Q=(W+Z)/g;if(Q<0||Q>=p.outWidth||Math.floor(Q)!==Q)continue;let ne=y*b-1-f.get(M,j,Q,D),ae=z*b+Z,U=ne===ae?1:0;if(U===0)continue;K+=R.get(M,j,Q,D)*U}}S.set(K,M,$,T,D)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}var TK={kernelName:Gh,backendName:"cpu",kernelFunc:CK};function NK(e,t,n,s,r){let a=v.computeStrides(t),o=rx(e,t,n,a,r,"max"),i=dS(e,t,n,r,!0,s);return[o.values,i.values]}var EK={kernelName:jh,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Re(s,"MaxPoolWithArgmax");let c=l.data.get(s.dataId).values,u=E.computePool2DInfo(s.shape,r,a,[1,1],o),[d,p]=NK(c,s.shape,s.dtype,i,u),h=l.write(d,u.outShape,s.dtype),f=l.write(p,u.outShape,s.dtype);return[{dataId:h,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function RK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=v.parseAxisParam(a,r.shape),c=E.computeOutAndReduceShapes(r.shape,i)[1],u=v.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let h=Uo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(h);let f=ax({inputs:{a:h,b:p},backend:n});d.push(f);let m=pp({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var $K={kernelName:Ja,backendName:"cpu",kernelFunc:RK};function _K(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Re(r,"min");let i=v.parseAxisParam(a,r.shape),l=i,c=E.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Ws({inputs:{x:r},backend:n,attrs:{perm:c}}),l=E.getInnerMostAxes(l.length,r.shape.length)),E.assertAxesAreInnerMostDims("min",l,u.shape.length);let[d,p]=E.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let A=0;A<f.length;++A){let x=A*h,y=m[x];for(let b=0;b<h;++b){let w=m[x+b];(Number.isNaN(w)||w<y)&&(y=w)}f[A]=y}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let A=E.expandShapeToKeepDim(d,i),x=Ft({inputs:{x:g},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(g),x}return g}var DK={kernelName:Qa,backendName:"cpu",kernelFunc:_K};function FK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;Re(r,"mirrorPad");let i=a.map((y,b)=>y[0]+r.shape[b]+y[1]),l=a.map(y=>y[0]),c=a.map((y,b)=>y[0]+r.shape[b]),u=o==="reflect"?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,h=v.computeStrides(r.shape),f=v.sizeFromShape(i),m=i.length,g=v.computeStrides(i),A=v.getTypedArrayFromDType(r.dtype,f);for(let y=0;y<f;y++){let b=v.indexToLoc(y,m,g);for(let k=0;k<m;k++)b[k]<l[k]?b[k]=l[k]*2-b[k]-u:b[k]>=c[k]&&(b[k]=(c[k]-1)*2-b[k]+u);b=b.map((k,S)=>k-l[S]);let w=v.locToIndex(b,p,h);A[y]=d[w]}return{dataId:n.write(A,i,r.dtype),shape:i,dtype:r.dtype}}var PK={kernelName:to,backendName:"cpu",kernelFunc:FK},OK=Qt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),MK=wn(vu,OK),zK={kernelName:vu,backendName:"cpu",kernelFunc:MK},LK=ii(bh());function AS(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=v.parseAxisParam([i],r.shape),c=gS({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=E.expandShapeToKeepDim(c.shape,l),d=Ft({inputs:{x:c},backend:n,attrs:{shape:u}}),p=nx({inputs:{a:r,b:d},backend:n}),h=NI({inputs:{x:p},backend:n}),f=pp({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=Ft({inputs:{x:f},backend:n,attrs:{shape:u}}),g=ax({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var BK={kernelName:mo,backendName:"cpu",kernelFunc:AS};function WK(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;Re(r,"multinomial");let l=i?r:AS({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],d=n.data.get(l.dataId).values,p=[c,a],h=v.makeZerosTypedArray(v.sizeFromShape(p),"int32");for(let f=0;f<c;++f){let m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let y=1;y<g.length;++y)g[y]=g[y-1]+d[m+y];let A=LK.alea(o.toString()),x=f*a;for(let y=0;y<a;++y){let b=A();h[x+y]=g.length;for(let w=0;w<g.length;w++)if(b<g[w]){h[x+y]=w;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",h)}var VK={kernelName:qh,backendName:"cpu",kernelFunc:WK},UK=nr.nonMaxSuppressionV3Impl;function GK(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;Re(r,"NonMaxSuppression");let c=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,{selectedIndices:d}=UK(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var HK={kernelName:Ei,backendName:"cpu",kernelFunc:GK},jK=nr.nonMaxSuppressionV4Impl;function qK(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s;Re(r,"NonMaxSuppressionPadded");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:h}=jK(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var XK={kernelName:wu,backendName:"cpu",kernelFunc:qK},KK=nr.nonMaxSuppressionV5Impl;function ZK(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s;Re(r,"NonMaxSuppressionWithScore");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:A}=KK(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var YK={kernelName:Ri,backendName:"cpu",kernelFunc:ZK};function JK(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s;Re(r,"oneHot");let l=v.sizeFromShape(r.shape),c=new Float32Array(l*a);c.fill(i);let u=n.data.get(r.dataId).values;for(let d=0;d<l;++d)u[d]>=0&&u[d]<a&&(c[d*a+u[d]]=o);return n.makeTensorInfo([...r.shape,a],"int32",c)}var QK={kernelName:_i,backendName:"cpu",kernelFunc:JK};function Om(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=wl({inputs:{input:s},backend:n}),a=Om({inputs:{x:r},backend:n}),o=nc({inputs:{input:s},backend:n}),i=Om({inputs:{x:o},backend:n}),l=Is({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return lx({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var eZ={kernelName:Ki,backendName:"cpu",kernelFunc:Om};function yS(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=wl({inputs:{input:s},backend:n}),a=yS({inputs:{x:r},backend:n}),o=nc({inputs:{input:s},backend:n}),i=Om({inputs:{x:o},backend:n}),l=Is({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return lx({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var tZ={kernelName:$i,backendName:"cpu",kernelFunc:yS};function xS(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Pm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Pm({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=sc({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var nZ={kernelName:Di,backendName:"cpu",kernelFunc:xS};function sZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;Re(r,"pad");let i=a.map((x,y)=>x[0]+r.shape[y]+x[1]),l=a.map(x=>x[0]),c=n.data.get(r.dataId).values,u=v.sizeFromShape(r.shape),d=r.shape.length,p=v.computeStrides(r.shape),h=v.sizeFromShape(i),f=i.length,m=v.computeStrides(i),g=v.getTypedArrayFromDType(r.dtype,h);o!==0&&g.fill(o);for(let x=0;x<u;x++){let b=v.indexToLoc(x,d,p).map((k,S)=>k+l[S]),w=v.locToIndex(b,f,m);g[w]=c[x]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var bS={kernelName:so,backendName:"cpu",kernelFunc:sZ},rZ=Qt((e,t)=>Math.pow(e,t)),aZ=wn(ro,rZ),oZ={kernelName:ro,backendName:"cpu",kernelFunc:aZ};function iZ(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=ex(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var lZ={kernelName:ku,backendName:"cpu",kernelFunc:iZ},uZ=mt(Iu,e=>1/e),cZ={kernelName:Iu,backendName:"cpu",kernelFunc:uZ};function dZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Re(r,"resizeBilinear");let l=v.computeStrides(r.shape),[c,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(v.sizeFromShape([d,c,u,f])),A=[a&&c>1?p-1:p,a&&u>1?h-1:h],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],y=0,b=A[0]/x[0],w=A[1]/x[1];for(let k=0;k<d;k++)for(let S=0;S<c;S++){let N;o?N=b*(S+.5)-.5:N=b*S;let R=Math.max(0,Math.floor(N)),M=N-R,D=Math.min(p-1,Math.ceil(N)),$=k*l[0]+R*l[1],T=k*l[0]+D*l[1];for(let P=0;P<u;P++){let W;o?W=w*(P+.5)-.5:W=w*P;let K=Math.max(0,Math.floor(W)),z=W-K,j=Math.min(h-1,Math.ceil(W)),Z=$+K*l[2],Q=T+K*l[2],ne=$+j*l[2],ae=T+j*l[2];for(let U=0;U<f;U++){let oe=m[Z+U],re=m[Q+U],me=m[ne+U],ye=m[ae+U],Te=oe+(me-oe)*z,Ne=re+(ye-re)*z,Pe=Te+(Ne-Te)*M;g[y++]=Pe}}}return n.makeTensorInfo([d,c,u,f],"float32",g)}var pZ={kernelName:io,backendName:"cpu",kernelFunc:dZ};function hZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Re([a,r],"resizeBilinearGrad");let i=v.computeStrides(r.shape),[l,c,u,d]=r.shape,[,p,h]=a.shape,f=new Float32Array(l*c*u*d),m=[o&&p>1?c-1:c,o&&h>1?u-1:u],g=[o&&p>1?p-1:p,o&&h>1?h-1:h],A=m[0]/g[0],x=m[1]/g[1],y=n.data.get(a.dataId).values,b=0;for(let w=0;w<l;w++){let k=w*i[0];for(let S=0;S<p;S++){let N=S*A,R=Math.floor(N),M=Math.min(Math.ceil(N),c-1),D=k+R*i[1],$=k+M*i[1],T=N-R,P=1-T;for(let W=0;W<h;W++){let K=W*x,z=Math.floor(K),j=Math.min(Math.ceil(K),u-1),Z=K-z,Q=1-Z,ne=D+z*i[2],ae=D+j*i[2],U=$+z*i[2],oe=$+j*i[2],re=P*Q,me=P*Z,ye=T*Q,Te=T*Z;for(let Ne=0;Ne<d;Ne++){let Pe=y[b++];f[ne+Ne]+=Pe*re,f[ae+Ne]+=Pe*me,f[U+Ne]+=Pe*ye,f[oe+Ne]+=Pe*Te}}}}return n.makeTensorInfo([l,u,c,d],"float32",f)}var fZ={kernelName:Kh,backendName:"cpu",kernelFunc:hZ};function mZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Re(r,"resizeNearestNeighbor");let l=v.computeStrides(r.shape),[c,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*c*u*f),A=[a&&c>1?p-1:p,a&&u>1?h-1:h],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],y=A[0]/x[0],b=A[1]/x[1],w=0;for(let k=0;k<d;k++){let S=k*l[0];for(let N=0;N<c;N++){let R=o?y*(N+.5):y*N,M=Math.min(p-1,a?Math.round(R):Math.floor(R));o&&(M=Math.max(0,M));let D=S+M*l[1];for(let $=0;$<u;$++){let T=o?b*($+.5):b*$,P=Math.min(h-1,a?Math.round(T):Math.floor(T));o&&(P=Math.max(0,P));let W=D+P*l[2];for(let K=0;K<f;K++){let z=m[W+K];g[w++]=z}}}}return n.makeTensorInfo([d,c,u,f],r.dtype,g)}var gZ={kernelName:Su,backendName:"cpu",kernelFunc:mZ};function AZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Re([a,r],"resizeNearestNeighborGrad");let i=v.computeStrides(r.shape),l=v.computeStrides(a.shape),[c,u,d,p]=r.shape,[,h,f]=a.shape,m=new Float32Array(c*u*d*p),g=n.data.get(a.dataId).values,A=[o&&h>1?u-1:u,o&&f>1?d-1:d],x=[o&&h>1?h-1:h,o&&f>1?f-1:f],y=A[0]/x[0],b=A[1]/x[1],w=1/y,k=1/b,S=Math.ceil(w)*2+2,N=Math.ceil(k)*2+2;for(let R=0;R<c;R++){let M=R*i[0];for(let D=0;D<u;D++){let $=M+D*i[1],T=Math.floor(D*w),P=Math.floor(T-S/2);for(let W=0;W<d;W++){let K=$+W*i[2],z=Math.floor(W*k),j=Math.floor(z-N/2);for(let Z=0;Z<p;Z++){let Q=0;for(let ne=0;ne<S;ne++){let ae=ne+P;if(ae<0||ae>=h)continue;let U=M+ae*l[1],oe=ae*y,re=Math.min(u-1,o?Math.round(oe):Math.floor(oe));if(D===re)for(let me=0;me<N;me++){let ye=me+j;if(ye<0||ye>=f)continue;let Te=U+ye*l[2],Ne=ye*b,Pe=Math.min(d-1,o?Math.round(Ne):Math.floor(Ne));W===Pe&&(Q+=g[Te+Z])}}m[K+Z]=Q}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var yZ={kernelName:Xh,backendName:"cpu",kernelFunc:AZ};function xZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Re(r,"reverse");let o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return Wr({inputs:{x:r},backend:n});let l=new an(r.shape,r.dtype),c=n.bufferSync(r);for(let u=0;u<l.size;u++){let d=l.indexToLoc(u),p=d.slice();i.forEach(h=>p[h]=r.shape[h]-1-p[h]),l.set(c.get(...p),...d)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var bZ={kernelName:Oi,backendName:"cpu",kernelFunc:xZ},vZ={kernelName:Zi,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[c,u,d,p]=s.shape,[h,f]=E.getImageCenter(o,u,d),m=255,g=Math.sin(r),A=Math.cos(r),x=i.data.get(s.dataId).values;for(let b=0;b<c;b++){let w=b*d*u*p;for(let k=0;k<u;k++){let S=k*(d*p);for(let N=0;N<d;N++){let R=N*p;for(let M=0;M<p;M++){let D=[c,k,N,M],$=D[2],T=D[1],P=($-h)*A-(T-f)*g,W=($-h)*g+(T-f)*A;P=Math.round(P+h),W=Math.round(W+f);let K=a;if(typeof a!="number"&&(M===3?K=m:K=a[M]),P>=0&&P<d&&W>=0&&W<u){let j=W*(d*p),Z=P*p,Q=w+j+Z+M;K=x[Q]}let z=w+S+R+M;l[z]=K}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},wZ=mt(Mi,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),kZ={kernelName:Mi,backendName:"cpu",kernelFunc:wZ};function vS(e,t,n,s,r,a,o,i,l,c){let u=[s/r,r],d=e.values,p=t.values;if(s===0)return ze(n,t.dtype);let h=ze(u,t.dtype);h.values.fill(l);for(let f=0;f<a;f++){let m=[],g=0;for(let A=0;A<o;A++){let x=d[f*o+A];m.push(x),g+=x*i[A]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let A=0;A<r;A++)c?h.values[g*r+A]+=p[f*r+A]:h.values[g*r+A]=t.rank===0?p[0]:p[f*r+A]}return h}function IZ(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=E.calculateShapes(a,r,o),p=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=vS(h,f,o,d,c,l,i,u,0,p);return n.makeTensorInfo(o,m.dtype,m.values)}var SZ={kernelName:zi,backendName:"cpu",kernelFunc:IZ};function CZ(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Re([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=Ln(r.dtype,a.dtype),d=v.makeZerosTypedArray(v.sizeFromShape(r.shape),u),p=0,h=o===0||o>1||r.shape.length===1?1:v.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?d[p++]=l[f]:d[p++]=c[f];return n.makeTensorInfo(r.shape,u,d)}var TZ={kernelName:Li,backendName:"cpu",kernelFunc:CZ},NZ=E.SELU_SCALEALPHA,EZ=E.SELU_SCALE,RZ=mt(Cu,e=>e>=0?EZ*e:NZ*(Math.exp(e)-1)),$Z={kernelName:Cu,backendName:"cpu",kernelFunc:RZ},_Z=mt(Tu,e=>e<0?-1:e>0?1:0),DZ={kernelName:Tu,backendName:"cpu",kernelFunc:_Z},FZ=mt(co,e=>Math.sin(e)),PZ={kernelName:co,backendName:"cpu",kernelFunc:FZ},OZ=mt(Wi,e=>Math.sinh(e)),MZ={kernelName:Wi,backendName:"cpu",kernelFunc:OZ},zZ=11920928955078125e-23,wS=Math.log(zZ)+2,LZ=mt(Nu,e=>{let t=e>-wS,n=e<wS,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),BZ={kernelName:Nu,backendName:"cpu",kernelFunc:LZ};function WZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;Re([r],"spaceToBatchND");let i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let k=1+a.length;k<r.shape.length;++k)l.push([0,0]);let c=bS.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=E.getReshaped(c.shape,a,i,!1),d=E.getPermuted(u.length,a.length,!1),p=E.getReshapedPermuted(c.shape,a,i,!1),m=Ft({inputs:{x:c},backend:n,attrs:{shape:u}}),x=Ws({inputs:{x:m},backend:n,attrs:{perm:d}}),w=Ft({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),w}var VZ={kernelName:Vi,backendName:"cpu",kernelFunc:WZ};function UZ(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[d,p,h,f,m]=qI(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var GZ={kernelName:Zh,backendName:"cpu",kernelFunc:UZ};function HZ(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[c,u,d]=XI(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var jZ={kernelName:Yh,backendName:"cpu",kernelFunc:HZ};function qZ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=tx(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var XZ={kernelName:Jh,backendName:"cpu",kernelFunc:qZ};function KZ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=tx(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var ZZ={kernelName:Qh,backendName:"cpu",kernelFunc:KZ};function YZ(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=E.calculateShapes(a,r,i),h=!1,f=n.bufferSync(r),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],A=vS(f,m,i,p,u,c,l,d,g,h);return n.makeTensorInfo(i,A.dtype,A.values)}var JZ={kernelName:Ad,backendName:"cpu",kernelFunc:YZ};function QZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=E.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=kl({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[i]+=d,h})}var eY={kernelName:Ui,backendName:"cpu",kernelFunc:QZ},tY={kernelName:Eu,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;Re(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let l=r[i];a[i]=l*l}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},nY=mt(bo,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),sY={kernelName:bo,backendName:"cpu",kernelFunc:nY};function rY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s;Re(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=Ot.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=Ft({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Ot.computeOutShape(x,y,b),S=kl({inputs:{x:r},backend:n,attrs:{begin:x,size:k}});w=Ft({inputs:{x:S},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(S)}else{let k=n.bufferSync(r),S=ZI(h,k,b,x);w=n.makeTensorInfo(f,S.dtype,S.values)}return w}var aY={kernelName:Gi,backendName:"cpu",kernelFunc:rY};function oY(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.data.get(u.dataId).values,h=n.data.get(d.dataId).values,[f,m]=YI(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var iY={kernelName:yd,backendName:"cpu",kernelFunc:oY};function lY(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[c,u,d]=JI(i,l,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var uY={kernelName:ef,backendName:"cpu",kernelFunc:lY};function cY(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=QI(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var dY={kernelName:tf,backendName:"cpu",kernelFunc:cY},pY=mt(Hi,e=>Math.tan(e)),hY={kernelName:Hi,backendName:"cpu",kernelFunc:pY},fY=mt(yo,e=>Math.tanh(e)),mY={kernelName:yo,backendName:"cpu",kernelFunc:fY};function gY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Re(r,"tile");let o=tS(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var AY={kernelName:Zr,backendName:"cpu",kernelFunc:gY};function yY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;Re(r,"topk");let i=n.data.get(r.dataId).values,[l,c]=sS(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var xY={kernelName:ji,backendName:"cpu",kernelFunc:yY};function bY(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=n,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],A=v.computeStrides(r.shape),x=A[0],y=A[1],b=A[2],w=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(g));w.fill(l);let k=s.data.get(r.dataId).values,S=s.data.get(a.dataId).values;for(let R=0;R<u;++R){let M=a.shape[0]===1?S:S.subarray(R*8,R*8+8);for(let D=0;D<f;++D)for(let $=0;$<m;++$)for(let T=0;T<h;++T){let P,W=M[6]*$+M[7]*D+1;if(W===0)continue;let K=(M[0]*$+M[1]*D+M[2])/W,z=(M[3]*$+M[4]*D+M[5])/W,j=kS(K,p,i),Z=kS(z,d,i);switch(o){case"nearest":P=CY(k,d,p,x,y,b,R,Z,j,T,l);break;case"bilinear":P=TY(k,d,p,x,y,b,R,Z,j,T,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let Q=R*x+D*y+$*b+T;w[Q]=P}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}var vY={kernelName:qi,backendName:"cpu",kernelFunc:bY};function kS(e,t,n){switch(n){case"reflect":return wY(e,t);case"wrap":return kY(e,t);case"nearest":return SY(e,t);case"constant":default:return IY(e,t)}}function wY(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return v.clamp(0,n,t-1)}function kY(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return v.clamp(0,n,t-1)}function IY(e,t){return e}function SY(e,t){return v.clamp(0,e,t-1)}function hp(e,t,n,s,r,a,o,i,l,c,u){let d=o*s+i*r+l*a+c;return 0<=i&&i<t&&0<=l&&l<n?e[d]:u}function CY(e,t,n,s,r,a,o,i,l,c,u){let d=Math.round(i),p=Math.round(l);return hp(e,t,n,s,r,a,o,d,p,c,u)}function TY(e,t,n,s,r,a,o,i,l,c,u){let d=Math.floor(i),p=Math.floor(l),h=d+1,f=p+1,m=(f-l)*hp(e,t,n,s,r,a,o,d,p,c,u)+(l-p)*hp(e,t,n,s,r,a,o,d,f,c,u),g=(f-l)*hp(e,t,n,s,r,a,o,h,p,c,u)+(l-p)*hp(e,t,n,s,r,a,o,h,f,c,u);return(h-i)*m+(i-d)*g}function NY(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Re(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:c}=rS(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var EY={kernelName:nf,backendName:"cpu",kernelFunc:NY};function RY(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],l=new Array(o-1),c=0;for(let h=0;h<o;h++)h!==a&&(l[c++]=r.shape[h]);let u=new Array(o).fill(0),d=r.shape.slice();d[a]=1;let p=new Array(i);for(let h=0;h<p.length;h++){u[a]=h;let f=kl({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});p[h]=Ft({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return p}var $Y={kernelName:Xi,backendName:"cpu",kernelFunc:RY};function _Y(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;Re(r,"unsortedSegmentSum");let i=r.shape.length,l=a.shape.length,c=[],u=[],d=i-l,p=a;for(let f=0;f<d;++f){let m=Pm({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=m,u.push(m)}for(let f=0;f<o;++f){let m=v.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),A=CI({inputs:{a:g,b:p},backend:n}),x=Uo({inputs:{x:A},backend:n,attrs:{dtype:"float32"}}),y=Dm({inputs:{a:x,b:r},backend:n}),b=pp({inputs:{x:y},backend:n,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(g),u.push(A),u.push(x),u.push(y),u.push(b)}let h=xS({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var DY={kernelName:xd,backendName:"cpu",kernelFunc:_Y},FY=[Wj,DH,Uj,Hj,LH,qj,Kj,Yj,Qj,tq,sq,aq,iq,cq,pq,mq,Aq,xq,vq,Lj,kq,Sq,Tq,Eq,MH,WH,$q,FH,Dq,Pq,zq,Bq,Oq,Gq,jq,Vq,Xq,Zq,Jq,eX,nX,rX,aX,iX,uX,dX,pX,fX,hX,ox,AX,_j,xX,VH,TX,UH,NX,HH,FX,PX,MX,qH,BX,VX,GX,jX,XX,KH,YH,PH,ZX,Fq,JX,eK,nK,Dj,QH,tj,rK,sj,oK,uK,dK,fK,gK,yK,aj,vK,kK,SK,TK,EK,xK,$K,DK,ij,PK,zK,VK,uj,dj,HK,XK,YK,hj,QK,tZ,nZ,bS,oZ,Pj,gj,lZ,OH,cZ,Oj,Mj,zj,pZ,fZ,gZ,yZ,bZ,vZ,kZ,yj,SZ,TZ,$Z,bj,DZ,PZ,MZ,vj,BK,BZ,VZ,GZ,jZ,XZ,ZZ,JZ,eY,Ij,tY,Cj,sY,aY,iY,uY,dY,Rj,mX,hY,mY,AY,xY,fj,vY,EY,$Y,DY,eZ];for(let e of FY)pr(e);var IS={};Me(IS,{assertNotComplex:()=>ac,bindCanvasToFramebuffer:()=>jY,bindColorTextureToFramebuffer:()=>Bm,bindTextureToProgramUniformSampler:()=>LS,bindTextureUnit:()=>OS,bindVertexBufferToProgramAttribute:()=>dx,callAndCheck:()=>ke,canBeRepresented:()=>SS,createFragmentShader:()=>NS,createFramebuffer:()=>PS,createProgram:()=>ES,createStaticIndexBuffer:()=>_S,createStaticVertexBuffer:()=>$S,createTexture:()=>DS,createVertexShader:()=>TS,getBatchDim:()=>Sl,getExtensionOrThrow:()=>gp,getFramebufferErrorMessage:()=>BS,getMaxTexturesInShader:()=>GS,getNumChannels:()=>GY,getProgramUniformLocation:()=>zS,getProgramUniformLocationOrThrow:()=>MS,getRowsCols:()=>Cl,getShapeAs3D:()=>Wm,getTextureShapeFromLogicalShape:()=>VS,getWebGLDisjointQueryTimerVersion:()=>HS,getWebGLErrorMessage:()=>CS,getWebGLMaxTextureSize:()=>US,hasExtension:()=>Us,isCapableOfRenderingToFloatTexture:()=>jS,isDownloadFloatTextureEnabled:()=>qS,isReshapeFree:()=>yp,isWebGLFenceEnabled:()=>XS,isWebGLVersionEnabled:()=>hx,linkProgram:()=>RS,resetMaxTextureSize:()=>qY,resetMaxTexturesInShader:()=>XY,unbindColorTextureFromFramebuffer:()=>px,unbindTextureUnit:()=>HY,validateFramebuffer:()=>Ap,validateProgram:()=>Lm,validateTextureSize:()=>FS});var Il={},ux={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Mm(e,t){Il[e]=t}function Vr(e){if(!(e in Il)){let n=OY(e);if(n!==null)Il[e]=n;else return console.log("Could not get context for WebGL version",e),null}let t=Il[e];return t==null||t.isContextLost()?(delete Il[e],Vr(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Il[e])}function PY(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function OY(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=PY(e);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Il[e]},!1),e===1?t.getContext("webgl",ux)||t.getContext("experimental-webgl",ux):t.getContext("webgl2",ux)}var fp;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(fp||(fp={}));var Vs;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(Vs||(Vs={}));var Cn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Cn||(Cn={}));function mp(e,t){return[t,e]}function MY(e,t){return e*t}function zm(e){let t=v.sizeFromShape(e),n=Math.ceil(t/4);return v.sizeToSquarishShape(n)}function rc(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function zY(e,t){let[n,s]=rc(e,t);return n*s*4}function cx(e,t){let n=e,s,r,a,o,i,l,c,u,d,p;return Y().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,c=4,u=1,d=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,c=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function ke(e,t){let n=t();return Y().getBool("DEBUG")&&LY(e),n}function LY(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+CS(e,t))}var BY=596e-10,WY=65504;function SS(e){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||BY<Math.abs(e)&&Math.abs(e)<WY)}function CS(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function gp(e,t){return ia(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function TS(e,t){let n=ia(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ke(e,()=>e.shaderSource(n,t)),ke(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function NS(e,t){let n=ia(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ke(e,()=>e.shaderSource(n,t)),ke(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw UY(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var VY=/ERROR: [0-9]+:([0-9]+):/g;function UY(e,t){let n=VY.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((d,p)=>v.rightPad((p+1).toString(),a)+d),i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);let l=o.slice(0,s-1),c=o.slice(s-1,s),u=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function ES(e){return ia(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function RS(e,t){if(ke(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Lm(e,t){if(ke(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function $S(e,t){let n=ia(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),ke(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function _S(e,t){let n=ia(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),ke(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function GY(){return Y().getNumber("WEBGL_VERSION")===2?1:4}function DS(e){return ia(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function FS(e,t){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function PS(e){return ia(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function dx(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),ke(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),ke(e,()=>e.enableVertexAttribArray(i)),!0)}function OS(e,t,n){WS(e,n),ke(e,()=>e.activeTexture(e.TEXTURE0+n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function HY(e,t){WS(e,t),ke(e,()=>e.activeTexture(e.TEXTURE0+t)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function MS(e,t,n){return ia(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function zS(e,t,n){return e.getUniformLocation(t,n)}function LS(e,t,n,s){ke(e,()=>OS(e,t,s)),ke(e,()=>e.uniform1i(n,s))}function jY(e){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),ke(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Bm(e,t,n){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),ke(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function px(e,t){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),ke(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Ap(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+BS(e,t))}function BS(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ia(e,t,n){let s=ke(e,()=>t());if(s==null)throw new Error(n);return s}function WS(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Sl(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function Cl(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Wm(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Sl(e),...Cl(e)]),t}function VS(e,t=!1){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?v.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let s=v.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=Sl(e),a=2,o=2;return e.length&&([a,o]=Cl(e)),s=r*(a/2)*(o/2),v.sizeToSquarishShape(s).map(i=>i*2)}return v.sizeToSquarishShape(s)}function Vm(e){return e%2==0}function yp(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||Vm(n)&&Vm(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Vm(e[0])&&Vm(t[0])}var Um,Gm;function US(e){if(Um==null){let t=Vr(e);Um=t.getParameter(t.MAX_TEXTURE_SIZE)}return Um}function qY(){Um=null}function XY(){Gm=null}function GS(e){if(Gm==null){let t=Vr(e);Gm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Gm)}function HS(e){if(e===0)return 0;let t,n=Vr(e);return Us(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Us(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Us(e,t){return e.getExtension(t)!=null}function hx(e){try{if(Vr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function jS(e){if(e===0)return!1;let t=Vr(e);if(e===1){if(!Us(t,"OES_texture_float"))return!1}else if(!Us(t,"EXT_color_buffer_float"))return!1;return fx(t)}function qS(e){if(e===0)return!1;let t=Vr(e);if(e===1){if(!Us(t,"OES_texture_float")||!Us(t,"WEBGL_color_buffer_float"))return!1}else{if(Us(t,"EXT_color_buffer_float"))return fx(t);let s="EXT_color_buffer_half_float";if(Us(t,s)){let r=t.getExtension(s);return KY(t,r)}return!1}return fx(t)}function fx(e){let t=cx(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function KY(e,t){let n=cx(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function XS(e){return e!==2?!1:Vr(e).fenceSync!=null}function ac(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Fe=Y();Fe.registerFlag("HAS_WEBGL",()=>Fe.getNumber("WEBGL_VERSION")>0);Fe.registerFlag("WEBGL_VERSION",()=>hx(2)?2:hx(1)?1:0);Fe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Fe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Fe.get("WEBGL_VERSION")===2);Fe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Fe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Fe.registerFlag("WEBGL_PACK",()=>Fe.getBool("HAS_WEBGL"));Fe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_CLIP",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_REDUCE",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_CONV_IM2COL",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>US(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>GS(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Fe.getNumber("WEBGL_VERSION");return e===0?0:HS(e)});Fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Fe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!_u.isMobile());Fe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>jS(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Fe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Fe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Fe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>qS(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>XS(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Fe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Fe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Fe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>_u.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Fe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Fe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Fe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Fe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Hn(){let e,t,n,s,r,a,o,i,l,c;return Y().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:c}}function Tl(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function Hm(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function ZY(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function YY(e,t,n="index"){let s=e.map((a,o)=>o),r=ZY(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,l=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${l};`}).join("")}function mx(e){let t=v.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function gx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var KS=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:ZS}=E;function JY(e,t,n){let s=[];if(e.forEach(h=>{let f=v.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Ax(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>QY(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=Hn(),l=nJ(i),c,u,d=aJ(i);return t.isPacked?(c=eJ(t.logicalShape,o,n.enableShapeUniforms),u=rJ(i)):(c=tJ(t.logicalShape,o,n.enableShapeUniforms),u=sJ(i)),n.packedInputs&&(d+=uJ),[d,l,u,r,c,a,n.userCode].join(`
`)}function oc(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return vJ(e,t);case 1:return kJ(e,t);case 2:return SJ(e,t);case 3:return TJ(e,t);case 4:return EJ(e,t);case 5:return RJ(e);case 6:return $J(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function YS(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return bJ(e);case 1:return wJ(e,t);case 2:return IJ(e,t);case 3:return CJ(e,t);default:return NJ(e,t)}}function QY(e,t,n=!1,s){let r="";n?r+=YS(e,s):r+=oc(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=_J(e,t):r+=DJ(e,t)),r}function eJ(e,t,n){switch(e.length){case 0:return JS();case 1:return cJ(e,t,n);case 2:return yJ(e,t,n);case 3:return pJ(e,t,n);default:return fJ(e,t,n)}}function tJ(e,t,n){switch(e.length){case 0:return JS();case 1:return dJ(e,t,n);case 2:return xJ(e,t,n);case 3:return hJ(e,t,n);case 4:return mJ(e,t,n);case 5:return gJ(e,t);case 6:return AJ(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function nJ(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function sJ(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function rJ(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function aJ(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${oJ}
    ${iJ}
    ${lJ}
  `}var oJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,iJ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,lJ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,uJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function JS(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function cJ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function dJ(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function pJ(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function hJ(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Hm(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=Tl(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function fJ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let c=2;c<e.length-1;c++)o*=e[e.length-c-1],i=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+i,l=`b${c}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function mJ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Hm(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=Tl(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function gJ(e,t){let n=Tl(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function AJ(e,t){let n=Tl(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function yJ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function xJ(e,t,n){return v.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Nl(e){return`offset${e}`}function bJ(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Hn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function vJ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Nl(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function wJ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=Hn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function kJ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${ic(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Nl(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function IJ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=Hn();if(a!=null&&v.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;let c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function SJ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&v.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let p=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=v.squeezeShape(n),l=o;if(l.length<n.length){let p=lc(e,l),h=["row","col"];return`
      ${oc(p,t)}
      float ${r}(int row, int col) {
        return ${r}(${uc(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${ic(e)}
      }
    `;let c=a[0],u=a[1],d=Nl(s);return u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function CJ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let p=n.slice(1),h=[1,2],f=lc(e,p),m=["b","row","col"];return`
        ${YS(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${uc(m,h)});
        }
      `}let i=Hn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let l=o[0],c=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${d}, ${u}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function TJ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=v.squeezeShape(n),c=i;if(c.length<n.length){let m=lc(e,c),g=["row","col","depth"];return`
        ${oc(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${uc(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${ic(e)}
      }
    `;let u=e.shapeInfo.texShape,d=u[0],p=u[1],h=e.shapeInfo.flatOffset;if(p===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(p===o&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=Nl(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${s}, uv);
      }
  `}function NJ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Hn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=l[0],u=l[1],d=Math.ceil(a[o-1]/2),p=d*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,p*=a[o-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${r.texture2D}(${n}, uv);
    }
  `}function EJ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:c}=v.squeezeShape(n);if(l.length<n.length){let x=lc(e,l),y=["row","col","depth","depth2"];return`
      ${oc(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${uc(y,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${ic(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===i&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;let A=Nl(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${A});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${A});
      return sampleTexture(${s}, uv);
    }
  `}function RJ(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:c}=v.squeezeShape(t);if(l.length<t.length){let m=lc(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${oc(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${uc(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${ic(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Nl(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function $J(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=v.squeezeShape(t);if(r.length<t.length){let g=lc(e,r),A=["row","col","depth","depth2","depth3","depth4"];return`
      ${oc(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${uc(A,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,c=t[2]*l,u=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${ic(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Nl(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function ic(e){let t=e.name,n=v.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function _J(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=ZS(e.shapeInfo.logicalShape,t.logicalShape),l=vt(o),c=o-a,u,d=["x","y","z","w","u","v"];a===0?u="":o<2&&i.length>=1?u="coords = 0;":u=i.map(x=>`coords.${d[x+c]} = 0;`).join(`
`);let p="";o<2&&a>0?p="coords":p=e.shapeInfo.logicalShape.map((x,y)=>`coords.${d[y+c]}`).join(", ");let h="return outputValue;",m=v.sizeFromShape(e.shapeInfo.logicalShape)===1,A=v.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!A)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!A)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=a-2,y=a-1;i.indexOf(x)>-1&&i.indexOf(y)>-1?h="return vec4(outputValue.x);":i.indexOf(x)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(y)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${p});
      ${h}
    }
  `}function DJ(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=vt(l),u=ZS(e.shapeInfo.logicalShape,t.logicalShape),d=l-i,p,h=["x","y","z","w","u","v"];i===0?p="":l<2&&u.length>=1?p="coords = 0;":p=u.map(m=>`coords.${h[m+d]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${p}
      return get${s}(${f});
    }
  `}function vt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Ax(e,t,n){let{newShape:s,keptDims:r}=v.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,l=!e&&a>1&&!v.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function lc(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function uc(e,t){return t.map(n=>e[n]).join(", ")}function FJ(e,t,n,s){let r=n.map((b,w)=>{let k={logicalShape:b.shape,texShape:b.isUniform?null:b.texData.texShape,isUniform:b.isUniform,isPacked:b.isUniform?!1:b.texData.isPacked,flatOffset:null};return b.texData!=null&&b.texData.slice!=null&&b.texData.slice.flatOffset>0&&(k.flatOffset=b.texData.slice.flatOffset),{name:t.variableNames[w],shapeInfo:k}}),a=r.map(b=>b.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=JY(r,o,t),l=NS(e.gl,i),c=e.createProgram(l),u=null,d=e.getUniformLocation(c,"NAN",!1);Y().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(c,"INFINITY",!1));let p=!1,h={},f={},m={};for(let b=0;b<t.variableNames.length;b++){let w=t.variableNames[b];h[w]=e.getUniformLocation(c,w,p),h[`offset${w}`]=e.getUniformLocation(c,`offset${w}`,p),t.enableShapeUniforms&&(f[`${w}Shape`]=e.getUniformLocation(c,`${w}Shape`,p),m[`${w}TexShape`]=e.getUniformLocation(c,`${w}TexShape`,p))}let g,A,x;t.enableShapeUniforms&&(g=e.getUniformLocation(c,"outShape",p),x=e.getUniformLocation(c,"outShapeStrides",p),A=e.getUniformLocation(c,"outTexShape",p));let y=[];return t.customUniforms&&t.customUniforms.forEach((b,w)=>{y[w]=e.getUniformLocation(c,b.name,p)}),{program:t,fragmentShader:l,source:i,webGLProgram:c,uniformLocations:h,customUniformLocations:y,inShapeInfos:a,outShapeInfo:o,infLoc:u,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:x,outTexShapeLocation:A}}function QS(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!v.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!v.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function PJ(e,t,n,s,r){t.program.enableShapeUniforms||(QS(t.inShapeInfos,n),QS([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a,o[0],o[1]):e.setOutputMatrixTexture(a,o[0],o[1]),e.setProgram(t.webGLProgram),Y().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,c)=>{let u=t.program.variableNames[c],d=t.uniformLocations[u],p=t.uniformLocations[`offset${u}`],h=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(h){let{uniformShape:m}=Ax(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),d!=null){if(l.isUniform){if(v.sizeFromShape(l.shape)<2)e.gl.uniform1f(d,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}l.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture,d,c)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let l=v.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,c)=>{let u=t.customUniformLocations[c],d=r[c];if(l.type==="float")e.gl.uniform1fv(u,d);else if(l.type==="vec2")e.gl.uniform2fv(u,d);else if(l.type==="vec3")e.gl.uniform3fv(u,d);else if(l.type==="vec4")e.gl.uniform4fv(u,d);else if(l.type==="int")e.gl.uniform1iv(u,d);else if(l.type==="ivec2")e.gl.uniform2iv(u,d);else if(l.type==="ivec3")e.gl.uniform3iv(u,d);else if(l.type==="ivec4")e.gl.uniform4iv(u,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function OJ(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:d}=Ax(e.packedInputs,o.shape,l),p="",h="",f="";if(u.length===1&&e.packedInputs){let w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!e.packedInputs)h=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let w=v.computeStrides(u);f=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}let m=o.shape.length,g=u.length===2&&v.arraysEqual(o.shape,l),A=v.sizeFromShape(o.shape)===1,x=E.getBroadcastDims(o.shape,n.shape),y=!e.packedInputs&&m===n.shape.length&&v.arraysEqual(l,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${y}_${c?d:""}_${u.length}_${A}_${x}_${g}_${p}_${h}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${Y().getNumber("WEBGL_VERSION")}`,a}function Gs(e){return Y().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var MJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=fp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Hn();this.outputShape=e,this.enableShapeUniforms=Gs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hm(["r","c","d"],e):Tl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},zJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=fp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Hn();this.outputShape=e,this.enableShapeUniforms=Gs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hm(["r","c","d"],e):Tl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},LJ=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Vs.DOWNLOAD;let t=Hn();this.outputShape=e,this.userCode=`
      ${KS}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},BJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Vs.DOWNLOAD;let t=Hn();this.outputShape=e,this.userCode=`
      ${KS}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},WJ=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Hn();this.outputShape=e,this.enableShapeUniforms=Gs(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?gx():mx(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},VJ=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Hn();this.outputShape=e,this.enableShapeUniforms=Gs(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?gx():mx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},eC={};Me(eC,{bindVertexProgramAttributeStreams:()=>uC,createBufferFromOutputTexture:()=>pC,createFloat16MatrixTexture:()=>aC,createFloat16PackedMatrixTexture:()=>lC,createFloat32MatrixTexture:()=>rC,createIndexBuffer:()=>sC,createPackedMatrixTexture:()=>iC,createUnsignedBytesMatrixTexture:()=>oC,createVertexBuffer:()=>nC,createVertexShader:()=>tC,downloadByteEncodedFloatMatrixFromOutputTexture:()=>fC,downloadFloat32MatrixFromBuffer:()=>hC,downloadMatrixFromPackedOutputTexture:()=>gC,downloadPackedMatrixFromBuffer:()=>mC,getInternalFormatForFloat16MatrixTexture:()=>xx,getInternalFormatForFloat16PackedMatrixTexture:()=>wx,getInternalFormatForFloat32MatrixTexture:()=>yx,getInternalFormatForPackedMatrixTexture:()=>vx,getInternalFormatForUnsignedBytesMatrixTexture:()=>bx,uploadDenseMatrixToTexture:()=>cC,uploadPixelDataToTexture:()=>dC});function tC(e){let t=Hn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return TS(e,n)}function nC(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return $S(e,t)}function sC(e){let t=new Uint16Array([0,1,2,2,1,3]);return _S(e,t)}function xp(e,t,n,s,r,a){FS(t,n);let o=DS(e),i=e.TEXTURE_2D;return ke(e,()=>e.bindTexture(i,o)),ke(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),ke(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),ke(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),ke(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Y().getNumber("WEBGL_VERSION")===1?ke(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)):ke(e,()=>e.texStorage2D(i,1,s,t,n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null)),o}function yx(e){return e.internalFormatFloat}function rC(e,t,n,s){let[r,a]=mp(t,n);return xp(e,r,a,yx(s),s.textureFormatFloat,e.FLOAT)}function xx(e){return e.internalFormatHalfFloat}function aC(e,t,n,s){let[r,a]=mp(t,n);return xp(e,r,a,xx(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function bx(e){return e.downloadTextureFormat}function oC(e,t,n,s){let[r,a]=mp(t,n);return xp(e,r,a,bx(s),e.RGBA,e.UNSIGNED_BYTE)}function vx(e){return e.internalFormatPackedFloat}function iC(e,t,n,s){let[r,a]=rc(t,n);return xp(e,r,a,vx(s),e.RGBA,e.FLOAT)}function wx(e){return e.internalFormatPackedHalfFloat}function lC(e,t,n,s){let[r,a]=rc(t,n);return xp(e,r,a,wx(s),e.RGBA,s.textureTypeHalfFloat)}function uC(e,t,n){let s=0,r=3*4,a=3*4+2*4;return ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),dx(e,t,"clipSpacePos",n,3,a,s)&&dx(e,t,"uv",n,2,a,r)}function cC(e,t,n,s,r,a){ke(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(r),Y().getNumber("WEBGL_VERSION")===2?ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,i,o)):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,i,o)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function dC(e,t,n){ke(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Y().getNumber("WEBGL_VERSION")===2?(ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)),e.flush()):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Y().getNumber("WEBGL_VERSION")===2?(ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)),e.flush()):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function pC(e,t,n,s){let r=e.createBuffer();ke(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return ke(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),ke(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),ke(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function hC(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function fC(e,t,n,s){let[r,a]=mp(t,n),o=4,i=new Uint8Array(MY(t*n,o));return ke(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function mC(e,t,n,s,r,a,o,i){let l=e,c=new Float32Array(zY(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function gC(e,t,n){let s=new Float32Array(t*n*4);return ke(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var jm=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Y().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Mm(t,e)):this.gl=Vr(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(Y().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=gp(this.gl,r),Us(this.gl,a))this.textureHalfFloatExtension=gp(this.gl,a);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Us(this.gl,s))this.colorBufferHalfFloatExtension=gp(this.gl,s);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Us(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Us(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=nC(this.gl),this.indexBuffer=sC(this.gl),this.framebuffer=PS(this.gl),this.textureConfig=cx(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ke(e,()=>e.finish()),ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.deleteFramebuffer(this.framebuffer)),ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ke(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),rC(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),aC(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),oC(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),dC(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),cC(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),lC(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),iC(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(px(this.gl,this.framebuffer),this.outputTexture=null),ke(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>fC(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return mC(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return hC(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=pC(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>gC(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=tC(t));let n=ES(t);return ke(t,()=>t.attachShader(n,this.vertexShader)),ke(t,()=>t.attachShader(n,e)),RS(t,n),this.debug&&Lm(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=uC(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ke(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Lm(this.gl,this.program),ke(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?MS(this.gl,e,t):zS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ke(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),LS(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=rc(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Lm(this.gl,this.program),Ap(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ke(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ke(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=gp(this.gl,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=UJ(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Bm(this.gl,e,this.framebuffer),this.debug&&Ap(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Bm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ap(this.gl)):px(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;Bm(s,e,this.framebuffer),this.debug&&Ap(s),this.outputTexture=e,ke(s,()=>s.viewport(0,0,t,n)),ke(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),ke(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function UJ(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:GJ,bincountImpl:AC,bincountReduceImpl:HJ,ceilImpl:jJ,concatImpl:qJ,equalImpl:XJ,expImpl:KJ,expm1Impl:ZJ,floorImpl:YJ,gatherNdImpl:JJ,gatherV2Impl:QJ,greaterImpl:eQ,greaterEqualImpl:tQ,lessImpl:nQ,lessEqualImpl:sQ,linSpaceImpl:rQ,logImpl:aQ,maxImpl:oQ,maximumImpl:iQ,minimumImpl:lQ,multiplyImpl:uQ,negImpl:cQ,notEqualImpl:dQ,prodImpl:pQ,rangeImpl:hQ,rsqrtImpl:fQ,sigmoidImpl:mQ,simpleAbsImpl:yC,sliceImpl:gQ,sparseFillEmptyRowsImpl:AQ,sparseReshapeImpl:yQ,sparseSegmentReductionImpl:xC,sqrtImpl:xQ,stridedSliceImpl:bQ,stringNGramsImpl:vQ,stringSplitImpl:wQ,stringToHashBucketFastImpl:kQ,subImpl:IQ,tileImpl:SQ,topKImpl:CQ,transposeImpl:kx,uniqueImpl:TQ}=$m;function bC(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function jn(e,t){return t===1?[e]:bC(e,t)}function NQ(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var EQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=jn("rc",t),s=vt(t),r=$Q(t,e,n),a=_Q(t,e[e.length-1],e[e.length-2],n),o=DQ(e,n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${o}));
          }
        }
      `}}};function RQ(e,t){let n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<e;o++)a=`${t[t.length-1-o]},`+a;n.push(a)}return n}function $Q(e,t,n){if(e===1)return`rc > ${t[0]}`;let s="";for(let r=e-2;r<e;r++)s+=`${n[r]} >= ${t[r]}`,r<e-1&&(s+="||");return s}function _Q(e,t,n,s){if(e===1)return"";let r=s.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${n};
  `}function DQ(e,t){let n=e.length,s=RQ(n,t);return n===1?`getA(rc),
            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${s[0]}),
          cEdge ? 0. : getA(${s[1]}),
          rEdge ? 0. : getA(${s[2]}),
          rEdge || cEdge ? 0. : getA(${s[3]})`}var vC=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Gs(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2==1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${FQ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?gx():mx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function FQ(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?YY(["r","c","d"],"inputShape"):Tl(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var PQ=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=kC(t,n),r=IC(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=wC(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===Cn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Cn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Cn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Cn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Cn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=kC(n,s),a=IC(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=wC(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=Y().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function OQ(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function wC(e,t,n,s,r){let a=MQ(t,s),o;if(r){let[l,c]=rc(e[0],e[1]);o=l*c}else{let[l,c]=mp(e[0],e[1]);o=l*c}let i=OQ(n,a);return o*i}function MQ(e,t){switch(e){case Cn.PACKED_2X2_FLOAT32:return vx(t);case Cn.PACKED_2X2_FLOAT16:return wx(t);case Cn.UNPACKED_FLOAT32:return yx(t);case Cn.UNPACKED_FLOAT16:return xx(t);case Cn.PACKED_4X1_UNSIGNED_BYTE:return bx(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function zQ(e){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Cn.PACKED_2X2_FLOAT32:Cn.UNPACKED_FLOAT32:e?Cn.PACKED_2X2_FLOAT16:Cn.UNPACKED_FLOAT16}function kC(e,t){if(e===Vs.UPLOAD)return Cn.PACKED_2X2_FLOAT32;if(e===Vs.RENDER||e==null)return zQ(t);if(e===Vs.DOWNLOAD||e===Vs.PIXELS)return Cn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function IC(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Ho=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Gs(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Ir="if (isnan(x)) return x;",LQ="return x;",SC="return abs(x);",BQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",WQ=Ir+`
  return (x < 0.0) ? 0.0 : x;
`,VQ=Ir+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,qm="return x;",UQ="return 1.0 / (1.0 + exp(-1.0 * x));",GQ="return x;",HQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,jQ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qQ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,XQ="return 1.0 / (1.0 + exp(-1.0 * x));",cc=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Gs(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},KQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=jn("rc",t),s=vt(t),r=NQ(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},ZQ=nr.whereImpl,YQ=1e-7,JQ=1e-4,Xm={};function QQ(e){return e in Xm||(Xm[e]={}),Xm[e]}var eee=Y().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),tee=600;function nee(){return Y().global.screen==null?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*tee/1024/1024}var CC=class extends tu{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Vr(Y().getNumber("WEBGL_VERSION"));this.binaryCache=QQ(Y().getNumber("WEBGL_VERSION")),this.gpgpu=new jm(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new PQ(this.gpgpu),this.numMBBeforeWarning=nee(),this.texData=new sd(this,is())}nextDataId(){return CC.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:Vs.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:Vs.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let d;i?d=new cc(o,qm):d=new Ho(o,qm);let p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:s}],s),h=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let l=this.activeTimers!=null,c;l&&(c=v.now());let u;if(s==="complex64"){let d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);u=E.mergeRealAndImagArrays(d,p)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=v.now()-c),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let h;i?h=new cc(s,qm):h=new Ho(s,qm);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(Y().getBool("DEBUG")&&!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Y().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(a!=="complex64"&&Y().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let h=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(h.texture,...zm(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];u=E.mergeRealAndImagArrays(f,m)}else if(l==null)u=this.getValuesFromTexture(e);else{let h=v.sizeFromShape(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){let h=this.gpgpu.gl;ke(h,()=>h.deleteBuffer(l))}let d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&is().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!SS(n))throw Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=v.sizeFromShape(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),p=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(p.texture,...zm(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),h}let a=Y().getBool("WEBGL_PACK")&&s===!0,o=a?Wm(t):t,i=a?new BJ(o):new LJ(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=v.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=eee){return Y().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&v.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){E.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return ZQ(e.shape,t)}packedUnaryOp(e,t,n){let s=new cc(e.shape,t),r=this.compileAndRun(s,[e],n);return is().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=yC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,SC,e.dtype);let t=new Ho(e.shape,SC),n=this.compileAndRun(t,[e]);return is().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:s}=this.makeTensorInfo(e,t,n);return is().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){let t=new KQ(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new EQ(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Sl(e.shape),...Cl(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Sl(t),...Cl(t)],a=new vC(r,n),o=!0,i=[n],l=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:s,dtype:r}=t,a=Wm(s),o,i=zm(a);n?o=new zJ(a):o=new MJ(a);let l=!0,c=[i],u=this.runWebGLProgram(o,[{shape:a,dtype:r,dataId:e}],r,c,l);return{dtype:r,shape:s,dataId:u.dataId}}runWebGLProgram(e,t,n,s,r=!1){let a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===fp.DENSE){let m=zm(e.outputShape);o.texShape=m.map(g=>g*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),v.sizeFromShape(a.shape)===0)return o.values=v.getTypedArrayFromDType(a.dtype,0),a;let i=[],l=t.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(m.dataId);if(g.texture==null){if(!e.packedInputs&&v.sizeFromShape(m.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=m.shape)}if(this.uploadToGPU(m.dataId),!!g.isPacked!=!!e.packedInputs)m=g.isPacked?this.unpackTensor(m):this.packTensor(m),i.push(m),g=this.texData.get(m.dataId);else if(g.isPacked&&!yp(g.shape,m.shape)){let A=m,x=m.shape;m.shape=g.shape,m=this.packedReshape(m,x),i.push(m),g=this.texData.get(m.dataId),A.shape=x}return{shape:m.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);let c={shape:a.shape,texData:o,isUniform:!1},u=OJ(e,l,c),d=this.getAndSaveBinary(u,()=>FJ(this.gpgpu,e,l,c)),p=this.activeTimers!=null,h;p&&(h=this.startTimer()),PJ(this.gpgpu,d,l,c,s),i.forEach(m=>this.disposeIntermediateTensorInfo(m)),p&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let f=Y().get("WEBGL_FLUSH_THRESHOLD");if(f>0){let m=v.now();m-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&r===!1){let m=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),m}return a}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=X(()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Y().getBool("DEBUG");Y().set("DEBUG",!1);let t=this.abs(Ce(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?YQ:JQ}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,c;l&&(c=v.now());let u=t.texShape;if(u==null&&(u=VS(n,i),t.texShape=u),r!=null){let d=Wm(n),p,h=u[1],f=u[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(i||!m)&&([h,f]=rc(u[0],u[1])),i?p=new VJ(d,m):p=new WJ(d,m);let g=m?[f,h]:u,A=this.makeTensorInfo(g,s),x=this.texData.get(A.dataId);m?x.usage=Vs.PIXELS:x.usage=Vs.UPLOAD,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(A.dataId),h,f,r);let y=[[f,h]],b=!0,w=this.runWebGLProgram(p,[A],s,y,b),k=this.texData.get(w.dataId);t.texture=k.texture,t.texShape=k.texShape,t.isPacked=k.isPacked,t.usage=k.usage,this.disposeIntermediateTensorInfo(A),this.texData.delete(w.dataId),t.values=null,l&&(this.uploadWaitMs+=v.now()-c)}else{let d=this.acquireTexture(u,o,s,i);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=see(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}},bp=CC;bp.nextDataId=0;function see(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var ree="0.0.0";function TC(){Y().set("WEBGL_FORCE_F16_TEXTURES",!0)}_u.isBrowser()&&al("webgl",()=>new bp,2);var aee={forceHalfFloat:TC},NC=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,dc=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=E.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Gs(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Km=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,vp=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=E.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=Gs(r);let a="";if(s)if(r===0||v.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${vt(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=jn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Ss(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var oee={kernelName:qa,backendName:"webgl",kernelFunc:Ss};function jo(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=Ss({inputs:{x:s},backend:n}),l=Ss({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var iee={kernelName:id,backendName:"webgl",kernelFunc:jo},EC="return (a < 0.) ? b * a : a;",RC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function lee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",v.createScalarValue(a,"float32")),i=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vp(RC,r.shape,o.shape):new dc(EC,r.shape,o.shape),l=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var uee={kernelName:ki,backendName:"webgl",kernelFunc:lee},$C="return (a < 0.) ? b * a : a;",_C=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function cee(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vp(_C,s.shape,r.shape):new dc($C,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var dee={kernelName:ao,backendName:"webgl",kernelFunc:cee},DC="if (isnan(x)) return x;",pee=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,hee=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function at({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let d=i.texData.get(o.dataId),p=n(d.values,l);return i.makeTensorInfo(o.shape,l,p)}let c=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new cc(o.shape,t):u=new Ho(o.shape,e),i.runWebGLProgram(u,[o],l)}}function Tn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:c}=o,u=i;if(s&&l.dtype==="complex64"){let f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,A]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(y=>{let[b,w]=y,k={dataId:b.dataId,dtype:b.dtype,shape:l.shape},S={dataId:w.dataId,dtype:w.dtype,shape:c.shape},N=new dc(e,l.shape,c.shape);return u.runWebGLProgram(N,[k,S],Ln(b.dtype,w.dtype))}),x=jo({inputs:{real:g,imag:A},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(A),x}let d=a||Ln(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&r!=null){let f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?E.fromUint8ToStringArray(f):f,A=l.dtype==="string"?E.fromUint8ToStringArray(m):m,[x,y]=r(l.shape,c.shape,g,A,d),b=u.makeTensorInfo(y,d),w=u.texData.get(b.dataId);return w.values=x,b}let p=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return p?h=new vp(t,l.shape,c.shape,n):h=new dc(e,l.shape,c.shape),u.runWebGLProgram(h,[l,c],d)}}function Zm(e,t=!1){if(e==="linear")return t?GQ:LQ;if(e==="relu")return t?jQ:WQ;if(e==="elu")return t?HQ:BQ;if(e==="relu6")return t?qQ:VQ;if(e==="prelu")return t?_C:$C;if(e==="leakyrelu")return t?RC:EC;if(e==="sigmoid")return t?XQ:UQ;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var FC=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Gs(this.outputShape.length);let c=s?e[1]:e[2],u=Math.ceil(c/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let A=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${x};
          int batchB = ${y};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${A}

        ${g}

        setOutput(result);
      }
    `}},PC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},OC=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=E.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},MC="return a * b;";function Ix(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=E.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),c=new OC(PC.REAL,s.shape,r.shape),u=new OC(PC.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=jo({inputs:{real:p,imag:h},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[c,u]=uQ(s.shape,r.shape,i.values,l.values,a),d=n.makeTensorInfo(u,a),p=n.texData.get(d.dataId);return p.values=c,d}let o;return Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new vp(MC,s.shape,r.shape):o=new dc(MC,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var fee={kernelName:no,backendName:"webgl",kernelFunc:Ix};function mee(e,t,n){let s=[Sl(e.shape),...Cl(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[Sl(t),...Cl(t)],o=new vC(a,s),i=!0,l=[s],c=n.runWebGLProgram(o,[r],e.dtype,l,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function ve(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=v.sizeFromShape(r.shape),l=v.inferFromImplicitShape(a,i),c=v.sizeFromShape(l);v.assert(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=o.texData.get(r.dataId);return u.isPacked&&!yp(r.shape,l)&&!(u.texture!==null&&yp(u.shape,l))?mee(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var gee={kernelName:Pi,backendName:"webgl",kernelFunc:ve},zC=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${v.isInt(u)?u.toPrecision(2):u}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},Aee=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,u=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function yee(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=E.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function El(e,t,n,s){let r=yee(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:l,outSize:c}=r[o],u,d;n==="mean"?u=o===0?new zC({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},i):new zC({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c}):u=new Aee({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},n),d=a,a=s.runWebGLProgram(u,[a],t),d.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(d)}return a}var xee=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=vt(this.rank),r=bee(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function bee(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var vee=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=vt(this.rank),r=bC("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=r[c];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Ym(e,t,n){let s=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vee(e.shape,t):new xee(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function wee(e,t,n,s){let r=t,a=e.shape.length,o=v.parseAxisParam(r,e.shape),i=o,l=E.getAxesPermutation(i,a),c=l!=null,u=e;c&&(u=Ym(e,l,s),i=E.getInnerMostAxes(i.length,a)),E.assertAxesAreInnerMostDims("sum",i,a);let[d,p]=E.computeOutAndReduceShapes(u.shape,i),h=d;n&&(h=E.expandShapeToKeepDim(d,o));let f=v.sizeFromShape(p),g=v.sizeFromShape(e.shape)/f,A=ve({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),x=Ed(e.dtype),y=El(A,x,"sum",s),b=ve({inputs:{x:y},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(y),c&&s.disposeIntermediateTensorInfo(u),b}function Jm(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return wee(r,a,o,n)}var kee={kernelName:fo,backendName:"webgl",kernelFunc:Jm};function qn(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];let c;if(o.shouldExecuteOnCPU([r])){let d=o.texData.get(r.dataId).values,p=kx(d,r.shape,r.dtype,a,l);c=o.makeTensorInfo(l,r.dtype);let h=o.texData.get(c.dataId);h.values=p}else c=Ym(r,a,o);return c}var Iee={kernelName:xo,backendName:"webgl",kernelFunc:qn},LC=1e3;function Qm({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),A=v.sizeFromShape(m),x=v.sizeFromShape(g),b=nl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[A,d,h]:[A,h,d],k=s?[x,f,p]:[x,p,f],S=ve({inputs:{x:e},backend:r,attrs:{shape:w}}),N=ve({inputs:{x:t},backend:r,attrs:{shape:k}}),R=[S,N],M=Math.max(A,x),D=n?S.shape[1]:S.shape[2],$=a!=null,T=o!=null,P=l==="leakyrelu",W=l!=null?Zm(l,!0):null,K=$||T||P||W!=null,z;if((h===1||f===1)&&D>LC&&K===!1){let Z=S,Q=N;n&&(Z=qn({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),R.push(Z)),s&&(Q=qn({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),R.push(Q));let ne=f!==1,ae=f===1,U=Z;ne&&(U=ve({inputs:{x:Z},backend:r,attrs:{shape:[M,D,1]}}),R.push(U));let oe=f===1?2:1,re=Q;ae&&(re=ve({inputs:{x:Q},backend:r,attrs:{shape:[M,1,D]}}),R.push(re));let me=Ix({inputs:{a:U,b:re},backend:r});z=Jm({inputs:{x:me},backend:r,attrs:{axis:oe,keepDims:!0}}),R.push(me)}else{let Z=Ln(e.dtype,t.dtype),Q=new FC(w,k,[M,h,f],n,s,$,W,T,P),ne=[S,N];if(a!=null&&ne.push(a),T&&ne.push(o),P){let ae=r.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));ne.push(ae),R.push(ae)}z=r.runWebGLProgram(Q,ne,Z)}let j=ve({inputs:{x:z},backend:r,attrs:{shape:b}});R.push(z);for(let Z of R)r.disposeIntermediateTensorInfo(Z);return j}function See(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return Qm({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var Cee={kernelName:vo,backendName:"webgl",kernelFunc:See},BC="return abs(x);";function Tee(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=yC(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new cc(s.shape,BC):r=new Ho(s.shape,BC),n.runWebGLProgram(r,[s],s.dtype)}var Nee={kernelName:ci,backendName:"webgl",kernelFunc:Tee},Eee=Ir+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Ree=at({opSnippet:Eee}),$ee={kernelName:ru,backendName:"webgl",kernelFunc:Ree},_ee=Ir+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Dee=at({opSnippet:_ee}),Fee={kernelName:au,backendName:"webgl",kernelFunc:Dee},WC="return a + b;",Pee=Tn({opSnippet:WC,packedOpSnippet:WC,supportsComplex:!0,cpuKernelImpl:GJ}),Oee={kernelName:Xr,backendName:"webgl",kernelFunc:Pee},Mee=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},zee=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function e0(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Ss({inputs:{x:s[0]},backend:n});if(s.length>Y().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),c=e0({inputs:s.slice(0,l),backend:n}),u=e0({inputs:s.slice(l),backend:n});return e0({inputs:[c,u],backend:n})}let r=s.map(l=>l.dtype).reduce((l,c)=>Ln(l,c)),a=s.map(l=>l.shape),i=Y().getBool("WEBGL_PACK")?new zee(s[0].shape,a):new Mee(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var Lee={kernelName:Ea,backendName:"webgl",kernelFunc:e0};function Bee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=E.getAxesPermutation(c,i),d=r;u!=null&&(d=qn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=E.getInnerMostAxes(c.length,i)),E.assertAxesAreInnerMostDims("all",c,i);let[p,h]=E.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=El(m,m.dtype,"all",n),A;if(o){let x=E.expandShapeToKeepDim(p,l);A=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else A=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),A}var Wee={kernelName:ou,backendName:"webgl",kernelFunc:Bee};function Vee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=E.getAxesPermutation(c,i),d=r;u!=null&&(d=qn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=E.getInnerMostAxes(c.length,i)),E.assertAxesAreInnerMostDims("any",c,i);let[p,h]=E.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=El(m,m.dtype,"any",n),A;if(o){let x=E.expandShapeToKeepDim(p,l);A=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else A=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),A}var Uee={kernelName:iu,backendName:"webgl",kernelFunc:Vee},Gee=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},Hee=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=vt(i),c=jn("coords",i),u,d;if(a===1){d=i+1;let S=vt(d);u=`
        ${S} sourceLocR = ${S}(${c.join()}, 0);
        ++${c[i-1]};
        ${S} sourceLocG = ${S}(${c.join()}, 0);
        ++${c[i-2]};
        ${S} sourceLocA = ${S}(${c.join()}, 0);
        --${c[i-1]};
        ${S} sourceLocB = ${S}(${c.join()}, 0);
        --${c[i-2]};`}else d=i,u=`
        ${l} sourceLocR = coords;
        ++${c[i-1]};
        ${l} sourceLocG = coords;
        ++${c[i-2]};
        ${l} sourceLocA = coords;
        --${c[i-1]};
        ${l} sourceLocB = coords;
        --${c[i-2]};`;let p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(S=>"int "+S),m=jn("sourceLocR",d-1).concat("inIdx.r"),g=jn("sourceLocG",d-1).concat("inIdx.g"),A=jn("sourceLocB",d-1).concat("inIdx.b"),x=jn("sourceLocA",d-1).concat("inIdx.a"),y=n==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${A.join()}),
                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${A.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${c[i-2]} < ${o[i-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function VC(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=E.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new Gee(i,n,s==null),c=[t];s!=null&&c.push(s);let u=e.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let d=VC(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function UC(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=E.computeOptimalWindowSize(a),i=new Hee(r,o,n,s==null),l=s==null?[t]:[t,s],c=e.runWebGLProgram(i,l,"int32");if(c.shape.length===t.shape.length){let u=UC(e,t,n,c);return e.disposeIntermediateTensorInfo(c),u}return c}function GC(e,t,n,s){let r=[n];if(E.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[c,u]=E.computeOutAndReduceShapes(l.shape,r),d=v.sizeFromShape(u),p=ve({inputs:{x:l},backend:e,attrs:{shape:[-1,d]}});a.push(p);let h=VC(e,p,s);a.push(h);let f=ve({inputs:{x:h},backend:e,attrs:{shape:c}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return UC(e,t,s)}function jee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=E.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=qn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=E.getInnerMostAxes(o.length,l.shape.length)),E.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=GC(n,l,o[0],"max");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var qee={kernelName:Ra,backendName:"webgl",kernelFunc:jee};function Xee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=E.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=qn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=E.getInnerMostAxes(o.length,l.shape.length)),E.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=GC(n,l,o[0],"min");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var Kee={kernelName:lu,backendName:"webgl",kernelFunc:Xee},Zee=Ir+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Yee=at({opSnippet:Zee}),Jee={kernelName:uu,backendName:"webgl",kernelFunc:Yee},Qee=Ir+"return log(x + sqrt(x * x + 1.0));",ete=at({opSnippet:Qee}),tte={kernelName:cu,backendName:"webgl",kernelFunc:ete},nte=Ir+`
  return atan(x);
`,ste=at({opSnippet:nte}),rte={kernelName:du,backendName:"webgl",kernelFunc:ste},ate=pee+`
  return atan(a, b);
`,ote=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+hee+`
  return result;
`,ite=Tn({opSnippet:ate,packedOpSnippet:ote}),lte={kernelName:hu,backendName:"webgl",kernelFunc:ite},ute=Ir+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,cte=at({opSnippet:ute}),dte={kernelName:pu,backendName:"webgl",kernelFunc:cte},wp=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,A="0.0";if(f||(A="-1.0 / 1e-20"),n){let S=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(y="avgValue / count");let b=Math.floor(a/4)*4,w=a%4,k=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${b};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${y});
      }
    `}},Sx=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,A=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",y="0.0";if(x||(y="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${A});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let k=Math.floor(a/4)*4,S=a%4,N=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${A});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${N}
            }

            int xC = xCCorner + ${k};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${N}
            }
          }
          setOutput(${w});
        }
      }
    `}};function pte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;ac(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(E.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=E.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return Ss({inputs:{x:r},backend:n});let d=new wp(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var hte={kernelName:$a,backendName:"webgl",kernelFunc:pte};function fte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],d=E.computePool3DInfo(r.shape,a,o,u,i,l,c),p=new Sx(d,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var mte={kernelName:od,backendName:"webgl",kernelFunc:fte},gte=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.top,u=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Ate=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function yte(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],p=E.computePool3DInfo(o.shape,i,l,d,c,u),h=new Ate(p);return n.runWebGLProgram(h,[r],o.dtype)}var xte={kernelName:Th,backendName:"webgl",kernelFunc:yte};function bte(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;ac([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=E.computePool2DInfo(o.shape,i,l,1,c),d=new gte(u);return n.runWebGLProgram(d,[r],o.dtype)}var vte={kernelName:Ch,backendName:"webgl",kernelFunc:bte};function wte(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Qm({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var kte={kernelName:_a,backendName:"webgl",kernelFunc:wte},Ite=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],E.assertAndGetBroadcastShape(e,t),E.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(E.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(E.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},Ste=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],E.assertAndGetBroadcastShape(e,t),E.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(E.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(E.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},Cte=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;v.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=[s,r,a],u=null;o!=null&&(u=o.shape,c.push(o));let d=null;i!=null&&(d=i.shape,c.push(i));let p=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Ste(s.shape,r.shape,a.shape,u,d,l):new Ite(s.shape,r.shape,a.shape,u,d,l);return t.runWebGLProgram(p,c,c[0].dtype)},Tte={kernelName:Ha,backendName:"webgl",kernelFunc:Cte},Nte=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=vt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Ete(this.rank),s,r=e.map((a,o)=>`sourceLoc.${Cx[o]} = start[${o}] + coords.${Cx[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},Cx=["x","y","z","w","u","v"];function Ete(e){if(e===1)return"sourceLoc";if(e<=6)return Cx.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var Rte=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=vt(this.rank),n=jn("coords",this.rank),s=jn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,u)=>`start[${u}]`).join()});`:e.map((c,u)=>`${s[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function $te(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Ot.computeFlatOffset(t,v.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}function pc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Ot.parseSliceParams(r,a,o);if(Ot.assertParamsValid(r,i,l),v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.texData.get(r.dataId),p=gQ(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,p)}let{isPacked:c}=n.texData.get(r.dataId),u=Ot.isSliceContinous(r.shape,i,l);if(c||!u){let d=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rte(l):new Nte(l),p=[i];return n.runWebGLProgram(d,[r],r.dtype,p)}return n.uploadToGPU(r.dataId),$te(r,i,l,n)}var _te={kernelName:Bi,backendName:"webgl",kernelFunc:pc},Dte=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((x,y)=>x*y),l=E.getReshaped(r.shape,a,i),c=E.getPermuted(l.length,a.length),u=E.getReshapedPermuted(r.shape,a,i),d=E.getSliceBeginCoords(o,a.length),p=E.getSliceSize(u,o,a.length),h=[],f=ve({inputs:{x:r},backend:n,attrs:{shape:l}}),m=qn({inputs:{x:f},backend:n,attrs:{perm:c}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:u}}),A=pc({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeIntermediateTensorInfo(x)),A},Fte={kernelName:di,backendName:"webgl",kernelFunc:Dte};function Pte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),l=n.readSync(a.dataId),c=AC(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var Ote={kernelName:Nh,backendName:"webgl",kernelFunc:Pte};function Mte(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=E.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var zte={kernelName:Eh,backendName:"webgl",kernelFunc:Mte},Lte="return float(a != b);",HC=Tn({opSnippet:Lte,cpuKernelImpl:dQ,dtype:"bool"}),Bte={kernelName:Ni,backendName:"webgl",kernelFunc:HC};function kp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Ss({inputs:{x:r.complexTensorInfos.real},backend:n})}var Wte={kernelName:gd,backendName:"webgl",kernelFunc:kp},Vte="return float(int(x));";function Ute(e,t){let n=new Ho(e.shape,Vte),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Tx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Ss({inputs:{x:r},backend:n});let o=Ht(r.shape),i=Tx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=jo({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=kp({inputs:{input:r},backend:n}),i=Tx({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Ss({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Ute(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=HC({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Gte={kernelName:Da,backendName:"webgl",kernelFunc:Tx},jC="return ceil(x);",Hte=at({opSnippet:jC,packedOpSnippet:jC,cpuKernelImpl:jJ}),jte={kernelName:Fa,backendName:"webgl",kernelFunc:Hte},qte=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},Xte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Kte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;Y().getBool("WEBGL_PACK_CLIP")?i=new Xte(r.shape):i=new qte(r.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,l)}var Zte={kernelName:Kr,backendName:"webgl",kernelFunc:Kte},Yte=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function qC(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function Jte(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new Yte(s.shape),o=[qC(s,r.complexTensorInfos.real),qC(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var Qte={kernelName:ld,backendName:"webgl",kernelFunc:Jte},ene=class{constructor(e){this.outputShape=[],this.outputShape=E.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},tne=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=E.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=vt(s),a=jn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],c=o.slice(-2),u=o.join(),d=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${u}), vec2(${c.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];d+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${t0(o,l,m)}),
            vec2(${t0(c,l,m)}));
        }`}let p=i.length,h=i[i.length-1];d+=`
        return getChannel(
          getT${p}(${t0(o,l,h)}),
          vec2(${t0(c,l,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function t0(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function n0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Ss({inputs:{x:r.complexTensorInfos.imag},backend:n})}var nne={kernelName:pd,backendName:"webgl",kernelFunc:n0};function hc(e,t,n){let s=e[0].dtype;if(s==="complex64"){let u=e.map(m=>kp({inputs:{input:m},backend:n})),d=e.map(m=>n0({inputs:{input:m},backend:n})),p=hc(u,t,n),h=hc(d,t,n),f=jo({inputs:{real:p,imag:h},backend:n});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let u=e.map(A=>{let x=v.sizeFromShape(A.shape.slice(t));return ve({inputs:{x:A},backend:n,attrs:{shape:[-1,x]}})}),d=u.map(A=>({vals:n.readSync(A.dataId),shape:A.shape})),p=E.computeOutShape(u.map(A=>A.shape),1),h=u[0].shape[0]===1,f=qJ(d,p,s,h),m=E.computeOutShape(e.map(A=>A.shape),t),g=n.makeTensorInfo(m,s,f);return u.forEach(A=>n.disposeIntermediateTensorInfo(A)),g}if(e.length>Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(e.length/2),d=hc(e.slice(0,u),t,n),p=hc(e.slice(u),t,n),h=hc([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}if(Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let u=new tne(e.map(d=>d.shape),t);return n.runWebGLProgram(u,e,s)}let{tensors2D:a,outShape:o}=sne(e,t,n),i=new ene(a.map(u=>u.shape)),l=n.runWebGLProgram(i,a,s);a.forEach(u=>n.disposeIntermediateTensorInfo(u));let c=ve({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function sne(e,t,n){let s=E.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ve({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function XC(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=E.computeOutShape(t.map(c=>c.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return Ss({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return E.assertParamsConsistent(l,a),hc(i,a,n)}var rne={kernelName:pi,backendName:"webgl",kernelFunc:XC},KC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,A=m?2:3,x=m?3:1,y="",b="";n&&(s?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${A}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}},ane=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},one=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Gs(this.outputShape.length);let{dataFormat:n}=t,s=Hn(),r=n==="channelsLast",a=r?0:1,o=r?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let c=0;c<=1;c++)for(let u=0;u<=1;u++)l+=`
          blockIndex = rc.y + ${u};
          pos = rc.x + ${c};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+u}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+u}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}};function ZC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=s.texData.get(e.dataId),u=n.inChannels,d=l[0]*l[1]*l[2],p=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,A=[];if(!((d===1||p===1)&&u>LC)&&c.isPacked&&h&&c.texture!=null&&l[2]%2!=0&&v.arraysEqual(c.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),w={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},k=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,v.assert(yp(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);let S=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});A.push(S);let N=Qm({a:w,b:S,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=s.texData.get(N.dataId);v.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=k,R.shape=n.outShape,g=Ss({inputs:{x:N},backend:s}),g.shape=n.outShape,A.push(N)}else{let b=h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],w=ve({inputs:{x:e},backend:s,attrs:{shape:[1,b,n.inChannels]}}),k=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),S=Qm({a:w,b:k,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=ve({inputs:{x:S},backend:s,attrs:{shape:n.outShape}}),A.push(w),A.push(k),A.push(S)}for(let b of A)s.disposeIntermediateTensorInfo(b);return g}function YC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:d,outHeight:p,dataFormat:h}=n,f=h==="channelsLast",m=l*c*u,g=p*d,A=[m,g],x=!0,y=!1,b=[],w=ve({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),k=ve({inputs:{x:t},backend:s,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});b.push(w),b.push(k);let S=new one(A,n),N=[w.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=s.runWebGLProgram(S,[w],"float32",N),M=ve({inputs:{x:R},backend:s,attrs:{shape:[1,A[0],A[1]]}});b.push(R),b.push(M);let D=r!=null,$=a!=null,T=i==="leakyrelu",P=i?Zm(i,!0):null,W=new FC(M.shape,k.shape,[1,g,n.outChannels],x,y,D,P,$,T),K=[M,k];if(r&&K.push(r),$&&K.push(a),T){let Q=s.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));K.push(Q),b.push(Q)}let z=s.runWebGLProgram(W,K,"float32"),j=f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],Z=ve({inputs:{x:z},backend:s,attrs:{shape:j}});b.push(z);for(let Q of b)s.disposeIntermediateTensorInfo(Q);return Z}function ine(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s,d=E.convertConv2DDataFormat(l),p=E.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=ZC({x:r,filter:a,convInfo:p,backend:n});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=YC({x:r,filter:a,convInfo:p,backend:n});else{let m=new KC(p);h=n.runWebGLProgram(m,[r,a],"float32")}let f=ve({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}var lne={kernelName:Pa,backendName:"webgl",kernelFunc:ine},une=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},cne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,c=a?2:3,u=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},dne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},pne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function hne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,d=E.convertConv2DDataFormat(l),p=E.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),h=new une(p);return n.runWebGLProgram(h,[r,a],"float32")}var fne={kernelName:Rh,backendName:"webgl",kernelFunc:hne};function mne(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=E.convertConv2DDataFormat(c),p=E.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=new cne(p);return n.runWebGLProgram(h,[r,a],"float32")}var gne={kernelName:Oa,backendName:"webgl",kernelFunc:mne};function Ane(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=E.computeConv3DInfo(r.shape,a.shape,o,l,i),u=new ane(c);return n.runWebGLProgram(u,[r,a],"float32")}var yne={kernelName:ud,backendName:"webgl",kernelFunc:Ane};function xne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,c=E.computeConv3DInfo(r.shape,l,o,1,i),u=new dne(c);return n.runWebGLProgram(u,[r,a],"float32")}var bne={kernelName:$h,backendName:"webgl",kernelFunc:xne};function vne(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,c=E.computeConv3DInfo(l,a.shape,i,1,o),u=new pne(c);return n.runWebGLProgram(u,[r,a],"float32")}var wne={kernelName:_h,backendName:"webgl",kernelFunc:vne},kne=DC+`
  return cos(x);
`,Ine=at({opSnippet:kne}),Sne={kernelName:Ma,backendName:"webgl",kernelFunc:Ine},Cne=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Tne=at({opSnippet:Cne}),Nne={kernelName:za,backendName:"webgl",kernelFunc:Tne},Ene=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[c]=t,[u,d]=n;this.outputShape=[c,u,d,l];let p=s==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,A]=u>1?[`${(o-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,y,b]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${y};

        float in_y = ${A};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},Rne=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new Ene(r.shape,a.shape,i,l,c);return n.runWebGLProgram(u,[r,a,o],"float32")},$ne={kernelName:fi,backendName:"webgl",kernelFunc:Rne},JC=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let s=e.length,r=t?"0.0":`getX(${QC(s,"coords")})`,a=e[e.length-1],o="",i="";t?(o=n?`end != ${a-1}`:"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${vt(s)} coords = getOutputCoords();
        int end = ${e4(s,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${i};
          ${e4(s,"coords")} = idx;
          val += getX(${QC(s,"coords")});
        }
        setOutput(val);
      }
    `}};function QC(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function e4(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function _ne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length,c=E.getAxesPermutation([a],l),u=r;c!=null&&(u=qn({inputs:{x:r},backend:n,attrs:{perm:c}}));let d=E.getInnerMostAxes(1,l)[0];if(d!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);let p=u.shape[d],h=Ss({inputs:{x:u},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new JC(u.shape,!1,i),g=[[f]],A=h;h=n.runWebGLProgram(m,[h],h.dtype,g),n.disposeIntermediateTensorInfo(A)}if(o){let f=new JC(u.shape,o,i),m=h;h=n.runWebGLProgram(f,[h],h.dtype),n.disposeIntermediateTensorInfo(m)}if(c!=null){let f=E.getUndoAxesPermutation(c),m=qn({inputs:{x:h},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),m}return h}var Dne={kernelName:hi,backendName:"webgl",kernelFunc:_ne};function Fne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=AC(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=HJ(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var Pne={kernelName:Dh,backendName:"webgl",kernelFunc:Fne},One=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Mne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=new One(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var zne={kernelName:mi,backendName:"webgl",kernelFunc:Mne},t4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Gs(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",c="";n&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${c}
        setOutput(result);
      }
    `}},n4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Gs(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,d=u,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<u;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let A=g*2;if(p+=`
          xC = xCCorner + ${A*l};
          `,i===1){if(A<u&&(o%2==1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }
              `,l===1&&A>0?p+=`
                xC${A} = vec4(xTexelC${A-2}.zw, xTexelC${A}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${A} = vec4(previous.zw, xTexelC${A}.xy);
                  } else {
                    xC${A} = vec4(0.0, 0.0, xTexelC${A}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                xC${A} = xTexelC${A};
                `,A+1<u)){let x=o%2==0?v.nearestLargerEven(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                    xTexelC${A+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${A+1}.zw = vec2(0.0);
                    }
                    xTexelC${A+1}Ready = 1;
                  }
                  `,l>1&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                      xTexelC${A} = getX(batch, xR, xCOffset, d1);
                      xTexelC${A}Ready = 1;
                    }
                    `),p+=`
                  xC${A+1} = vec4(xTexelC${A}.zw, xTexelC${A+1}.xy);
                  `):x===1?p+=`
                    xC${A+1} = xTexelC${A};
                    `:p+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                      xTexelC${A+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${A+1}.zw = vec2(0.0);
                      }
                      xTexelC${A+1}Ready = 1;
                    }

                    xC${A+1} = xTexelC${A+1};
                    `}}else A<u&&(o%2==1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${A+1}Ready == 0) {
                  xTexelC${A+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${A+1}.zw = vec2(0.0);
                  }
                  xTexelC${A+1}Ready = 1;
                }

                xC${A} = vec4(xTexelC${A}.zw, xTexelC${A+1}.zw);
              `,A+1<u&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${A+1} = vec4(xTexelC${A+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                  xTexelC${A+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A+1}.zw = vec2(0.);
                  }
                  xTexelC${A+1}Ready = 1;
                }

                xC${A} = vec4(
                  xTexelC${A}.xy, xTexelC${A+1}.xy);
              `,A+1<u&&(p+=`
                  xC${A+1} = vec4(xTexelC${A}.zw, xTexelC${A+1}.zw);
                `)));A<u&&(p+=`
            wTexel = getW(r, ${A}, d1, q);
            dotProd += xC${A} * vec4(wTexel.xz, wTexel.xz);
          `,A+1<u&&(p+=`
              wTexel = getW(r, ${A+1}, d1, q);
              dotProd += xC${A+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function Lne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]),v.assert(E.eitherStridesOrDilationsAreOne(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let d=E.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),p;Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?p=new n4(d):p=new t4(d);let h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",h)}var Bne={kernelName:La,backendName:"webgl",kernelFunc:Lne},Wne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Vne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Une(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s,d=E.computeConv2DInfo(r.shape,u,o,i,l,c,!0),p=new Wne(d);return n.runWebGLProgram(p,[r,a],"float32")}var Gne={kernelName:Fh,backendName:"webgl",kernelFunc:Une};function Hne(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s,d=E.computeConv2DInfo(u,a.shape,o,i,l,c,!0),p=new Vne(d);return n.runWebGLProgram(p,[r,a],"float32")}var jne={kernelName:Ph,backendName:"webgl",kernelFunc:Hne},qne=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Xne(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=v.sizeFromShape(s.shape),o=ve({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new qne(a),l=n.runWebGLProgram(i,[o],o.dtype),c=ve({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var Kne={kernelName:Oh,backendName:"webgl",kernelFunc:Xne},Zne=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:c}=e,{top:u,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${u}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Yne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=E.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",l),u,d=new Zne(c);u=n.runWebGLProgram(d,[r,a],"float32");let p=ve({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),p}var Jne={kernelName:cd,backendName:"webgl",kernelFunc:Yne};function Qne(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=E.decodeEinsumEquation(r,a.length);E.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=E.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:A,expandDims:x}=E.getEinsumPermutation(h,l[g]),y;E.isIdentityPermutation(A)?y=a[g]:(y=qn({inputs:{x:a[g]},backend:n,attrs:{perm:A}}),f.push(y));let b=y.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(y.shape,b)||(y=ve({inputs:{x:y},backend:n,attrs:{shape:b}}),f.push(y)),p===null?p=y:(p=Ix({inputs:{a:y,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Jm({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var ese={kernelName:dd,backendName:"webgl",kernelFunc:Qne},tse="return (x >= 0.0) ? x : (exp(x) - 1.0);",nse=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,sse=at({opSnippet:tse,packedOpSnippet:nse}),rse={kernelName:Wa,backendName:"webgl",kernelFunc:sse},ase="return (b >= 1.0) ? a : a * (b + 1.0);",ose=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,ise=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vp(ose,s.shape,r.shape):new dc(ase,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},lse={kernelName:Lh,backendName:"webgl",kernelFunc:ise},use=`
  return vec4(equal(a, b));
`,cse="return float(a == b);",dse=Tn({opSnippet:cse,packedOpSnippet:use,dtype:"bool",cpuKernelImpl:XJ}),pse={kernelName:gi,backendName:"webgl",kernelFunc:dse},hse=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${E.ERF_P};
  float a1 = ${E.ERF_A1};
  float a2 = ${E.ERF_A2};
  float a3 = ${E.ERF_A3};
  float a4 = ${E.ERF_A4};
  float a5 = ${E.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,fse=at({opSnippet:hse}),mse={kernelName:fu,backendName:"webgl",kernelFunc:fse},s4="return exp(x);",r4=at({opSnippet:s4,packedOpSnippet:s4,cpuKernelImpl:KJ,dtype:"float32"}),gse={kernelName:Va,backendName:"webgl",kernelFunc:r4};function Nx(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),ve({inputs:{x:a},backend:s,attrs:{shape:i}})}var Ase={kernelName:Ai,backendName:"webgl",kernelFunc:Nx},a4="return exp(x) - 1.0;",yse=at({opSnippet:a4,packedOpSnippet:a4,cpuKernelImpl:ZJ}),xse={kernelName:yi,backendName:"webgl",kernelFunc:yse},o4=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function i4(e,t,n){let s=n.texData.get(e.dataId),r=v.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=ve({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,c=new o4("real",l,t),u=new o4("imag",l,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=jo({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let m=ve({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function bse(e){let{inputs:t,backend:n}=e,{input:s}=t;return i4(s,!1,n)}var vse={kernelName:Bh,backendName:"webgl",kernelFunc:bse},wse=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Ip(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new wse(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var kse={kernelName:mu,backendName:"webgl",kernelFunc:Ip},Ise=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Sse={kernelName:xi,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Ise(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},l4="return floor(x);",Cse=at({opSnippet:l4,packedOpSnippet:l4,cpuKernelImpl:YJ}),Tse={kernelName:Ua,backendName:"webgl",kernelFunc:Cse},Nse=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Ese=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Rse=Tn({opSnippet:Nse,packedOpSnippet:Ese,dtype:"int32"}),$se={kernelName:Ga,backendName:"webgl",kernelFunc:Rse},_se=class{constructor(e){this.variableNames=["A"];let t=Hn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},Dse=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Hn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},Fse={kernelName:bd,backendName:"webgl",kernelFunc:Pse},fc;function Pse(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[l,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],d=[c,l,a];(i||o)&&(fc==null&&(fc=document.createElement("canvas").getContext("2d")),fc.canvas.width=l,fc.canvas.height=c,fc.drawImage(r,0,0,l,c),r=fc.canvas);let p=n.makeTensorInfo(u,"int32");n.texData.get(p.dataId).usage=Vs.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);let h=Y().getBool("WEBGL_PACK")?new Dse(d):new _se(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}function Ose(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=E.convertConv2DDataFormat(u),g=E.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!1,m),A,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))A=ZC({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)A=YC({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let b=o!=null,w=i!=null,k=h==="leakyrelu",S=h?Zm(h,!1):null,N=new KC(g,b,S,w,k),R=[r,a];if(o&&R.push(o),i&&R.push(i),k){let M=n.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));R.push(M),x.push(M)}A=n.runWebGLProgram(N,R,"float32")}let y=ve({inputs:{x:A},backend:n,attrs:{shape:g.outShape}});return x.push(A),x.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var Mse={kernelName:wo,backendName:"webgl",kernelFunc:Ose};function zse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=s,f=[],m=u;m==null&&(m=[1,1]),v.assert(E.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=E.computeConv2DInfo(r.shape,a.shape,l,m,c,d,!0),A=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=p?Zm(p,A):null,y=[r,a],b=o!=null,w=i!=null,k=p==="leakyrelu";if(b&&y.push(o),w&&y.push(i),k){let M=n.makeTensorInfo([],"float32",v.createScalarValue(h,"float32"));y.push(M),f.push(M)}let S;A?S=new n4(g,b,x,w,k):S=new t4(g,b,x,w,k);let N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(S,y,"float32",N);return f.forEach(M=>n.disposeIntermediateTensorInfo(M)),R}var Lse={kernelName:ko,backendName:"webgl",kernelFunc:zse},Bse=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=vt(t.length),r=vt(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Wse(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,c,u,d]=E.prepareAndValidate(s,r),p=ve({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),h=ve({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let A=n.readSync(r.dataId),x=n.bufferSync(s),y=JJ(A,x,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,y.values)}let f=new Bse(o,d,[c,u]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=ve({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var Vse={kernelName:vi,backendName:"webgl",kernelFunc:Wse},Use=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=vt(this.rank),s=Gse(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Gse(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[r]}`);return s.join()}function u4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=n.readSync(a.dataId),u=r.shape[l];for(let b=0;b<c.length;++b){let w=c[b];v.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=E.segment_util.collectGatherOpShapeInfo(r,a,l,i),p=v.sizeFromShape(a.shape),h=[],f=ve({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=ve({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}});h.push(f),h.push(m);let g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let b=n.bufferSync(m),w=n.bufferSync(f),k=QJ(w,b,g);return h.forEach(S=>n.disposeIntermediateTensorInfo(S)),n.makeTensorInfo(d.outputShape,k.dtype,k.values)}let A=new Use(f.shape,g),x=n.runWebGLProgram(A,[f,m],f.dtype);h.push(x);let y=ve({inputs:{x},backend:n,attrs:{shape:d.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var Hse={kernelName:bi,backendName:"webgl",kernelFunc:u4},jse="return float(a > b);",qse=`
  return vec4(greaterThan(a, b));
`,Xse=Tn({opSnippet:jse,packedOpSnippet:qse,cpuKernelImpl:eQ,dtype:"bool"}),Kse={kernelName:wi,backendName:"webgl",kernelFunc:Xse},Zse="return float(a >= b);",Yse=`
  return vec4(greaterThanEqual(a, b));
`,Jse=Tn({opSnippet:Zse,packedOpSnippet:Yse,dtype:"bool",cpuKernelImpl:tQ}),Qse={kernelName:ja,backendName:"webgl",kernelFunc:Jse};function ere(e){let{inputs:t,backend:n}=e,{input:s}=t;return i4(s,!0,n)}var tre={kernelName:Wh,backendName:"webgl",kernelFunc:ere},nre="return float(!isnan(x) && !isinf(x));",sre=at({opSnippet:nre,dtype:"bool"}),rre={kernelName:gu,backendName:"webgl",kernelFunc:sre},are="return float(isinf(x));",ore=at({opSnippet:are,dtype:"bool"}),ire={kernelName:Au,backendName:"webgl",kernelFunc:ore},lre="return float(isnan(x));",ure=at({opSnippet:lre,dtype:"bool"}),cre={kernelName:yu,backendName:"webgl",kernelFunc:ure},dre="return float(a < b);",pre=`
  return vec4(lessThan(a, b));
`,hre=Tn({opSnippet:dre,packedOpSnippet:pre,cpuKernelImpl:nQ,dtype:"bool"}),fre={kernelName:Ii,backendName:"webgl",kernelFunc:hre},mre="return float(a <= b);",gre=`
  return vec4(lessThanEqual(a, b));
`,Are=Tn({opSnippet:mre,packedOpSnippet:gre,cpuKernelImpl:sQ,dtype:"bool"}),yre={kernelName:Si,backendName:"webgl",kernelFunc:Are};function xre(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=rQ(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var bre={kernelName:Vh,backendName:"webgl",kernelFunc:xre},vre=`if (x < 0.0) return NAN;
  return log(x);`,wre=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,kre=at({opSnippet:vre,packedOpSnippet:wre,cpuKernelImpl:aQ}),Ire={kernelName:Xa,backendName:"webgl",kernelFunc:kre},Sre="return log(1.0 + x);",Cre=at({opSnippet:Sre}),Tre={kernelName:xu,backendName:"webgl",kernelFunc:Cre},Nre="return float(a >= 1.0 && b >= 1.0);",Ere=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Rre=Tn({opSnippet:Nre,packedOpSnippet:Ere,dtype:"bool"}),$re={kernelName:Ci,backendName:"webgl",kernelFunc:Rre},_re="return float(!(x >= 1.0));",Dre=at({opSnippet:_re}),Fre={kernelName:bu,backendName:"webgl",kernelFunc:Dre},Pre="return float(a >= 1.0 || b >= 1.0);",Ore=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Mre=Tn({opSnippet:Pre,packedOpSnippet:Ore,dtype:"bool"}),zre={kernelName:hd,backendName:"webgl",kernelFunc:Mre},Lre=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},Bre=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},Wre=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,c=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Bre(r.shape,a,o,i,l):new Lre(r.shape,a,o,i,l);return n.runWebGLProgram(c,[r],r.dtype)},Vre={kernelName:fd,backendName:"webgl",kernelFunc:Wre},Ure=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},Gre=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s,d=new Ure(r.shape,i,l,c,u);return n.runWebGLProgram(d,[r,a,o],r.dtype)},Hre={kernelName:Uh,backendName:"webgl",kernelFunc:Gre};function jre(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=El(i,e.dtype,"max",s),c=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}function c4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=E.getAxesPermutation(c,i),d=u!=null,p=n.shouldExecuteOnCPU([r]),h=r;if(d){if(p){let y=n.texData.get(h.dataId).values,b=new Array(i);for(let S=0;S<b.length;S++)b[S]=r.shape[u[S]];let w=kx(y,r.shape,r.dtype,u,b);h=n.makeTensorInfo(b,r.dtype);let k=n.texData.get(h.dataId);k.values=w}else h=Ym(r,u,n);c=E.getInnerMostAxes(c.length,i)}E.assertAxesAreInnerMostDims("max",c,i);let[f,m]=E.computeOutAndReduceShapes(h.shape,c),g=f;o&&(g=E.expandShapeToKeepDim(f,l));let A;if(p){let y=n.texData.get(h.dataId).values,b=oQ(y,v.sizeFromShape(m),g,r.dtype);A=n.makeTensorInfo(g,r.dtype);let w=n.texData.get(A.dataId);w.values=b}else A=jre(h,m,g,n);return d&&n.disposeIntermediateTensorInfo(h),A}var qre={kernelName:Ka,backendName:"webgl",kernelFunc:c4},Xre=NC+`
  return max(a, b);
`,Kre=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Km+`
  return result;
`,Zre=Tn({opSnippet:Xre,packedOpSnippet:Kre,cpuKernelImpl:iQ}),Yre={kernelName:Za,backendName:"webgl",kernelFunc:Zre};function Jre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;ac(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(E.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=E.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return Ss({inputs:{x:r},backend:n});let d=new wp(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var Qre={kernelName:Ya,backendName:"webgl",kernelFunc:Jre};function eae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],d=E.computePool3DInfo(r.shape,a,o,u,i,c,l),p=new Sx(d,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var tae={kernelName:md,backendName:"webgl",kernelFunc:eae},nae=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,l=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},sae=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=l-1-e.padInfo.top,p=c-1-e.padInfo.left,h=i*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function rae(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],p=E.computePool3DInfo(o.shape,i,l,d,c,u),h=new Sx(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new sae(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var aae={kernelName:Hh,backendName:"webgl",kernelFunc:rae};function oae(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;ac([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,p=E.computePool2DInfo(i.shape,l,c,1,u,d),h=!0,f=new wp(p,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new nae(p),A=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),A}var iae={kernelName:Gh,backendName:"webgl",kernelFunc:oae};function lae(e,t,n,s){let r=new wp(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new wp(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var uae={kernelName:jh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;v.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let c=[1,1];v.assert(E.eitherStridesOrDilationsAreOne(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let u=E.computePool2DInfo(s.shape,r,a,c,o),[d,p]=lae(s,i,u,l);return[d,p]}};function cae(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=El(i,"float32","mean",s),c=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}var dae={kernelName:Ja,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,l=v.parseAxisParam(a,s.shape),c=l,u=E.getAxesPermutation(c,i),d=u!=null,p=o.shouldExecuteOnCPU([s]),h=[],f=s;if(d){if(p){let b=o.texData.get(f.dataId).values,w=new Array(i);for(let N=0;N<w.length;N++)w[N]=s.shape[u[N]];let k=kx(b,s.shape,s.dtype,u,w);f=o.makeTensorInfo(w,s.dtype);let S=o.texData.get(f.dataId);S.values=k}else f=Ym(s,u,o);h.push(f),c=E.getInnerMostAxes(c.length,i)}E.assertAxesAreInnerMostDims("sum",c,i);let[m,g]=E.computeOutAndReduceShapes(f.shape,c),A=m;r&&(A=E.expandShapeToKeepDim(m,l));let x=cae(f,g,A,o);for(let y of h)o.disposeIntermediateTensorInfo(y);return x}};function pae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=E.getAxesPermutation(c,i),d=r;u!=null&&(d=qn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=E.getInnerMostAxes(c.length,r.shape.length)),E.assertAxesAreInnerMostDims("min",c,i);let[p,h]=E.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=El(m,m.dtype,"min",n),A;if(o){let x=E.expandShapeToKeepDim(p,l);A=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else A=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),A}var hae={kernelName:Qa,backendName:"webgl",kernelFunc:pae},fae=NC+`
  return min(a, b);
`,mae=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Km+`
  return result;
`,gae=Tn({opSnippet:fae,packedOpSnippet:mae,cpuKernelImpl:lQ}),Aae={kernelName:eo,backendName:"webgl",kernelFunc:gae},yae=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);let s=e.length,r=vt(s),a=t.map(c=>c[0]).join(","),o=t.map((c,u)=>c[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},xae=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=vt(s),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=jn("rc",s),l=jn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=n==="reflect"?0:1,p="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${i[s-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},bae=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xae(s.shape,r,a):new yae(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},vae={kernelName:to,backendName:"webgl",kernelFunc:bae},wae=`if (b == 0.0) return NAN;
  return mod(a, b);`,kae=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Km+`
  return result;
`,Iae=Tn({opSnippet:wae,packedOpSnippet:kae}),Sae={kernelName:vu,backendName:"webgl",kernelFunc:Iae},Cae=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},Tae=`
if (a == b) {
  return 1.0;
};
return a / b;`,Nae=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,d4=Tn({opSnippet:Tae,packedOpSnippet:Nae,checkOutOfBounds:!0}),Eae={kernelName:Ba,backendName:"webgl",kernelFunc:d4},p4="return a - b;",h4=Tn({opSnippet:p4,packedOpSnippet:p4,supportsComplex:!0,cpuKernelImpl:IQ}),Rae={kernelName:Ao,backendName:"webgl",kernelFunc:h4};function f4(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=c4({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=E.expandShapeToKeepDim(i.shape,o),c=ve({inputs:{x:i},backend:n,attrs:{shape:l}}),u=h4({inputs:{a:r,b:c},backend:n}),d=r4({inputs:{x:u},backend:n}),p=Jm({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=ve({inputs:{x:p},backend:n,attrs:{shape:l}}),f=d4({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var $ae={kernelName:mo,backendName:"webgl",kernelFunc:f4};function _ae(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:f4({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],d=new Cae(c,u,a),p=[[o]],h=n.runWebGLProgram(d,[l],"int32",p);return i||n.disposeIntermediateTensorInfo(l),h}var Dae={kernelName:qh,backendName:"webgl",kernelFunc:_ae},m4="return -x;";function Fae(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=cQ(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new cc(s.shape,m4):r=new Ho(s.shape,m4),n.runWebGLProgram(r,[s],s.dtype)}var Pae={kernelName:Ti,backendName:"webgl",kernelFunc:Fae},Oae=nr.nonMaxSuppressionV3Impl;function Mae(e){E.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=Oae(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var zae={kernelName:Ei,backendName:"webgl",kernelFunc:Mae},Lae=nr.nonMaxSuppressionV4Impl;function Bae(e){E.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:h}=Lae(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Wae={kernelName:wu,backendName:"webgl",kernelFunc:Bae},Vae=nr.nonMaxSuppressionV5Impl;function Uae(e){E.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:A}=Vae(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var Gae={kernelName:Ri,backendName:"webgl",kernelFunc:Uae},Hae=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},jae=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=v.sizeFromShape(r.shape),c=new Hae(l,a,o,i),u=ve({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[u],r.dtype);n.disposeIntermediateTensorInfo(u);let p=[...r.shape,a],h=ve({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),h},qae={kernelName:_i,backendName:"webgl",kernelFunc:jae};function s0(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=kp({inputs:{input:s},backend:n}),a=s0({inputs:{x:r},backend:n}),o=n0({inputs:{input:s},backend:n}),i=s0({inputs:{x:o},backend:n}),l=jo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Ip({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Xae={kernelName:Ki,backendName:"webgl",kernelFunc:s0};function g4(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=kp({inputs:{input:s},backend:n}),a=g4({inputs:{x:r},backend:n}),o=n0({inputs:{input:s},backend:n}),i=s0({inputs:{x:o},backend:n}),l=jo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Ip({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Kae={kernelName:$i,backendName:"webgl",kernelFunc:g4};function Zae(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Nx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Nx({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=XC({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var Yae={kernelName:Di,backendName:"webgl",kernelFunc:Zae},Jae=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let s=e.length,r=vt(s),a=t.map(l=>l[0]).join(","),o=t.map((l,c)=>l[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},Qae=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=vt(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=jn("rc",s),l=jn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${c}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${d[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${u});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},A4=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(v.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return Ip({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qae(r.shape,a,o):new Jae(r.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[r],r.dtype,l)},eoe={kernelName:so,backendName:"webgl",kernelFunc:A4},toe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,noe=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Km+`
  return result;
`,soe=Tn({opSnippet:toe,packedOpSnippet:noe}),roe={kernelName:ro,backendName:"webgl",kernelFunc:soe};function aoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],c=v.parseAxisParam(a,r.shape),u=c,d=E.getAxesPermutation(u,i),p=r;d!=null&&(p=qn({inputs:{x:r},backend:n,attrs:{perm:d}}),u=E.getInnerMostAxes(u.length,i),l.push(p)),E.assertAxesAreInnerMostDims("prod",u,i);let h;if(n.shouldExecuteOnCPU([p])){let f=n.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:A}=pQ(p.shape,p.dtype,f,u);h=n.makeTensorInfo(g,A,m)}else{let[f,m]=E.computeOutAndReduceShapes(p.shape,u),g=v.sizeFromShape(m),A=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),x=Ed(r.dtype),y=El(A,x,"prod",n);h=ve({inputs:{x:y},backend:n,attrs:{shape:f}}),l.push(A),l.push(y)}if(o){l.push(h);let f=E.expandShapeToKeepDim(h.shape,c);h=ve({inputs:{x:h},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var ooe={kernelName:Fi,backendName:"webgl",kernelFunc:aoe},y4=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=hQ(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},ioe={kernelName:ku,backendName:"webgl",kernelFunc:y4},loe="return 1.0 / x;",uoe=at({opSnippet:loe}),coe={kernelName:Iu,backendName:"webgl",kernelFunc:uoe},doe=Ir+`
  return (x < 0.0) ? 0.0 : x;
`,poe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hoe=at({opSnippet:doe,packedOpSnippet:poe}),foe={kernelName:oo,backendName:"webgl",kernelFunc:hoe},moe=Ir+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,goe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Aoe=at({opSnippet:moe,packedOpSnippet:goe}),yoe={kernelName:lo,backendName:"webgl",kernelFunc:Aoe},xoe=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},boe=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function voe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new boe(r.shape,l,c,a,o):new xoe(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],"float32")}var woe={kernelName:io,backendName:"webgl",kernelFunc:voe},koe=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Ioe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new koe(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var Soe={kernelName:Kh,backendName:"webgl",kernelFunc:Ioe},Coe=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Toe=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Noe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Toe(r.shape,l,c,a,o):new Coe(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],r.dtype)}var Eoe={kernelName:Su,backendName:"webgl",kernelFunc:Noe},Roe=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function $oe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new Roe(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var _oe={kernelName:Xh,backendName:"webgl",kernelFunc:$oe},Doe=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=vt(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},Foe=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=jn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=vt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${c(s.slice())};
            if(${r}) {
              result.a = ${u(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return d(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",d(h)}function c(h){return h[n-2]="("+h[n-2]+" + 1)",d(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",d(h)}function d(h){let f=e.map((A,x)=>p(x,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function Poe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return Ss({inputs:{x:r},backend:n});let l=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Foe(r.shape,i):new Doe(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}var Ooe={kernelName:Oi,backendName:"webgl",kernelFunc:Poe},Moe=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},zoe={kernelName:Zi,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new Moe(s.shape,a),[c,u]=E.getImageCenter(o,s.shape[1],s.shape[2]),d=[[c,u,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,d)}},Loe=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Boe=at({opSnippet:Loe}),Woe={kernelName:Mi,backendName:"webgl",kernelFunc:Boe},Voe="return inversesqrt(x);",Uoe=at({opSnippet:Voe,cpuKernelImpl:fQ}),Goe={kernelName:uo,backendName:"webgl",kernelFunc:Uoe},x4=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=vt(r.length),l=vt(a.length),c="";n===1?c="i":n===2&&(c="i, j");let u=`getIndices(${c})`,d="";s===1?d="i":s===2&&(d="i, coords[1]");let p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Hoe(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=E.calculateShapes(a,r,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let h=ve({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=ve({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new x4(l,i,h.shape.length,f.shape.length,u,p),A=n.runWebGLProgram(g,[f,h,m],f.dtype),x=ve({inputs:{x:A},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(m),x}var joe={kernelName:zi,backendName:"webgl",kernelFunc:Hoe},qoe=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let c=0;c<t.length;c++)l.push(`${o[c]}`),c<e&&i.push(`${o[c]}`);s=i.join(),r=l.join()}let a=vt(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function Xoe(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new qoe(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],Ln(r.dtype,a.dtype))}var Koe={kernelName:Li,backendName:"webgl",kernelFunc:Xoe},Zoe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${E.SELU_SCALEALPHA};
  float scale = ${E.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Yoe=at({opSnippet:Zoe}),Joe={kernelName:Cu,backendName:"webgl",kernelFunc:Yoe},b4="return 1.0 / (1.0 + exp(-1.0 * x));",Qoe=at({opSnippet:b4,packedOpSnippet:b4,cpuKernelImpl:mQ}),eie={kernelName:po,backendName:"webgl",kernelFunc:Qoe},tie=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,nie=at({opSnippet:tie}),sie={kernelName:Tu,backendName:"webgl",kernelFunc:nie},rie=DC+`
  return sin(x);
`,aie=at({opSnippet:rie}),oie={kernelName:co,backendName:"webgl",kernelFunc:aie},iie=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,lie=at({opSnippet:iie}),uie={kernelName:Wi,backendName:"webgl",kernelFunc:lie},cie=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,die=at({opSnippet:cie}),pie={kernelName:Nu,backendName:"webgl",kernelFunc:die},hie=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((A,x)=>A*x),l=[[0,0]];l.push(...o);for(let A=1+a.length;A<r.shape.length;++A)l.push([0,0]);let c=[],u=A4({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=E.getReshaped(u.shape,a,i,!1),p=E.getPermuted(d.length,a.length,!1),h=E.getReshapedPermuted(u.shape,a,i,!1),f=ve({inputs:{x:u},backend:n,attrs:{shape:d}}),m=qn({inputs:{x:f},backend:n,attrs:{perm:p}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(A=>n.disposeIntermediateTensorInfo(A)),g},fie={kernelName:Vi,backendName:"webgl",kernelFunc:hie};function mie(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[d,p,h,f,m]=AQ(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var gie={kernelName:Zh,backendName:"webgl",kernelFunc:mie};function Aie(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[c,u,d]=yQ(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var yie={kernelName:Yh,backendName:"webgl",kernelFunc:Aie};function xie(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=xC(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var bie={kernelName:Jh,backendName:"webgl",kernelFunc:xie};function vie(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=xC(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var wie={kernelName:Qh,backendName:"webgl",kernelFunc:vie};function kie(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=E.calculateShapes(a,r,i),p=!1,h=new x4(c,l,r.shape.length,a.shape.length,u,[d,1],p),f=n.runWebGLProgram(h,[a,r,o],a.dtype),m=ve({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var Iie={kernelName:Ad,backendName:"webgl",kernelFunc:kie};function Sie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=E.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=pc({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var Cie={kernelName:Ui,backendName:"webgl",kernelFunc:Sie},v4="return sqrt(x);",Tie=at({opSnippet:v4,packedOpSnippet:v4,cpuKernelImpl:xQ}),Nie={kernelName:ho,backendName:"webgl",kernelFunc:Tie},Eie="return x * x;",Rie=at({opSnippet:Eie}),$ie={kernelName:Eu,backendName:"webgl",kernelFunc:Rie},w4="return (a - b) * (a - b);",_ie=Tn({opSnippet:w4,packedOpSnippet:w4}),Die={kernelName:go,backendName:"webgl",kernelFunc:_ie};function Fie({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=Ir+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Ho(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var Pie={kernelName:bo,backendName:"webgl",kernelFunc:Fie},Oie=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=vt(n.length),a=vt(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((l,c)=>(i++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${i-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function Mie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=Ot.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=ve({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=Ot.computeOutShape(x,y,b),N=pc({inputs:{x:r},backend:n,attrs:{begin:x,size:S}});w=ve({inputs:{x:N},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(N)}else if(n.shouldExecuteOnCPU([r])){let N=n.readSync(r.dataId),R=ze(r.shape,r.dtype,N),M=bQ(h,R,b,x);w=n.makeTensorInfo(f,r.dtype,M.values)}else{let N=new Oie(x,b,h);w=n.runWebGLProgram(N,[r],r.dtype)}let k=ve({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}var zie={kernelName:Gi,backendName:"webgl",kernelFunc:Mie};function Lie(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=vQ(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Bie={kernelName:yd,backendName:"webgl",kernelFunc:Lie};function Wie(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[c,u,d]=wQ(i,l,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var Vie={kernelName:ef,backendName:"webgl",kernelFunc:Wie};function Uie(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=kQ(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var Gie={kernelName:tf,backendName:"webgl",kernelFunc:Uie},Hie="return tan(x);",jie=at({opSnippet:Hie}),qie={kernelName:Hi,backendName:"webgl",kernelFunc:jie},Xie=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Kie=at({opSnippet:Xie}),Zie={kernelName:yo,backendName:"webgl",kernelFunc:Kie},Yie=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=vt(this.rank),r=Jie(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function Jie(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function k4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(p=>v.decodeString(p)):l,u=ze(r.shape,r.dtype,c),d=SQ(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Yie(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var Qie={kernelName:Zr,backendName:"webgl",kernelFunc:k4},ele=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},tle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Rl(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function I4(e){let t=1;for(;t<e;)t*=2;return t}function nle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=Y().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Y().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,u=c[c.length-1];if(n.shouldExecuteOnCPU([r])||u<i||a>l){let M=n.readSync(r.dataId),[D,$]=CQ(M,c,r.dtype,a,o);return[n.makeTensorInfo(D.shape,D.dtype,D.values),n.makeTensorInfo($.shape,$.dtype,$.values)]}if(a===0)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(u===1)return[r,Ip({attrs:{shape:c,dtype:"int32",value:0},backend:n})];let d=n.texData.get(r.dataId),p=d!==null&&d.isPacked,h=p?n.unpackTensor(r):r,m=v.sizeFromShape(c)/u,g=ve({inputs:{x:h},attrs:{shape:[m,u]},backend:n});p&&Rl(n,h);let A=I4(a),x=I4(u),y=null,b=()=>y===null?[g,g]:[g,y],w=(M,D,$)=>{let T=b(),P=new ele($),K=[[u],[y===null?1:0],[Number.NEGATIVE_INFINITY],[M],[D]],z=y;y=n.runWebGLProgram(P,T,"int32",K),Rl(n,z)};for(let M=1;M<A;M*=2){let D=M*2;for(let $=M;$>=1;$/=2)w(D,$,[m,x])}for(let M=x;M>A;M/=2){let D=b(),$=new tle([m,M/2]),P=[[u],[y===null?1:0],[A]],W=y;y=n.runWebGLProgram($,D,"int32",P),Rl(n,W);let K=A/2,z=K*2;for(let j=K;j>=1;j/=2)w(z,j,y.shape)}let k=y;y=pc({inputs:{x:y},backend:n,attrs:{begin:0,size:[m,a]}}),Rl(n,k);let S=u4({inputs:{x:g,indices:y},backend:n,attrs:{axis:1,batchDims:1}});Rl(n,g);let N=c.slice(0,-1);N.push(a),k=y,y=ve({inputs:{x:y},attrs:{shape:N},backend:n}),Rl(n,k);let R=S;return S=ve({inputs:{x:S},attrs:{shape:N},backend:n}),Rl(n,R),[S,y]}var sle={kernelName:ji,backendName:"webgl",kernelFunc:nle},rle=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function ale(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],A=new rle(d,p,o,i,l,g);return n.runWebGLProgram(A,[r,a],"float32")}var ole={kernelName:qi,backendName:"webgl",kernelFunc:ale};function ile(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;ac(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:c}=TQ(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var lle={kernelName:nf,backendName:"webgl",kernelFunc:ile};function ule(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=pc({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),A=ve({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=A,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var cle={kernelName:Xi,backendName:"webgl",kernelFunc:ule},dle=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",l="sumValue",c=Math.floor(n/4)*4,u=n%4,d=`
        sumValue += dot(values, segFilter);
    `,p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function ple(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[],c=0,u=E.getAxesPermutation([c],i),d=r;u!=null&&(d=qn({inputs:{x:r},backend:n,attrs:{perm:u}}),l.push(d),c=E.getInnerMostAxes(1,i)[0]);let p=E.segment_util.computeOutShape(d.shape,c,o),h=v.sizeFromShape([d.shape[c]]),f=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=Ed(r.dtype),g=(b,w,k,S,N)=>{let R=b.shape[0],M=b.shape[1],D=E.segment_util.segOpComputeOptimalWindowSize(M,N),$={windowSize:D,inSize:M,batchSize:R,numSegments:N},T=new dle($,w),P=n.compileAndRun(T,[b,k],S);if(l.push(P),P.shape[1]===N)return P;let W=y4({backend:n,attrs:{start:0,stop:N,step:1,dtype:"float32"}}),K=k4({inputs:{x:W},backend:n,attrs:{reps:[M/D]}});return l.push(W),l.push(K),g(P,w,K,S,N)},A=g(f,"unsortedSegmentSum",a,m,o),x=ve({inputs:{x:A},backend:n,attrs:{shape:p}}),y=x;if(u!=null){l.push(x);let b=E.getUndoAxesPermutation(u);y=qn({inputs:{x:y},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var hle={kernelName:xd,backendName:"webgl",kernelFunc:ple},fle=[Vre,Hre,Cee,Nee,$ee,Fee,Oee,Lee,Wee,Uee,qee,Kee,Jee,tte,lte,rte,dte,mte,hte,xte,vte,kte,Tte,Fte,Ote,zte,Gte,jte,Zte,Qte,iee,rne,fne,gne,lne,bne,wne,yne,Sne,Nne,$ne,Dne,Pne,zne,Gne,jne,Bne,Kne,Jne,ese,rse,lse,pse,mse,gse,Ase,xse,vse,kse,Sse,Tse,$se,Fse,Mse,Lse,Vse,Hse,Kse,Qse,oee,tre,nne,rre,ire,cre,uee,fre,yre,bre,Tre,Ire,$re,Fre,zre,qre,tae,Qre,aae,iae,uae,Yre,dae,hae,Aae,vae,Sae,Dae,fee,Pae,zae,Wae,Gae,Bte,qae,Kae,Yae,eoe,roe,dee,ooe,ioe,Wte,Eae,coe,yoe,foe,gee,woe,Soe,Eoe,_oe,Ooe,zoe,Woe,Goe,joe,Koe,Joe,eie,sie,oie,uie,_te,$ae,pie,fie,gie,yie,bie,wie,Iie,Cie,Nie,$ie,Die,Pie,zie,Bie,Vie,Gie,Rae,kee,qie,Zie,Qie,sle,ole,Iee,lle,cle,hle,Xae];for(let e of fle)pr(e);var Ur=Y();Ur.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Ur.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Ur.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Ur.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Ur.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Ur.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Ur.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Ur.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Ur.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Ur.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function mle(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function kn(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function r0(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function a0(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
`}function Ex(){return`
  ${a0()}
  fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,
          [[builtin(global_invocation_id)]] globalId : vec3<u32>,
          [[builtin(num_workgroups)]] numWorkgroups: vec3<u32>)
`}function mc(){return`
  ${a0()}
  fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,
          [[builtin(global_invocation_id)]] globalId : vec3<u32>)
`}function Ze(){return`
    ${Ex()} {
      let index = getGlobalIndex(globalId, localId, numWorkgroups);
`}function gle(e,t,n,s=!1){let r=`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;`;if(s===!0){let h=T4(t.shape),f=`
      [[block]] struct Matrix0 {
        numbers: array<${r0(t.dtype,n.isVec4)}>;
      };
      [[block]] struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `;return[S4,f,r,C4,h,n.getUserCode()].join(`
`)}let a=[],o="[[block]] struct Uniforms { NAN : f32; ";n.variableNames.forEach((h,f)=>{o+=`${h.charAt(0).toLowerCase()+h.slice(1)}Shape : ${kn(e[f].shape.length)}; `}),o+=`outShape : ${kn(t.shape.length)} ; `;let i=t.shape.length-1;o+=`
       outShapeStrides: ${kn(i)}; `,n.size&&(o+="size : i32; "),n.uniforms&&(o+=n.uniforms),o+="};",a.push(o),n.atomic?a.push(`
    [[block]] struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;
  `):a.push(`
    [[block]] struct Matrix0 {
        numbers: array<${r0(t.dtype,n.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),n.variableNames.forEach((h,f)=>{a.push(`
    [[block]] struct Matrix${1+f} {
      numbers: array<${r0(e[f].dtype,n.isVec4)}>;
    };
    [[group(0), binding(${1+f})]] var<storage, read> ${h} : Matrix${1+f};
    `)}),o!==""&&a.push(`
    [[group(0), binding(${1+n.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `),a.push(r);let[l,c]=wle(t.shape,n.dispatchLayout),u=T4(t.shape),d=[S4,a.join(`
`),C4,u,l,Ale(t.shape.length)];if(n.atomic||d.push(yle(t.shape,t.dtype,n.isVec4)),c===t.shape.length){let h=e.map(f=>xle(f,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);d.push(h)}return d.push(n.getUserCode()),d.join(`
`)}var S4=`
  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }

  fn isNanCustomVec4F32(val : vec4<f32>) -> vec4<f32> {
    var res = vec4<f32> (0.0);
    for (var i = 0u; i < 4u; i = i + 1u) {
      if (isNanCustom(val[i])) {
        res[i] = 1.0;
      } else {
        res[i] = 0.0;
      }
    }
    return res;
  }

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) &&
        all(coord < shape);
  }
  `,C4=`
  fn getFlatIndex1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }

  fn getFlatIndex2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return i32(dot(vec2<f32>(coords), vec2<f32>(f32(shape.y), 1.0)));
  }

  fn getFlatIndex3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return i32(dot(vec3<f32>(coords), vec3<f32>(f32(shape.y) * f32(shape.z), f32(shape.z), 1.0)));
  }

  fn getFlatIndex4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return i32(dot(vec4<f32>(coords), vec4<f32>(
        f32(shape.y) * f32(shape.z) * f32(shape.w), f32(shape.z) * f32(shape.w), f32(shape.w), 1.0)));
  }

  // Only used when the y/z dimension of workgroup size is 1.
  fn getGlobalIndex(globalId : vec3<u32>, localId : vec3<u32>, numWorkgroups: vec3<u32>) -> i32 {
    if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
      return i32(globalId.x);
    }

    let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
        localId.y * workGroupSizeX + localId.x;
    let workGroupID = (globalId - localId)/vec3<u32>(
        workGroupSizeX, workGroupSizeY, workGroupSizeZ);

    return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
      workGroupID.y * numWorkgroups.x + workGroupID.x) *
      (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
      localInvocationIndex);
  }
`;function Ale(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputFlatIndex(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputFlatIndex(coords : vec2<i32>) -> i32 {
          return i32(dot(vec2<f32>(coords), vec2<f32>(f32(uniforms.outShapeStrides), 1.0)));
        }
        `;break;case 3:t+=`
        fn getOutputFlatIndex(coords : vec3<i32>) -> i32 {
          return i32(dot(vec3<f32>(coords), vec3<f32>(f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), 1.0)));
        }
        `;break;case 4:t+=`
        fn getOutputFlatIndex(coords : vec4<i32>) -> i32 {
          return i32(dot(vec4<f32>(coords), vec4<f32>(
            f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), f32(uniforms.outShapeStrides.z), 1.0)));
        }
        `;break;default:v.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function yle(e,t,n){let s=e.length,r=r0(t,n),a;if(n?a=`fn setOutputFlat(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${r}(value);
    }`:a=`fn setOutputFlat(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${r}(value);
    }`,s>=2){let o=["d0","d1","d2","d3"].slice(0,s),i=kn(s);n?a+=`
      fn setOutput(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlat(flatIndex / 4, value);
      }
      fn setOutputI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlatI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutput(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlat(flatIndex, value);
      }
      fn setOutputI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlatI32(flatIndex, value);
      }
    `}return a}function xle(e,t,n,s){let r=ble(e,n);return e.shape.length<=t.length&&(r+=vle(e,t,n,s)),r}function ble(e,t){let n=e.name,s=e.shape.length,r=kn(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3"].slice(0,s),i=o.map(u=>`${u} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}.numbers[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}.numbers[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,c=`${s}D`;return s===0&&(c="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}.numbers[getFlatIndex${c}(${r}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}.numbers[getFlatIndex${c}(${r}(${o.join(",")}),
        ${l})]);
    }
   `}function vle(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"AtOutCoords",i=e.shape.length,l=t.length,c=kn(l);if(v.arraysEqual(e.shape,t)&&s)return n?`
        fn ${o}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[globalIndex]);
        }

        fn ${o}ByCoords(coords : ${c}) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[${l>1?"getOutputFlatIndex(coords)":"coords"} / 4]);
        }
        `:`
      fn ${o}ByGlobalIndex(globalIndex : i32) -> f32 {
        return f32(${r}.numbers[globalIndex]);
      }

      fn ${o}ByCoords(coords : ${c}) -> f32 {
        return f32(${r}.numbers[${l>1?"getOutputFlatIndex(coords)":"coords"}]);
      }
      `;let u=E.getBroadcastDims(e.shape,t),d=l-i,p="";if(i===0)return n?`
      fn ${o}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${o}ByCoords(coords : ${c}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${o}ByGlobalIndex(globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${o}ByCoords(coords : ${c}) -> f32{
        return get${a}();
      }
    `;l<2&&u.length>=1?p="coords = 0;":p=u.map(g=>`coords[${g+d}] = 0;`).join(`
`);let h="";if(l<2&&i>0)h="coords";else if(l>1){let g=kn(i),A=e.shape.map((x,y)=>`coords[${y+d}]`).join(", ");h=`${g}(${A})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
      fn ${o}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromFlatIndex(globalIndex);
        ${p}
        return ${r}.numbers[getFlatIndex${m}(${h}, ${f}) / 4];
      }

      fn ${o}ByCoords(coordsIn : ${c}) -> vec4<f32> {
        var coords = coordsIn;
        ${p}
        return ${r}.numbers[getFlatIndex${m}(${h}, ${f}) / 4];
      }
    `:`
    fn ${o}ByGlobalIndex(globalIndex : i32) -> f32 {
      var coords = getCoordsFromFlatIndex(globalIndex);
      ${p}
      return f32(${r}.numbers[getFlatIndex${m}(${h}, ${f})]);
    }

    fn ${o}ByCoords(coordsIn : ${c}) -> f32 {
      var coords = coordsIn;
      ${p}
      return f32(${r}.numbers[getFlatIndex${m}(${h}, ${f})]);
    }
  `}function wle(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoordsWithFlatDispatchLayout(globalId : vec3<u32>, localId : vec3<u32>, numWorkgroups: vec3<u32>) -> ${kn(a)}{
      let globalIndex = getGlobalIndex(globalId, localId, numWorkgroups);
      return getCoordsFromFlatIndex(globalIndex);
    }
    `,a];let o="",i=[n,s,r],l=0;for(let p=0;p<i.length;p++){let h=i[p];if(h.length!==0)if(l+=h.length,h.length===1)o+=`let d${h[0]} = i32(globalId[${p}]);`;else{let f=mle(h,"uniforms.outShape");o+=`var index${p} = i32(globalId[${p}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${p} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${p} - d${h[m]} * ${f[m]};`:o+=`index${p} = index${p} - d${h[m]} * ${f[m]};`}}let c=[];for(let p=0;p<l;p++)c.push(`d${p}`);let u=kn(l),d=`fn getOutputCoordsWithNonFlatDispatchLayout(globalId : vec3<u32>) -> ${u} {
    ${o}
  `;return c.length===0?d+=`return ${u}(0); }`:d+=`return ${u}(${c.join(",")}); }`,[d,l]}function T4(e){let t=e.length;if(t<=1)return"fn getCoordsFromFlatIndex(index : i32) -> i32 { return index; }";let n=v.computeStrides(e),s=kn(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromFlatIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a="var index2 = index;"+n.map((o,i)=>{let l=`let ${r[i]} = index2 / uniforms.outShapeStrides[${i}]`,c=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`;return`${l}; ${c};`}).join("");return`
    fn getCoordsFromFlatIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var N4={};Me(N4,{ArrayBufferToTypedArray:()=>E4,GPUBytesPerElement:()=>Dx,computeDispatch:()=>Oe,computeWorkGroupSizeForConv2d:()=>Rx,computeWorkGroupSizeForMatMul:()=>$x,computeWorkPerThreadForConv2d:()=>_x,flatDispatchLayout:()=>je,isWebGPUSupported:()=>Fx,tilesFitEvenlyIntoShape:()=>la});var gc=65535,$l=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function la(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]==0)}function Oe(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil($l(e.x.map(l=>t[l]))/(n[0]*s[0])),e.y?Math.ceil($l(e.y.map(l=>t[l]))/(n[1]*s[1])):1,e.z?Math.ceil($l(e.z.map(l=>t[l]))/(n[2]*s[2])):1];if(r<=gc&&a<=gc&&o<=gc)return[r,a,o];v.assert(r>gc&&e.y===void 0&&e.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r));return i>gc?(i=Math.ceil(Math.cbrt(r)),v.assert(i<=gc,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]}function Rx(e,t){let n=$l(e.x.map(r=>t[r])),s=$l(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function $x(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function _x(e,t){let n=$l(e.x.map(r=>t[r])),s=$l(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function je(e){return{x:e.map((t,n)=>n)}}function Dx(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function E4(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string"){let n=new Int32Array(e),s=new ArrayBuffer(n.length),r=new Uint8Array(s);for(let a=0;a<n.length;a++)r[a]=n[a];return r}else throw new Error(`Unknown dtype ${t}`)}function Fx(){return!!navigator.gpu}var Ut;(function(e){e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"})(Ut||(Ut={}));var kle="return a + b;",Ile="return areal * breal - aimag * bimag;",Sle="return areal * bimag + aimag * breal;",Cle="return a / b;",Tle="return a * b;",Nle="return (a - b) * (a - b);",Ele="return a - b;",Rle="return f32(a == b);",$le="return vec4<f32>(a == b);",_le="return f32(a > b);",Dle="return vec4<f32>(a > b);",Fle="return f32(a >= b);",Ple="return vec4<f32>(a >= b);",Ole="return f32(a < b);",Mle="return vec4<f32>(a < b);",zle="return f32(a <= b);",Lle="return vec4<f32>(a <= b);",Ble="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Wle=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Vle=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,R4=`
  if (isNaN.r > 0.) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g > 0.) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b > 0.) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a > 0.) {
    resultTemp.a = uniforms.NAN;
  }
  `,Ule=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Gle=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Hle="return f32(a != b);",jle="return vec4<f32>(a != b);",qle=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Xle=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = vec4<f32>(a < vec4<f32>(0.0)) * vec4<f32>(floor(b) < b);
  ${R4}
  return resultTemp;
  `,Kle="if (a < 0.0) { return b * a; }  return a;",Zle=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function $4(e,t){let n=t?R4:Vle;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = min(vec4<f32>(isNanCustomVec4F32(a)) + vec4<f32>(isNanCustomVec4F32(b)), vec4<f32>(1.0));
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function Sp(e,t){switch(e){case 0:return Tle;case 1:return kle;case 2:return Ele;case 3:return Cle;case 4:return t?$le:Rle;case 5:return t?Dle:_le;case 6:return t?Ple:Fle;case 7:return t?Mle:Ole;case 8:return t?Lle:zle;case 9:return t?Wle:Ble;case 10:return t?jle:Hle;case 11:return Nle;case 12:return t?Gle:Ule;case 14:return t?Zle:Kle;case 15:return $4("max",t);case 16:return $4("min",t);case 13:return t?Xle:qle;case 17:return Ile;case 18:return Sle;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var wt;(function(e){e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.PRELU=12]="PRELU",e[e.RELU=13]="RELU",e[e.RELU6=14]="RELU6",e[e.RSQRT=15]="RSQRT",e[e.SIN=16]="SIN",e[e.SINH=17]="SINH",e[e.SIGMOID=18]="SIGMOID",e[e.SQRT=19]="SQRT",e[e.SQUARE=20]="SQUARE",e[e.TANH=21]="TANH",e[e.TO_INT=22]="TO_INT"})(wt||(wt={}));var Yle="return abs(a);",Jle="return ceil(a);",Qle="return cos(a);",eue=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,tue="return exp(a) - 1.0;",nue="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",sue=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,rue="return exp(a);",aue="return floor(a);",oue="return a;",iue=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,lue="return f32(!(a >= 1.0));",uue="return -a;",cue="return (a < 0.0) ? b * a : a;",due="return max(a, 0.0);",pue="return clamp(a, 0.0, 6.0);",hue="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",fue=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNan(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,mue="return 1.0/sqrt(a);",gue="return 1.0 / (1.0 + exp(-1.0 * a));",Aue="return sin(a);",yue=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,xue="return sqrt(a);",bue="return a * a;",vue=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,wue="return f32(i32((a)));";function Ac(e,t){switch(e){case 0:return Yle;case 2:return Qle;case 3:return eue;case 1:return Jle;case 4:return t?sue:nue;case 5:return rue;case 6:return tue;case 7:return aue;case 8:return oue;case 9:return iue;case 10:return lue;case 11:return uue;case 12:return cue;case 13:return t?fue:due;case 14:return t?hue:pue;case 15:return mue;case 18:return gue;case 16:return Aue;case 17:return yue;case 19:return xue;case 20:return bue;case 21:return vue;case 22:return wue;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function ua(e,t=!1){if(e===null)return null;if(e==="linear")return Ac(wt.LINEAR);if(e==="relu")return Ac(wt.RELU,t);if(e==="elu")return Ac(wt.ELU,t);if(e==="relu6")return Ac(wt.RELU6,t);if(e==="prelu")return Sp(Ut.PRELU,t);if(e==="sigmoid")return Ac(wt.SIGMOID);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function _4(e,t){let n={RowPerThread:e[1],ColPerThread:e[0],TileAOuter:t[1]*e[1],TileBOuter:t[0]*e[0],TileInner:t[0]*e[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${n.TileInner/n.ColPerThread}>, ${n.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n.TileBOuter/n.ColPerThread}>, ${n.TileInner}>;

  let RowPerThread = ${n.RowPerThread};
  let ColPerThread = ${n.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${n.TileAOuter};
  let TileBOuter = ${n.TileBOuter};
  let TileInner = ${n.TileInner};

  ${mc()} {

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${n.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${t[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
}`}function kue(e){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;
  let tileSize = ${e[0]*4};
  ${mc()} {
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var Iue=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.isVec4=!0,this.vecSize=4,this.outputShape=t,this.workGroupSize=$x(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=this.workGroupSize[1]*this.workPerThread,r=this.workGroupSize[0]*this.vecSize,a=r,o=[s,a],i=[a,r];return[la(o,this.aShape.slice(1)),la(i,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let o=ua(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${o}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${o}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutput(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?_4([this.vecSize,this.workPerThread,1],this.workGroupSize):kue(this.workGroupSize)}

    `}};function Px(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${mc()} {
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function Sue(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${mc()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var D4=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=s?e[1]:e[2];this.workGroupSize=$x(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),v.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=a!=null,u=i!=null;c&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=u;let d=this.outputShape[2],p=this.transposeB?[this.outputShape[0],d,l]:[this.outputShape[0],l,d];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${s}_${r}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),v.assert(s%this.workGroupSize[0]==0&&s%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[la(r,this.aShape.slice(1)),la(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let o=ua(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutput(batch, row, col, value);
      }
      ${this.outputShape[1]>1?Px([this.workPerThread,this.workPerThread,1],this.workGroupSize):Sue(this.workGroupSize)}
    `}};function Cue(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${mc()} {
      let coords = getOutputCoordsWithNonFlatDispatchLayout(globalId);
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var Tue=class{constructor(e,t=!1,n=!1,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",s="";if(this.activation){let o=ua(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutput(batch, row, col, value);
      }
      ${Cue()}
    `}};function Nue(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${mc()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var Eue=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],v.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let o=s!=null;o&&this.variableNames.push("bias");let i=a!=null;i&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let o=ua(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
            ${o}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${o}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutput(batch, row, col, value);
        }
      }
      ${Nue(this.workGroupSize)}
    `}};function Xe(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a),i=v.sizeFromShape(o);return v.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var Rue={kernelName:Pi,backendName:"webgpu",kernelFunc:Xe};function Ox({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),A=v.sizeFromShape(m),x=v.sizeFromShape(g),b=nl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[A,d,h]:[A,h,d],k=s?[x,f,p]:[x,p,f],S=Xe({inputs:{x:e},backend:r,attrs:{shape:w}}),N=Xe({inputs:{x:t},backend:r,attrs:{shape:k}}),R=[S,N],M=Math.max(A,x),D=d%4==0&&f%4==0&&!n&&!s&&f>=32,$;h*f<=32?$=new Tue([M,h,f],n,s,a,l,o):!n&&!s&&(h<=16&&(f<=512||p>=2*f)||f<=16&&(h<=512||d>=2*h))?$=new Eue(w,k,[M,h,f],a,l,o):D?$=new Iue(w,[M,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,l,o):$=new D4(w,[M,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,s,a,l,o);let T=[S,N];a&&T.push(a),o&&T.push(o);let P=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[d]}],W=r.runWebGPUProgram($,T,e.dtype,P),K=Xe({inputs:{x:W},backend:r,attrs:{shape:b}});R.push(W);for(let z of R)r.disposeData(z.dataId);return K}function $ue(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return Ox({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var _ue={kernelName:vo,backendName:"webgpu",kernelFunc:$ue},F4=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=E.assertAndGetBroadcastShape(t,n),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Sp(this.op,!1)}
      }

      ${Ze()}
        if(index < uniforms.size) {
          let areal = getARealAtOutCoordsByGlobalIndex(index);
          let aimag = getAImagAtOutCoordsByGlobalIndex(index);
          let breal = getBRealAtOutCoordsByGlobalIndex(index);
          let bimag = getBImagAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Due=class{constructor(e,t,n,s){this.variableNames=["A","B"],this.size=!0;let r=256;this.workGroupSize=[r,1,1],this.outputShape=E.assertAndGetBroadcastShape(t,n),this.dispatchLayout=je(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAAtOutCoordsByCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBAtOutCoordsByCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Sp(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ze()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromFlatIndex(flatIndex);

              ${t}
              setOutputFlat(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},Fue=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=E.assertAndGetBroadcastShape(t,n),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${Sp(this.op,this.isVec4)}
      }
      ${Ze()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalIndex(index);
          let b = getBAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
    `}},P4=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=E.assertAndGetBroadcastShape(t,n),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${Sp(this.op,!1)}
      }
      ${Ze()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalIndex(index);
          let b = getBAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
      `}};function O4(e,t,n){if(v.arraysEqual(t,n)&&v.sizeFromShape(t)%4==0)return new Fue(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new Due(e,t,n,a):new P4(e,t,n)}function ir(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Pue={kernelName:qa,backendName:"webgpu",kernelFunc:ir};function yc(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=ir({inputs:{x:s},backend:n}),l=ir({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var Oue={kernelName:id,backendName:"webgpu",kernelFunc:yc},o0=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Ac(this.op,!1)}
      }
      ${Ze()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, unaryOperation(a));
        }
      }
      `}};function Nn({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let c=o.tensorMap.get(a.dataId),u=t(c.values,i);return o.makeTensorInfo(a.shape,i,u)}let l=new o0(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function Xn({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(n&&o.dtype==="complex64"){let d=l.tensorMap.get(o.dataId),p=l.tensorMap.get(i.dataId),h,f;if(e!==Ut.MUL)[h,f]=[[d.complexTensorInfos.real,p.complexTensorInfos.real],[d.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(g=>{let[A,x]=g,y={dataId:A.dataId,dtype:A.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:i.shape},w=O4(e,o.shape,i.shape);return l.runWebGPUProgram(w,[y,b],Ln(A.dtype,x.dtype))});else{let g=new F4(Ut.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),A=new F4(Ut.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),x=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape}];h=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(A,x,"float32")}let m=yc({inputs:{real:h,imag:f},backend:l});return l.disposeData(h.dataId),l.disposeData(f.dataId),m}let c=s||Ln(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let d=l.tensorMap.get(o.dataId).values,p=l.tensorMap.get(i.dataId).values,h=o.dtype==="string"?E.fromUint8ToStringArray(d):d,f=o.dtype==="string"?E.fromUint8ToStringArray(p):p,[m,g]=t(o.shape,i.shape,h,f,c);return l.makeTensorInfo(g,c,m)}let u=O4(e,o.shape,i.shape);return l.runWebGPUProgram(u,[o,i],c)}}var{addImpl:Mue,ceilImpl:zue,concatImpl:Lue,equalImpl:Bue,expImpl:Wue,expm1Impl:Vue,floorImpl:Uue,gatherNdImpl:Gue,gatherV2Impl:Hue,greaterEqualImpl:jue,greaterImpl:que,lessEqualImpl:Xue,lessImpl:Kue,logImpl:Zue,maxImpl:Yue,maximumImpl:Jue,minimumImpl:Que,multiplyImpl:ece,negImpl:tce,notEqualImpl:nce,prodImpl:sce,rangeImpl:rce,rsqrtImpl:ace,simpleAbsImpl:oce,sliceImpl:ice,stridedSliceImpl:lce,stringNGramsImpl:uce,subImpl:cce,tileImpl:dce,topKImpl:pce,transposeImpl:hce,uniqueImpl:R1e}=$m,fce=Nn({opType:wt.ABS,cpuKernelImpl:oce}),mce={kernelName:ci,backendName:"webgpu",kernelFunc:fce},gce=Xn({opSnippet:Ut.ADD,cpuKernelImpl:Mue,supportsComplex:!0}),Ace={kernelName:Xr,backendName:"webgpu",kernelFunc:gce},yce=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}AtOutCoordsByCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Ze()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputFlat(flatIndex, ${t});
          }
        }
      }
    `}};function xce(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return ir({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,l)=>Ln(i,l)),a=s.map(i=>i.shape),o=new yce(a);return n.runWebGPUProgram(o,s,r)}var bce={kernelName:Ea,backendName:"webgpu",kernelFunc:xce},M4=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32; infinityValue : f32;",this.size=!0;let s=[t];E.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=E.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(r,a)=>this.outputShape.length===1?r:`${r}[${a}]`,n=r=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${r}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromFlatIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Ze()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);
          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputFlatI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},vce=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${a0()}
      fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,
              [[builtin(workgroup_id)]] workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputFlat((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},wce=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=kn(this.outputShape.length),t=kce(this.newDim);return`
      ${Ze()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromFlatIndex(flatIndex);
            setOutputFlat(flatIndex, A.numbers[getFlatIndex${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function kce(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC[${s}]`;return n.join()}function _l(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];if(n.shouldExecuteOnCPU([r])){let d=o.tensorMap.get(r.dataId).values,p=hce(d,r.shape,r.dtype,a,l);return n.makeTensorInfo(l,r.dtype,p)}if(r.shape.length===2&&v.arraysEqual(a,[1,0])){let u=new vce(r.shape,a);return o.runWebGPUProgram(u,[r],r.dtype)}let c=new wce(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}var Ice={kernelName:xo,backendName:"webgpu",kernelFunc:_l};function Sce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=E.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=_l({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=E.getInnerMostAxes(o.length,l.shape.length)),E.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=new M4(l.shape,o[0],"max"),d=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var Cce={kernelName:Ra,backendName:"webgpu",kernelFunc:Sce};function Tce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=E.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=_l({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=E.getInnerMostAxes(o.length,l.shape.length)),E.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=new M4(l.shape,o[0],"min"),d=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var Nce={kernelName:lu,backendName:"webgpu",kernelFunc:Tce},z4=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Ze()}
      if (index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputFlat(index, ${t});
        }
      }
    `}},L4=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ze()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputFlat(index, value);
        }
      }
    `}};function Ece(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=E.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return ir({inputs:{x:r},backend:n});let d,p=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return u.filterHeight===1&&u.filterWidth===1?d=new L4(u):(d=new z4(u,"avg"),p.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(d,[r],r.dtype,p)}var Rce={kernelName:$a,backendName:"webgpu",kernelFunc:Ece};function $ce(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Ox({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var _ce={kernelName:_a,backendName:"webgpu",kernelFunc:$ce},Dce=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${kn(e.length)}; `,this.shaderKey="slice"}getUserCode(){let e=kn(this.rank),t=Fce(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${Mx[a]} = uniforms.start[${a}] + coords.${Mx[a]};`),`
      ${Ze()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromFlatIndex(index);
          ${n.join(`
`)}
          setOutputFlat(index, getSource(${t}));
        }
      }
    `}},Mx=["x","y","z","w","u","v"];function Fce(e){if(e===1)return"sourceLoc";if(e<=6)return Mx.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function xc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Ot.parseSliceParams(r,a,o);if(Ot.assertParamsValid(r,i,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.tensorMap.get(r.dataId),p=ice(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,p)}if(v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);let c=new Dce(i,l),u=[{type:"int32",data:i}];return n.runWebGPUProgram(c,[r],r.dtype,u)}var Pce={kernelName:Bi,backendName:"webgpu",kernelFunc:xc},Oce=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((x,y)=>x*y),l=E.getReshaped(r.shape,a,i),c=E.getPermuted(l.length,a.length),u=E.getReshapedPermuted(r.shape,a,i),d=E.getSliceBeginCoords(o,a.length),p=E.getSliceSize(u,o,a.length),h=[],f=Xe({inputs:{x:r},backend:n,attrs:{shape:l}}),m=_l({inputs:{x:f},backend:n,attrs:{perm:c}}),g=Xe({inputs:{x:m},backend:n,attrs:{shape:u}}),A=xc({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeData(x.dataId)),A},Mce={kernelName:di,backendName:"webgpu",kernelFunc:Oce},B4=Xn({opSnippet:Ut.NOT_EQUAL,dtype:"bool",cpuKernelImpl:nce}),zce={kernelName:Ni,backendName:"webgpu",kernelFunc:B4};function Cp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return ir({inputs:{x:r.complexTensorInfos.real},backend:n})}var Lce={kernelName:gd,backendName:"webgpu",kernelFunc:Cp};function Bce(e,t){let n=new o0(e.shape,wt.TO_INT),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function zx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return ir({inputs:{x:r},backend:n});let o=Ht(r.shape),i=zx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=yc({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(r.dtype==="complex64"){let o=Cp({inputs:{input:r},backend:n}),i=zx({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=ir({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Bce(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=B4({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Wce={kernelName:Da,backendName:"webgpu",kernelFunc:zx},Vce=Nn({opType:wt.CEIL,cpuKernelImpl:zue}),Uce={kernelName:Fa,backendName:"webgpu",kernelFunc:Vce},Gce=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ze()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputFlat(index, clampedValue);
        }
      }
    `}},Hce=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ze()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalIndex(index);
          if (isNanCustom(value)) {
            setOutputFlat(index, value);
            return;
          }
          setOutputFlat(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function jce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return v.sizeFromShape(r.shape)%4==0?i=new Gce(r.shape):i=new Hce(r.shape),n.runWebGPUProgram(i,[r],r.dtype,l)}var qce={kernelName:Kr,backendName:"webgpu",kernelFunc:jce},Xce=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=E.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shapes=e,this.shaderKey=`concat${e}`}getUserCode(){let e=new Array(this.shapes.length-1),t=[];if(e.length>0){e[0]=this.shapes[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+this.shapes[a][1];t.push(`if (yC < ${e[0]}){ setOutput(coords.x, coords.y, getT0(yR, yC)); }`);for(let a=1;a<e.length;a++){let o=e[a-1];t.push(`elseif (yC < ${e[a]}){ setOutput(coords.x, coords.y, getT${a}(yR, yC - ${o})); }`)}let s=e.length,r=e[e.length-1];t.push(`else { setOutput(coords.x, coords.y, getT${s}(yR, yC - ${r})); }`)}else t.push("setOutput(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ze()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function i0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return ir({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Kce={kernelName:pd,backendName:"webgpu",kernelFunc:i0};function Lx(e,t,n){let s=e[0].dtype;if(s==="complex64"){let u=e.map(m=>Cp({inputs:{input:m},backend:n})),d=e.map(m=>i0({inputs:{input:m},backend:n})),p=Lx(u,t,n),h=Lx(d,t,n),f=yc({inputs:{real:p,imag:h},backend:n});return u.forEach(m=>n.disposeData(m.dataId)),d.forEach(m=>n.disposeData(m.dataId)),n.disposeData(p.dataId),n.disposeData(h.dataId),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let u=e.map(A=>{let x=v.sizeFromShape(A.shape.slice(t));return Xe({inputs:{x:A},backend:n,attrs:{shape:[-1,x]}})}),d=u.map(A=>({vals:n.readSync(A.dataId),shape:A.shape})),p=E.computeOutShape(u.map(A=>A.shape),1),h=u[0].shape[0]===1,f=Lue(d,p,s,h),m=E.computeOutShape(e.map(A=>A.shape),t),g=n.makeTensorInfo(m,s,f);return u.forEach(A=>n.disposeData(A.dataId)),g}let{tensors2D:a,outShape:o}=Zce(e,t,n),i=new Xce(a.map(u=>u.shape)),l=n.runWebGPUProgram(i,a,a[0].dtype);a.forEach(u=>n.disposeData(u.dataId));let c=Xe({inputs:{x:l},backend:n,attrs:{shape:o}});return n.disposeData(l.dataId),c}function Zce(e,t,n){let s=E.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>Xe({inputs:{x:a},backend:n,attrs:{shape:[v.sizeFromShape(a.shape.slice(0,t)),v.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function W4(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=E.computeOutShape(t.map(c=>c.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return ir({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return E.assertParamsConsistent(l,a),Lx(i,a,n)}var Yce={kernelName:pi,backendName:"webgpu",kernelFunc:W4},Jce=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Ze()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromFlatIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputFlat(flatIndex, value);
        }
      }
    }
  `}};function V4({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=n.dataFormat==="channelsLast",u=!1,d=!1,p=c?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],h=Xe({inputs:{x:e},backend:s,attrs:{shape:[1,p,n.inChannels]}}),f=Xe({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),m=Ox({a:h,b:f,transposeA:u,transposeB:d,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=Xe({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});return s.disposeData(h.dataId),s.disposeData(f.dataId),s.disposeData(m.dataId),g}function Qce({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,strideWidth:d,strideHeight:p,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:A,dataFormat:x}=n,y=x==="channelsLast",b=l*c*u,w=m*f,k=[w,b],S=!1,N=!1,R=[],M=Xe({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),D=Xe({inputs:{x:t},backend:s,attrs:{shape:[1,b,-1]}});R.push(M),R.push(D);let $=new Jce(k,y),T=[{type:"int32",data:[h.left,h.top]},{type:"int32",data:[d,p]},{type:"int32",data:[g,A]},{type:"int32",data:[f]},{type:"int32",data:[u*l]},{type:"int32",data:[u]}],P=s.runWebGPUProgram($,[M],M.dtype,T),W=Xe({inputs:{x:P},backend:s,attrs:{shape:[1,k[0],k[1]]}});R.push(P),R.push(W);let K=[1,k[0],k[1]],z=new D4(K,[1,w,n.outChannels],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),S,N),j=K[1],Z=K[2],Q=n.outChannels,ne=[{type:"int32",data:[j]},{type:"int32",data:[Q]},{type:"int32",data:[Z]}],ae=s.runWebGPUProgram(z,[W,D],W.dtype,ne),U=y?[1,m,f,n.outChannels]:[1,n.outChannels,m,f],oe=Xe({inputs:{x:ae},backend:s,attrs:{shape:U}});R.push(ae);for(let re of R)s.disposeData(re.dataId);return oe}var U4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`,this.isVec4=!0,this.outputShape=e.outShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let a=[4,4,1];this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,a),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.hasLeakyreluAlpha=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(a),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],s=n,r=[t,s],a=[s,n],o=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],l=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[la(r,[o,l]),la(a,[l,i])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getFlatIndex4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } elseif (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } elseif (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=_4([4,4,1],this.workGroupSize),r=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getFlatIndex4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } elseif (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${r}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${r}
         }
         return vec4<f32>(0.0);
        `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,i="",l="";if(this.activation){let d=ua(this.activation,this.isVec4);if(this.hasPreluActivationWeights)i=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${d}
        }`;else{if(this.hasLeakyreluAlpha)throw i=`fn activation(a: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaAtOutCoords();
          ${d}
        }`,new Error("Leakyrelu is not supported.");i=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${d}
        }`}l="value = activation(value, outCoord);"}let c=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
        ${i}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${o}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${c}
            ${l}
            setOutput(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}},G4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Rx(this.dispatchLayout,this.outputShape),this.elementsPerThread=_x(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;v.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],i=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[la(s,[a,i]),la(r,[i,o])]}getUserCode(){let e=Px(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,s=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,r="",a="";if(this.activation){let l=ua(this.activation,!1);this.hasPreluActivationWeights?r=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${l}
                }`:r=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,a="value = activation(value, outCoord);"}let o=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
    ${r}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${s}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${o}
      ${a}
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},H4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=ua(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutput(batch, row, col, chan, value);
        }
      }

      ${Ex()} {
        let coords = getOutputCoordsWithFlatDispatchLayout(globalId, localId, numWorkgroups);
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function ede(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=n,d=E.convertConv2DDataFormat(l),p=E.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d);if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))return V4({x:r,filter:a,convInfo:p,backend:s});if(Y().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&r.shape[0]===1)return Qce({x:r,filter:a,convInfo:p,backend:s});let h,f=[p.padInfo.top,p.padInfo.left],m=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]}],g=Y().getBool("WEBGPU_USE_NAIVE_CONV2D");if(g?h=new H4(p):(p.inChannels%4==0||p.inChannels===3&&p.padInfo.type==="VALID")&&p.outChannels%4==0&&p.outChannels>=64?h=new U4(p):h=new G4(p),!g){let A=p.outShape[1]*p.outShape[2],x=p.outShape[3],y=p.filterHeight*p.filterWidth*p.inShape[3];m.push({type:"int32",data:[A]},{type:"int32",data:[x]},{type:"int32",data:[y]})}return s.runWebGPUProgram(h,[r,a],r.dtype,m)}var tde={kernelName:Pa,backendName:"webgpu",kernelFunc:ede},nde=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Rx(this.dispatchLayout,this.outputShape),this.elementsPerThread=_x(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getFlatIndex4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }

    ${Px(this.elementsPerThread,this.workGroupSize)}
  `}},sde=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Ze()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputFlat(index, dotProd);
      }
    }
  `}};function rde(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=E.convertConv2DDataFormat(c),p=E.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}],f;if(Y().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new sde(p);else{f=new nde(p);let m=p.inShape[1]*p.inShape[2],g=p.inShape[3],A=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[A]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var ade={kernelName:Oa,backendName:"webgpu",kernelFunc:rde},ode=Nn({opType:wt.COS}),ide={kernelName:Ma,backendName:"webgpu",kernelFunc:ode},lde=Nn({opType:wt.COSH}),ude={kernelName:za,backendName:"webgpu",kernelFunc:lde},cde=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Ze()}
      if (index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputFlat(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputFlat(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputFlat(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputFlat(index, newValue);
        }
      }
    }
    `}},dde=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new cde(r.shape[3],a.shape,i,l),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(u,[r,a,o],"float32",d)},pde={kernelName:fi,backendName:"webgpu",kernelFunc:dde},hde=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Ze()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputFlat(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function fde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=[{type:"int32",data:[a]}],g=new hde(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var mde={kernelName:mi,backendName:"webgpu",kernelFunc:fde},j4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=ua(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${e}

      ${a0()}
      fn main([[builtin(global_invocation_id)]] globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutput(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},q4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.activation}_${this.convInfo.outChannels/this.convInfo.inChannels}`}getUserCode(){let e=this.convInfo.outChannels/this.convInfo.inChannels,t="",n="";if(this.activation){let a=ua(this.activation,!1);this.hasPreluActivation?t=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${a}
        }`:t=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${a}
          }
        `,n="dotProd = activation(dotProd, coords);"}let s=this.addBias?"dotProd = dotProd + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${t}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutput(batch, row, col, chan, value);
        }
      }

      ${Ex()} {
        let coords = getOutputCoordsWithFlatDispatchLayout(globalId, localId, numWorkgroups);
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / ${e};
        let q = d2 - d1 * ${e};

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + ${this.convInfo.filterHeight} * uniforms.dilation[0];
        let inputColEnd = inputColStart + ${this.convInfo.filterWidth} * uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] && inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${s}
        ${n}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function gde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]);let d=E.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),p;d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4==0?p=new j4(d):p=new q4(d);let h=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}];return n.runWebGPUProgram(p,[r,a],r.dtype,h)}var Ade={kernelName:La,backendName:"webgpu",kernelFunc:gde},X4=Xn({opSnippet:Ut.MUL,cpuKernelImpl:ece,supportsComplex:!0}),yde={kernelName:no,backendName:"webgpu",kernelFunc:X4},xde=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=E.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } elseif (!isNanCustom(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputFlat(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputFlat(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromFlatIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ze()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x.numbers[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function Tp(e,t,n,s,r){let a=e.shape.length,o=[],i=v.parseAxisParam(t,e.shape),l=i,c=E.getAxesPermutation(l,a),u=e;c!=null&&(u=_l({inputs:{x:e},attrs:{perm:c},backend:r}),l=E.getInnerMostAxes(l.length,a),o.push(u)),E.assertAxesAreInnerMostDims(s,l,a);let[d,p]=E.computeOutAndReduceShapes(u.shape,l),h=d;n&&(h=E.expandShapeToKeepDim(d,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([u])){let m=r.tensorMap.get(u.dataId).values;switch(s){case"max":let g=Yue(m,v.sizeFromShape(p),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:A,outShape:x,outDtype:y}=sce(u.shape,u.dtype,m,l);f=r.makeTensorInfo(x,y,A);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=v.sizeFromShape(p),A=v.sizeFromShape(u.shape)/m,x={windowSize:m,inSize:m,batchSize:A,outSize:1},y=s==="mean"?"float32":Ed(e.dtype),b=[{type:"int32",data:[m]}],w=new xde(x,s),k=r.runWebGPUProgram(w,[u],y,b);o.push(k),f=Xe({inputs:{x:k},attrs:{shape:h},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function Bx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Tp(r,a,o,"sum",n)}var bde={kernelName:fo,backendName:"webgpu",kernelFunc:Bx};function vde(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=E.decodeEinsumEquation(r,a.length);E.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=E.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:A,expandDims:x}=E.getEinsumPermutation(h,l[g]),y;E.isIdentityPermutation(A)?y=a[g]:(y=_l({inputs:{x:a[g]},backend:n,attrs:{perm:A}}),f.push(y));let b=y.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(y.shape,b)||(y=Xe({inputs:{x:y},backend:n,attrs:{shape:b}}),f.push(y)),p===null?p=y:(p=X4({inputs:{a:y,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Bx({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeData(m.dataId);return p}var wde={kernelName:dd,backendName:"webgpu",kernelFunc:vde},kde=Nn({opType:wt.ELU}),Ide={kernelName:Wa,backendName:"webgpu",kernelFunc:kde},Sde=Xn({opSnippet:Ut.EQUAL,dtype:"bool",cpuKernelImpl:Bue}),Cde={kernelName:gi,backendName:"webgpu",kernelFunc:Sde},K4=Nn({opType:wt.EXP,cpuKernelImpl:Wue,dtype:"float32"}),Tde={kernelName:Va,backendName:"webgpu",kernelFunc:K4};function Wx(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),Xe({inputs:{x:a},backend:s,attrs:{shape:i}})}var Nde={kernelName:Ai,backendName:"webgpu",kernelFunc:Wx},Ede=Nn({opType:wt.EXPM1,cpuKernelImpl:Vue}),Rde={kernelName:yi,backendName:"webgpu",kernelFunc:Ede},$de=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ze()}
      if (index < uniforms.size) {
        setOutputFlat(index, uniforms.value);
      }
    }
  `}};function bc(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new $de(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var _de={kernelName:mu,backendName:"webgpu",kernelFunc:bc},Dde=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ze()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputFlat(index, outputValue);
        }
      }
    `}},Fde={kernelName:xi,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Dde(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},Pde=Nn({opType:wt.FLOOR,cpuKernelImpl:Uue}),Ode={kernelName:Ua,backendName:"webgpu",kernelFunc:Pde},Mde=Xn({opSnippet:Ut.INT_DIV,dtype:"int32"}),zde={kernelName:Ga,backendName:"webgpu",kernelFunc:Mde},Lde=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((o,i)=>({binding:i,resource:o}))})},Z4=(e,t,n,s,r,a=!1)=>{let o={dtype:r.dtype,shape:r.shape},i=gle(s,o,t,a),l=e.createShaderModule({code:i});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"}})};function Y4(e,t,n,s="",r=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(o=>o.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r}function J4(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:o}=s,i=v.sizeFromShape(r),l=v.computeStrides(r),c=n.makeTensorInfo(r,"int32"),u=n.getFromPixelsProgram(a?"import":"copyExternal");u.updateOutputShape(r);let d=[c.shape],p=[c.dtype,a?"import":"copyExternal"],h=Y4(u,d,p),f=u.getLayout(n.device),m=n.getAndSavePipeline(h,()=>Z4(n.device,u,f.pipelineLayout,[],c,!0));u.setPipeline(m),a||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:u.makeInputTexture(n.device,r[1],r[0])},[r[1],r[0]]);let g=n.tensorMap.get(c.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let A=[i,o,...l,...u.dispatch];u.setUniform(n.device,A);let x;if(a){let y={source:t};x=n.device.importExternalTexture(y)}else x=u.inputTexture.createView();return n.runFromPixelsProgram(u,g.bufferInfo.buffer,f,x,c.dataId),c}var Bde={kernelName:bd,backendName:"webgpu",kernelFunc:Wde},vc;function Wde(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,c=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[u,d]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[d,u,a];if(Y().getBool("WEBGPU_USE_IMPORT")&&o)return J4({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!0});if((o||i)&&(vc==null&&(vc=document.createElement("canvas").getContext("2d")),vc.canvas.width=u,vc.canvas.height=d,vc.drawImage(r,0,0,u,d),r=vc.canvas),c||l||o||i)return J4({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!1});let h=r.data,f=h;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let A=h.length,x=0;for(let y=0;y<A;y++)y%4<a&&(f[x++]=h[y])}let m=n.makeTensorInfo(p,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}var Vde=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],E.assertAndGetBroadcastShape(e,t),E.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(E.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(E.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetAtOutCoordsByGlobalIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleAtOutCoordsByGlobalIndex(index)"),`
      ${Ze()}
        if (index < uniforms.size)
        {
          let xValue = getXAtOutCoordsByGlobalIndex(index);
          let meanValue = getMeanAtOutCoordsByGlobalIndex(index);
          let varianValue = getVarianceAtOutCoordsByGlobalIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputFlat(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},Ude={kernelName:Ha,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,c=n,u=[s,o,i],d=null;a!=null&&(d=a.shape,u.push(a));let p=null;r!=null&&(p=r.shape,u.push(r));let h=new Vde(s.shape,o.shape,i.shape,d,p),f=[{type:"float32",data:[l]}];return c.runWebGPUProgram(h,u,s.dtype,f)}};function Gde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=E.convertConv2DDataFormat(u),g=E.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!1,m),A=o!=null,x=i!=null,y;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))return V4({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});let b=Y().getBool("WEBGPU_USE_NAIVE_CONV2D"),w=g.inChannels%4==0&&g.outChannels%4==0,k=[g.padInfo.top,g.padInfo.left],S=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...k]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(b)y=new H4(g,A,h,x);else{w?y=new U4(g,A,h,x):y=new G4(g,A,h,x);let R=g.outShape[1]*g.outShape[2],M=g.outShape[3],D=g.filterHeight*g.filterWidth*g.inShape[3];S.push({type:"int32",data:[R]},{type:"int32",data:[M]},{type:"int32",data:[D]})}let N=[r,a];return A&&N.push(o),x&&N.push(i),n.runWebGPUProgram(y,N,r.dtype,S)}var Hde={kernelName:wo,backendName:"webgpu",kernelFunc:Gde};function jde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p}=s,h=u;h==null&&(h=[1,1]),v.assert(E.eitherStridesOrDilationsAreOne(l,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`);let f=E.computeConv2DInfo(r.shape,a.shape,l,h,c,d,!0),m=[r,a],g=o!=null,A=i!=null;g&&m.push(o),A&&m.push(i);let x;f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4==0?x=new j4(f,g,p,A):x=new q4(f,g,p,A);let y=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}];return n.runWebGPUProgram(x,m,"float32",y)}var qde={kernelName:ko,backendName:"webgpu",kernelFunc:jde},Xde=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${kn(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Ze()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputFlat(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Kde(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,c,u,d]=E.prepareAndValidate(s,r),p=Xe({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),h=Xe({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let x=n.readSync(r.dataId),y=n.bufferSync(s),b=Gue(x,y,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,b.values)}let f=new Xde(o,[c,u]),m=[{type:"int32",data:[o]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[h,p],h.dtype,m),A=Xe({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),A}var Zde={kernelName:vi,backendName:"webgpu",kernelFunc:Kde},Yde=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=Jde(this.aShape,"i32");return`
      ${Ze()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromFlatIndex(index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Jde(e,t="int"){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push(`${t}(getIndices(resRC.x, resRC.z))`):s.push(`${n[r]}`);return s.join()}function Q4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=E.segment_util.collectGatherOpShapeInfo(r,a,l,i),u=v.sizeFromShape(a.shape),d=[],p=Xe({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=Xe({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(p),d.push(h);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let y=n.tensorMap.get(h.dataId).values,b=ze(h.shape,h.dtype,y),k=n.tensorMap.get(p.dataId).values,S=ze(p.shape,p.dtype,k),N=Hue(S,b,f);return d.forEach(R=>n.disposeData(R.dataId)),n.makeTensorInfo(c.outputShape,N.dtype,N.values)}let m=new Yde(p.shape,f),g=n.runWebGPUProgram(m,[p,h],p.dtype);d.push(g);let A=Xe({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(x=>n.disposeData(x.dataId)),A}var Qde={kernelName:bi,backendName:"webgpu",kernelFunc:Q4},epe=Xn({opSnippet:Ut.GREATER,cpuKernelImpl:que,dtype:"bool"}),tpe={kernelName:wi,backendName:"webgpu",kernelFunc:epe},npe=Xn({opSnippet:Ut.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:jue}),spe={kernelName:ja,backendName:"webgpu",kernelFunc:npe},rpe=Xn({opSnippet:Ut.LESS,dtype:"bool",cpuKernelImpl:Kue}),ape={kernelName:Ii,backendName:"webgpu",kernelFunc:rpe},ope=Xn({opSnippet:Ut.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Xue}),ipe={kernelName:Si,backendName:"webgpu",kernelFunc:ope},lpe=Nn({opType:wt.LOG,cpuKernelImpl:Zue}),upe={kernelName:Xa,backendName:"webgpu",kernelFunc:lpe},cpe=Xn({opSnippet:Ut.LOGICAL_AND,dtype:"bool"}),dpe={kernelName:Ci,backendName:"webgpu",kernelFunc:cpe},ppe=Nn({opType:wt.LOGICAL_NOT}),hpe={kernelName:bu,backendName:"webgpu",kernelFunc:ppe};function e6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return Tp(r,a,o,"max",n)}var fpe={kernelName:Ka,backendName:"webgpu",kernelFunc:e6},mpe=Xn({opSnippet:Ut.MAX,cpuKernelImpl:Jue}),gpe={kernelName:Za,backendName:"webgpu",kernelFunc:mpe};function Ape(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=E.computePool2DInfo(r.shape,a,o,c,i,l),d,p=[];if(u.filterHeight===1&&u.filterWidth===1){if(v.arraysEqual(u.inShape,u.outShape))return ir({inputs:{x:r},backend:n});d=new L4(u),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]})}else d=new z4(u,"max"),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]});return n.runWebGPUProgram(d,[r],r.dtype,p)}var ype={kernelName:Ya,backendName:"webgpu",kernelFunc:Ape};function xpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return Tp(r,o,a,"mean",n)}var bpe={kernelName:Ja,backendName:"webgpu",kernelFunc:xpe};function vpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Tp(r,a,o,"min",n)}var wpe={kernelName:Qa,backendName:"webgpu",kernelFunc:vpe},kpe=Xn({opSnippet:Ut.MIN,cpuKernelImpl:Que}),Ipe={kernelName:eo,backendName:"webgpu",kernelFunc:kpe},Spe=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,c)=>`uniforms.pad${c}[0]`).join(","),n=this.xShape.map((l,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=kn(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ze()}
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${n});
          var outC = getCoordsFromFlatIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } elseif(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputFlat(index, getX(${i}));
        }
      }
    `}},Cpe={kernelName:to,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new Spe(s.shape,r,a);return o.runWebGPUProgram(l,[s],s.dtype,i)}};function Tpe(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=tce(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new o0(s.shape,wt.NEG);return n.runWebGPUProgram(r,[s],s.dtype)}var Npe={kernelName:Ti,backendName:"webgpu",kernelFunc:Tpe};function Epe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=nr.nonMaxSuppressionV3Impl(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Rpe={kernelName:Ei,backendName:"webgpu",kernelFunc:Epe};function $pe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:A}=nr.nonMaxSuppressionV5Impl(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var _pe={kernelName:Ri,backendName:"webgpu",kernelFunc:$pe};function l0(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Cp({inputs:{input:s},backend:n}),a=l0({inputs:{x:r},backend:n}),o=i0({inputs:{input:s},backend:n}),i=l0({inputs:{x:o},backend:n}),l=yc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return bc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Dpe={kernelName:Ki,backendName:"webgpu",kernelFunc:l0};function t6(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Cp({inputs:{input:s},backend:n}),a=t6({inputs:{x:r},backend:n}),o=i0({inputs:{input:s},backend:n}),i=l0({inputs:{x:o},backend:n}),l=yc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return bc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Fpe={kernelName:$i,backendName:"webgpu",kernelFunc:t6};function Ppe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Wx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Wx({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=W4({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var Ope={kernelName:Di,backendName:"webgpu",kernelFunc:Ppe},Mpe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=kn(e),n=this.xShape.map((u,d)=>`uniforms.pad${d}[0]`).join(","),s=this.xShape.map((u,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ze()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromFlatIndex(index);

          if (${o} || ${i}) {
            setOutputFlat(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputFlat(index, getX(${l}));
          }
        }
      }
    `}},n6=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(c=>v.arraysEqual(c,[0,0])))return ir({inputs:{x:r},backend:n});if(v.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return bc({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(c=>i.push({type:"int32",data:[c[0],c[1]]}));let l=new Mpe(r.shape,a);return n.runWebGPUProgram(l,[r],r.dtype,i)},zpe={kernelName:so,backendName:"webgpu",kernelFunc:n6},Lpe=Xn({opSnippet:Ut.POW}),Bpe={kernelName:ro,backendName:"webgpu",kernelFunc:Lpe};function Wpe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new P4(Ut.PRELU,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var Vpe={kernelName:ao,backendName:"webgpu",kernelFunc:Wpe};function Upe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Tp(r,a,o,"prod",n)}var Gpe={kernelName:Fi,backendName:"webgpu",kernelFunc:Upe},Hpe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=rce(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},jpe={kernelName:ku,backendName:"webgpu",kernelFunc:Hpe},s6=Xn({opSnippet:Ut.DIV}),qpe={kernelName:Ba,backendName:"webgpu",kernelFunc:s6},Xpe=Nn({opType:wt.RELU}),Kpe={kernelName:oo,backendName:"webgpu",kernelFunc:Xpe},Zpe=Nn({opType:wt.RELU6}),Ype={kernelName:lo,backendName:"webgpu",kernelFunc:Zpe},Jpe=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=s,this.halfPixelCenters=r,this.shaderKey=`resizeBilinear_${s}_${r}_${this.outputShape[1]>1}_${this.outputShape[2]>1}`}getUserCode(){let e=this.alignCorners&&this.outputShape[1]>1,t=this.alignCorners&&this.outputShape[2]>1;return`
      ${Ze()}
        if (index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${e?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${t?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${e?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${t?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${this.halfPixelCenters?"(vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC - vec2<f32>(0.5)":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC"};

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputFlat(index, newValue);
        }
      }
    `}};function Qpe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[l,c]=o,u=new Jpe(r.shape,l,c,a,i);return n.runWebGPUProgram(u,[r],"float32")}var ehe={kernelName:io,backendName:"webgpu",kernelFunc:Qpe},the=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=s,this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${s}_${this.outputShape[1]>1}_${this.outputShape[2]>1}_${r}`}getUserCode(){let e=this.alignCorners?"0.5":"0.0",t;this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC";let n=this.alignCorners&&this.outputShape[1]>1,s=this.alignCorners&&this.outputShape[2]>1;return`
      ${Ze()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${n?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${s?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${n?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${s?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${e})));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputFlat(index, newValue);
        }
      }
    `}};function nhe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=new the(r.shape,l,c,a,o);return n.runWebGPUProgram(u,[r],r.dtype)}var she={kernelName:Su,backendName:"webgpu",kernelFunc:nhe},rhe=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ze()}

          if (index < uniforms.size) {
            let coords = getCoordsFromFlatIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputFlat(index, outputValue);
          }
        }
      `}},ahe={kernelName:Zi,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new rhe(s.shape,a),[c,u]=E.getImageCenter(o,s.shape[1],s.shape[2]),d=[{type:"float32",data:[c]},{type:"float32",data:[u]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a}),i.runWebGPUProgram(l,[s],s.dtype,d)}},ohe=Nn({opType:wt.RSQRT,cpuKernelImpl:ace}),ihe={kernelName:uo,backendName:"webgpu",kernelFunc:ohe},lhe=class{constructor(e,t,n,s,r,a,o){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.dispatchLayout=je(e),this.dispatch=Oe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${o}`;let i=kn(r.length);this.uniforms=`sliceDim : i32; strides: ${i}; size: i32;`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="",a="";this.updatesRank===1?(s="coords[0]",r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(s="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${s})`,i=this.type==="int32"?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${Ze()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${o};
          let flatIndex = getOutputFlatIndex(${r});

         ${i}
        }
      }`}};function uhe(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=E.calculateShapes(a,r,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let h=Xe({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=Xe({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=f.dtype,g=bc({backend:n,attrs:{shape:p,value:0,dtype:m}}),A=v.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:u},{type:"int32",data:[A]}],y=new lhe(f.shape,i,h.shape.length,f.shape.length,u,p,m),b=n.runWebGPUProgram(y,[f,h],m,x,g),w=Xe({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),w}var che={kernelName:zi,backendName:"webgpu",kernelFunc:uhe},dhe=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${Ze()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromFlatIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputFlat(index, getA(${t}));
          } else {
            setOutputFlat(index, getB(${t}));
          }
        }
      }
    `}};function phe(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new dhe(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],Ln(r.dtype,a.dtype))}var hhe={kernelName:Li,backendName:"webgpu",kernelFunc:phe},fhe=Nn({opType:wt.SIGMOID}),mhe={kernelName:po,backendName:"webgpu",kernelFunc:fhe},ghe=Nn({opType:wt.SIN}),Ahe={kernelName:co,backendName:"webgpu",kernelFunc:ghe},yhe=Nn({opType:wt.SINH}),xhe={kernelName:Wi,backendName:"webgpu",kernelFunc:yhe},r6=Xn({opSnippet:Ut.SUB,cpuKernelImpl:cce,supportsComplex:!0}),bhe={kernelName:Ao,backendName:"webgpu",kernelFunc:r6};function vhe(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=e6({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=E.expandShapeToKeepDim(i.shape,o),c=Xe({inputs:{x:i},backend:n,attrs:{shape:l}}),u=r6({inputs:{a:r,b:c},backend:n}),d=K4({inputs:{x:u},backend:n}),p=Bx({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=Xe({inputs:{x:p},backend:n,attrs:{shape:l}}),f=s6({inputs:{a:d,b:h},backend:n});return n.disposeData(i.dataId),n.disposeData(c.dataId),n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(h.dataId),f}var whe={kernelName:mo,backendName:"webgpu",kernelFunc:vhe},khe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((A,x)=>A*x),l=[[0,0]];l.push(...o);for(let A=1+a.length;A<r.shape.length;++A)l.push([0,0]);let c=[],u=n6({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=E.getReshaped(u.shape,a,i,!1),p=E.getPermuted(d.length,a.length,!1),h=E.getReshapedPermuted(u.shape,a,i,!1),f=Xe({inputs:{x:u},backend:n,attrs:{shape:d}}),m=_l({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Xe({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(A=>n.disposeData(A.dataId)),g},Ihe={kernelName:Vi,backendName:"webgpu",kernelFunc:khe},She=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=a,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${s}_${i}`;let l=kn(r.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let c="";n===1?c="i":n===2&&(c="i, j"),this.indicesSnippet=`getIndices(${c})`;let u="";s===1?u="i":s===2&&(u="i, coords[1]"),this.updatesSnippet=`getUpdates(${u})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Ze()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromFlatIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputFlat(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function Che(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=E.calculateShapes(a,r,i),p=!1,h=[{type:"int32",data:[c]},{type:"int32",data:[l]},{type:"int32",data:u}],f=new She(c,l,r.shape.length,a.shape.length,u,[d,1],p),m=n.runWebGPUProgram(f,[a,r,o],a.dtype,h),g=Xe({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),g}var The={kernelName:Ad,backendName:"webgpu",kernelFunc:Che};function Nhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=E.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=xc({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var Ehe={kernelName:Ui,backendName:"webgpu",kernelFunc:Nhe},Rhe=Nn({opType:wt.SQRT}),$he={kernelName:ho,backendName:"webgpu",kernelFunc:Rhe},_he={kernelName:Eu,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new o0(n.shape,wt.SQUARE);return s.runWebGPUProgram(r,[n],n.dtype)}},Dhe=Xn({opSnippet:Ut.SQUARED_DIFFERENCE}),Fhe={kernelName:go,backendName:"webgpu",kernelFunc:Dhe},Phe=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=kn(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Ze()}
         if (index < uniforms.size) {
           let coords = getCoordsFromFlatIndex(index);
           setOutputFlat(index, getX(${t}));
         }
       }
     `}};function Ohe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=Ot.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=Xe({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Ot.computeOutShape(x,y,b),S=xc({inputs:{x:r},backend:n,attrs:{begin:x,size:k}});w=Xe({inputs:{x:S},backend:n,attrs:{shape:f}}),n.disposeData(S.dataId)}else if(n.shouldExecuteOnCPU([r])){let S=n.readSync(r.dataId),N=ze(r.shape,r.dtype,S),R=lce(h,N,b,x);w=n.makeTensorInfo(f,r.dtype,R.values)}else{let S=new Phe(h),N=[{type:"int32",data:x},{type:"int32",data:b}],R=n.runWebGPUProgram(S,[r],r.dtype,N);w=Xe({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeData(R.dataId)}return w}var Mhe={kernelName:Gi,backendName:"webgpu",kernelFunc:Ohe};function zhe(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=uce(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Lhe={kernelName:yd,backendName:"webgpu",kernelFunc:zhe},Bhe=Nn({opType:wt.TANH}),Whe={kernelName:yo,backendName:"webgpu",kernelFunc:Bhe},Vhe=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Uhe(this.rank,"uniforms.");return`
      ${Ze()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromFlatIndex(index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Uhe(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function Ghe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(p=>v.decodeString(p)):l,u=ze(r.shape,r.dtype,c),d=dce(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Vhe(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var Hhe={kernelName:Zr,backendName:"webgpu",kernelFunc:Ghe},jhe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap"}getUserCode(){return`
        ${Ze()}
          if (index < uniforms.size) {
            let outC = getCoordsFromFlatIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}},qhe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return`
        ${Ze()}
          if (index < uniforms.size) {
            let outC = getCoordsFromFlatIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}};function wc(e,t){t!==null&&e.disposeData(t.dataId)}function a6(e){let t=1;for(;t<e;)t*=2;return t}function Xhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=r.shape,l=i[i.length-1];if(n.shouldExecuteOnCPU([r])){let w=n.readSync(r.dataId),[k,S]=pce(w,i,r.dtype,a,o);return[n.makeTensorInfo(k.shape,k.dtype,k.values),n.makeTensorInfo(S.shape,S.dtype,S.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(l===1)return[r,bc({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let u=v.sizeFromShape(i)/l,d=Xe({inputs:{x:r},attrs:{shape:[u,l]},backend:n}),p=a6(a),h=a6(l),f=null,m=()=>f===null?[d,d]:[d,f],g=(w,k,S)=>{let N=m(),R=new jhe(S),D=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[w]},{type:"int32",data:[k]}],$=f;f=n.runWebGPUProgram(R,N,"int32",D),wc(n,$)};for(let w=1;w<p;w*=2){let k=w*2;for(let S=w;S>=1;S/=2)g(k,S,[u,h])}for(let w=h;w>p;w/=2){let k=m(),S=new qhe([u,w/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[p]}],M=f;f=n.runWebGPUProgram(S,k,"int32",R),wc(n,M);let D=p/2,$=D*2;for(let T=D;T>=1;T/=2)g($,T,f.shape)}let A=f;f=xc({inputs:{x:f},backend:n,attrs:{begin:0,size:[u,a]}}),wc(n,A);let x=Q4({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});wc(n,d);let y=i.slice(0,-1);y.push(a),A=f,f=Xe({inputs:{x:f},attrs:{shape:y},backend:n}),wc(n,A);let b=x;return x=Xe({inputs:{x},attrs:{shape:y},backend:n}),wc(n,b),[x,f]}var Khe={kernelName:ji,backendName:"webgpu",kernelFunc:Xhe},Zhe=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ze()}
            if (index < uniforms.size) {
              let coords = getCoordsFromFlatIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputFlat(index, outputValue);
            }
          }
        `}};function Yhe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],A=new Zhe(g),x=o==="nearest"?1:2,y;switch(i){case"constant":y=1;break;case"reflect":y=2;break;case"wrap":y=3;break;case"nearest":y=4;break;default:y=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[y]},{type:"float32",data:[l]}];return n.runWebGPUProgram(A,[r,a],"float32",b)}var Jhe={kernelName:qi,backendName:"webgpu",kernelFunc:Yhe};function Qhe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=xc({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),A=Xe({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=A,d.push(g)}return d.forEach(m=>n.disposeData(m.dataId)),f}var efe={kernelName:Xi,backendName:"webgpu",kernelFunc:Qhe},tfe=[_ue,mce,Ace,bce,Cce,Nce,Rce,_ce,Mce,Wce,Uce,qce,Oue,Yce,tde,ade,ide,ude,pde,mde,Ade,wde,Ide,Cde,Nde,Tde,Rde,_de,Fde,Bde,Ode,zde,Ude,Hde,qde,Zde,Qde,tpe,spe,Pue,Kce,ape,ipe,upe,dpe,hpe,fpe,gpe,ype,bpe,wpe,Ipe,Cpe,yde,Npe,Rpe,_pe,zce,Fpe,Ope,zpe,Vpe,Gpe,Bpe,jpe,Lce,qpe,Kpe,Ype,Rue,ehe,she,ahe,ihe,che,hhe,mhe,Ahe,xhe,Pce,Mhe,Lhe,whe,Ihe,Ehe,The,$he,_he,Fhe,bhe,bde,Whe,Hhe,Khe,Jhe,Ice,efe,Dpe];for(let e of tfe)pr(e);var nfe=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){let n=o6(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;let r=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(r),r}this.numBytesAllocated+=e;let s=this.device.createBuffer({size:e,usage:t});return this.usedBuffers.get(n).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers==null)return;let s=o6(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}reset(){this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}dispose(){this.freeBuffers==null&&this.usedBuffers==null||(this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=null,this.usedBuffers=null,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0)}};function o6(e,t){return`${e}_${t}`}var i6=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){v.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Ze()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndexBase);
            let values = ${e};
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,s)=>n===this.lastUniformData[s])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},sfe=class extends i6{constructor(){super(...arguments);this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},rfe=Y().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),l6=class extends tu{constructor(e,t=!1){super();if(this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!Fx())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new nfe(this.device),this.tensorMap=new sd(this,is()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return l6.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=v.sizeFromShape(t)*Dx(n);return n==="bool"&&e instanceof Uint8Array&&(e=Int32Array.from(e)),this.tensorMap.set(s,{dtype:n,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=v.sizeFromShape(n)*Dx(s);this.tensorMap.set(e,{dtype:s,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new i6),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new sfe),this.fromPixelImportProgram;default:v.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(v.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=E.mergeRealAndImagArrays(a,o)}else{let r=await this.getBufferData(t);s=E4(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=v.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values&&this.queue.writeBuffer(t.bufferInfo.buffer,0,t.values))}makeUniformsDataView(e){let t=this.acquireBuffer(e.byteLength,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(t,0,e),{offset:0,size:e.byteLength,buffer:t}}arrayToDataView(e,t){let n=4,s=new DataView(new ArrayBuffer(t*n)),r=0;return e.forEach(a=>{let o=a.data;if(a.type!=="int32"&&a.type!=="float32"&&a.type!=="uint32")throw new Error(`${a.type} not supported!`);a.type==="int32"?o.forEach(i=>{s.setInt32(r*n,i,!0),r++}):a.type==="uint32"?o.forEach(i=>{s.setUint32(r*n,i,!0),r++}):o.forEach(i=>{s.setFloat32(r*n,i,!0),r++})}),s}computePadding(e){let t=0,n=0,s=0,r=[];return e.forEach((a,o)=>{a.data.length===0&&(a.data=[1]);let i;switch(a.data.length){case 0:i=1;break;case 1:i=1;break;case 2:i=2;break;case 3:i=4;break;case 4:i=4;break;default:v.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}n=Math.ceil(t/i)*i-t;for(let l=0;l<n;++l)r.push({type:a.type,data:[0]}),s++;r.push({type:a.type,data:a.data}),s=s+a.data.length,t+=a.data.length+n}),this.arrayToDataView(r,s)}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),v.sizeFromShape(r.shape)===0){let N=this.tensorMap.get(r.dataId);return N.values=v.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}let a=[{type:"float32",data:[NaN]}],o=t.concat(r).map(N=>N.shape),i="int32";o.map(N=>{a.push({type:i,data:N})});let l=v.computeStrides(r.shape);if(a.push({type:i,data:l}),e.size){let N=v.sizeFromShape(e.outputShape);a.push({type:i,data:[e.isVec4?N/4:N]})}s&&(a=[...a,...s]);let c=null,u=this.computePadding(a),d=u.byteLength;c=this.makeUniformsDataView(u);let p=t.map((N,R)=>{if(N.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(N.dataId),{dtype:this.tensorMap.get(N.dataId).dtype,shape:N.shape,name:e.variableNames[R]}}),h=p.map(N=>N.dtype).concat(r.dtype),f=p.map(N=>E.getBroadcastDims(N.shape,r.shape)),m=p.map(N=>v.arraysEqual(N.shape,r.shape)).join("_"),g=f.map(N=>N.join("_")).join(";"),A=Y4(e,o,h,g,m),{bindGroupLayout:x,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),b=this.getAndSavePipeline(A,()=>Z4(this.device,e,y,p,r)),w=this.activeTimers!=null,k=Lde(this.device,x,t.map(N=>this.tensorToBinding(N)),this.tensorToBinding(r),c);this.ensureCommandEncoderReady();let S=this.getComputePass();if(w&&this.supportTimeQuery&&S.writeTimestamp(this.querySet,0),S.setPipeline(b),S.setBindGroup(0,k),S.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),w&&this.supportTimeQuery&&S.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(N=>{this.commandQueueOwnedIds.add(N.dataId)}),this.commandQueueOwnedIds.add(r.dataId),c){let N={byteSize:d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:c.buffer};this.uniformDisposalQueue.push(N)}return Y().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),w&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}runFromPixelsProgram(e,t,n,s,r){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:s},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let o=this.getComputePass(),i=this.activeTimers!=null;i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,0),o.setPipeline(e.pipeline),o.setBindGroup(0,a),o.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(r),this.submitQueue(),i&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=rfe){return Y().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&v.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},Vx=l6;Vx.nextDataId=0;var u6={};Me(u6,{WebGPUBackend:()=>Vx,webgpu_util:()=>N4});_u.isBrowser()&&Fx()&&al("webgpu",async()=>{Y().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Y().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},s=t.features.has("timestamp-query");s?n={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let r=await t.requestDevice(n);return new Vx(r,s)},3);var en;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(en||(en={}));var Np;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(Np||(Np={}));var c6;function afe(e){c6=e.wasm.cwrap(vo,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function ofe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let N=n.dataIdMap.get(o.dataId);if(N.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${N.shape.length}.`);f=N.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=Np[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let A=l?r.shape[2]:r.shape[1],x=c?a.shape[1]:a.shape[2],y=nl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...y,A,x],r.dtype),w=n.dataIdMap.get(b.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),S=new Uint8Array(new Int32Array(a.shape).buffer);return c6(p,k,r.shape.length,h,S,a.shape.length,l,c,g,f,m,d||0,w),b}var ife={kernelName:vo,backendName:"wasm",setupFunc:afe,kernelFunc:ofe};function En(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,c=o.makeOutput(i.shape,t||i.dtype),u=o.dataIdMap.get(c.dataId).id;return v.sizeFromShape(c.shape)===0||n(l,en[i.dtype],u),c}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var lfe=En(ci);function Kn(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:c,b:u}=l,d=i.dataIdMap.get(c.dataId).id,p=i.dataIdMap.get(u.dataId).id,h=n!=null?n:c.dtype,f=E.assertAndGetBroadcastShape(c.shape,u.shape),m=i.makeOutput(f,h);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(c.shape).buffer),A=new Uint8Array(new Int32Array(u.shape).buffer),x=i.dataIdMap.get(m.dataId).id,y=()=>s(d,g,c.shape.length,p,A,u.shape.length,en[c.dtype],x);if(t&&c.dtype==="float32")return y(),m;let b=E.getBroadcastDims(c.shape,f),w=E.getBroadcastDims(u.shape,f),k=b.every((N,R)=>N===R),S=w.every((N,R)=>N===R);if(k&&S)return y(),m;throw new Error(`Broadcasting along outer dims is not yet supported for ${c.dtype} ${e}.`)}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var ufe=!0,cfe=Kn(Xr,ufe),d6;function dfe(e){d6=e.wasm.cwrap(Ea,null,["array","number","number","number"])}function pfe(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return d6(a,r.length,en[s.dtype],o),s}var hfe={kernelName:Ea,backendName:"wasm",setupFunc:dfe,kernelFunc:pfe};function u0(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var ffe={kernelName:qa,backendName:"wasm",kernelFunc:u0},p6;function mfe(e){p6=e.wasm.cwrap(xo,null,["number","array","number","number","number","array","number"])}function kc(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=Afe(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=gfe(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=u0({inputs:t,backend:n});return f.shape=i,f}let c=n.makeOutput(i,l.dtype),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(c.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return p6(u,h,l.shape.length,en[l.dtype],d,p,a.length),c}function gfe(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function Afe(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var yfe={kernelName:xo,backendName:"wasm",kernelFunc:kc,setupFunc:mfe};function qo(e,t,n){let s=e.shape,r=e.shape.length,a=v.parseAxisParam(t,s),o=a,i=E.getAxesPermutation(o,r),l=null,c=!1;if(i!=null){let u=new Array(r);for(let h=0;h<u.length;h++)u[h]=s[i[h]];o=E.getInnerMostAxes(o.length,r),l=kc({inputs:{x:e},attrs:{perm:i},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==d&&(c=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:c}}var h6;function xfe(e){h6=e.wasm.cwrap(ou,null,["number, number, number"])}function bfe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=qo(o,r,t);if(h){let y=t.dataIdMap.get(u.dataId).id;c=u,l=y}let f=c.shape.length;E.assertAxesAreInnerMostDims("all",d,f);let[m,g]=E.computeOutAndReduceShapes(c.shape,d),A=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;h6(l,A,y)}if(h&&t.disposeData(u.dataId),a){let y=E.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var vfe={kernelName:ou,backendName:"wasm",setupFunc:xfe,kernelFunc:bfe},f6;function wfe(e){f6=e.wasm.cwrap(iu,null,["number, number, number"])}function kfe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=qo(o,r,t);if(h){let y=t.dataIdMap.get(u.dataId).id;c=u,l=y}let f=c.shape.length;E.assertAxesAreInnerMostDims("any",d,f);let[m,g]=E.computeOutAndReduceShapes(c.shape,d),A=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;f6(l,A,y)}if(h&&t.disposeData(u.dataId),a){let y=E.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var Ife={kernelName:iu,backendName:"wasm",setupFunc:wfe,kernelFunc:kfe},m6;function Sfe(e){m6=e.wasm.cwrap(Ra,null,["number","number","number","number","number"])}function Cfe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:c,axes:u,inputWasTransposed:d}=qo(a,r,t);if(d){let A=t.dataIdMap.get(c.dataId).id;A!==o&&(l=c,i=A)}let p=l.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=v.sizeFromShape(h.shape),g=l.shape[u[0]];return m6(i,en[l.dtype],m,g,f),d&&t.disposeData(c.dataId),h}var Tfe={kernelName:Ra,backendName:"wasm",kernelFunc:Cfe,setupFunc:Sfe},g6;function Nfe(e){g6=e.wasm.cwrap($a,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Efe(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=E.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,A=u.strideHeight,x=u.strideWidth,y=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let b=s.makeOutput(u.outShape,"float32"),w=s.dataIdMap.get(b.dataId).id;return g6(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,A,x,y,w),b}var Rfe={kernelName:$a,backendName:"wasm",setupFunc:Nfe,kernelFunc:Efe};function ps(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a);return v.assert(a===v.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var $fe={kernelName:Pi,backendName:"wasm",kernelFunc:ps},A6;function _fe(e){A6=e.wasm.cwrap(_a,null,["number","array","number","number","array","number","number","number","number"])}function Dfe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),A=v.sizeFromShape(m),y=nl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);v.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,p]:[g,p,u],w=i?[A,h,d]:[A,d,h],k=ps({inputs:{x:r},backend:n,attrs:{shape:b}}),S=ps({inputs:{x:a},backend:n,attrs:{shape:w}}),N=n.dataIdMap.get(k.dataId).id,R=n.dataIdMap.get(S.dataId).id,M=o?k.shape[2]:k.shape[1],D=i?S.shape[1]:S.shape[2],$=Math.max(g,A),T=n.makeOutput([$,M,D],k.dtype),P=n.dataIdMap.get(T.dataId).id,W=new Uint8Array(new Int32Array(k.shape).buffer),K=new Uint8Array(new Int32Array(S.shape).buffer);return A6(N,W,k.shape.length,R,K,S.shape.length,o,i,P),n.disposeData(k.dataId),n.disposeData(S.dataId),T.shape=y,T}var Ffe={kernelName:_a,backendName:"wasm",setupFunc:_fe,kernelFunc:Dfe};function Ep(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=Ot.parseSliceParams(t,n,s),i=Ot.isSliceContinous(t.shape,a,o),l=r.readSync(t.dataId),c=r.makeOutput(o,t.dtype),u=v.computeStrides(t.shape),d=r.dataIdMap.get(c.dataId);if(i){let f=Ot.computeFlatOffset(a,u);return t.dtype==="string"?d.stringBytes=l.slice(f,f+v.sizeFromShape(o)):r.typedArrayFromHeap(c).set(l.subarray(f,f+v.sizeFromShape(o))),c}if(t.dtype==="string"){let f=Fm(l,a,o,t.shape,t.dtype);return d.stringBytes=f,c}let p=r.typedArrayFromHeap(c),h=t.shape.length;if(h===2)Pfe(l,u[0],p,a,o);else if(h===3)Ofe(l,u[0],u[1],p,a,o);else if(h===4)Mfe(l,u[0],u[1],u[2],p,a,o);else{let f=Fm(l,a,o,t.shape,t.dtype);p.set(f)}return c}function Pfe(e,t,n,s,r){let a=0,o=s[0],i=s[1],l=o+r[0];for(let c=o;c<l;c++){let u=c*t+i;n.set(e.subarray(u,u+r[1]),a),a+=r[1]}}function Ofe(e,t,n,s,r,a){let o=0,i=r[0],l=r[1],c=r[2],u=i+a[0],d=l+a[1];for(let p=i;p<u;p++)for(let h=l;h<d;h++){let f=p*t+h*n+c;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function Mfe(e,t,n,s,r,a,o){let i=0,l=a[0],c=a[1],u=a[2],d=l+o[0],p=c+o[1],h=u+o[2],f=a[3];for(let m=l;m<d;m++)for(let g=c;g<p;g++)for(let A=u;A<h;A++){let x=m*t+g*n+A*s+f;r.set(e.subarray(x,x+o[3]),i),i+=o[3]}}var zfe={kernelName:Bi,backendName:"wasm",kernelFunc:Ep};function Lfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((A,x)=>A*x),l=E.getReshaped(r.shape,a,i),c=E.getPermuted(l.length,a.length),u=E.getReshapedPermuted(r.shape,a,i),d=E.getSliceBeginCoords(o,a.length),p=E.getSliceSize(u,o,a.length),h=ps({inputs:{x:r},backend:n,attrs:{shape:l}}),f=kc({inputs:{x:h},backend:n,attrs:{perm:c}}),m=ps({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Ep({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var Bfe={kernelName:di,backendName:"wasm",kernelFunc:Lfe};function Rp(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var Wfe={kernelName:Da,backendName:"wasm",kernelFunc:Rp},Vfe=En(Fa),y6;function Ufe(e){y6=e.wasm.cwrap(Kr,null,["number","number","number","number"])}function Gfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id;return y6(i,a,o,c),l}var Hfe={kernelName:Kr,backendName:"wasm",setupFunc:Ufe,kernelFunc:Gfe};function x6(e){let{inputs:t,backend:n}=e,s=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=E.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>v.sizeFromShape(h.shape)>0);if(a.length===1)return u0({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(v.sizeFromShape(r)===0)return o;let i=a.map(h=>h.shape);if(E.assertParamsConsistent(i,s),a[0].dtype==="string"){let h=a.map(y=>{let b=v.sizeFromShape(y.shape.slice(s));return ps({inputs:{x:y},backend:n,attrs:{shape:[-1,b]}})}),f=h.map(y=>({vals:n.readSync(y.dataId),shape:y.shape}));r=E.computeOutShape(h.map(y=>y.shape),1);let m=h[0].shape[0]===1,g=Yy(f,r,t[0].dtype,m),A=E.computeOutShape(a.map(y=>y.shape),s);o.shape=A;let x=n.dataIdMap.get(o.dataId);return x.stringBytes=E.fromStringArrayToUint8(g),h.forEach(y=>n.disposeData(y.dataId)),o}let l=v.sizeFromShape(a[0].shape.slice(0,s)),c=0,u=a.map(h=>{let f=v.sizeFromShape(h.shape.slice(s));return c+=f,f}),d=a.map(h=>n.typedArrayFromHeap(h)),p=n.typedArrayFromHeap(o);for(let h=0;h<l;h++){let f=h*c;for(let m=0;m<d.length;m++){let g=u[m],A=h*g,x=d[m].subarray(A,A+g);p.set(x,f),f+=g}}return o}var jfe={kernelName:pi,backendName:"wasm",kernelFunc:x6},b6;function qfe(e){b6=e.wasm.cwrap(Pa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Xfe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d,dataFormat:p}=n,h=E.convertConv2DDataFormat(p),f=E.computeConv2DInfo(r.shape,a.shape,l,c,u,d,!1,h),m=f.filterHeight,g=f.filterWidth,A=f.padInfo.top,x=f.padInfo.right,y=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,S=f.strideHeight,N=f.strideWidth,R=f.inChannels,M=f.outChannels,D=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let $=s.makeOutput(f.outShape,"float32"),T=s.dataIdMap.get($.dataId).id;return b6(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,A,x,y,b,D,w,k,S,N,R,M,T),$}var Kfe={kernelName:Pa,backendName:"wasm",setupFunc:qfe,kernelFunc:Xfe},v6;function Zfe(e){v6=e.wasm.cwrap(Oa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Yfe(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,inputShape:u}=s,d=1,p=E.convertConv2DDataFormat(l),h=E.computeConv2DInfo(u,a.shape,o,d,i,c,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:A,inHeight:x,inWidth:y,outChannels:b,outHeight:w,outWidth:k,strideHeight:S,strideWidth:N}=h,R=m-1-h.padInfo.top,M=g-1-h.padInfo.left,D=h.dataFormat==="channelsLast",$=v.computeStrides(h.inShape),T=v.computeStrides(r.shape),[P,W,K]=v.computeStrides(a.shape),z=$[0],j=D?$[1]:$[2],Z=D?$[2]:1,Q=D?1:$[1],ne=T[0],ae=D?T[1]:T[2],U=D?T[2]:1,oe=D?1:T[1],re=t.makeOutput(h.inShape,"float32"),me=t.dataIdMap.get(re.dataId).id,ye=t.dataIdMap.get(r.dataId).id,Te=t.dataIdMap.get(a.dataId).id;return v6(ye,Te,f,m,g,x,y,A,w,k,b,S,N,R,M,P,W,K,z,j,Z,Q,ne,ae,U,oe,me),re}var Jfe={kernelName:Oa,backendName:"wasm",setupFunc:Zfe,kernelFunc:Yfe},Qfe=En(Ma),eme=En(za),Ux;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(Ux||(Ux={}));var w6;function tme(e){w6=e.wasm.cwrap(fi,null,["number","number","number","number","array","number","number","number","number","number"])}function nme(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:l,boxInd:c}=n,u=l.shape[0],[d,p]=o,h=[u,d,p,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Rp({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,A=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(c.dataId).id,y=t.makeOutput(h,"float32"),b=t.dataIdMap.get(y.dataId).id,w=new Uint8Array(new Int32Array(i.shape).buffer);return w6(g,A,x,u,w,d,p,Ux[r],a,b),m!=null&&t.disposeData(m.dataId),y}var sme={kernelName:fi,backendName:"wasm",setupFunc:tme,kernelFunc:nme},k6;function rme(e){k6=e.wasm.cwrap(hi,null,["number","number","number","number","number","number"])}function ame(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let c=E.getAxesPermutation([a],l),u=r;c!==null&&(u=kc({inputs:{x:r},attrs:{perm:c},backend:n}));let d=E.getInnerMostAxes(1,l)[0];E.assertAxesAreInnerMostDims("cumsum",[d],l);let p=n.makeOutput(u.shape,u.dtype),h=u.shape[d],f=n.dataIdMap.get(u.dataId).id,m=n.dataIdMap.get(p.dataId).id;k6(f,o?1:0,i?1:0,h,m,en[r.dtype]);let g=p;if(c!==null){let A=E.getUndoAxesPermutation(c);g=kc({inputs:{x:p},attrs:{perm:A},backend:n}),n.disposeData(u.dataId),n.disposeData(p.dataId)}return g}var ome={kernelName:hi,backendName:"wasm",setupFunc:rme,kernelFunc:ame},I6;function ime(e){I6=e.wasm.cwrap(mi,null,["number","number","number","array","number","array","array","number","number"])}function lme(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=t.makeOutput(f,"float32"),A=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),y=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return I6(A,a,o==="NHWC"?1:0,x,r.shape.length-1,y,b,f.length,w),m}var ume={kernelName:mi,backendName:"wasm",setupFunc:ime,kernelFunc:lme},S6;function cme(e){S6=e.wasm.cwrap(La,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function dme(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d}=n,p=c==null?[1,1]:c,h=E.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,A=h.padInfo.right,x=h.padInfo.bottom,y=h.padInfo.left,b=h.dilationHeight,w=h.dilationWidth,k=h.strideHeight,S=h.strideWidth,N=h.inChannels,R=h.outChannels,M=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let D=s.makeOutput(h.outShape,"float32"),$=s.dataIdMap.get(D.dataId).id;return S6(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,A,x,y,M,b,w,k,S,N,R,$),D}var pme={kernelName:La,backendName:"wasm",setupFunc:cme,kernelFunc:dme},hme=En(Wa),fme=!1,mme=Kn(gi,fme,"bool"),gme=En(Va,"float32");function Gx(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),ps({inputs:{x:r},backend:s,attrs:{shape:i}})}var Ame={kernelName:Ai,backendName:"wasm",kernelFunc:Gx};function C6(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var yme={kernelName:mu,backendName:"wasm",kernelFunc:C6},T6;function xme(e){T6=e.wasm.cwrap(xi,null,["number","number","number","number","number","number"])}function bme(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,l,c,u]=s.shape;return T6(a,i,l,c,u,o),r}var vme={kernelName:xi,backendName:"wasm",kernelFunc:bme,setupFunc:xme},wme=En(Ua),kme=!1,Ime=Kn(Ga,kme),N6;function Sme(e){N6=e.wasm.cwrap(Ha,null,["number","number","number","number","number","number","number"])}function Cme(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:l,scale:c}=n,u=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(v.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return N6(u,d,p,h,f,r,g),m}var Tme={kernelName:Ha,backendName:"wasm",setupFunc:Sme,kernelFunc:Cme},E6;function Nme(e){E6=e.wasm.cwrap(wo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Eme(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=E.computeConv2DInfo(r.shape,a.shape,l,u,c,p),g=Np[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let A=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,y=m.outChannels,b=0;if(o!=null){let U=s.dataIdMap.get(o.dataId);if(U.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${U.shape.length}.`);if(U.shape[0]!==y)throw new Error(`FusedConv2D bias shape (${U.shape}) does not match the number of output channels (${y})`);b=U.id}let w=m.filterHeight,k=m.filterWidth,S=m.padInfo.top,N=m.padInfo.right,R=m.padInfo.bottom,M=m.padInfo.left,D=m.dilationHeight,$=m.dilationWidth,T=m.strideHeight,P=m.strideWidth,W=m.inChannels,K=m.padInfo.type==="SAME"?1:0,z=m.batchSize,j=m.inHeight,Z=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Q=s.makeOutput(m.outShape,"float32"),ne=s.dataIdMap.get(Q.dataId).id,ae=i==null?0:s.dataIdMap.get(i.dataId).id;return E6(A,z,j,Z,x,w,k,b,S,N,R,M,K,D,$,T,P,W,y,g,ae,f||0,ne),Q}var Rme={kernelName:wo,backendName:"wasm",setupFunc:Nme,kernelFunc:Eme},R6;function $me(e){R6=e.wasm.cwrap(ko,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _me(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=E.computeConv2DInfo(r.shape,a.shape,l,u,c,p,!0),g=Np[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let A=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,y=m.outChannels,b=0;if(o!=null){let U=s.dataIdMap.get(o.dataId);if(U.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${U.shape.length}.`);if(U.shape[0]!==y)throw new Error(`FusedDepthwiseConv2D bias shape (${U.shape}) does not match the number of output channels (${y})`);b=U.id}let w=m.filterHeight,k=m.filterWidth,S=m.padInfo.top,N=m.padInfo.right,R=m.padInfo.bottom,M=m.padInfo.left,D=m.dilationHeight,$=m.dilationWidth,T=m.strideHeight,P=m.strideWidth,W=m.inChannels,K=m.padInfo.type==="SAME"?1:0,z=m.batchSize,j=m.inHeight,Z=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Q=s.makeOutput(m.outShape,"float32"),ne=s.dataIdMap.get(Q.dataId).id,ae=i==null?0:s.dataIdMap.get(i.dataId).id;return R6(A,z,j,Z,x,w,k,b,S,N,R,M,K,D,$,T,P,W,y,g,ae,f||0,ne),Q}var Dme={kernelName:ko,backendName:"wasm",setupFunc:$me,kernelFunc:_me},$6;function Fme(e){$6=e.wasm.cwrap(vi,null,["number","number","number","number","number","number","array","number"])}function Pme(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,l]=j2.prepareAndValidate(s,r),c=t.makeOutput(a,s.dtype);if(o===0)return c;let u=r.shape,d=u[u.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),A=t.dataIdMap.get(c.dataId).id;return $6(h,en[s.dtype],m,o,d,i,g,A),c}var Ome={kernelName:vi,backendName:"wasm",setupFunc:Fme,kernelFunc:Pme},_6;function Mme(e){_6=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function zme(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=t.readSync(a.dataId),u=r.shape[l];for(let R=0;R<c.length;++R){let M=c[R];v.assert(M<=u-1&&M>=0,()=>`GatherV2: the index value ${M} is not in [0, ${u-1}]`)}let d=E.segment_util.collectGatherOpShapeInfo(r,a,l,i),p=ps({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=v.sizeFromShape(a.shape),f=ps({inputs:{x:a},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(v.sizeFromShape(r.shape)===0)return g;let A=p.shape.length-1,y=t.dataIdMap.get(p.dataId).id,w=t.dataIdMap.get(f.dataId).id,k=t.dataIdMap.get(g.dataId).id,S=new Uint8Array(new Int32Array(v.computeStrides(p.shape)).buffer),N=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return _6(y,en[r.dtype],S,A,w,d.batchSize,N,k),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var Lme={kernelName:bi,backendName:"wasm",setupFunc:Mme,kernelFunc:zme},Bme=!1,Wme=Kn(wi,Bme,"bool"),Vme=!1,Ume=Kn(ja,Vme,"bool"),D6;function Gme(e){D6=e.wasm.cwrap(ki,null,["number","number","number","number"])}function Hme(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;D6(r,en[t.dtype],n,o)}return a}var jme={kernelName:ki,backendName:"wasm",setupFunc:Gme,kernelFunc:Hme},qme=!1,Xme=Kn(Ii,qme,"bool"),Kme=!1,Zme=Kn(Si,Kme,"bool"),Yme=En(Xa),Jme=!1,Qme=Kn(Ci,Jme,"bool"),F6;function e0e(e){F6=e.wasm.cwrap(Ka,null,["number","number","number","number"])}function t0e(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=qo(o,r,t);if(h){let y=t.dataIdMap.get(u.dataId).id;c=u,l=y}let f=c.shape.length;E.assertAxesAreInnerMostDims("max",d,f);let[m,g]=E.computeOutAndReduceShapes(c.shape,d),A=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;F6(l,en[o.dtype],A,y)}if(h&&t.disposeData(u.dataId),a){let y=E.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var n0e={kernelName:Ka,backendName:"wasm",setupFunc:e0e,kernelFunc:t0e},s0e=!1,r0e=Kn(Za,s0e),P6;function a0e(e){P6=e.wasm.cwrap(Ya,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function o0e(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;v.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=E.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,A=u.dilationHeight,x=u.dilationWidth,y=u.strideHeight,b=u.strideWidth,w=u.inChannels,k=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let S=s.makeOutput(u.outShape,"float32"),N=s.dataIdMap.get(S.dataId).id;return P6(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,A,x,y,b,w,k,N),S}var i0e={kernelName:Ya,backendName:"wasm",setupFunc:a0e,kernelFunc:o0e},O6;function l0e(e){O6=e.wasm.cwrap(Ja,null,["number, number, number"])}function u0e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=qo(o,r,t),f=d;if(h){let b=t.dataIdMap.get(u.dataId).id;b!==i&&(c=u,l=b,f=E.getInnerMostAxes(f.length,c.shape.length))}E.assertAxesAreInnerMostDims("mean",f,c.shape.length);let[m,g]=E.computeOutAndReduceShapes(c.shape,f),A=v.sizeFromShape(g),x=c;c.dtype!=="float32"&&(x=Rp({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let y=t.makeOutput(m,"float32");if(v.sizeFromShape(c.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;O6(l,A,b)}if(h&&t.disposeData(u.dataId),a){let b=E.expandShapeToKeepDim(y.shape,p);y.shape=b}return c.dtype!=="float32"&&t.disposeData(x.dataId),y}var c0e={kernelName:Ja,backendName:"wasm",setupFunc:l0e,kernelFunc:u0e},M6;function d0e(e){M6=e.wasm.cwrap(Qa,null,["number","number","number","number"])}function p0e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=qo(o,r,t);if(h){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y)}let f=c.shape.length;E.assertAxesAreInnerMostDims("min",d,f);let[m,g]=E.computeOutAndReduceShapes(c.shape,d),A=v.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;M6(l,en[o.dtype],A,y)}if(h&&t.disposeData(u.dataId),a){let y=E.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var h0e={kernelName:Qa,backendName:"wasm",setupFunc:d0e,kernelFunc:p0e},f0e=!1,m0e=Kn(eo,f0e),Hx;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(Hx||(Hx={}));var z6;function g0e(e){z6=e.wasm.cwrap(to,null,["number","array","number","number","array","array","number","number"])}function A0e(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),u=s.map(f=>f[0]),d=s.map(f=>f[1]),p=new Uint8Array(new Int32Array(u).buffer),h=new Uint8Array(new Int32Array(d).buffer);return z6(o,c,t.shape.length,en[t.dtype],p,h,Hx[r],l),i}var y0e={kernelName:to,backendName:"wasm",kernelFunc:A0e,setupFunc:g0e},x0e=!0,b0e=Kn(no,x0e),v0e=En(Ti);function jx(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var L6;function w0e(e){L6=e.wasm.cwrap(Ei,"number",["number","number","number","number","number"])}function k0e(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:l}=n,c=t.dataIdMap.get(i.dataId).id,u=t.dataIdMap.get(l.dataId).id,d=L6(c,u,a,r,o),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=jx(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}var I0e={kernelName:Ei,backendName:"wasm",setupFunc:w0e,kernelFunc:k0e},B6;function S0e(e){B6=e.wasm.cwrap(wu,"number",["number","number","number","number","number","bool"])}function C0e(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=B6(u,d,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=jx(t,p);t.wasm._free(m);let A=t.makeOutput([f],"int32",h),x=t.makeOutput([],"int32",g);return[A,x]}var T0e={kernelName:wu,backendName:"wasm",setupFunc:S0e,kernelFunc:C0e},W6;function N0e(e){W6=e.wasm.cwrap(Ri,"number",["number","number","number","number","number","number"])}function E0e(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=W6(u,d,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=jx(t,p);t.wasm._free(g);let A=t.makeOutput([f],"int32",h),x=t.makeOutput([f],"float32",m);return[A,x]}var R0e={kernelName:Ri,backendName:"wasm",setupFunc:N0e,kernelFunc:E0e},$0e=!1,_0e=Kn(Ni,$0e,"bool"),V6;function D0e(e){V6=e.wasm.cwrap(_i,null,["number","number","number","number","number"])}function F0e(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=n.makeOutput([...r.shape,a],"int32"),c=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(r.dataId).id;return V6(d,a,o,i,c),l}var P0e={kernelName:_i,backendName:"wasm",setupFunc:D0e,kernelFunc:F0e};function O0e(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var M0e={kernelName:$i,backendName:"wasm",kernelFunc:O0e};function z0e(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Gx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Gx({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=x6({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var L0e={kernelName:Di,backendName:"wasm",kernelFunc:z0e},U6;function B0e(e){U6=e.wasm.cwrap(so,null,["number","array","number","number","array","array","number","number"])}function W0e(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(v.sizeFromShape(t.shape)===0)return C6({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=s.map(m=>m[0]),p=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return U6(o,u,t.shape.length,en[t.dtype],h,f,r,c),i}var G6={kernelName:so,backendName:"wasm",kernelFunc:W0e,setupFunc:B0e},V0e=!1,U0e=Kn(ro,V0e),H6;function G0e(e){H6=e.wasm.cwrap(ao,null,["number","number","number"])}function H0e(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,l=s,c=l;l.dtype!=="float32"&&(c=Rp({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(c.dataId).id);let u=n.makeOutput(s.shape,"float32"),d=n.dataIdMap.get(u.dataId).id;return H6(i,o,d),l.dtype!=="float32"&&n.disposeData(c.dataId),u}var j0e={kernelName:ao,backendName:"wasm",setupFunc:G0e,kernelFunc:H0e},j6;function q0e(e){j6=e.wasm.cwrap(Fi,null,["number","number","number","number"])}function X0e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=qo(o,r,t),f=d;if(h){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y,f=E.getInnerMostAxes(f.length,c.shape.length))}E.assertAxesAreInnerMostDims("prod",f,c.shape.length);let[m,g]=E.computeOutAndReduceShapes(c.shape,f),A=v.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;j6(l,A,en[x.dtype],y)}if(h&&t.disposeData(u.dataId),a){let y=E.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var K0e={kernelName:Fi,backendName:"wasm",setupFunc:q0e,kernelFunc:X0e},Z0e=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=ex(s,r,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},Y0e={kernelName:ku,backendName:"wasm",kernelFunc:Z0e},J0e=!0,Q0e=Kn(Ba,J0e),ege=En(oo),tge=En(lo),q6;function nge(e){q6=e.wasm.cwrap(io,null,["number","number","number","number","number","number","number","number","number","number"])}function sge(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,[u,d,p,h]=r.shape,f=[u,l,c,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Rp({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let A=m.id,x=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return x;let y=t.dataIdMap.get(x.dataId).id;return q6(A,u,d,p,h,l,c,a?1:0,o?1:0,y),g!=null&&t.disposeData(g.dataId),x}var rge={kernelName:io,backendName:"wasm",setupFunc:nge,kernelFunc:sge},X6;function age(e){X6=e.wasm.cwrap(Oi,null,["number","array","number","array","number","number"])}function oge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=v.parseAxisParam(a,r.shape);if(r.shape.length===0)return u0({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);X6(l,u,o.length,d,r.shape.length,c);let p=ps({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),p}var ige={kernelName:Oi,backendName:"wasm",kernelFunc:oge,setupFunc:age},K6;function lge(e){K6=e.wasm.cwrap(Zi,null,["number","number","number","number","number","number","number","number","array","number","number"])}function uge(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(l.dataId).id,[d,p,h,f]=r.shape,[m,g]=E.getImageCenter(i,p,h),A=o===0,x=255,y=typeof o=="number"?[o,o,o,A?0:x]:[...o,x],b=new Uint8Array(new Int32Array(y).buffer);return K6(c,d,p,h,f,a,m,g,b,y.length,u),l}var cge={kernelName:Zi,backendName:"wasm",kernelFunc:uge,setupFunc:lge},dge=En(Mi),pge=En(uo),Z6;function hge(e){Z6=e.wasm.cwrap(zi,null,["number","number","number","number","number","number","array","number","number"])}function fge(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(v.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=q2.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,A=new Uint8Array(new Int32Array(d).buffer),x=t.dataIdMap.get(i.dataId).id;return Z6(f,g,en[a.dtype],l,c,u,A,p,x),i}var mge={kernelName:zi,backendName:"wasm",setupFunc:hge,kernelFunc:fge},Y6;function gge(e){Y6=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Age(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(a.dataId).id,c=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(c.dataId).id,d=s.shape.length,p=r.shape.length,h=d===0||d>1||p===1?1:v.sizeFromShape(r.shape.slice(1));return Y6(o,i,l,h,u),c}var yge={kernelName:Li,backendName:"wasm",kernelFunc:Age,setupFunc:gge},J6;function xge(e){J6=e.wasm.cwrap(po,null,["number","number"])}function bge(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return v.sizeFromShape(r.shape)===0||J6(s,a),r}var vge={kernelName:"Sigmoid",backendName:"wasm",setupFunc:xge,kernelFunc:bge},wge=En(co),Q6;function kge(e){Q6=e.wasm.cwrap(mo,null,["number","number","number","number"])}function Ige(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],l=v.sizeFromShape(n.shape)/i;return v.sizeFromShape(a.shape)===0||Q6(r,o,i,l),a}var Sge={kernelName:mo,backendName:"wasm",setupFunc:kge,kernelFunc:Ige};function Cge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let k=1+a.length;k<r.shape.length;++k)l.push([0,0]);let c=G6.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=E.getReshaped(c.shape,a,i,!1),d=E.getPermuted(u.length,a.length,!1),p=E.getReshapedPermuted(c.shape,a,i,!1),m=ps({inputs:{x:c},backend:n,attrs:{shape:u}}),x=kc({inputs:{x:m},backend:n,attrs:{perm:d}}),w=ps({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),w}var Tge={kernelName:Vi,backendName:"wasm",kernelFunc:Cge};function Nge(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=v.parseAxisParam(o,r.shape)[0],l=E.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=Ep({inputs:{x:r},attrs:{begin:c,size:p},backend:s});return c[i]+=d,h})}var Ege={kernelName:Ui,backendName:"wasm",kernelFunc:Nge},Rge=En(ho),$ge=En(Eu),_ge=!0,Dge=Kn(go,_ge),e8;function Fge(e){e8=e.wasm.cwrap(bo,null,["number","number","number","number"])}function Pge(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return e8(o,r,en[a.dtype],l),i}var Oge={kernelName:bo,backendName:"wasm",setupFunc:Fge,kernelFunc:Pge},t8;function Mge(e){t8=e.wasm.cwrap(Gi,null,["number","array","number","array","array","array","array","array","number","number"])}function zge(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=Ot.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=ps({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Ot.computeOutShape(x,y,b),S=Ep({inputs:{x:r},backend:t,attrs:{begin:x,size:k}});w=ps({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}else{let k=t.makeOutput(h,"float32"),S=t.dataIdMap.get(r.dataId).id,N=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),R=new Uint8Array(new Int32Array(x).buffer),M=new Uint8Array(new Int32Array(y).buffer),D=new Uint8Array(new Int32Array(b).buffer),$=new Uint8Array(new Int32Array(h).buffer),T=new Uint8Array(new Int32Array(v.computeStrides(h)).buffer),P=t.dataIdMap.get(k.dataId).id;t8(S,N,r.shape.length,R,M,D,$,T,h.length,P),w=ps({inputs:{x:k},backend:t,attrs:{shape:f}}),t.disposeData(k.dataId)}return w}var Lge={kernelName:Gi,backendName:"wasm",setupFunc:Mge,kernelFunc:zge},Bge=!0,Wge=Kn(Ao,Bge),n8;function Vge(e){n8=e.wasm.cwrap(fo,null,["number","number","number","number"])}function Uge(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=qo(o,r,t),f=d;if(h){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y,f=E.getInnerMostAxes(f.length,c.shape.length))}E.assertAxesAreInnerMostDims("sum",f,c.shape.length);let[m,g]=E.computeOutAndReduceShapes(c.shape,f),A=v.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;n8(l,A,en[x.dtype],y)}if(h&&t.disposeData(u.dataId),a){let y=E.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var Gge={kernelName:fo,backendName:"wasm",setupFunc:Vge,kernelFunc:Uge},Hge=En(Hi),jge=En(yo),s8;function qge(e){s8=e.wasm.cwrap(Zr,null,["number","array","number","array","number","number"])}function Xge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let p=0;p<i.length;p++)i[p]=r.shape[p]*o[p];let l=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),u=n.makeOutput(i,r.dtype),d=n.dataIdMap.get(u.dataId).id;return s8(a,l,r.shape.length,c,i.length,en[u.dtype],d),u}var Kge={kernelName:Zr,backendName:"wasm",setupFunc:qge,kernelFunc:Xge},r8;function Zge(e){r8=e.wasm.cwrap(ji,null,["number","array","number","number","number","bool","number","number"])}var Yge=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;let c=t.makeOutput(l,s.dtype),u=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(l,"int32"),p=t.dataIdMap.get(d.dataId).id;return r8(o,i,s.shape.length,en[s.dtype],r,a,u,p),[c,d]},Jge={kernelName:ji,backendName:"wasm",setupFunc:Zge,kernelFunc:Yge},a8;function Qge(e){a8=e.wasm.cwrap(qi,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function e2e(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],A=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),x=t.makeOutput(g,r.dtype),y=t.dataIdMap.get(x.dataId).id,w=t.dataIdMap.get(r.dataId).id,S=t.dataIdMap.get(a.dataId).id,N=o==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return a8(w,S,a.shape[0]>1,u,f,m,h,p,d,A,r.shape.length-1,N,R,l,y),x}var t2e={kernelName:qi,backendName:"wasm",setupFunc:Qge,kernelFunc:e2e};function n2e(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,l=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==a&&(l[c++]=r.shape[h]);let u=new Array(o),d=new Array(i).fill(0),p=r.shape.slice();p[a]=1;for(let h=0;h<u.length;h++)d[a]=h,u[h]=Ep({inputs:{x:r},attrs:{begin:d,size:p},backend:n});return u.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:l}))}var s2e={kernelName:Xi,backendName:"wasm",kernelFunc:n2e};function r2e(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var a2e={kernelName:Ki,backendName:"wasm",kernelFunc:r2e},o2e=[lfe,cfe,hfe,vfe,Ife,Tfe,Rfe,Ffe,Bfe,Wfe,Vfe,Hfe,jfe,Kfe,Jfe,Qfe,eme,sme,ome,ume,pme,hme,mme,gme,Ame,yme,vme,wme,Ime,ife,Tme,Rme,Dme,Ome,Lme,Wme,Ume,ffe,jme,Xme,Zme,Yme,Qme,n0e,r0e,i0e,c0e,h0e,m0e,y0e,b0e,v0e,I0e,T0e,R0e,_0e,P0e,M0e,L0e,G6,U0e,j0e,K0e,Y0e,Q0e,ege,tge,$fe,rge,ige,cge,pge,dge,mge,yge,vge,wge,zfe,Sge,Tge,Ege,Rge,$ge,Dge,Oge,Lge,Wge,Gge,Hge,jge,Kge,Jge,t2e,yfe,s2e,a2e];for(let e of o2e)pr(e);var qx=Y();qx.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));qx.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(qx.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var o8=ii(t9()),i2e='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',l2e=ii(n9()),i8=class extends tu{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(c8),Kx=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new sd(this,is())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=v.sizeFromShape(n),i=o*v.bytesPerElement(s),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:s,stringBytes:r}=this.dataIdMap.get(e);if(n==="string")return r;let a=this.wasm.HEAPU8.slice(t,t+v.sizeFromShape(s)*v.bytesPerElement(n));return d2e(a.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function u2e(e){return(t,n)=>(v.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function l8(e,t,n){if(c0!=null)return c0;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),_p!=null&&_p[s]!=null?_p[s]:n+s}async function c2e(){let[e,t]=await Promise.all([Y().getAsync("WASM_HAS_SIMD_SUPPORT"),Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let c=i2e,u=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(u)}return i.endsWith(".wasm")?l8(e,t,$p!=null?$p:l):l+i},Xx&&(r.instantiateWasm=u2e(l8(e,t,$p!=null?$p:"")));let a=!1;r.onAbort=()=>{if(a||Dp)return;Dp=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&c0==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+o8.default.toString()],{type:"text/javascript"}),o=(0,o8.default)(r)):o=(0,l2e.default)(r),o.then(i=>{a=!0,Dp=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})})})}function d2e(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var p2e=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],c0=null,$p=null,_p={},Dp=!1,Xx=!1;function h2e(e,t=!1){if(e1("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Dp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");c0=e,Xx=t}function u8(e,t=!1){if(Dp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")$p=e;else{_p=e;let n=p2e.filter(s=>_p[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Xx=t}var c8=-1,Kx=-1;function f2e(e){c8=e}function m2e(){if(Kx===-1)throw new Error("WASM backend not initialized.");return Kx}var g2e="0.0.0",A2e=2;al("wasm",async()=>{let{wasm:e}=await c2e();return new i8(e)},A2e);var Xo="3.11.0-20211121",d0={tfjs:Xo,"tfjs-core":Xo,"tfjs-data":Xo,"tfjs-layers":Xo,"tfjs-converter":Xo,"tfjs-backend-cpu":Xo,"tfjs-backend-webgl":Xo,"tfjs-backend-wasm":Xo};var d8=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`;var p8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,h8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,f8=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,m8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,g8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`;var Zx=(e,t,n)=>{let s=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(s,(r,a)=>(n[a]=0,r))},A8=class{constructor(t,n,s){fe(this,"uniform",{});fe(this,"attribute",{});fe(this,"gl");fe(this,"id");fe(this,"compile",(t,n)=>{let s=this.gl.createShader(n);return s?(this.gl.shaderSource(s,t),this.gl.compileShader(s),this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS)?s:(J(`filter: gl compile failed: ${this.gl.getShaderInfoLog(s)}`),null)):(J("filter: could not create shader"),null)});this.gl=t;let r=this.compile(n,this.gl.VERTEX_SHADER),a=this.compile(s,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!r||!a)){if(!this.id){J("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){J(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);return}this.gl.useProgram(this.id),Zx(n,"attribute",this.attribute);for(let o in this.attribute)this.attribute[o]=this.gl.getAttribLocation(this.id,o);Zx(n,"uniform",this.uniform),Zx(s,"uniform",this.uniform);for(let o in this.uniform)this.uniform[o]=this.gl.getUniformLocation(this.id,o)}}};function y8(){let e=0,t=null,n=!1,s=-1,r=[null,null],a=[],o=null,i=null,l=Zn(100,100),c={},u={INTERMEDIATE:1},d=l.getContext("webgl");if(this.gl=d,!d){J("filter: cannot get webgl context");return}function p(x,y){if(!(x===l.width&&y===l.height)){if(l.width=x,l.height=y,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,o),d.bufferData(d.ARRAY_BUFFER,b,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),r=[null,null]}}function h(x,y){let b=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,b);let w=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,w);let k=d.createTexture();return d.bindTexture(d.TEXTURE_2D,k),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,x,y,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,k,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:b,texture:k}}function f(x){return r[x]=r[x]||h(l.width,l.height),r[x]}function m(x=0){if(!i)return;let y=null,b=null,w=!1;e===0?y=t:y=f(s).texture||null,e++,n&&!(x&u.INTERMEDIATE)?(b=null,w=e%2==0):(s=(s+1)%2,b=f(s).fbo||null),d.bindTexture(d.TEXTURE_2D,y),d.bindFramebuffer(d.FRAMEBUFFER,b),d.uniform1f(i.uniform.flipY,w?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function g(x){if(c[x])return i=c[x],d.useProgram((i?i.id:null)||null),i;if(i=new A8(d,d8,x),!i)return J("filter: could not get webgl program"),null;let y=Float32Array.BYTES_PER_ELEMENT,b=4*y;return d.enableVertexAttribArray(i.attribute.pos),d.vertexAttribPointer(i.attribute.pos,2,d.FLOAT,!1,b,0*y),d.enableVertexAttribArray(i.attribute.uv),d.vertexAttribPointer(i.attribute.uv,2,d.FLOAT,!1,b,2*y),c[x]=i,i}let A={colorMatrix:x=>{let y=new Float32Array(x);y[4]/=255,y[9]/=255,y[14]/=255,y[19]/=255;let b=y[18]===1&&y[3]===0&&y[8]===0&&y[13]===0&&y[15]===0&&y[16]===0&&y[17]===0&&y[19]===0?h8:p8,w=g(b);!w||(d.uniform1fv(w.uniform.m,y),m())},brightness:x=>{let y=(x||0)+1;A.colorMatrix([y,0,0,0,0,0,y,0,0,0,0,0,y,0,0,0,0,0,1,0])},saturation:x=>{let y=(x||0)*2/3+1,b=(y-1)*-.5;A.colorMatrix([y,b,b,0,0,b,y,b,0,0,b,b,y,0,0,0,0,0,1,0])},desaturate:()=>{A.saturation(-1)},contrast:x=>{let y=(x||0)+1,b=-128*(y-1);A.colorMatrix([y,0,0,0,b,0,y,0,0,b,0,0,y,0,b,0,0,0,1,0])},negative:()=>{A.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;let y=Math.cos(x),b=Math.sin(x),w=.213,k=.715,S=.072;A.colorMatrix([w+y*(1-w)+b*-w,k+y*-k+b*-k,S+y*-S+b*(1-S),0,0,w+y*-w+b*.143,k+y*(1-k)+b*.14,S+y*-S+b*-.283,0,0,w+y*-w+b*-(1-w),k+y*-k+b*k,S+y*(1-S)+b*S,0,0,0,0,0,1,0])},desaturateLuminance:()=>{A.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{A.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{A.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{A.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{A.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{A.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{A.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{A.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{let y=new Float32Array(x),b=1/l.width,w=1/l.height,k=g(g8);!k||(d.uniform1fv(k.uniform.m,y),d.uniform2f(k.uniform.px,b,w),m())},detectEdges:()=>{A.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{A.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{A.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{let y=x||1;A.convolution.call(this,[0,-1*y,0,-1*y,1+4*y,-1*y,0,-1*y,0])},emboss:x=>{let y=x||1;A.convolution.call(this,[-2*y,-1*y,0,-1*y,1,1*y,0,1*y,2*y])},blur:x=>{let y=x/7/l.width,b=x/7/l.height,w=g(m8);!w||(d.uniform2f(w.uniform.px,0,b),m(u.INTERMEDIATE),d.uniform2f(w.uniform.px,y,0),m())},pixelate:x=>{let y=x/l.width,b=x/l.height,w=g(f8);!w||(d.uniform2f(w.uniform.size,y,b),m())}};this.add=function(x){let y=Array.prototype.slice.call(arguments,1),b=A[x];a.push({func:b,args:y})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(x){p(x.width,x.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,x);for(let y=0;y<a.length;y++){n=y===a.length-1;let b=a[y];b.func.apply(this,b.args||[])}return l},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}async function p0(e){let t=e.shape.length===4?Ge(e):e,n=jt(t,3,2),s=[_o(n[0]),_o(n[1]),_o(n[2])],r=[xn(n[0]),xn(n[1]),xn(n[2])],a=await Promise.all(r.map(h=>h.data())),o=.99*Math.max(a[0][0],a[1][0],a[2][0]),i=[pe(n[0],s[0]),pe(n[1],s[1]),pe(n[2],s[2])],l=[pe(r[0],s[0]),pe(r[1],s[1]),pe(r[2],s[2])],c=[de(o,l[0]),de(o,l[1]),de(o,l[2])],u=[L(i[0],c[0]),L(i[1],c[1]),L(i[2],c[2])],d=Yt([u[0],u[1],u[2]],2),p=H(d,[1,t.shape[0],t.shape[1],3]);return te([...n,...s,...r,...i,...l,...c,...u,d,t]),p}var h0=2048,ct=null,dn=null,Ic=null,Tt,ca={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function Zn(e,t){let n;if(he.browser)if(he.worker){if(typeof OffscreenCanvas=="undefined")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if(typeof document=="undefined")throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof he.Canvas!="undefined"?n=new he.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(n=new globalThis.Canvas(e,t));return n}function Yx(e,t){let n=t||Zn(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function Sc(e,t,n=!0){if(!e)return t.debug&&J("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof tt)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof he.Canvas!="undefined"&&e instanceof he.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof tt){let s=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)s=Zt(e,0);else if(e.shape[2]===4){let r=cl(e,[0,0,0],[-1,-1,3]);s=Zt(r,0),te(r)}}else e.shape.length===4&&(e.shape[3]===3?s=Bn(e):e.shape[3]===4&&(s=dl(e,[0,0,0,0],[-1,-1,-1,3])));if(s==null||s.shape.length!==4||s.shape[0]!==1||s.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if(s.dtype==="int32"){let r=ge(s,"float32");te(s),s=r}return{tensor:s,canvas:t.filter.return?dn:null}}else{if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&J("input stream is not ready"),{tensor:null,canvas:ct};let s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,r=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!r)return t.debug&&J("cannot determine input dimensions"),{tensor:null,canvas:ct};let a=s,o=r;if(a>h0&&(a=h0,o=Math.trunc(a*r/s)),o>h0&&(o=h0,a=Math.trunc(o*s/r)),(t.filter.width||0)>0?a=t.filter.width:(t.filter.height||0)>0&&(a=s*((t.filter.height||0)/r)),(t.filter.height||0)>0?o=t.filter.height:(t.filter.width||0)>0&&(o=r*((t.filter.width||0)/s)),!a||!o)throw new Error("input error: cannot determine dimension");(!ct||(ct==null?void 0:ct.width)!==a||(ct==null?void 0:ct.height)!==o)&&(ct=Zn(a,o));let i=ct.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?i.putImageData(e,0,0):t.filter.flip&&typeof i.translate!="undefined"?(i.translate(s,0),i.scale(-1,1),i.drawImage(e,0,0,s,r,0,0,ct==null?void 0:ct.width,ct==null?void 0:ct.height),i.setTransform(1,0,0,1,0,0)):i.drawImage(e,0,0,s,r,0,0,ct==null?void 0:ct.width,ct==null?void 0:ct.height),(!dn||ct.width!==dn.width||(ct==null?void 0:ct.height)!==(dn==null?void 0:dn.height))&&(dn=Zn(ct.width,ct.height)),t.filter.enabled&&he.webgl.supported){if(Tt||(Tt=he.browser?new y8:null),he.filter=!!Tt,!Tt||!Tt.add)return t.debug&&J("input process error: cannot initialize filters"),{tensor:null,canvas:ct};Tt.reset(),t.filter.brightness!==0&&Tt.add("brightness",t.filter.brightness),t.filter.contrast!==0&&Tt.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&Tt.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&Tt.add("blur",t.filter.blur),t.filter.saturation!==0&&Tt.add("saturation",t.filter.saturation),t.filter.hue!==0&&Tt.add("hue",t.filter.hue),t.filter.negative&&Tt.add("negative"),t.filter.sepia&&Tt.add("sepia"),t.filter.vintage&&Tt.add("brownie"),t.filter.sepia&&Tt.add("sepia"),t.filter.kodachrome&&Tt.add("kodachrome"),t.filter.technicolor&&Tt.add("technicolor"),t.filter.polaroid&&Tt.add("polaroid"),t.filter.pixelate!==0&&Tt.add("pixelate",t.filter.pixelate),Tt.get()>0?dn=Tt.apply(ct):dn=Tt.draw(ct)}else Yx(ct,dn),Tt&&(Tt=null),he.filter=!!Tt;if(!n)return{tensor:null,canvas:dn};if(!dn)throw new Error("canvas error: cannot create output");let l,c=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(he.browser&&Qs)l=Qs?Qs.fromPixels(e):null;else{c=e.data.length/e.height/e.width;let p=new Uint8Array(e.data.buffer);l=pt(p,[e.height,e.width,c],"int32")}else if((!Ic||dn.width!==Ic.width||dn.height!==Ic.height)&&(Ic=Zn(dn.width,dn.height)),Qs&&he.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=Qs.fromPixels(dn):(Ic=Yx(dn),l=Qs.fromPixels(Ic));else{let f=Yx(dn).getContext("2d").getImageData(0,0,a,o);c=f.data.length/a/o;let m=new Uint8Array(f.data.buffer);l=pt(m,[a,o,c])}if(c===4){let p=cl(l,[0,0,0],[-1,-1,3]);te(l),l=p}if(!l)throw new Error("input error: cannot create tensor");let u=ge(l,"float32"),d=t.filter.equalization?await p0(u):Zt(u,0);return te([l,u]),{tensor:d,canvas:t.filter.return?dn:null}}}async function x8(e,t){let n=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return n;if(!ca.inputTensor)ca.inputTensor=Bn(t);else if(ca.inputTensor.shape[1]!==t.shape[1]||ca.inputTensor.shape[2]!==t.shape[2])te(ca.inputTensor),ca.inputTensor=Bn(t);else{let s={};s.diff=pe(t,ca.inputTensor),s.squared=L(s.diff,s.diff),s.sum=we(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;te([ca.inputTensor,s.diff,s.squared,s.sum]),ca.inputTensor=Bn(t),n=a<=e.cacheSensitivity}return n}async function b8(e,t,n){let s={};if(!t||!n||t.shape.length!==4||t.shape.length!==n.shape.length)return e.debug||J("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(t.shape[0]!==1||n.shape[0]!==1||t.shape[3]!==3||n.shape[3]!==3)return e.debug||J("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;s.input1=Bn(t),s.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?Ie.resizeBilinear(n,[t.shape[1],t.shape[2]]):Bn(n),s.diff=pe(s.input1,s.input2),s.squared=L(s.diff,s.diff),s.sum=we(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return te([s.input1,s.input2,s.diff,s.squared,s.sum]),a}var v8=class{constructor(){fe(this,"browser");fe(this,"node");fe(this,"worker");fe(this,"platform","");fe(this,"agent","");fe(this,"backends",[]);fe(this,"initial");fe(this,"filter");fe(this,"tfjs");fe(this,"offscreen");fe(this,"perfadd",!1);fe(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0});fe(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0});fe(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0});fe(this,"cpu",{model:void 0,flags:[]});fe(this,"kernels",[]);fe(this,"Canvas");fe(this,"Image");fe(this,"ImageData");if(this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined",this.tfjs={version:d0["tfjs-core"]},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){let t=navigator.userAgent.match(/\(([^()]+)\)/g);if(t&&t[0]){let n=t[0].match(/\(([^()]+)\)/g);this.platform=n&&n[0]?n[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(is().registryFactory),this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&Fs()==="wasm"&&(this.wasm.simd=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let t=Zn(100,100),n=t?t.getContext("webgl2"):void 0;if(this.webgl.supported=typeof n!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(Fs()==="webgl"||Fs()==="humangl")){let s=$r().gpgpu!=="undefined"?await $r().getGPGPUContext().gl:null;s&&(this.webgl.version=s.getParameter(s.VERSION),this.webgl.renderer=s.getParameter(s.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(s){this.webgpu.supported=!1}try{this.kernels=Yr(Fs()).map(s=>s.kernelName.toLowerCase())}catch(s){}}async updateCPU(){let t={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=t:Object.defineProperty(this,"cpu",{value:t})}},he=new v8;var Jx="2.5.4";var hs,Qx=[],x2e=["white","black","asian","indian","other"],b2e=[15,23,28,35.5,45.5,55.5,65],w8=0,k8=0,eb=Number.MAX_SAFE_INTEGER;async function I8(e){return he.initial&&(hs=null),hs?e.debug&&J("cached model:",hs.modelUrl):(hs=await Be(We(e.modelBasePath,e.face.gear.modelPath)),!hs||!hs.modelUrl?J("load model failed:",e.face.gear.modelPath):e.debug&&J("load model:",hs.modelUrl)),hs}async function tb(e,t,n,s){var o,i;if(!hs)return{age:0,gender:"unknown",genderScore:0,race:[]};let r=eb<(((o=t.face.gear)==null?void 0:o.skipFrames)||0),a=(((i=t.face.gear)==null?void 0:i.skipTime)||0)>ie()-k8;return t.skipAllowed&&a&&r&&w8===s&&Qx[n]?(eb++,Qx[n]):(eb=0,new Promise(async l=>{var A,x;if(!(hs==null?void 0:hs.inputs[0].shape))return;let c={},u=[[0,.1,.9,.9]];c.resize=Ie.cropAndResize(e,u,[0],[hs.inputs[0].shape[2],hs.inputs[0].shape[1]]);let d={age:0,gender:"unknown",genderScore:0,race:[]};((A=t.face.gear)==null?void 0:A.enabled)&&([c.age,c.gender,c.race]=hs.execute(c.resize,["age_output","gender_output","race_output"]));let p=await c.gender.data();d.gender=p[0]>p[1]?"male":"female",d.genderScore=Math.round(100*(p[0]>p[1]?p[0]:p[1]))/100;let h=await c.race.data();for(let y=0;y<h.length;y++)h[y]>(((x=t.face.gear)==null?void 0:x.minConfidence)||.2)&&d.race.push({score:Math.round(100*h[y])/100,race:x2e[y]});d.race.sort((y,b)=>b.score-y.score);let m=Array.from(await c.age.data()).map((y,b)=>[b2e[b],y]).sort((y,b)=>b[1]-y[1]),g=m[0][0];for(let y=1;y<m.length;y++)g+=m[y][1]*(m[y][0]-g);d.age=Math.round(10*g)/10,Object.keys(c).forEach(y=>te(c[y])),Qx[n]=d,w8=s,k8=ie(),l(d)}))}var Ke={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function S8(){Ke.tf255=Ce(255,"float32"),Ke.tf1=Ce(1,"float32"),Ke.tf2=Ce(2,"float32"),Ke.tf05=Ce(.5,"float32"),Ke.tf127=Ce(127.5,"float32"),Ke.rgb=St([.2989,.587,.114],"float32")}var Fn,f0=[],C8=0,T8=0,nb=Number.MAX_SAFE_INTEGER;async function N8(e){return he.initial&&(Fn=null),Fn?e.debug&&J("cached model:",Fn.modelUrl):(Fn=await Be(We(e.modelBasePath,e.face.ssrnet.modelPathAge)),!Fn||!Fn.modelUrl?J("load model failed:",e.face.ssrnet.modelPathAge):e.debug&&J("load model:",Fn.modelUrl)),Fn}async function sb(e,t,n,s){var o,i,l,c;if(!Fn)return{age:0};let r=nb<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ie()-T8;return t.skipAllowed&&r&&a&&C8===s&&((l=f0[n])==null?void 0:l.age)&&((c=f0[n])==null?void 0:c.age)>0?(nb++,f0[n]):(nb=0,new Promise(async u=>{if(!(Fn==null?void 0:Fn.inputs)||!Fn.inputs[0]||!Fn.inputs[0].shape)return;let d={};d.resize=Ie.resizeBilinear(e,[Fn.inputs[0].shape[2],Fn.inputs[0].shape[1]],!1),d.enhance=L(d.resize,Ke.tf255);let p={age:0};if(t.face.ssrnet.enabled&&(d.age=Fn.execute(d.enhance)),d.age){let h=await d.age.data();p.age=Math.trunc(10*h[0])/10}Object.keys(d).forEach(h=>te(d[h])),f0[n]=p,C8=s,T8=ie(),u(p)}))}var fs,m0=[],E8=0,R8=0,rb=Number.MAX_SAFE_INTEGER,ab=[.2989,.587,.114];async function $8(e){return he.initial&&(fs=null),fs?e.debug&&J("cached model:",fs.modelUrl):(fs=await Be(We(e.modelBasePath,e.face.ssrnet.modelPathGender)),!fs||!fs.modelUrl?J("load model failed:",e.face.ssrnet.modelPathGender):e.debug&&J("load model:",fs.modelUrl)),fs}async function ob(e,t,n,s){var o,i,l,c;if(!fs)return{gender:"unknown",genderScore:0};let r=rb<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ie()-R8;return t.skipAllowed&&r&&a&&E8===s&&((l=m0[n])==null?void 0:l.gender)&&((c=m0[n])==null?void 0:c.genderScore)>0?(rb++,m0[n]):(rb=0,new Promise(async u=>{if(!(fs==null?void 0:fs.inputs[0].shape))return;let d={};d.resize=Ie.resizeBilinear(e,[fs.inputs[0].shape[2],fs.inputs[0].shape[1]],!1),d.enhance=X(()=>{let[f,m,g]=jt(d.resize,3,3),A=L(f,ab[0]),x=L(m,ab[1]),y=L(g,ab[2]),b=mf([A,x,y]);return L(pe(b,Ke.tf05),2)});let p={gender:"",genderScore:0};t.face.ssrnet.enabled&&(d.gender=fs.execute(d.enhance));let h=await d.gender.data();p.gender=h[0]>h[1]?"female":"male",p.genderScore=h[0]>h[1]?Math.trunc(100*h[0])/100:Math.trunc(100*h[1])/100,Object.keys(d).forEach(f=>te(d[f])),m0[n]=p,E8=s,R8=ie(),u(p)}))}var pn,g0=[],ib=Number.MAX_SAFE_INTEGER,_8=0,D8=0;async function F8(e){var t,n;return he.initial&&(pn=null),pn?e.debug&&J("cached model:",pn.modelUrl):(pn=await Be(We(e.modelBasePath,((t=e.face.antispoof)==null?void 0:t.modelPath)||"")),!pn||!pn.modelUrl?J("load model failed:",(n=e.face.antispoof)==null?void 0:n.modelPath):e.debug&&J("load model:",pn.modelUrl)),pn}async function lb(e,t,n,s){var o,i;if(!pn)return 0;let r=(((o=t.face.antispoof)==null?void 0:o.skipTime)||0)>ie()-D8,a=ib<(((i=t.face.antispoof)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&_8===s&&g0[n]?(ib++,g0[n]):(ib=0,new Promise(async l=>{let c=Ie.resizeBilinear(e,[(pn==null?void 0:pn.inputs[0].shape)?pn.inputs[0].shape[2]:0,(pn==null?void 0:pn.inputs[0].shape)?pn.inputs[0].shape[1]:0],!1),u=pn==null?void 0:pn.execute(c),d=(await u.data())[0];g0[n]=Math.round(100*d)/100,_8=s,D8=ie(),te([c,u]),l(g0[n])}))}var lr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},ub={count:468,mouth:13,symmetryLine:[13,lr.midwayBetweenEyes[0]]},Fp={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},cb=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],Pp=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],Fl=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];var v2e=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],w2e=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],k2e=[33,133,362,263,1,78,308],fAe=v2e.map(e=>Pp[e]),mAe=w2e.map(e=>Pp[e]),gAe=k2e.map(e=>Pp[e]);var Op=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],A0=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2],db=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],pb=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],P8=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:s,landmarks:e.landmarks,confidence:e.confidence}},hb=(e,t,n)=>{let s=t.shape[1],r=t.shape[2],a=Ie.cropAndResize(t,[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]],[0],n),o=de(a,Ke.tf255);return te(a),o},Mp=(e,t)=>{let n=A0(e),s=Op(e),r=[t*s[0]/2,t*s[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},zp=e=>{let t=A0(e),n=Op(e),s=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-s),Math.round(t[1]-s)],endPoint:[Math.round(t[0]+s),Math.round(t[1]+s)],landmarks:e.landmarks,confidence:e.confidence}},y0=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},fb=[[1,0,0],[0,1,0],[0,0,1]],I2e=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),S2e=(e,t)=>I2e(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]));var O8=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Pl=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},C2e=(e,t)=>{let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n},M8=(e,t)=>{let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(Pl(e[r],C2e(t,a)))}return n},z8=(e,t)=>{let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=O8(t[0],t[1]),o=M8(a,r),i=O8(-t[0],-t[1]);return M8(o,i)},T2e=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-Pl(t[0],n),-Pl(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]},N2e=(e,t)=>[Pl(e,t[0]),Pl(e,t[1])];function L8(e){let t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let s=0;s<t.strides.length;s++){let r=t.strides[s],a=Math.floor((e+r-1)/r),o=Math.floor((e+r-1)/r),i=t.anchors[s];for(let l=0;l<a;l++){let c=r*(l+.5);for(let u=0;u<o;u++){let d=r*(u+.5);for(let p=0;p<i;p++)n.push([d,c])}}}return n}function B8(e,t,n,s,r){let a=Op(t),o=e.map(p=>[a[0]/r*(p[0]-r/2),a[1]/r*(p[1]-r/2),p[2]||0]),i=n&&n!==0&&Math.abs(n)>.2,l=i?z8(n,[0,0]):fb,c=i?o.map(p=>[...N2e(p,l),p[2]]):o,u=i?T2e(s):fb,d=[...A0({startPoint:t.startPoint,endPoint:t.endPoint}),1];return c.map(p=>[Math.round(p[0]+Pl(d,u[0])),Math.round(p[1]+Pl(d,u[1])),Math.round(p[2]||0)])}function mb(e,t,n,s){let r=t.landmarks.length>=ub.count?ub.symmetryLine:Fp.symmetryLine,a=0,o=fb,i;if(e&&he.kernels.includes("rotatewithoffset"))if(a=S2e(t.landmarks[r[0]],t.landmarks[r[1]]),a&&a!==0&&Math.abs(a)>.2){let c=A0({startPoint:t.startPoint,endPoint:t.endPoint}),u=[c[0]/n.shape[2],c[1]/n.shape[1]],d=Ie.rotateWithOffset(n,a,0,u);o=z8(-a,c),i=hb(t,d,[s,s]),te(d)}else i=hb(t,n,[s,s]);else i=hb(t,n,[s,s]);return[a,o,i]}var W8=6,Hs,V8=null,Ko=0,Lp=null,x0=()=>Ko;async function U8(e){var t,n;return he.initial&&(Hs=null),Hs?e.debug&&J("cached model:",Hs.modelUrl):(Hs=await Be(We(e.modelBasePath,((t=e.face.detector)==null?void 0:t.modelPath)||"")),!Hs||!Hs.modelUrl?J("load model failed:",(n=e.face.detector)==null?void 0:n.modelPath):e.debug&&J("load model:",Hs.modelUrl)),Ko=Hs.inputs[0].shape?Hs.inputs[0].shape[2]:0,Lp=Ce(Ko,"int32"),V8=gr(L8(Ko)),Hs}function E2e(e){let t={};t.boxStarts=De(e,[0,1],[-1,2]),t.centers=le(t.boxStarts,V8),t.boxSizes=De(e,[0,3],[-1,2]),t.boxSizesNormalized=de(t.boxSizes,Lp),t.centersNormalized=de(t.centers,Lp),t.halfBoxSize=de(t.boxSizesNormalized,Ke.tf2),t.starts=pe(t.centersNormalized,t.halfBoxSize),t.ends=le(t.centersNormalized,t.halfBoxSize),t.startNormalized=L(t.starts,Lp),t.endNormalized=L(t.ends,Lp);let n=zu([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(s=>te(t[s])),n}async function G8(e,t){var i,l,c,u;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return{boxes:[]};let n={};n.resized=Ie.resizeBilinear(e,[Ko,Ko]),n.div=de(n.resized,Ke.tf127),n.normalized=pe(n.div,Ke.tf05);let s=Hs==null?void 0:Hs.execute(n.normalized);if(Array.isArray(s)){let d=s.sort((p,h)=>p.size-h.size);n.concat384=It([d[0],d[2]],2),n.concat512=It([d[1],d[3]],2),n.concat=It([n.concat512,n.concat384],1),n.batch=Ge(n.concat,0)}else n.batch=Ge(s);te(s),n.boxes=E2e(n.batch),n.logits=De(n.batch,[0,0],[-1,1]),n.sigmoid=Wn(n.logits),n.scores=Ge(n.sigmoid),n.nms=await Ie.nonMaxSuppressionAsync(n.boxes,n.scores,((i=t.face.detector)==null?void 0:i.maxDetected)||0,((l=t.face.detector)==null?void 0:l.iouThreshold)||0,((c=t.face.detector)==null?void 0:c.minConfidence)||0);let r=await n.nms.array(),a=[],o=await n.scores.data();for(let d=0;d<r.length;d++){let p=o[r[d]];if(p>(((u=t.face.detector)==null?void 0:u.minConfidence)||0)){let h={};h.bbox=De(n.boxes,[r[d],0],[1,-1]),h.slice=De(n.batch,[r[d],W8-1],[1,-1]),h.squeeze=Ge(h.slice),h.landmarks=H(h.squeeze,[W8,-1]);let f=await h.bbox.data();a.push({box:{startPoint:[f[0],f[1]],endPoint:[f[2],f[3]]},landmarks:await h.landmarks.array(),confidence:p}),Object.keys(h).forEach(m=>te(h[m]))}}return Object.keys(n).forEach(d=>te(n[d])),{boxes:a,scaleFactor:[e.shape[2]/Ko,e.shape[1]/Ko]}}var yb={};Jc(yb,{connected:()=>Ab,kpt:()=>gb});var gb=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],Ab={leftLeg:["leftHip","leftKnee","leftAnkle","leftHeel","leftFoot"],rightLeg:["rightHip","rightKnee","rightAnkle","rightHeel","rightFoot"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder","rightShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist","leftPalm"],rightArm:["rightShoulder","rightElbow","rightWrist","rightPalm"],leftEye:["leftEyeInside","leftEye","leftEyeOutside"],rightEye:["rightEyeInside","rightEye","rightEyeOutside"],mouth:["leftMouth","rightMouth"]};var Cc=224,H8,R2e=5,b0=[8,16,32,32,32];async function j8(){let e=[],t=0;for(;t<R2e;){let n=0,s=t;for(;s<b0.length&&b0[s]===b0[t];)n+=2,s++;let r=b0[t],a=Math.ceil(Cc/r),o=Math.ceil(Cc/r);for(let i=0;i<a;++i)for(let l=0;l<o;++l)for(let c=0;c<n;++c)e.push({x:(l+.5)/o,y:(i+.5)/a});t=s}H8={x:St(e.map(n=>n.x)),y:St(e.map(n=>n.y))}}var q8=[5,5];function $2e(e,t){return X(()=>{let n=jt(e,12,1),s=Ge(n[0]),r=Ge(n[1]),a=Ge(n[2]),o=Ge(n[3]);s=le(de(s,Cc),t.x),r=le(de(r,Cc),t.y),a=L(de(a,Cc),q8[0]),o=L(de(o,Cc),q8[1]);let i=pe(s,de(a,2)),l=pe(r,de(o,2));return Yt([i,l,a,o],1)})}async function X8(e,t,n,s){let r={};r.boxes=$2e(e,H8),r.scores=Wn(t),r.argmax=ys(r.scores);let a=(await r.argmax.data())[0],o=await r.scores.data(),i=[],l=n.body.detector&&n.body.detector.minConfidence?n.body.detector.minConfidence:0;if(o[a]>=l){let u=(await r.boxes.array())[a],d=[u[0]*s[0],u[1]*s[1],u[2]*s[0],u[3]*s[1]];i.push({box:d,boxRaw:u,score:o[a]})}return Object.keys(r).forEach(c=>te(r[c])),i}var K8={initial:!0},tn={detector:null,landmarks:null},Tc={detector:[224,224],landmarks:[256,256]},xb=Number.MAX_SAFE_INTEGER,_2e={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},Ol=null,D2e,Yn=[[0,0],[0,0],[0,0],[0,0]],Z8=0,Y8=e=>1-1/(1+Math.exp(e));async function J8(e){if(K8.initial&&(tn.detector=null),!tn.detector&&e.body.detector&&e.body.detector.modelPath){tn.detector=await Be(We(e.modelBasePath,e.body.detector.modelPath||""));let t=Object.values(tn.detector.modelSignature.inputs);Tc.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Tc.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!tn.detector||!tn.detector.modelUrl?J("load model failed:",e.body.detector.modelPath):e.debug&&J("load model:",tn.detector.modelUrl)}else e.debug&&tn.detector&&J("cached model:",tn.detector.modelUrl);return await j8(),tn.detector}async function Q8(e){if(K8.initial&&(tn.landmarks=null),tn.landmarks)e.debug&&J("cached model:",tn.landmarks.modelUrl);else{tn.landmarks=await Be(We(e.modelBasePath,e.body.modelPath||""));let t=Object.values(tn.landmarks.modelSignature.inputs);Tc.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Tc.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!tn.landmarks||!tn.landmarks.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",tn.landmarks.modelUrl)}return tn.landmarks}function F2e(e,t){let n=e.map(o=>o.position[0]),s=e.map(o=>o.position[1]),r=[Math.min(...n),Math.min(...s),Math.max(...n)-Math.min(...n),Math.max(...s)-Math.min(...s)],a=[r[0]/t[0],r[1]/t[1],r[2]/t[0],r[3]/t[1]];return{keypointsBox:r,keypointsBoxRaw:a}}async function bb(e,t,n){let s={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let r;if(e.shape[1]!==e.shape[2]){let a=n?[Math.trunc(e.shape[1]*n[1]),Math.trunc(e.shape[1]*(n[1]+n[3]))]:[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],o=n?[Math.trunc(e.shape[2]*n[0]),Math.trunc(e.shape[2]*(n[0]+n[2]))]:[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];Yn=[[0,0],a,o,[0,0]],n?s.resize=Ie.cropAndResize(e,[n],[0],[t,t]):(s.pad=tr(e,Yn),s.resize=Ie.resizeBilinear(s.pad,[t,t])),r=de(s.resize,Ke.tf255)}else e.shape[1]!==t?(s.resize=Ie.resizeBilinear(e,[t,t]),r=de(s.resize,Ke.tf255)):r=de(e,Ke.tf255);return Object.keys(s).forEach(a=>te(s[a])),r}function P2e(e,t){for(let n of e)n.position=[Math.trunc(n.position[0]*(t[0]+Yn[2][0]+Yn[2][1])/t[0]-Yn[2][0]),Math.trunc(n.position[1]*(t[1]+Yn[1][0]+Yn[1][1])/t[1]-Yn[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],n.position[2]];return e}function O2e(e,t){for(let n of e)n.box=[Math.trunc(n.box[0]*(t[0]+Yn[2][0]+Yn[2][1])/t[0]),Math.trunc(n.box[1]*(t[1]+Yn[1][0]+Yn[1][1])/t[1]),Math.trunc(n.box[2]*(t[0]+Yn[2][0]+Yn[2][1])/t[0]),Math.trunc(n.box[3]*(t[1]+Yn[1][0]+Yn[1][1])/t[1])],n.boxRaw=[n.box[0]/t[0],n.box[1]/t[1],n.box[2]/t[0],n.box[3]/t[1]];return e}async function eT(e,t,n){var p;let s={};[s.ld,s.segmentation,s.heatmap,s.world,s.poseflag]=(p=tn.landmarks)==null?void 0:p.execute(e,_2e.landmarks);let r=(await s.poseflag.data())[0],a=await s.ld.data();Object.keys(s).forEach(h=>te(s[h]));let o=[],i=5;for(let h=0;h<a.length/i;h++){let f=Y8(a[i*h+3]),m=Y8(a[i*h+4]),g=Math.trunc(100*f*m*r)/100,A=[a[i*h+0]/Tc.landmarks[0],a[i*h+1]/Tc.landmarks[1],a[i*h+2]+0],x=[Math.trunc(n[0]*A[0]),Math.trunc(n[1]*A[1]),A[2]];o.push({part:gb[h],positionRaw:A,position:x,score:g})}if(r<(t.body.minConfidence||0))return null;let l=P2e(o,n),c=F2e(l,[n[0],n[1]]),u={};for(let[h,f]of Object.entries(Ab)){let m=[];for(let g=0;g<f.length-1;g++){let A=l.find(y=>y.part===f[g]),x=l.find(y=>y.part===f[g+1]);A&&x&&m.push([A.position,x.position])}u[h]=m}return{id:0,score:Math.trunc(100*r)/100,box:c.keypointsBox,boxRaw:c.keypointsBoxRaw,keypoints:l,annotations:u}}async function M2e(e,t,n){var a;let s={};s.res=(a=tn.detector)==null?void 0:a.execute(e,["Identity"]),s.logitsRaw=De(s.res,[0,0,0],[1,-1,1]),s.boxesRaw=De(s.res,[0,0,1],[1,-1,-1]),s.logits=Ge(s.logitsRaw),s.boxes=Ge(s.boxesRaw);let r=await X8(s.boxes,s.logits,t,n);return O2e(r,n),Object.keys(s).forEach(o=>te(s[o])),r}async function vb(e,t){let n=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>ie()-Z8,r=xb<(t.body.skipFrames||0);if(t.skipAllowed&&s&&r&&Ol!==null)xb++;else{let a={};if(t.body.detector&&t.body.detector.enabled){a.detector=await bb(e,224);let o=await M2e(a.detector,t,n);o&&o.length===1&&(a.landmarks=await bb(e,256,o[0].box),Ol=await eT(a.landmarks,t,n)),Ol&&(Ol.score=o[0].score)}else a.landmarks=await bb(e,256,D2e),Ol=await eT(a.landmarks,t,n);Object.keys(a).forEach(o=>te(a[o])),Z8=ie(),xb=0}return Ol?[Ol]:[]}var Nc=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}];var ur,Ml=0,wb=[],tT=0,kb=Number.MAX_SAFE_INTEGER;async function nT(e){if(he.initial&&(ur=null),ur)e.debug&&J("cached model:",ur.modelUrl);else{ur=await Be(We(e.modelBasePath,e.object.modelPath||""));let t=Object.values(ur.modelSignature.inputs);Ml=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!ur||!ur.modelUrl?J("load model failed:",e.object.modelPath):e.debug&&J("load model:",ur.modelUrl)}return ur}async function z2e(e,t,n){if(!e)return[];let s={},r=[],a=await e.array();s.squeeze=Ge(e);let o=jt(s.squeeze,6,1);s.stack=Yt([o[1],o[0],o[3],o[2]],1),s.boxes=Ge(s.stack),s.scores=Ge(o[4]),s.classes=Ge(o[5]),te([e,...o]),s.nms=await Ie.nonMaxSuppressionAsync(s.boxes,s.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);let i=await s.nms.data(),l=0;for(let c of Array.from(i)){let u=Math.trunc(100*a[0][c][4])/100,d=a[0][c][5],p=Nc[d].label,[h,f]=[a[0][c][0]/Ml,a[0][c][1]/Ml],m=[h,f,a[0][c][2]/Ml-h,a[0][c][3]/Ml-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];r.push({id:l++,score:u,class:d,label:p,box:g,boxRaw:m})}return Object.keys(s).forEach(c=>te(s[c])),r}async function Ib(e,t){let n=(t.object.skipTime||0)>ie()-tT,s=kb<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&wb.length>0?(kb++,wb):(kb=0,new Promise(async r=>{let a=[e.shape[2],e.shape[1]],o=Ie.resizeBilinear(e,[Ml,Ml]),i=t.object.enabled?ur==null?void 0:ur.execute(o,["tower_0/detections"]):null;tT=ie(),te(o);let l=await z2e(i,a,t);wb=l,r(l)}))}var Tb={};Jc(Tb,{connected:()=>Cb,kpt:()=>Sb});var Sb=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],Cb={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var hn,sT=0,Jn={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},Nb=Number.MAX_SAFE_INTEGER;async function rT(e){return he.initial&&(hn=null),hn?e.debug&&J("cached model:",hn.modelUrl):(hn=await Be(We(e.modelBasePath,e.body.modelPath||"")),!hn||!hn.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",hn.modelUrl)),hn}async function L2e(e,t){let[n,s]=e.shape,r=H(e,[s*n]),a=xn(r,0),o=(await a.data())[0];if(te([r,a]),o>t){let i=ys(r,0),l=Ld(i,n),c=(await l.data())[0],u=de(i,Ce(n,"int32")),d=(await u.data())[0];return te([l,u]),[c,d,o]}return[0,0,o]}async function Eb(e,t){let n=(t.body.skipTime||0)>ie()-sT,s=Nb<(t.body.skipFrames||0);return t.skipAllowed&&n&&s&&Object.keys(Jn.keypoints).length>0?(Nb++,[Jn]):(Nb=0,new Promise(async r=>{var d;let a=X(()=>{if(!(hn==null?void 0:hn.inputs[0].shape))return null;let p=Ie.resizeBilinear(e,[hn.inputs[0].shape[2],hn.inputs[0].shape[1]],!1),h=L(p,Ke.tf2);return pe(h,Ke.tf1)}),o;if(t.body.enabled&&(o=hn==null?void 0:hn.execute(a)),sT=ie(),te(a),o){Jn.keypoints.length=0;let p=o.squeeze();te(o);let h=p.unstack(2);te(p);for(let f=0;f<h.length;f++){let[m,g,A]=await L2e(h[f],t.body.minConfidence);A>(((d=t.body)==null?void 0:d.minConfidence)||0)&&Jn.keypoints.push({score:Math.round(100*A)/100,part:Sb[f],positionRaw:[m/hn.inputs[0].shape[2],g/hn.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/hn.inputs[0].shape[2]),Math.round(e.shape[1]*g/hn.inputs[0].shape[1])]})}h.forEach(f=>te(f))}Jn.score=Jn.keypoints.reduce((p,h)=>h.score>p?h.score:p,0);let i=Jn.keypoints.map(p=>p.position[0]),l=Jn.keypoints.map(p=>p.position[1]);Jn.box=[Math.min(...i),Math.min(...l),Math.max(...i)-Math.min(...i),Math.max(...l)-Math.min(...l)];let c=Jn.keypoints.map(p=>p.positionRaw[0]),u=Jn.keypoints.map(p=>p.positionRaw[1]);Jn.boxRaw=[Math.min(...c),Math.min(...u),Math.max(...c)-Math.min(...c),Math.max(...u)-Math.min(...u)];for(let[p,h]of Object.entries(Cb)){let f=[];for(let m=0;m<h.length-1;m++){let g=Jn.keypoints.find(x=>x.part===h[m]),A=Jn.keypoints.find(x=>x.part===h[m+1]);g&&A&&g.score>(t.body.minConfidence||0)&&A.score>(t.body.minConfidence||0)&&f.push([g.position,A.position])}Jn.annotations[p]=f}r([Jn])}))}var B2e=["angry","disgust","fear","happy","sad","surprise","neutral"],Qn,v0=[],aT=0,oT=0,Rb=Number.MAX_SAFE_INTEGER;async function iT(e){var t,n;return he.initial&&(Qn=null),Qn?e.debug&&J("cached model:",Qn.modelUrl):(Qn=await Be(We(e.modelBasePath,((t=e.face.emotion)==null?void 0:t.modelPath)||"")),!Qn||!Qn.modelUrl?J("load model failed:",(n=e.face.emotion)==null?void 0:n.modelPath):e.debug&&J("load model:",Qn.modelUrl)),Qn}async function $b(e,t,n,s){var o,i;if(!Qn)return[];let r=Rb<(((o=t.face.emotion)==null?void 0:o.skipFrames)||0),a=(((i=t.face.emotion)==null?void 0:i.skipTime)||0)>ie()-oT;return t.skipAllowed&&a&&r&&aT===s&&v0[n]&&v0[n].length>0?(Rb++,v0[n]):(Rb=0,new Promise(async l=>{var u,d;let c=[];if((u=t.face.emotion)==null?void 0:u.enabled){let p={},h=(Qn==null?void 0:Qn.inputs[0].shape)?Qn.inputs[0].shape[2]:0;p.resize=Ie.resizeBilinear(e,[h,h],!1),p.channels=L(p.resize,Ke.rgb),p.grayscale=we(p.channels,3,!0),p.grayscaleSub=pe(p.grayscale,Ke.tf05),p.grayscaleMul=L(p.grayscaleSub,Ke.tf2),p.emotion=Qn==null?void 0:Qn.execute(p.grayscaleMul),oT=ie();let f=await p.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((d=t.face.emotion)==null?void 0:d.minConfidence)||0)&&c.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:B2e[m]});c.sort((m,g)=>g.score-m.score),Object.keys(p).forEach(m=>te(p[m]))}v0[n]=c,aT=s,l(c)}))}var Cs,_b=[],lT=0,uT=0,cT=Number.MAX_SAFE_INTEGER;async function dT(e){let t=We(e.modelBasePath,e.face.mobilefacenet.modelPath);return he.initial&&(Cs=null),Cs?e.debug&&J("cached model:",t):(Cs=await Be(t),Cs?e.debug&&J("load model:",t):J("load model failed:",e.face.mobilefacenet.modelPath)),Cs}async function Db(e,t,n,s){var o,i;if(!Cs)return[];let r=cT<(((o=t.face.embedding)==null?void 0:o.skipFrames)||0),a=(((i=t.face.embedding)==null?void 0:i.skipTime)||0)>ie()-uT;return t.skipAllowed&&a&&r&&lT===s&&_b[n]?(cT++,_b[n]):new Promise(async l=>{var u;let c=[];if(((u=t.face.embedding)==null?void 0:u.enabled)&&(Cs==null?void 0:Cs.inputs[0].shape)){let d={};d.crop=Ie.resizeBilinear(e,[Cs.inputs[0].shape[2],Cs.inputs[0].shape[1]],!1),d.data=Cs==null?void 0:Cs.execute(d.crop);let p=await d.data.data();c=Array.from(p)}_b[n]=c,lT=s,uT=ie(),l(c)})}var cr,Zo=0,W2e=2.3,Fb=lr.leftEyeLower0,Pb=lr.rightEyeLower0,Ec={leftBounds:[Fb[0],Fb[Fb.length-1]],rightBounds:[Pb[0],Pb[Pb.length-1]]},Rc={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function pT(e){var t,n;return he.initial&&(cr=null),cr?e.debug&&J("cached model:",cr.modelUrl):(cr=await Be(We(e.modelBasePath,((t=e.face.iris)==null?void 0:t.modelPath)||"")),!cr||!cr.modelUrl?J("load model failed:",(n=e.face.iris)==null?void 0:n.modelPath):e.debug&&J("load model:",cr.modelUrl)),Zo=cr.inputs[0].shape?cr.inputs[0].shape[2]:0,Zo===-1&&(Zo=64),cr}function w0(e,t,n,s){for(let r=0;r<cb.length;r++){let{key:a,indices:o}=cb[r],i=lr[`${n}${a}`];if(!s||s.includes(a))for(let l=0;l<o.length;l++){let c=o[l];e[i[l]]=[t[c][0],t[c][1],(t[c][2]+e[i[l]][2])/2]}}}var V2e=e=>{let t=e[Ec.leftBounds[0]][2],n=e[Ec.rightBounds[0]][2];return t-n},hT=(e,t,n,s,r,a=!1)=>{let o=zp(Mp(y0([e[n],e[s]]),W2e)),i=Op(o),l=Ie.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[Zo,Zo]);if(a&&he.kernels.includes("flipleftright")){let c=Ie.flipLeftRight(l);te(l),l=c}return{box:o,boxSize:i,crop:l}},fT=(e,t,n,s=!1)=>{let r=[];for(let a=0;a<Rc.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];r.push([(s?1-o/Zo:o/Zo)*n[0]+t.startPoint[0],i/Zo*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(Rc.index)}},mT=(e,t,n)=>{let s=e[lr[`${n}EyeUpper0`][Rc.upperCenter]][2],r=e[lr[`${n}EyeLower0`][Rc.lowerCenter]][2],a=(s+r)/2;return t.map((o,i)=>{let l=a;return i===2?l=s:i===4&&(l=r),[o[0],o[1],l]})};async function gT(e,t,n,s){if(!cr)return n.debug&&J("face mesh iris detection requested, but model is not loaded"),e;let{box:r,boxSize:a,crop:o}=hT(e,t,Ec.leftBounds[0],Ec.leftBounds[1],s,!0),{box:i,boxSize:l,crop:c}=hT(e,t,Ec.rightBounds[0],Ec.rightBounds[1],s,!0),u=It([o,c]);te(o),te(c);let d=cr.execute(u);te(u);let p=await d.data();te(d);let h=p.slice(0,Rc.numCoordinates*3),{rawCoords:f,iris:m}=fT(h,r,a,!0),g=p.slice(Rc.numCoordinates*3),{rawCoords:A,iris:x}=fT(g,i,l),y=V2e(e);Math.abs(y)<30?(w0(e,f,"left",null),w0(e,A,"right",null)):y<1?w0(e,f,"left",["EyeUpper0","EyeLower0"]):w0(e,A,"right",["EyeUpper0","EyeLower0"]);let b=mT(e,m,"left"),w=mT(e,x,"right");return e.concat(b).concat(w)}var $c=[],dr=null,zl=0,Ob=Number.MAX_SAFE_INTEGER,AT=0;async function yT(e,t){var i,l,c,u,d,p,h,f,m,g,A;let n=(((i=t.face.detector)==null?void 0:i.skipTime)||0)>ie()-AT,s=Ob<(((l=t.face.detector)==null?void 0:l.skipFrames)||0);if(!t.skipAllowed||!n||!s||$c.length===0){let x=await G8(e,t);AT=ie(),$c=[];for(let y of x.boxes){let b={startPoint:y.box.startPoint,endPoint:y.box.endPoint,landmarks:y.landmarks,confidence:y.confidence},w=P8(b,x.scaleFactor),k=Mp(w,Math.sqrt(((c=t.face.detector)==null?void 0:c.cropFactor)||1.6)),S=zp(k);$c.push(S)}Ob=0}else Ob++;let r=[],a=[],o=0;for(let x=0;x<$c.length;x++){let y=$c[x],b=0,w,k={id:o++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([b,w,k.tensor]=mb((u=t.face.detector)==null?void 0:u.rotation,y,e,((d=t.face.mesh)==null?void 0:d.enabled)?zl:x0()),(p=t==null?void 0:t.filter)==null?void 0:p.equalization){let S=await p0(k.tensor);te(k.tensor),k.tensor=S}if(k.boxScore=Math.round(100*y.confidence)/100,(h=t.face.mesh)==null?void 0:h.enabled)if(!dr)t.debug&&J("face mesh detection requested, but model is not loaded");else{let[S,N,R]=dr.execute(k.tensor),M=await N.data();k.faceScore=Math.round(100*M[0])/100;let D=H(R,[-1,3]),$=await D.array();if(te([R,D,N,S]),k.faceScore<(((f=t.face.detector)==null?void 0:f.minConfidence)||1))y.confidence=k.faceScore;else{((m=t.face.iris)==null?void 0:m.enabled)&&($=await gT($,k.tensor,t,zl)),k.mesh=B8($,y,b,w,zl),k.meshRaw=k.mesh.map(T=>[T[0]/(e.shape[2]||0),T[1]/(e.shape[1]||0),(T[2]||0)/zl]);for(let T of Object.keys(lr))k.annotations[T]=lr[T].map(P=>k.mesh[P]);y=zp({...Mp(y0(k.mesh),((g=t.face.detector)==null?void 0:g.cropFactor)||1.6),confidence:y.confidence}),k.box=db(y,e),k.boxRaw=pb(y,e),k.score=k.faceScore,a.push(y),te(k.tensor),[b,w,k.tensor]=mb((A=t.face.detector)==null?void 0:A.rotation,y,e,zl)}}else{k.box=db(y,e),k.boxRaw=pb(y,e),k.score=k.boxScore,k.mesh=y.landmarks.map(S=>[(y.startPoint[0]+y.endPoint[0])/2+(y.endPoint[0]+y.startPoint[0])*S[0]/x0(),(y.startPoint[1]+y.endPoint[1])/2+(y.endPoint[1]+y.startPoint[1])*S[1]/x0()]),k.meshRaw=k.mesh.map(S=>[S[0]/(e.shape[2]||0),S[1]/(e.shape[1]||0),(S[2]||0)/zl]);for(let S of Object.keys(Fp))k.annotations[S]=[k.mesh[Fp[S]]]}r.push(k)}return $c=[...a],r}async function xT(e){var t,n;return he.initial&&(dr=null),dr?e.debug&&J("cached model:",dr.modelUrl):(dr=await Be(We(e.modelBasePath,((t=e.face.mesh)==null?void 0:t.modelPath)||"")),!dr||!dr.modelUrl?J("load model failed:",(n=e.face.mesh)==null?void 0:n.modelPath):e.debug&&J("load model:",dr.modelUrl)),zl=dr.inputs[0].shape?dr.inputs[0].shape[2]:0,dr}var bT=Fl,vT=Pp;var Ts,k0=[],wT=0,kT=0,Mb=Number.MAX_SAFE_INTEGER;async function IT(e){var n,s;let t=We(e.modelBasePath,((n=e.face.description)==null?void 0:n.modelPath)||"");return he.initial&&(Ts=null),Ts?e.debug&&J("cached model:",t):(Ts=await Be(t),Ts?e.debug&&J("load model:",t):J("load model failed:",((s=e.face.description)==null?void 0:s.modelPath)||"")),Ts}function zb(e){let t=e.image||e.tensor||e;if(!(Ts==null?void 0:Ts.inputs[0].shape))return t;let n=Ie.resizeBilinear(t,[Ts.inputs[0].shape[2],Ts.inputs[0].shape[1]],!1),s=L(n,Ke.tf255);return te(n),s}async function Lb(e,t,n,s){var o,i,l,c;if(!Ts)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};let r=Mb<(((o=t.face.description)==null?void 0:o.skipFrames)||0),a=(((i=t.face.description)==null?void 0:i.skipTime)||0)>ie()-wT;return t.skipAllowed&&r&&a&&kT===s&&((l=k0[n])==null?void 0:l.age)&&((c=k0[n])==null?void 0:c.age)>0?(Mb++,k0[n]):(Mb=0,new Promise(async u=>{var p,h;let d={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((p=t.face.description)==null?void 0:p.enabled){let f=zb(e),m=Ts==null?void 0:Ts.execute(f);wT=ie(),te(f);let A=await(await m.find(R=>R.shape[1]===1)).data(),x=Math.trunc(200*Math.abs(A[0]-.5))/100;x>(((h=t.face.description)==null?void 0:h.minConfidence)||0)&&(d.gender=A[0]<=.5?"female":"male",d.genderScore=Math.min(.99,x));let y=ys(m.find(R=>R.shape[1]===100),1),b=(await y.data())[0];te(y);let k=await m.find(R=>R.shape[1]===100).data();d.age=Math.round(k[b-1]>k[b+1]?10*b-100*k[b-1]:10*b+100*k[b+1])/10;let S=m.find(R=>R.shape[1]===1024),N=S?await S.data():[];d.descriptor=Array.from(N),m.forEach(R=>te(R))}k0[n]=d,kT=s,u(d)}))}function I0(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Bp(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function ST(e,t,n){let s=t.shape[1],r=t.shape[2],a=[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]];return Ie.cropAndResize(t,a,[0],n)}function CT(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:s,palmLandmarks:r,confidence:e.confidence}}function S0(e,t=1.5){let n=Bp(e),s=I0(e),r=[t*s[0]/2,t*s[1]/2],a=[n[0]-r[0],n[1]-r[1]],o=[n[0]+r[0],n[1]+r[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function C0(e){let t=Bp(e),n=I0(e),r=Math.max(...n)/2,a=[t[0]-r,t[1]-r],o=[t[0]+r,t[1]+r];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function U2e(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function TT(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return U2e(n)}var NT=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function Yo(e,t){let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n}function G2e(e,t){let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n}function ET(e,t){let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(Yo(e[r],G2e(t,a)))}return n}function Bb(e,t){let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=NT(t[0],t[1]),o=ET(a,r),i=NT(-t[0],-t[1]);return ET(o,i)}function RT(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-Yo(t[0],n),-Yo(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]}function Wb(e,t){return[Yo(e,t[0]),Yo(e,t[1])]}var $T=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}];var Vb=class{constructor(t){fe(this,"model");fe(this,"anchors");fe(this,"anchorsTensor");fe(this,"inputSize");fe(this,"inputSizeTensor");fe(this,"doubleInputSizeTensor");this.model=t,this.anchors=$T.map(n=>[n.x,n.y]),this.anchorsTensor=gr(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=St([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=St([this.inputSize*2,this.inputSize*2])}normalizeBoxes(t){let n={};n.boxOffsets=De(t,[0,0],[-1,2]),n.boxSizes=De(t,[0,2],[-1,2]),n.div=de(n.boxOffsets,this.inputSizeTensor),n.boxCenterPoints=le(n.div,this.anchorsTensor),n.halfBoxSizes=de(n.boxSizes,this.doubleInputSizeTensor),n.sub=pe(n.boxCenterPoints,n.halfBoxSizes),n.startPoints=L(n.sub,this.inputSizeTensor),n.add=le(n.boxCenterPoints,n.halfBoxSizes),n.endPoints=L(n.add,this.inputSizeTensor);let s=zu([n.startPoints,n.endPoints],1);return Object.keys(n).forEach(r=>te(n[r])),s}normalizeLandmarks(t,n){let s={};s.reshape=H(t,[-1,7,2]),s.div=de(s.reshape,this.inputSizeTensor),s.landmarks=le(s.div,this.anchors[n]);let r=L(s.landmarks,this.inputSizeTensor);return Object.keys(s).forEach(a=>te(s[a])),r}async predict(t,n){let s={};s.resize=Ie.resizeBilinear(t,[this.inputSize,this.inputSize]),s.div=de(s.resize,Ke.tf127),s.image=pe(s.div,Ke.tf1),s.batched=this.model.execute(s.image),s.predictions=Ge(s.batched),s.slice=De(s.predictions,[0,0],[-1,1]),s.sigmoid=Wn(s.slice),s.scores=Ge(s.sigmoid);let r=await s.scores.data();s.boxes=De(s.predictions,[0,1],[-1,4]),s.norm=this.normalizeBoxes(s.boxes),s.nms=await Ie.nonMaxSuppressionAsync(s.norm,s.scores,3*n.hand.maxDetected,n.hand.iouThreshold,n.hand.minConfidence);let a=await s.nms.array(),o=[];for(let i of a){let l={};l.box=De(s.norm,[i,0],[1,-1]),l.slice=De(s.predictions,[i,5],[1,14]),l.norm=this.normalizeLandmarks(l.slice,i),l.palmLandmarks=H(l.norm,[-1,2]);let c=await l.box.data(),u=c.slice(0,2),d=c.slice(2,4),p=await l.palmLandmarks.array(),h={startPoint:u,endPoint:d,palmLandmarks:p,confidence:r[i]},f=CT(h,[t.shape[2]/this.inputSize,t.shape[1]/this.inputSize]);o.push(f),Object.keys(l).forEach(m=>te(l[m]))}return Object.keys(s).forEach(i=>te(s[i])),o}};var H2e=5,_T=1.65,DT=[0,5,9,13,17,1,2],j2e=0,q2e=2,FT=0,Ub=class{constructor(t,n){fe(this,"handDetector");fe(this,"handPoseModel");fe(this,"inputSize");fe(this,"storedBoxes");fe(this,"skipped");fe(this,"detectedHands");this.handDetector=t,this.handPoseModel=n,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(t){let n=t.map(o=>o[0]),s=t.map(o=>o[1]),r=[Math.min(...n),Math.min(...s)],a=[Math.max(...n),Math.max(...s)];return{startPoint:r,endPoint:a}}getBoxForPalmLandmarks(t,n){let s=t.map(a=>Wb([...a,1],n)),r=this.calculateLandmarksBoundingBox(s);return S0(C0(r),H2e)}getBoxForHandLandmarks(t){let n=this.calculateLandmarksBoundingBox(t),s=S0(C0(n),_T);s.palmLandmarks=[];for(let r=0;r<DT.length;r++)s.palmLandmarks.push(t[DT[r]].slice(0,2));return s}transformRawCoords(t,n,s,r){let a=I0(n),o=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=t.map(h=>[o[0]*(h[0]-this.inputSize/2),o[1]*(h[1]-this.inputSize/2),o[2]*h[2]]),l=Bb(s,[0,0]),c=i.map(h=>[...Wb(h,l),h[2]]),u=RT(r),d=[...Bp(n),1],p=[Yo(d,u[0]),Yo(d,u[1])];return c.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2])])}async estimateHands(t,n){let s=!1,r,a=(n.hand.skipTime||0)>ie()-FT,o=this.skipped<(n.hand.skipFrames||0);n.skipAllowed&&a&&o&&(r=await this.handDetector.predict(t,n),this.skipped=0),n.skipAllowed&&this.skipped++,r&&r.length>0&&(r.length!==this.detectedHands&&this.detectedHands!==n.hand.maxDetected||!n.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...r],this.storedBoxes.length>0&&(s=!0));let i=[];for(let l=0;l<this.storedBoxes.length;l++){let c=this.storedBoxes[l];if(!!c)if(n.hand.landmarks){let u=n.hand.rotation?TT(c.palmLandmarks[j2e],c.palmLandmarks[q2e]):0,d=Bp(c),p=[d[0]/t.shape[2],d[1]/t.shape[1]],h=n.hand.rotation&&he.kernels.includes("rotatewithoffset")?Ie.rotateWithOffset(t,u,0,p):t.clone(),f=Bb(-u,d),m=s?this.getBoxForPalmLandmarks(c.palmLandmarks,f):c,g=ST(m,h,[this.inputSize,this.inputSize]),A=de(g,Ke.tf255);te(g),te(h);let[x,y]=this.handPoseModel.execute(A);FT=ie(),te(A);let b=(await x.data())[0];if(te(x),b>=n.hand.minConfidence/4){let w=H(y,[-1,3]),k=await w.array();te(y),te(w);let S=this.transformRawCoords(k,m,u,f),N=this.getBoxForHandLandmarks(S);this.storedBoxes[l]={...N,confidence:b};let R={landmarks:S,confidence:b,boxConfidence:c.confidence,fingerConfidence:b,box:{topLeft:N.startPoint,bottomRight:N.endPoint}};i.push(R)}else this.storedBoxes[l]=null;te(y)}else{let u=S0(C0(c),_T),d={confidence:c.confidence,boxConfidence:c.confidence,fingerConfidence:0,box:{topLeft:u.startPoint,bottomRight:u.endPoint},landmarks:[]};i.push(d)}}return this.storedBoxes=this.storedBoxes.filter(l=>l!==null),this.detectedHands=i.length,i.length>n.hand.maxDetected&&(i.length=n.hand.maxDetected),i}};var es={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>es.nameMapping[e],getPoints:e=>es.pointsMapping[e]},Jo={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>Jo.nameMapping[e]},Lt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Lt.nameMapping[e]},Ll=class{constructor(t){fe(this,"name");fe(this,"curls");fe(this,"directions");fe(this,"weights");fe(this,"weightsRelative");this.name=t,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(t,n,s){typeof this.curls[t]=="undefined"&&(this.curls[t]=[]),this.curls[t].push([n,s])}direction(t,n,s){this.directions[t]||(this.directions[t]=[]),this.directions[t].push([n,s])}weight(t,n){this.weights[t]=n;let s=this.weights.reduce((r,a)=>r+a,0);this.weightsRelative=this.weights.map(r=>r*5/s)}matchAgainst(t,n){let s=0;for(let r in t){let a=t[r],o=this.curls[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}for(let r in n){let a=n[r],o=this.directions[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}return s/10}};var{thumb:Sr,index:da,middle:pa,ring:Bl,pinky:Wl}=es,{none:Cr,half:X2e,full:Tr}=Jo,{verticalUp:_c,verticalDown:Bye,horizontalLeft:Gb,horizontalRight:K2e,diagonalUpRight:Z2e,diagonalUpLeft:Dc,diagonalDownRight:Wye,diagonalDownLeft:Vye}=Lt,Qo=new Ll("thumbs up");Qo.curl(Sr,Cr,1);Qo.direction(Sr,_c,1);Qo.direction(Sr,Dc,.25);Qo.direction(Sr,Z2e,.25);for(let e of[es.index,es.middle,es.ring,es.pinky])Qo.curl(e,Tr,1),Qo.direction(e,Gb,1),Qo.direction(e,K2e,1);var nn=new Ll("victory");nn.curl(Sr,X2e,.5);nn.curl(Sr,Cr,.5);nn.direction(Sr,_c,1);nn.direction(Sr,Dc,1);nn.curl(da,Cr,1);nn.direction(da,_c,.75);nn.direction(da,Dc,1);nn.curl(pa,Cr,1);nn.direction(pa,_c,1);nn.direction(pa,Dc,.75);nn.curl(Bl,Tr,1);nn.direction(Bl,_c,.2);nn.direction(Bl,Dc,1);nn.direction(Bl,Gb,.2);nn.curl(Wl,Tr,1);nn.direction(Wl,_c,.2);nn.direction(Wl,Dc,1);nn.direction(Wl,Gb,.2);nn.weight(da,2);nn.weight(pa,2);var ei=new Ll("point");ei.curl(Sr,Tr,1);ei.curl(da,Cr,.5);ei.curl(pa,Tr,.5);ei.curl(Bl,Tr,.5);ei.curl(Wl,Tr,.5);ei.weight(da,2);ei.weight(pa,2);var ti=new Ll("middle finger");ti.curl(Sr,Cr,1);ti.curl(da,Tr,.5);ti.curl(pa,Tr,.5);ti.curl(Bl,Tr,.5);ti.curl(Wl,Tr,.5);ti.weight(da,2);ti.weight(pa,2);var Fc=new Ll("open palm");Fc.curl(Sr,Cr,.75);Fc.curl(da,Cr,.75);Fc.curl(pa,Cr,.75);Fc.curl(Bl,Cr,.75);Fc.curl(Wl,Cr,.75);var PT=[Qo,nn,ei,ti,Fc];var Y2e=.7,Vl={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function OT(e,t,n,s){let r=(t-s)/(e-n),a=Math.atan(r)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function MT(e,t){if(!e||!t)return[0,0];let n=OT(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let s=OT(e[1],e[2],t[1],t[2]);return[n,s]}function zT(e,t=1){let n=0,s=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?s=1*t:r=1*t,[n,s,r]}function J2e(e,t,n){let s=e[0]-t[0],r=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],c=e[2]-t[2],u=e[2]-n[2],d=t[2]-n[2],p=Math.sqrt(s*s+o*o+c*c),h=Math.sqrt(r*r+i*i+u*u),f=Math.sqrt(a*a+l*l+d*d),m=(f*f+p*p-h*h)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let A;return g>Vl.NO_CURL_START_LIMIT?A=Jo.none:g>Vl.HALF_CURL_START_LIMIT?A=Jo.half:A=Jo.full,A}function LT(e,t,n,s){let r;return s===Math.abs(e)?e>0?r=Lt.horizontalLeft:r=Lt.horizontalRight:s===Math.abs(t)?t>0?r=Lt.horizontalLeft:r=Lt.horizontalRight:n>0?r=Lt.horizontalLeft:r=Lt.horizontalRight,r}function BT(e,t,n,s){let r;return s===Math.abs(e)?e<0?r=Lt.verticalDown:r=Lt.verticalUp:s===Math.abs(t)?t<0?r=Lt.verticalDown:r=Lt.verticalUp:n<0?r=Lt.verticalDown:r=Lt.verticalUp,r}function Q2e(e,t,n,s,r,a,o,i){let l,c=BT(e,t,n,s),u=LT(r,a,o,i);return c===Lt.verticalUp?u===Lt.horizontalLeft?l=Lt.diagonalUpLeft:l=Lt.diagonalUpRight:u===Lt.horizontalLeft?l=Lt.diagonalDownLeft:l=Lt.diagonalDownRight,l}function e1e(e,t,n,s){let r=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],c=t[1]-n[1],u=Math.max(Math.abs(r),Math.abs(a),Math.abs(o)),d=Math.max(Math.abs(i),Math.abs(l),Math.abs(c)),p=0,h=0,f=0,m=d/(u+1e-5);m>1.5?p+=Vl.DISTANCE_VOTE_POWER:m>.66?h+=Vl.DISTANCE_VOTE_POWER:f+=Vl.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+i*i),A=Math.sqrt(a*a+l*l),x=Math.sqrt(o*o+c*c),y=Math.max(g,A,x),b=e[0],w=e[1],k=n[0],S=n[1];y===g?(k=n[0],S=n[1]):y===x&&(b=t[0],w=t[1]);let M=MT([b,w],[k,S]),D=zT(M,Vl.TOTAL_ANGLE_VOTE_POWER);p+=D[0],h+=D[1],f+=D[2];for(let T of s){let P=zT(T,Vl.SINGLE_ANGLE_VOTE_POWER);p+=P[0],h+=P[1],f+=P[2]}let $;return p===Math.max(p,h,f)?$=BT(l,i,c,d):f===Math.max(h,f)?$=LT(a,r,o,u):$=Q2e(l,i,c,d,a,r,o,u),$}function WT(e){let t=[],n=[],s=[],r=[];if(!e)return{curls:s,directions:r};for(let a of es.all){let o=es.getPoints(a),i=[],l=[];for(let c of o){let u=e[c[0]],d=e[c[1]],p=MT(u,d),h=p[0],f=p[1];i.push(h),l.push(f)}t.push(i),n.push(l)}for(let a of es.all){let o=a===es.thumb?1:0,i=es.getPoints(a),l=e[i[o][0]],c=e[i[o+1][1]],u=e[i[3][1]],d=J2e(l,c,u),p=e1e(l,c,u,t[a].slice(o));s[a]=d,r[a]=p}return{curls:s,directions:r}}function T0(e){if(!e||e.length===0)return null;let t=WT(e),n={};for(let s of es.all)n[es.getName(s)]={curl:Jo.getName(t.curls[s]),direction:Lt.getName(t.directions[s])};return n}function VT(e){let t=[];if(!e||e.length===0)return t;let n=WT(e);for(let s of PT){let r=s.matchAgainst(n.curls,n.directions);r>=Y2e&&t.push({name:s.name,confidence:r})}return t}var UT={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},ha,fa,GT;async function Hb(e,t){let n=await GT.estimateHands(e,t);if(!n)return[];let s=[];for(let r=0;r<n.length;r++){let a={};if(n[r].landmarks)for(let u of Object.keys(UT))a[u]=UT[u].map(d=>n[r].landmarks[d]);let o=n[r].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let u of o)u[0]<i[0]&&(i[0]=u[0]),u[1]<i[1]&&(i[1]=u[1]),u[0]>i[2]&&(i[2]=u[0]),u[1]>i[3]&&(i[3]=u[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],l=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];let c=T0(o);s.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:c})}return s}async function jb(e){var n,s,r,a,o,i;he.initial&&(ha=null,fa=null),!ha||!fa?([ha,fa]=await Promise.all([e.hand.enabled?Be(We(e.modelBasePath,((n=e.hand.detector)==null?void 0:n.modelPath)||""),{fromTFHub:(((s=e.hand.detector)==null?void 0:s.modelPath)||"").includes("tfhub.dev")}):null,e.hand.landmarks?Be(We(e.modelBasePath,((r=e.hand.skeleton)==null?void 0:r.modelPath)||""),{fromTFHub:(((a=e.hand.skeleton)==null?void 0:a.modelPath)||"").includes("tfhub.dev")}):null]),e.hand.enabled&&(!ha||!ha.modelUrl?J("load model failed:",((o=e.hand.detector)==null?void 0:o.modelPath)||""):e.debug&&J("load model:",ha.modelUrl),!fa||!fa.modelUrl?J("load model failed:",((i=e.hand.skeleton)==null?void 0:i.modelPath)||""):e.debug&&J("load model:",fa.modelUrl))):(e.debug&&J("cached model:",ha.modelUrl),e.debug&&J("cached model:",fa.modelUrl));let t=new Vb(ha);return GT=new Ub(t,fa),[ha,fa]}function Ul(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[s[0],s[1],r[0]-s[0],r[1]-s[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function HT(e,t=[1,1]){let n=[e.map(c=>c[0]),e.map(c=>c[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[(s[0]+r[0])/2,(s[1]+r[1])/2],o=Math.max(a[0]-s[0],a[1]-s[1],-a[0]+r[0],-a[1]+r[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function N0(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}function qb(e){return[Math.max(0,e[1]),Math.max(0,e[0]),Math.min(1,e[3]+e[1]),Math.min(1,e[2]+e[0])]}var Nt=[null,null],t1e=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ni=[[0,0],[0,0]],n1e=["hand","fist","pinch","point","face","tip","pinchtip"],jT=4,qT=1.6,s1e=512,r1e=1.4,E0=Number.MAX_SAFE_INTEGER,Xb=0,ma=[0,0],Xt={boxes:[],hands:[]},XT={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function KT(e){var t,n;if(he.initial&&(Nt[0]=null),Nt[0])e.debug&&J("cached model:",Nt[0].modelUrl);else{R0(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),Nt[0]=await Be(We(e.modelBasePath,((t=e.hand.detector)==null?void 0:t.modelPath)||""));let s=Object.values(Nt[0].modelSignature.inputs);ni[0][0]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[1].size):0,ni[0][1]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[2].size):0,!Nt[0]||!Nt[0].modelUrl?J("load model failed:",(n=e.hand.detector)==null?void 0:n.modelPath):e.debug&&J("load model:",Nt[0].modelUrl)}return Nt[0]}async function ZT(e){var t,n;if(he.initial&&(Nt[1]=null),Nt[1])e.debug&&J("cached model:",Nt[1].modelUrl);else{Nt[1]=await Be(We(e.modelBasePath,((t=e.hand.skeleton)==null?void 0:t.modelPath)||""));let s=Object.values(Nt[1].modelSignature.inputs);ni[1][0]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[1].size):0,ni[1][1]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[2].size):0,!Nt[1]||!Nt[1].modelUrl?J("load model failed:",(n=e.hand.skeleton)==null?void 0:n.modelPath):e.debug&&J("load model:",Nt[1].modelUrl)}return Nt[1]}async function a1e(e,t){let n=[];if(!e||!Nt[0])return n;let s={},r=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,s1e),o=Math.round(a*r/8)*8;s.resize=Ie.resizeBilinear(e,[a,o]),s.cast=ge(s.resize,"int32"),[s.rawScores,s.rawBoxes]=await Nt[0].executeAsync(s.cast,t1e),s.boxes=Ge(s.rawBoxes,[0,2]),s.scores=Ge(s.rawScores,[0]);let i=ls(s.scores,1);te(i[jT]),i.splice(jT,1),s.filtered=Yt(i,1),te(i),s.max=xn(s.filtered,1),s.argmax=ys(s.filtered,1);let l=0;s.nms=await Ie.nonMaxSuppressionAsync(s.boxes,s.max,t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);let c=await s.nms.data(),u=await s.max.data(),d=await s.argmax.data();for(let p of Array.from(c)){let h=De(s.boxes,p,1),f=await h.data();te(h);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=N0(m,r1e),A=qb(g),x=[Math.trunc(m[0]*ma[0]),Math.trunc(m[1]*ma[1]),Math.trunc(m[2]*ma[0]),Math.trunc(m[3]*ma[1])],y=u[p],b=n1e[d[p]],w={id:l++,score:y,box:x,boxRaw:g,boxCrop:A,label:b};n.push(w)}return Object.keys(s).forEach(p=>te(s[p])),n.sort((p,h)=>h.score-p.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function Kb(e,t,n){let s={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&Nt[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let r={};r.crop=Ie.cropAndResize(e,[t.boxCrop],[0],[ni[1][0],ni[1][1]],"bilinear"),r.div=de(r.crop,Ke.tf255),[r.score,r.keypoints]=Nt[1].execute(r.div,["Identity_1","Identity"]);let a=(await r.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(a))))/100;if(o>=(n.hand.minConfidence||0)){s.fingerScore=o,r.reshaped=H(r.keypoints,[-1,3]);let c=(await r.reshaped.array()).map(u=>[u[0]/ni[1][1],u[1]/ni[1][0],u[2]||0]).map(u=>[u[0]*t.boxRaw[2],u[1]*t.boxRaw[3],u[2]||0]);s.keypoints=c.map(u=>[ma[0]*(u[0]+t.boxRaw[0]),ma[1]*(u[1]+t.boxRaw[1]),u[2]||0]),s.landmarks=T0(s.keypoints);for(let u of Object.keys(XT))s.annotations[u]=XT[u].map(d=>s.landmarks&&s.keypoints[d]?s.keypoints[d]:null)}Object.keys(r).forEach(i=>te(r[i]))}return s}async function Zb(e,t){var r,a;if(!Nt[0]||!Nt[1]||!((r=Nt[0])==null?void 0:r.inputs[0].shape)||!((a=Nt[1])==null?void 0:a.inputs[0].shape))return[];ma=[e.shape[2]||0,e.shape[1]||0],E0++;let n=(t.hand.skipTime||0)>ie()-Xb,s=E0<(t.hand.skipFrames||0);return t.skipAllowed&&n&&s?Xt.hands:new Promise(async o=>{let i=3*(t.hand.skipTime||0)>ie()-Xb,l=E0<3*(t.hand.skipFrames||0);t.skipAllowed&&Xt.hands.length===t.hand.maxDetected?Xt.hands=await Promise.all(Xt.boxes.map(u=>Kb(e,u,t))):t.skipAllowed&&i&&l&&Xt.hands.length>0?Xt.hands=await Promise.all(Xt.boxes.map(u=>Kb(e,u,t))):(Xt.boxes=await a1e(e,t),Xb=ie(),Xt.hands=await Promise.all(Xt.boxes.map(u=>Kb(e,u,t))),E0=0);let c=[...Xt.boxes];if(Xt.boxes.length=0,t.cacheSensitivity>0)for(let u=0;u<Xt.hands.length;u++){let d=HT(Xt.hands[u].keypoints,ma);if(d.box[2]/(e.shape[2]||1)>.05&&d.box[3]/(e.shape[1]||1)>.05&&Xt.hands[u].fingerScore&&Xt.hands[u].fingerScore>(t.hand.minConfidence||0)){let p=N0(d.box,qT),h=N0(d.boxRaw,qT),f=qb(h);Xt.boxes.push({...c[u],box:p,boxRaw:h,boxCrop:f})}}for(let u=0;u<Xt.hands.length;u++){let d=Ul(Xt.hands[u].keypoints,ma);Xt.hands[u].box=d.box,Xt.hands[u].boxRaw=d.boxRaw}o(Xt.hands)})}var fn,$0=[],Yb=Number.MAX_SAFE_INTEGER,YT=0,JT=0;async function QT(e){var t,n;return he.initial&&(fn=null),fn?e.debug&&J("cached model:",fn.modelUrl):(fn=await Be(We(e.modelBasePath,((t=e.face.liveness)==null?void 0:t.modelPath)||"")),!fn||!fn.modelUrl?J("load model failed:",(n=e.face.liveness)==null?void 0:n.modelPath):e.debug&&J("load model:",fn.modelUrl)),fn}async function Jb(e,t,n,s){var o,i;if(!fn)return 0;let r=(((o=t.face.liveness)==null?void 0:o.skipTime)||0)>ie()-JT,a=Yb<(((i=t.face.liveness)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&YT===s&&$0[n]?(Yb++,$0[n]):(Yb=0,new Promise(async l=>{let c=Ie.resizeBilinear(e,[(fn==null?void 0:fn.inputs[0].shape)?fn.inputs[0].shape[2]:0,(fn==null?void 0:fn.inputs[0].shape)?fn.inputs[0].shape[1]:0],!1),u=fn==null?void 0:fn.execute(c),d=(await u.data())[0];$0[n]=Math.round(100*d)/100,YT=s,JT=ie(),te([c,u]),l($0[n])}))}var n5={};Jc(n5,{connected:()=>D0,horizontal:()=>Qb,kpt:()=>_0,relative:()=>t5,vertical:()=>e5});var _0=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Qb=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],e5=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],t5=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],D0={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var eN=.005,Ns={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function s5(e){for(let t of Qb){let n=e.keypoints.findIndex(r=>r.part===t[0]),s=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[0]<e.keypoints[s].position[0]){let r=e.keypoints[n];e.keypoints[n]=e.keypoints[s],e.keypoints[s]=r}}for(let t of e5){let n=e.keypoints.findIndex(r=>r&&r.part===t[0]),s=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[1]<e.keypoints[s].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of t5){let s=e.keypoints.findIndex(c=>c&&c.part===t[0]),r=e.keypoints.findIndex(c=>c&&c.part===t[1]),a=e.keypoints.findIndex(c=>c&&c.part===n[0]),o=e.keypoints.findIndex(c=>c&&c.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[s]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let c=e.keypoints[s];e.keypoints[s]=e.keypoints[r],e.keypoints[r]=c}}}function tN(e){for(let t=0;t<e.length;t++)if(e[t]&&Ns.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-Ns.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-Ns.keypoints[t].positionRaw[1])];n[0]<eN&&n[1]<eN?e[t]=Ns.keypoints[t]:Ns.keypoints[t]=e[t]}else Ns.keypoints[t]=e[t];return e}function nN(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;Ns.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=tr(e,Ns.padding),n.resize=Ie.resizeBilinear(n.pad,[t,t]);let s=ge(n.resize,"int32");return Object.keys(n).forEach(r=>te(n[r])),s}function sN(e,t){e.keypoints=e.keypoints.filter(s=>s&&s.position);for(let s of e.keypoints)s.position=[s.position[0]*(t[0]+Ns.padding[2][0]+Ns.padding[2][1])/t[0]-Ns.padding[2][0],s.position[1]*(t[1]+Ns.padding[1][0]+Ns.padding[1][1])/t[1]-Ns.padding[1][0]],s.positionRaw=[s.position[0]/t[0],s.position[1]/t[1]];let n=Ul(e.keypoints.map(s=>s.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Pn,rN=0,r5=Number.MAX_SAFE_INTEGER,Gl={boxes:[],bodies:[],last:0};async function aN(e){return he.initial&&(Pn=null),Pn?e.debug&&J("cached model:",Pn.modelUrl):(R0(["size"],e),Pn=await Be(We(e.modelBasePath,e.body.modelPath||"")),!Pn||!Pn.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",Pn.modelUrl)),rN=Pn.inputs[0].shape?Pn.inputs[0].shape[2]:0,Pn}async function o1e(e,t,n){let s=e[0][0],r=[],a=0;for(let u=0;u<s.length;u++)if(a=s[u][2],a>t.body.minConfidence){let d=[s[u][1],s[u][0]];r.push({score:Math.round(100*a)/100,part:_0[u],positionRaw:d,position:[Math.round((n.shape[2]||0)*d[0]),Math.round((n.shape[1]||0)*d[1])]})}a=r.reduce((u,d)=>d.score>u?d.score:u,0);let o=[],i=Ul(r.map(u=>u.position),[n.shape[2],n.shape[1]]),l={};for(let[u,d]of Object.entries(D0)){let p=[];for(let h=0;h<d.length-1;h++){let f=r.find(g=>g.part===d[h]),m=r.find(g=>g.part===d[h+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&p.push([f.position,m.position])}l[u]=p}let c={id:0,score:a,box:i.box,boxRaw:i.boxRaw,keypoints:r,annotations:l};return s5(c),o.push(c),o}async function i1e(e,t,n){let s=[];for(let r=0;r<e[0].length;r++){let a=e[0][r],o=Math.round(100*a[51+4])/100;if(o>t.body.minConfidence){let i=[];for(let d=0;d<17;d++){let p=a[3*d+2];if(p>t.body.minConfidence){let h=[a[3*d+1],a[3*d+0]];i.push({part:_0[d],score:Math.round(100*p)/100,positionRaw:h,position:[Math.round((n.shape[2]||0)*h[0]),Math.round((n.shape[1]||0)*h[1])]})}}let l=Ul(i.map(d=>d.position),[n.shape[2],n.shape[1]]),c={};for(let[d,p]of Object.entries(D0)){let h=[];for(let f=0;f<p.length-1;f++){let m=i.find(A=>A.part===p[f]),g=i.find(A=>A.part===p[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}c[d]=h}let u={id:r,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:[...i],annotations:c};s5(u),s.push(u)}}return s.sort((r,a)=>a.score-r.score),s.length>t.body.maxDetected&&(s.length=t.body.maxDetected),s}async function a5(e,t){if(!Pn||!(Pn==null?void 0:Pn.inputs[0].shape))return[];t.skipAllowed||(Gl.boxes.length=0),r5++;let n=(t.body.skipTime||0)>ie()-Gl.last,s=r5<(t.body.skipFrames||0);return t.skipAllowed&&n&&s?Gl.bodies:new Promise(async r=>{let a={};r5=0,a.input=nN(e,rN),a.res=Pn==null?void 0:Pn.execute(a.input),Gl.last=ie();let o=await a.res.array();Gl.bodies=a.res.shape[2]===17?await o1e(o,t,e):await i1e(o,t,e);for(let i of Gl.bodies)sN(i,[e.shape[2]||1,e.shape[1]||1]),tN(i.keypoints);Object.keys(a).forEach(i=>te(a[i])),r(Gl.bodies)})}var js,F0=[],oN=0,o5=Number.MAX_SAFE_INTEGER,P0=2.5;async function iN(e){if(!js||he.initial){js=await Be(We(e.modelBasePath,e.object.modelPath||""));let t=Object.values(js.modelSignature.inputs);js.inputSize=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):null,!js||!js.modelUrl?J("load model failed:",e.object.modelPath):e.debug&&J("load model:",js.modelUrl)}else e.debug&&J("cached model:",js.modelUrl);return js}async function l1e(e,t,n,s){let r=0,a=[];for(let c of[1,2,4])X(async()=>{var g,A;let u=c*13,d=(g=e.find(x=>x.shape[1]===u**2&&x.shape[2]===Nc.length))==null?void 0:g.squeeze(),p=(A=e.find(x=>x.shape[1]===u**2&&x.shape[2]<Nc.length))==null?void 0:A.squeeze(),f=await p.reshape([-1,4,p.shape[1]/4]).argMax(2).array(),m=await d.array();for(let x=0;x<d.shape[0];x++)for(let y=0;y<d.shape[1];y++){let b=m[x][y];if(b>s.object.minConfidence&&y!==61){let w=(.5+Math.trunc(x%u))/u,k=(.5+Math.trunc(x/u))/u,S=f[x].map(W=>W*(u/c/t)),[N,R]=[w-P0/c*S[0],k-P0/c*S[1]],[M,D]=[w+P0/c*S[2]-N,k+P0/c*S[3]-R],$=[N,R,M,D];$=$.map(W=>Math.max(0,Math.min(W,1)));let T=[$[0]*n[0],$[1]*n[1],$[2]*n[0],$[3]*n[1]],P={id:r++,score:Math.round(100*b)/100,class:y+1,label:Nc[y].label,box:T.map(W=>Math.trunc(W)),boxRaw:$};a.push(P)}}});e.forEach(c=>te(c));let o=a.map(c=>[c.boxRaw[1],c.boxRaw[0],c.boxRaw[3],c.boxRaw[2]]),i=a.map(c=>c.score),l=[];if(o&&o.length>0){let c=await Ie.nonMaxSuppressionAsync(o,i,s.object.maxDetected,s.object.iouThreshold,s.object.minConfidence);l=await c.data(),te(c)}return a=a.filter((c,u)=>l.includes(u)).sort((c,u)=>u.score-c.score),a}async function i5(e,t){let n=(t.object.skipTime||0)>ie()-oN,s=o5<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&F0.length>0?(o5++,F0):(o5=0,!he.kernels.includes("mod")||!he.kernels.includes("sparsetodense")?F0:new Promise(async r=>{let a=[e.shape[2],e.shape[1]],o=Ie.resizeBilinear(e,[js.inputSize,js.inputSize],!1),i=de(o,Ke.tf255),l=i.transpose([0,3,1,2]);te(i),te(o);let c;t.object.enabled&&(c=js.execute(l)),oN=ie(),te(l);let u=await l1e(c,js.inputSize,a,t);F0=u,r(u)}))}var Wp=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],u1e=Wp.length,Vp=Wp.reduce((e,t,n)=>(e[t]=n,e),{}),c1e=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],$xe=c1e.map(([e,t])=>[Vp[e],Vp[t]]),lN=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function uN(e){let t=e.reduce(({maxX:n,maxY:s,minX:r,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(s,i),minX:Math.min(r,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function cN(e,[t,n],[s,r]){let a=t/s,o=n/r,i=(c,u)=>({id:u,score:c.score,boxRaw:[c.box[0]/r,c.box[1]/s,c.box[2]/r,c.box[3]/s],box:[Math.trunc(c.box[0]*o),Math.trunc(c.box[1]*a),Math.trunc(c.box[2]*o),Math.trunc(c.box[3]*a)],keypoints:c.keypoints.map(({score:d,part:p,position:h})=>({score:d,part:p,position:[Math.trunc(h.x*o),Math.trunc(h.y*a)],positionRaw:[h.x/s,h.y/s]}))});return e.map((c,u)=>i(c,u))}var l5=class{constructor(t,n){fe(this,"priorityQueue");fe(this,"numberOfElements");fe(this,"getElementValue");this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=n}enqueue(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)}dequeue(){let t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(t){for(;t>0&&this.less(Math.floor(t/2),t);)this.exchange(t,Math.floor(t/2)),t=Math.floor(t/2)}sink(t){for(;2*t<=this.numberOfElements;){let n=2*t;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(t,n))break;this.exchange(t,n),t=n}}getValueAt(t){return this.getElementValue(this.priorityQueue[t])}less(t,n){return this.getValueAt(t)<this.getValueAt(n)}exchange(t,n){let s=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[n],this.priorityQueue[n]=s}};function u5(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+u1e)}}function c5(e,t,n){let{heatmapY:s,heatmapX:r,id:a}=e,{y:o,x:i}=u5(s,r,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function d5(e,t,n){return e<t?t:e>n?n:e}function dN(e,t,n,s){let r=n-e,a=s-t;return r*r+a*a}function p5(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Es,d1e=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],O0=1,Pc=16,p1e=50**2;function pN(e,t,n,s,r,a,o=2){let i=A=>({y:a.get(A.y,A.x,e),x:a.get(A.y,A.x,a.shape[2]/2+e)}),l=(A,x,y)=>({y:d5(Math.round(A.y/Pc),0,x-1),x:d5(Math.round(A.x/Pc),0,y-1)}),[c,u]=s.shape,d=l(t.position,c,u),p=i(d),f=p5(t.position,p);for(let A=0;A<o;A++){let x=l(f,c,u),y=u5(x.y,x.x,n,r);f=p5({x:x.x*Pc,y:x.y*Pc},{x:y.x,y:y.y})}let m=l(f,c,u),g=s.get(m.y,m.x,n);return{position:f,part:Wp[n],score:g}}function h1e(e,t,n,s,r){let a=lN.map(([p,h])=>[Vp[p],Vp[h]]),o=a.map(([,p])=>p),i=a.map(([p])=>p),l=t.shape[2],c=o.length,u=new Array(l),d=c5(e.part,Pc,n);u[e.part.id]={score:e.score,part:Wp[e.part.id],position:d};for(let p=c-1;p>=0;--p){let h=o[p],f=i[p];u[h]&&!u[f]&&(u[f]=pN(p,u[h],f,t,n,r))}for(let p=0;p<c;++p){let h=i[p],f=o[p];u[h]&&!u[f]&&(u[f]=pN(p,u[h],f,t,n,s))}return u}function f1e(e,t,n,s,r){let[a,o]=r.shape,i=!0,l=Math.max(n-O0,0),c=Math.min(n+O0+1,a);for(let u=l;u<c;++u){let d=Math.max(s-O0,0),p=Math.min(s+O0+1,o);for(let h=d;h<p;++h)if(r.get(u,h,e)>t){i=!1;break}if(!i)break}return i}function m1e(e,t){let[n,s,r]=t.shape,a=new l5(n*s*r,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<s;++i)for(let l=0;l<r;++l){let c=t.get(o,i,l);c<e||f1e(l,c,o,i,t)&&a.enqueue({score:c,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function hN(e,{x:t,y:n},s){return e.some(({keypoints:r})=>{var o;let a=(o=r[s])==null?void 0:o.position;return a?dN(n,t,a.y,a.x)<=p1e:!1})}function g1e(e,t){return t.reduce((s,{position:r,score:a},o)=>(hN(e,r,o)||(s+=a),s),0)/t.length}function A1e(e,t,n,s,r,a){let o=[],i=m1e(a,t);for(;o.length<r&&!i.empty();){let l=i.dequeue(),c=c5(l.part,Pc,e);if(hN(o,c,l.part.id))continue;let u=h1e(l,t,e,n,s);u=u.filter(h=>h.score>a);let d=g1e(o,u),p=uN(u);d>a&&o.push({keypoints:u,box:p,score:Math.round(100*d)/100})}return o}async function h5(e,t){let n=X(()=>{if(!Es.inputs[0].shape)return[];let o=Ie.resizeBilinear(e,[Es.inputs[0].shape[2],Es.inputs[0].shape[1]]),i=pe(de(ge(o,"float32"),127.5),1),c=Es.execute(i,d1e).map(u=>Ge(u,[0]));return c[1]=c[1].sigmoid(),c}),s=await Promise.all(n.map(o=>o.buffer()));for(let o of n)te(o);let r=await A1e(s[0],s[1],s[2],s[3],t.body.maxDetected,t.body.minConfidence);return Es.inputs[0].shape?cN(r,[e.shape[1],e.shape[2]],[Es.inputs[0].shape[2],Es.inputs[0].shape[1]]):[]}async function fN(e){return!Es||he.initial?(Es=await Be(We(e.modelBasePath,e.body.modelPath||"")),!Es||!Es.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",Es.modelUrl)):e.debug&&J("cached model:",Es.modelUrl),Es}var qs,f5=!1;async function m5(e){return!qs||he.initial?(qs=await Be(We(e.modelBasePath,e.segmentation.modelPath||"")),!qs||!qs.modelUrl?J("load model failed:",e.segmentation.modelPath):e.debug&&J("load model:",qs.modelUrl)):e.debug&&J("cached model:",qs.modelUrl),qs}async function mN(e,t,n){var m,g;if(f5)return{data:[],canvas:null,alpha:null};f5=!0,qs||await m5(n);let s=await Sc(e,n),r=((m=s.tensor)==null?void 0:m.shape[2])||0,a=((g=s.tensor)==null?void 0:g.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};let o={};o.resize=Ie.resizeBilinear(s.tensor,[qs.inputs[0].shape?qs.inputs[0].shape[1]:0,qs.inputs[0].shape?qs.inputs[0].shape[2]:0],!1),te(s.tensor),o.norm=de(o.resize,Ke.tf255),o.res=qs.execute(o.norm),o.squeeze=Ge(o.res,0),o.squeeze.shape[2]===2?(o.softmax=Hu(o.squeeze),[o.bg,o.fg]=ls(o.softmax,2),o.expand=Zt(o.fg,2),o.pad=Zt(o.expand,0),o.crop=Ie.cropAndResize(o.pad,[[0,0,.5,.5]],[0],[r,a]),o.data=Ge(o.crop,0)):o.data=Ie.resizeBilinear(o.squeeze,[a,r]);let i=Array.from(await o.data.data());if(he.node&&!he.Canvas&&typeof ImageData=="undefined")return n.debug&&J("canvas support missing"),Object.keys(o).forEach(A=>te(o[A])),{data:i,canvas:null,alpha:null};let l=Zn(r,a);await Qs.toPixels(o.data,l);let c=l.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(c.filter=`blur(${n.segmentation.blur}px)`);let u=c.getImageData(0,0,r,a),d=Zn(r,a),p=d.getContext("2d");s.canvas&&p.drawImage(s.canvas,0,0),p.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(p.filter=`blur(${n.segmentation.blur}px)`),p.drawImage(l,0,0),p.globalCompositeOperation="source-over",p.filter="none";let h=p.getImageData(0,0,r,a);for(let A=0;A<r*a;A++)h.data[4*A+3]=u.data[4*A+0];p.putImageData(h,0,0);let f=null;if(t&&d){f=Zn(r,a);let A=await Sc(t,n);te(A.tensor);let x=f.getContext("2d");x.drawImage(A.canvas,0,0,f.width,f.height),x.drawImage(d,0,0)}return Object.keys(o).forEach(A=>te(o[A])),f5=!1,{data:i,canvas:d,alpha:l}}var g5=class{constructor(){fe(this,"ssrnetage",null);fe(this,"gear",null);fe(this,"blazeposedetect",null);fe(this,"blazepose",null);fe(this,"centernet",null);fe(this,"efficientpose",null);fe(this,"mobilefacenet",null);fe(this,"emotion",null);fe(this,"facedetect",null);fe(this,"faceiris",null);fe(this,"facemesh",null);fe(this,"faceres",null);fe(this,"ssrnetgender",null);fe(this,"handpose",null);fe(this,"handskeleton",null);fe(this,"handtrack",null);fe(this,"liveness",null);fe(this,"movenet",null);fe(this,"nanodet",null);fe(this,"posenet",null);fe(this,"segmentation",null);fe(this,"antispoof",null)}};function A5(e){for(let t of Object.keys(e.models))e.models[t]=null}async function gN(e){var t,n,s,r,a,o,i,l,c,u,d,p,h,f,m,g,A,x,y,b,w,k,S,N,R,M,D,$,T,P;he.initial&&A5(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await jb(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((r=(s=e.config.hand.detector)==null?void 0:s.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await jb(e.config))),e.config.body.enabled&&!e.models.blazepose&&((o=(a=e.config.body)==null?void 0:a.modelPath)==null?void 0:o.includes("blazepose"))&&(e.models.blazepose=Q8(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=J8(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((l=(i=e.config.body)==null?void 0:i.modelPath)==null?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=rT(e.config)),e.config.body.enabled&&!e.models.movenet&&((u=(c=e.config.body)==null?void 0:c.modelPath)==null?void 0:u.includes("movenet"))&&(e.models.movenet=aN(e.config)),e.config.body.enabled&&!e.models.posenet&&((p=(d=e.config.body)==null?void 0:d.modelPath)==null?void 0:p.includes("posenet"))&&(e.models.posenet=fN(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=U8(e.config)),e.config.face.enabled&&((h=e.config.face.antispoof)==null?void 0:h.enabled)&&!e.models.antispoof&&(e.models.antispoof=F8(e.config)),e.config.face.enabled&&((f=e.config.face.liveness)==null?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=QT(e.config)),e.config.face.enabled&&((m=e.config.face.description)==null?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=IT(e.config)),e.config.face.enabled&&((g=e.config.face.emotion)==null?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=iT(e.config)),e.config.face.enabled&&((A=e.config.face.iris)==null?void 0:A.enabled)&&!e.models.faceiris&&(e.models.faceiris=pT(e.config)),e.config.face.enabled&&((x=e.config.face.mesh)==null?void 0:x.enabled)&&!e.models.facemesh&&(e.models.facemesh=xT(e.config)),e.config.face.enabled&&((y=e.config.face.gear)==null?void 0:y.enabled)&&!e.models.gear&&(e.models.gear=I8(e.config)),e.config.face.enabled&&((b=e.config.face.ssrnet)==null?void 0:b.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=N8(e.config)),e.config.face.enabled&&((w=e.config.face.ssrnet)==null?void 0:w.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=$8(e.config)),e.config.face.enabled&&((k=e.config.face.mobilefacenet)==null?void 0:k.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=dT(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((N=(S=e.config.hand.detector)==null?void 0:S.modelPath)==null?void 0:N.includes("handtrack"))&&(e.models.handtrack=KT(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((M=(R=e.config.hand.detector)==null?void 0:R.modelPath)==null?void 0:M.includes("handtrack"))&&(e.models.handskeleton=ZT(e.config)),e.config.object.enabled&&!e.models.centernet&&(($=(D=e.config.object)==null?void 0:D.modelPath)==null?void 0:$.includes("centernet"))&&(e.models.centernet=nT(e.config)),e.config.object.enabled&&!e.models.nanodet&&((P=(T=e.config.object)==null?void 0:T.modelPath)==null?void 0:P.includes("nanodet"))&&(e.models.nanodet=iN(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=m5(e.config));for await(let W of Object.keys(e.models))e.models[W]&&typeof e.models[W]!="undefined"&&(e.models[W]=await e.models[W])}async function AN(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let n of Object.keys(e.models))if(e.models[n]){let s=[];Array.isArray(e.models[n])?s=e.models[n].filter(r=>r!==null).map(r=>r&&r.executor?r:r.model):s=[e.models[n]];for(let r of s){if(!r){e.config.debug&&J("model marked as loaded but not defined:",n);continue}let a=[],o=r==null?void 0:r.executor;if(o&&o.graph.nodes)for(let l of Object.values(o.graph.nodes)){let c=l.op.toLowerCase();a.includes(c)||a.push(c)}else!o&&e.config.debug&&J("model signature not determined:",n);let i=[];for(let l of a)!t.includes(l)&&!e.env.kernels.includes(l)&&!e.env.kernels.includes(l.replace("_",""))&&!e.env.kernels.includes(l.replace("native",""))&&!e.env.kernels.includes(l.replace("v2",""))&&i.push(l);i.length>0&&e.config.debug&&J("model validation:",n,i)}}}var Et={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function y1e(){let e=Et.gl;!e||(Et.extensions=e.getSupportedExtensions())}async function yN(e){var t;if(e.config.backend==="humangl"&&(Et.name in is().registry&&(!Et.gl||!Et.gl.getParameter(Et.gl.VERSION))&&(J("error: humangl backend invalid context"),A5(e)),!t1(Et.name))){try{Et.canvas=await Zn(100,100)}catch(s){J("error: cannot create canvas:",s);return}try{if(Et.gl=(t=Et.canvas)==null?void 0:t.getContext("webgl2",Et.webGLattr),!Et.gl.getParameter(Et.gl.VERSION).includes("2.0")){J("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}Et.canvas&&(Et.canvas.addEventListener("webglcontextlost",async r=>{throw J("error: humangl:",r.type),J("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),Et.canvas.addEventListener("webglcontextrestored",r=>{J("error: humangl context restored:",r)}),Et.canvas.addEventListener("webglcontextcreationerror",r=>{J("error: humangl context create:",r)}))}catch(s){J("error: cannot get WebGL context:",s);return}try{Mm(2,Et.gl)}catch(s){J("error: cannot set WebGL context:",s);return}try{let s=new jm(Et.gl);al(Et.name,()=>new bp(s),Et.priority)}catch(s){J("error: cannot register WebGL backend:",s);return}try{Yr("webgl").forEach(r=>{let a={...r,backendName:Et.name};pr(a)})}catch(s){J("error: cannot update WebGL backend registration:",s);return}let n=$r().getGPGPUContext?$r().getGPGPUContext().gl:null;if(n)J(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);else{J("error: no current gl context:",n,Et.gl);return}try{Nr.set("WEBGL_VERSION",2)}catch(s){J("error: cannot set WebGL backend flags:",s);return}y1e(),J("backend registered:",Et.name)}}function x1e(){if(!he.kernels.includes("mod")){let e={kernelName:"Mod",backendName:Fs(),kernelFunc:t=>X(()=>pe(t.inputs.a,L(de(t.inputs.a,t.inputs.b),t.inputs.b)))};pr(e),he.kernels.push("mod")}if(!he.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:Fs(),kernelFunc:t=>X(()=>ff(t.inputs.a/t.inputs.b)*t.inputs.b+Ld(t.inputs.a,t.inputs.b))};pr(e),he.kernels.push("floormod")}}async function M0(e,t=!1){if(e.state="backend",t||he.initial||e.config.backend&&e.config.backend.length>0&&Fs()!==e.config.backend){let n=ie();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&J("running inside web worker"),he.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&J("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),he.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&J(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),he.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")J("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let r=await navigator.gpu.requestAdapter();e.config.debug&&J("enumerated webgpu adapter:",r)}e.config.backend==="humangl"&&await yN(e);let s=Object.keys(is().registryFactory);if(e.config.debug&&J("available backends:",s),s.includes(e.config.backend)||(J(`error: backend ${e.config.backend} not found in registry`),e.config.backend=he.node?"tensorflow":"webgl",e.config.debug&&J(`override: setting backend ${e.config.backend}`)),e.config.debug&&J("setting backend:",e.config.backend),e.config.backend==="wasm"){if(e.config.debug&&J("wasm path:",e.config.wasmPath),typeof(Dl==null?void 0:Dl.setWasmPaths)!="undefined")await u8(e.config.wasmPath);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let r=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),a=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&J(`wasm execution: ${r?"SIMD":"no SIMD"} ${a?"multithreaded":"singlethreaded"}`),e.config.debug&&!r&&J("warning: wasm simd support is not enabled")}try{await ov(e.config.backend),await hf(),S8()}catch(r){return J("error: cannot set backend:",e.config.backend,r),!1}}if(Fs()==="humangl"&&(Nr.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Nr.set("WEBGL_CPU_FORWARD",!0),Nr.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Nr.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(J("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Nr.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),$r().getGPGPUContext)){let s=await $r().getGPGPUContext().gl;e.config.debug&&J(`gl version:${s.getParameter(s.VERSION)} renderer:${s.getParameter(s.RENDERER)}`)}Fs()==="webgpu",av(),await hf(),e.performance.initBackend=Math.trunc(ie()-n),e.config.backend=Fs(),await he.updateBackend(),x1e()}return!0}function R0(e,t){for(let n of e){let s={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&J("kernelFunc",n,t.backend)}};pr(s)}he.kernels=Yr(Fs()).map(n=>n.kernelName.toLowerCase())}var ga={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},y5=0,Hl=e=>{if(!e)J("draw error: invalid canvas");else if(!e.getContext)J("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)J("draw error: cannot get canvas context");else return t}return null},Oc=e=>Math.round(e*180/Math.PI);function x5(e,t,n,s,r){s=s||0,e.fillStyle=r.useDepth&&s?`rgba(${127.5+2*s}, ${127.5-2*s}, 255, 0.3)`:r.color,e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function Up(e,t,n,s,r,a){if(e.beginPath(),a.useCurves){let o=(t+t+s)/2,i=(n+n+r)/2;e.ellipse(o,i,s/2,r/2,0,0,2*Math.PI)}else e.lineWidth=a.lineWidth,e.moveTo(t+a.roundRect,n),e.lineTo(t+s-a.roundRect,n),e.quadraticCurveTo(t+s,n,t+s,n+a.roundRect),e.lineTo(t+s,n+r-a.roundRect),e.quadraticCurveTo(t+s,n+r,t+s-a.roundRect,n+r),e.lineTo(t+a.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function xN(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let s of t){let r=s[2]||0;e.strokeStyle=n.useDepth&&r!==0?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&r!==0?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.lineTo(s[0],Math.round(s[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function b1e(e,t,n){if(!(t.length<2)){if(!n.useCurves||t.length<=2){xN(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let s=0;s<t.length-2;s++){let r=(t[s][0]+t[s+1][0])/2,a=(t[s][1]+t[s+1][1])/2;e.quadraticCurveTo(t[s][0],t[s][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function bN(e,t,n,s=5){let r,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.moveTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}async function b5(e,t,n){let s=$n(ga,n);if(!(!t||!e)&&s.drawGestures){let r=Hl(e);if(!r)return;r.font=s.font,r.fillStyle=s.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let c=i[1]>0?`#${i[1]}`:"",u=`${i[0]} ${c}: ${l[1]}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(u,8,2+a*s.lineHeight)),r.fillStyle=s.labelColor,r.fillText(u,6,0+a*s.lineHeight),a+=1}}}}async function v5(e,t,n){var a,o,i,l,c;let s=$n(ga,n);if(!t||!e)return;let r=Hl(e);if(!!r)for(let u of t){if(r.font=s.font,r.strokeStyle=s.color,r.fillStyle=s.color,s.drawBoxes&&Up(r,u.box[0],u.box[1],u.box[2],u.box[3],s),s.drawLabels){let d=[];if(d.push(`face: ${Math.trunc(100*u.score)}%`),u.genderScore&&d.push(`${u.gender||""} ${Math.trunc(100*u.genderScore)}%`),u.age&&d.push(`age: ${u.age||""}`),u.iris&&d.push(`distance: ${u.iris}`),u.real&&d.push(`real: ${Math.trunc(100*u.real)}%`),u.live&&d.push(`live: ${Math.trunc(100*u.live)}%`),u.emotion&&u.emotion.length>0){let p=u.emotion.map(h=>`${Math.trunc(100*h.score)}% ${h.emotion}`);p.length>3&&(p.length=3),d.push(p.join(" "))}u.rotation&&u.rotation.angle&&u.rotation.gaze&&(u.rotation.angle.roll&&d.push(`roll: ${Oc(u.rotation.angle.roll)}\xB0 yaw:${Oc(u.rotation.angle.yaw)}\xB0 pitch:${Oc(u.rotation.angle.pitch)}\xB0`),u.rotation.gaze.bearing&&d.push(`gaze: ${Oc(u.rotation.gaze.bearing)}\xB0`)),d.length===0&&d.push("face"),r.fillStyle=s.color;for(let p=d.length-1;p>=0;p--){let h=Math.max(u.box[0],0),f=p*s.lineHeight+u.box[1];s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(d[p],h+5,f+16)),r.fillStyle=s.labelColor,r.fillText(d[p],h+4,f+15)}}if(r.lineWidth=1,u.mesh&&u.mesh.length>0){if(s.drawPoints)for(let d of u.mesh)x5(r,d[0],d[1],d[2],s);if(s.drawPolygons){if(r.lineWidth=1,u.mesh.length>450)for(let d=0;d<Fl.length/3;d++){let p=[Fl[d*3+0],Fl[d*3+1],Fl[d*3+2]].map(h=>u.mesh[h]);xN(r,p,s)}if(u.annotations&&u.annotations.leftEyeIris&&u.annotations.leftEyeIris[0]){r.strokeStyle=s.useDepth?"rgba(255, 200, 255, 0.3)":s.color,r.beginPath();let d=Math.abs(u.annotations.leftEyeIris[3][0]-u.annotations.leftEyeIris[1][0])/2,p=Math.abs(u.annotations.leftEyeIris[4][1]-u.annotations.leftEyeIris[2][1])/2;r.ellipse(u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1],d,p,0,0,2*Math.PI),r.stroke(),s.fillPolygons&&(r.fillStyle=s.useDepth?"rgba(255, 255, 200, 0.3)":s.color,r.fill())}if(u.annotations&&u.annotations.rightEyeIris&&u.annotations.rightEyeIris[0]){r.strokeStyle=s.useDepth?"rgba(255, 200, 255, 0.3)":s.color,r.beginPath();let d=Math.abs(u.annotations.rightEyeIris[3][0]-u.annotations.rightEyeIris[1][0])/2,p=Math.abs(u.annotations.rightEyeIris[4][1]-u.annotations.rightEyeIris[2][1])/2;r.ellipse(u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1],d,p,0,0,2*Math.PI),r.stroke(),s.fillPolygons&&(r.fillStyle=s.useDepth?"rgba(255, 255, 200, 0.3)":s.color,r.fill())}if(s.drawGaze&&((a=u.rotation)==null?void 0:a.angle)&&typeof Path2D!="undefined"){r.strokeStyle="pink";let d=u.box[0]+u.box[2]/2-u.box[3]*Oc(u.rotation.angle.yaw)/90,p=u.box[1]+u.box[3]/2+u.box[2]*Oc(u.rotation.angle.pitch)/90,h=new Path2D(`
            M ${u.box[0]+u.box[2]/2} ${u.box[1]}
            C
              ${d} ${u.box[1]},
              ${d} ${u.box[1]+u.box[3]},
              ${u.box[0]+u.box[2]/2} ${u.box[1]+u.box[3]}
          `),f=new Path2D(`
            M ${u.box[0]} ${u.box[1]+u.box[3]/2}
            C 
              ${u.box[0]} ${p},
              ${u.box[0]+u.box[2]} ${p},
              ${u.box[0]+u.box[2]} ${u.box[1]+u.box[3]/2}
          `);r.stroke(f),r.stroke(h)}if(s.drawGaze&&((i=(o=u.rotation)==null?void 0:o.gaze)==null?void 0:i.strength)&&((c=(l=u.rotation)==null?void 0:l.gaze)==null?void 0:c.bearing)&&u.annotations.leftEyeIris&&u.annotations.rightEyeIris&&u.annotations.leftEyeIris[0]&&u.annotations.rightEyeIris[0]){r.strokeStyle="pink",r.fillStyle="pink";let d=[u.annotations.leftEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.leftEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];bN(r,[u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1]],[d[0],d[1]],4);let p=[u.annotations.rightEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.rightEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];bN(r,[u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1]],[p[0],p[1]],4)}}}}}async function w5(e,t,n){var a;let s=$n(ga,n);if(!t||!e)return;let r=Hl(e);if(!!r){r.lineJoin="round";for(let o=0;o<t.length;o++){if(r.strokeStyle=s.color,r.fillStyle=s.color,r.lineWidth=s.lineWidth,r.font=s.font,s.drawBoxes&&t[o].box&&((a=t[o].box)==null?void 0:a.length)===4&&(Up(r,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+3,1+t[o].box[1]+s.lineHeight,t[o].box[2])),r.fillStyle=s.labelColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+2,0+t[o].box[1]+s.lineHeight,t[o].box[2]))),s.drawPoints&&t[o].keypoints)for(let i=0;i<t[o].keypoints.length;i++)!t[o].keypoints[i].score||t[o].keypoints[i].score===0||(r.fillStyle=s.useDepth&&t[o].keypoints[i].position[2]?`rgba(${127.5+2*(t[o].keypoints[i].position[2]||0)}, ${127.5-2*(t[o].keypoints[i].position[2]||0)}, 255, 0.5)`:s.color,x5(r,t[o].keypoints[i].position[0],t[o].keypoints[i].position[1],0,s));if(s.drawLabels&&t[o].keypoints){r.font=s.font;for(let i of t[o].keypoints)!i.score||i.score===0||(r.fillStyle=s.useDepth&&i.position[2]?`rgba(${127.5+2*i.position[2]}, ${127.5-2*i.position[2]}, 255, 0.5)`:s.color,r.fillText(`${i.part} ${Math.trunc(100*i.score)}%`,i.position[0]+4,i.position[1]+4))}if(s.drawPolygons&&t[o].keypoints&&t[o].annotations)for(let i of Object.values(t[o].annotations))for(let l of i)b1e(r,l,s)}}}async function k5(e,t,n){let s=$n(ga,n);if(!t||!e)return;let r=Hl(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t){if(s.drawBoxes&&(r.strokeStyle=s.color,r.fillStyle=s.color,Up(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])),r.stroke()),s.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)r.fillStyle=s.useDepth?`rgba(${127.5+2*(o[2]||0)}, ${127.5-2*(o[2]||0)}, 255, 0.5)`:s.color,x5(r,o[0],o[1],0,s);if(s.drawLabels&&a.annotations){let o=(i,l)=>{!i||i.length===0||!i[0]||(r.fillStyle=s.useDepth?`rgba(${127.5+2*i[i.length-1][2]}, ${127.5-2*i[i.length-1][2]}, 255, 0.5)`:s.color,r.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4))};r.font=s.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(s.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++)r.beginPath(),r.strokeStyle=s.useDepth?`rgba(${127.5+l*i[l][2]}, ${127.5-l*i[l][2]}, 255, 0.5)`:s.color,r.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),r.lineTo(i[l][0],i[l][1]),r.stroke()};r.lineWidth=s.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}}async function I5(e,t,n){let s=$n(ga,n);if(!t||!e)return;let r=Hl(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Up(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(o,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])}r.stroke()}}}async function vN(e,t,n){let s=$n(ga,n);if(!t||!e)return;let r=Hl(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a=0;a<t.length;a++)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Up(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels){let o=`person #${a}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(o,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2])}r.stroke()}}}async function wN(e,t){if(!e||!t)return;let n=Hl(t);!n||n.drawImage(e,0,0)}async function kN(e,t,n){if(!t||!t.performance||!t||!e)return null;let s=ie(),r=$n(ga,n),a=Promise.all([v5(e,t.face,r),w5(e,t.body,r),k5(e,t.hand,r),I5(e,t.object,r),b5(e,t.gesture,r)]);return y5=he.perfadd?y5+Math.round(ie()-s):Math.round(ie()-s),t.performance.draw=y5,a}var Mc=.1,S5=.5;function v1e(e,t,n){let s=!1,r=n.length-1;for(let a=0;a<n.length;r=a++)n[a].y>t!=n[r].y>t&&e<(n[r].x-n[a].x)*(t-n[a].y)/(n[r].y-n[a].y)+n[a].x&&(s=!s);return s}async function IN(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,s=await e.tensor.buffer(),r=[];for(let o of lr.silhouette)r.push({x:(e.mesh[o][0]-e.box[0])/e.box[2],y:(e.mesh[o][1]-e.box[1])/e.box[3]});Mc&&Mc>0&&(r=r.map(o=>({x:o.x>.5?o.x+Mc:o.x-Mc,y:o.y>.5?o.y+Mc:o.y-Mc})));for(let o=0;o<t;o++)for(let i=0;i<n;i++)v1e(o/t,i/t,r)||(s.set(S5*s.get(0,i,o,0),0,i,o,0),s.set(S5*s.get(0,i,o,1),0,i,o,1),s.set(S5*s.get(0,i,o,2),0,i,o,2));let a=s.toTensor();return te(s),a}var w1e=e=>{let t=(d,p)=>Math.atan2(d[1]-p[1],d[0]-p[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],s=1,r=e.mesh[33][2]>e.mesh[263][2],a=r?e.mesh[473]:e.mesh[468],o=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],s*(a[1]-o[1])/i[1]-n[1]],c=Math.sqrt(l[0]**2+l[1]**2);return c=Math.min(c,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:c}},SN=(e,t)=>{let n=g=>{let A=Math.sqrt(g[0]*g[0]+g[1]*g[1]+g[2]*g[2]);return g[0]/=A,g[1]/=A,g[2]/=A,g},s=(g,A)=>{let x=g[0]-A[0],y=g[1]-A[1],b=g[2]-A[2];return[x,y,b]},r=(g,A)=>{let x=g[1]*A[2]-g[2]*A[1],y=g[2]*A[0]-g[0]*A[2],b=g[0]*A[1]-g[1]*A[0];return[x,y,b]},a=g=>{let[A,x,y,b,w,k,S,N,R]=g,M,D,$;return b<1?b>-1?($=Math.asin(b),D=Math.atan2(-S,A),M=Math.atan2(-k,w)):($=-Math.PI/2,D=-Math.atan2(N,R),M=0):($=Math.PI/2,D=Math.atan2(N,R),M=0),isNaN(M)&&(M=0),isNaN(D)&&(D=0),isNaN($)&&($=0),{pitch:2*-M,yaw:2*-D,roll:2*-$}},o=g=>{let A=(y,b,w,k)=>Math.atan2(k-b,w-y);return{pitch:A(g[10][1],g[10][2],g[152][1],g[152][2]),yaw:A(g[33][0],g[33][2],g[263][0],g[263][2]),roll:A(g[33][0],g[33][1],g[263][0],g[263][1])}},i=e.meshRaw;if(!i||i.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let l=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,c=[i[10],i[152],i[234],i[454]].map(g=>[g[0]*t[0]/l,g[1]*t[1]/l,g[2]]),u=n(s(c[1],c[0])),d=n(s(c[3],c[2])),p=n(r(d,u));d=r(u,p);let h=[d[0],d[1],d[2],u[0],u[1],u[2],p[0],p[1],p[2]],f=a(h),m=i.length===478?w1e(e):{bearing:0,strength:0};return{angle:f,matrix:h,gaze:m}};var C5=async(e,t)=>{var h,f,m,g,A,x,y,b,w,k,S,N,R,M,D,$,T,P,W,K,z,j,Z,Q,ne,ae;let n,s,r,a,o,i,l,c,u,d=[];e.state="run:face",n=ie();let p=await yT(t,e.config);if(e.performance.face=he.perfadd?(e.performance.face||0)+Math.trunc(ie()-n):Math.trunc(ie()-n),!t.shape||t.shape.length!==4)return[];if(!p)return[];for(let U=0;U<p.length;U++){if(e.analyze("Get Face"),!p[U].tensor||p[U].tensor.isDisposedInternal){J("Face object is disposed:",p[U].tensor);continue}if((h=e.config.face.detector)==null?void 0:h.mask){let Te=await IN(p[U]);te(p[U].tensor),p[U].tensor=Te}let oe=p[U].mesh&&p[U].mesh.length>200?SN(p[U],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?o=((f=e.config.face.emotion)==null?void 0:f.enabled)?$b(p[U].tensor||pt([]),e.config,U,p.length):null:(e.state="run:emotion",n=ie(),o=((m=e.config.face.emotion)==null?void 0:m.enabled)?await $b(p[U].tensor||pt([]),e.config,U,p.length):null,e.performance.emotion=he.perfadd?(e.performance.emotion||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?l=((g=e.config.face.antispoof)==null?void 0:g.enabled)?lb(p[U].tensor||pt([]),e.config,U,p.length):null:(e.state="run:antispoof",n=ie(),l=((A=e.config.face.antispoof)==null?void 0:A.enabled)?await lb(p[U].tensor||pt([]),e.config,U,p.length):null,e.performance.antispoof=he.perfadd?(e.performance.antispoof||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?c=((x=e.config.face.liveness)==null?void 0:x.enabled)?Jb(p[U].tensor||pt([]),e.config,U,p.length):null:(e.state="run:liveness",n=ie(),c=((y=e.config.face.liveness)==null?void 0:y.enabled)?await Jb(p[U].tensor||pt([]),e.config,U,p.length):null,e.performance.liveness=he.perfadd?(e.performance.antispoof||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?r=((b=e.config.face.gear)==null?void 0:b.enabled)?tb(p[U].tensor||pt([]),e.config,U,p.length):{}:(e.state="run:gear",n=ie(),r=((w=e.config.face.gear)==null?void 0:w.enabled)?await tb(p[U].tensor||pt([]),e.config,U,p.length):{},e.performance.gear=Math.trunc(ie()-n)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(s=((k=e.config.face.ssrnet)==null?void 0:k.enabled)?sb(p[U].tensor||pt([]),e.config,U,p.length):{},a=((S=e.config.face.ssrnet)==null?void 0:S.enabled)?ob(p[U].tensor||pt([]),e.config,U,p.length):{}):(e.state="run:ssrnet",n=ie(),s=((N=e.config.face.ssrnet)==null?void 0:N.enabled)?await sb(p[U].tensor||pt([]),e.config,U,p.length):{},a=((R=e.config.face.ssrnet)==null?void 0:R.enabled)?await ob(p[U].tensor||pt([]),e.config,U,p.length):{},e.performance.ssrnet=Math.trunc(ie()-n)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?i=((M=e.config.face.mobilefacenet)==null?void 0:M.enabled)?Db(p[U].tensor||pt([]),e.config,U,p.length):{}:(e.state="run:mobilefacenet",n=ie(),i=((D=e.config.face.mobilefacenet)==null?void 0:D.enabled)?await Db(p[U].tensor||pt([]),e.config,U,p.length):{},e.performance.mobilefacenet=Math.trunc(ie()-n)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?u=(($=e.config.face.description)==null?void 0:$.enabled)?Lb(p[U].tensor||pt([]),e.config,U,p.length):null:(e.state="run:description",n=ie(),u=((T=e.config.face.description)==null?void 0:T.enabled)?await Lb(p[U].tensor||pt([]),e.config,U,p.length):null,e.performance.description=he.perfadd?(e.performance.description||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Description:"),e.config.async&&([s,a,o,i,u,r,l,c]=await Promise.all([s,a,o,i,u,r,l,c])),e.analyze("Finish Face:"),((P=e.config.face.ssrnet)==null?void 0:P.enabled)&&s&&a&&(u={age:s.age,gender:a.gender,genderScore:a.genderScore}),((W=e.config.face.gear)==null?void 0:W.enabled)&&r&&(u={age:r.age,gender:r.gender,genderScore:r.genderScore,race:r.race}),((K=e.config.face.mobilefacenet)==null?void 0:K.enabled)&&i&&(u.descriptor=i),!((z=e.config.face.iris)==null?void 0:z.enabled)&&((Z=(j=p[U])==null?void 0:j.annotations)==null?void 0:Z.leftEyeIris)&&((ne=(Q=p[U])==null?void 0:Q.annotations)==null?void 0:ne.rightEyeIris)&&(delete p[U].annotations.leftEyeIris,delete p[U].annotations.rightEyeIris);let re=p[U].annotations&&p[U].annotations.leftEyeIris&&p[U].annotations.leftEyeIris[0]&&p[U].annotations.rightEyeIris&&p[U].annotations.rightEyeIris[0]&&p[U].annotations.leftEyeIris.length>0&&p[U].annotations.rightEyeIris.length>0&&p[U].annotations.leftEyeIris[0]!==null&&p[U].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(p[U].annotations.leftEyeIris[3][0]-p[U].annotations.leftEyeIris[1][0]),Math.abs(p[U].annotations.rightEyeIris[4][1]-p[U].annotations.rightEyeIris[2][1]))/t.shape[2]:0,me=((ae=e.config.face.detector)==null?void 0:ae.return)?Ge(p[U].tensor):null;te(p[U].tensor),p[U].tensor&&delete p[U].tensor;let ye={...p[U],id:U};(u==null?void 0:u.age)&&(ye.age=u.age),(u==null?void 0:u.gender)&&(ye.gender=u.gender),(u==null?void 0:u.genderScore)&&(ye.genderScore=u==null?void 0:u.genderScore),(u==null?void 0:u.descriptor)&&(ye.embedding=u==null?void 0:u.descriptor),(u==null?void 0:u.race)&&(ye.race=u==null?void 0:u.race),o&&(ye.emotion=o),l&&(ye.real=l),c&&(ye.live=c),re&&re!==0&&(ye.iris=Math.trunc(500/re/11.7)/100),oe&&(ye.rotation=oe),me&&(ye.tensor=me),d.push(ye),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),d};var CN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=e[n].keypoints.find(l=>l.part==="leftWrist"),r=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&s&&r&&s.position[1]<a.position[1]&&r.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&s&&s.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&r&&r.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&Math.abs(o.positionRaw[1]-i.positionRaw[1])>.1&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},TN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let s=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(s/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${s<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});let l=e[n].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:n,gesture:`head ${l<0?"up":"down"}`})}return t},NN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;let s=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],r=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],a=Math.abs(s*r),o=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],i=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(o*i),c=!1;Math.abs(a-l)/Math.max(a,l)<.25&&(c=!0,t.push({iris:n,gesture:"facing center"}));let d=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],p=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(d>.06||p>.06)&&(c=!1),d>p?d>.05&&t.push({iris:n,gesture:"looking right"}):p>.05&&t.push({iris:n,gesture:"looking left"});let h=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],f=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(f<.01||h<.01||f>.022||h>.022)&&(c=!1),(f<.01||h<.01)&&t.push({iris:n,gesture:"looking down"}),(f>.022||h>.022)&&t.push({iris:n,gesture:"looking up"}),c&&t.push({iris:n,gesture:"looking center"})}return t},EN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=[];if(e[n].annotations)for(let[r,a]of Object.entries(e[n].annotations))r!=="palmBase"&&Array.isArray(a)&&a[0]&&s.push({name:r.toLowerCase(),position:a[0]});if(s&&s.length>0){let r=s.reduce((o,i)=>(o.position[2]||0)<(i.position[2]||0)?o:i);t.push({hand:n,gesture:`${r.name} forward`});let a=s.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let r=VT(e[n].keypoints);for(let a of r)t.push({hand:n,gesture:a.name})}}return t};var _e={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},T5=0;function RN(e,t){var o,i,l,c,u,d,p,h,f,m,g,A,x,y,b,w,k,S,N,R,M,D,$,T,P,W,K;let n=ie();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let s=Date.now()-e.timestamp,r=s<1e3?8-Math.log(s+1):1;if(e.canvas&&(_e.canvas=e.canvas),e.error&&(_e.error=e.error),!_e.body||e.body.length!==_e.body.length)_e.body=JSON.parse(JSON.stringify(e.body));else for(let z=0;z<e.body.length;z++){let j=e.body[z].box.map((U,oe)=>((r-1)*_e.body[z].box[oe]+U)/r),Z=e.body[z].boxRaw.map((U,oe)=>((r-1)*_e.body[z].boxRaw[oe]+U)/r),Q=e.body[z].keypoints.map((U,oe)=>({score:U.score,part:U.part,position:[_e.body[z].keypoints[oe]?((r-1)*_e.body[z].keypoints[oe].position[0]+U.position[0])/r:U.position[0],_e.body[z].keypoints[oe]?((r-1)*_e.body[z].keypoints[oe].position[1]+U.position[1])/r:U.position[1],_e.body[z].keypoints[oe]?((r-1)*(_e.body[z].keypoints[oe].position[2]||0)+(U.position[2]||0))/r:U.position[2]],positionRaw:[_e.body[z].keypoints[oe]?((r-1)*_e.body[z].keypoints[oe].positionRaw[0]+U.positionRaw[0])/r:U.position[0],_e.body[z].keypoints[oe]?((r-1)*_e.body[z].keypoints[oe].positionRaw[1]+U.positionRaw[1])/r:U.position[1],_e.body[z].keypoints[oe]?((r-1)*(_e.body[z].keypoints[oe].positionRaw[2]||0)+(U.positionRaw[2]||0))/r:U.position[1]]})),ne={},ae={connected:{}};((i=(o=t.body)==null?void 0:o.modelPath)==null?void 0:i.includes("efficientpose"))?ae=Tb:((c=(l=t.body)==null?void 0:l.modelPath)==null?void 0:c.includes("blazepose"))?ae=yb:((d=(u=t.body)==null?void 0:u.modelPath)==null?void 0:d.includes("movenet"))&&(ae=n5);for(let[U,oe]of Object.entries(ae.connected)){let re=[];for(let me=0;me<oe.length-1;me++){let ye=Q.find(Ne=>Ne.part===oe[me]),Te=Q.find(Ne=>Ne.part===oe[me+1]);ye&&Te&&ye.score>(t.body.minConfidence||0)&&Te.score>(t.body.minConfidence||0)&&re.push([ye.position,Te.position])}ne[U]=re}_e.body[z]={...e.body[z],box:j,boxRaw:Z,keypoints:Q,annotations:ne}}if(!_e.hand||e.hand.length!==_e.hand.length)_e.hand=JSON.parse(JSON.stringify(e.hand));else for(let z=0;z<e.hand.length;z++){let j=e.hand[z].box.map((ae,U)=>((r-1)*_e.hand[z].box[U]+ae)/r),Z=e.hand[z].boxRaw.map((ae,U)=>((r-1)*_e.hand[z].boxRaw[U]+ae)/r);_e.hand[z].keypoints.length!==e.hand[z].keypoints.length&&(_e.hand[z].keypoints=e.hand[z].keypoints);let Q=e.hand[z].keypoints&&e.hand[z].keypoints.length>0?e.hand[z].keypoints.map((ae,U)=>ae.map((oe,re)=>((r-1)*(_e.hand[z].keypoints[U][re]||1)+(oe||0))/r)):[],ne={};if(Object.keys(_e.hand[z].annotations).length!==Object.keys(e.hand[z].annotations).length)_e.hand[z].annotations=e.hand[z].annotations,ne=_e.hand[z].annotations;else if(e.hand[z].annotations)for(let ae of Object.keys(e.hand[z].annotations))ne[ae]=e.hand[z].annotations[ae]&&e.hand[z].annotations[ae][0]?e.hand[z].annotations[ae].map((U,oe)=>U.map((re,me)=>((r-1)*_e.hand[z].annotations[ae][oe][me]+re)/r)):null;_e.hand[z]={...e.hand[z],box:j,boxRaw:Z,keypoints:Q,annotations:ne}}if(!_e.face||e.face.length!==_e.face.length)_e.face=JSON.parse(JSON.stringify(e.face));else for(let z=0;z<e.face.length;z++){let j=e.face[z].box.map((Q,ne)=>((r-1)*_e.face[z].box[ne]+Q)/r),Z=e.face[z].boxRaw.map((Q,ne)=>((r-1)*_e.face[z].boxRaw[ne]+Q)/r);if(e.face[z].rotation){let Q={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};Q.matrix=(p=e.face[z].rotation)==null?void 0:p.matrix,Q.angle={roll:((r-1)*(((f=(h=_e.face[z].rotation)==null?void 0:h.angle)==null?void 0:f.roll)||0)+(((g=(m=e.face[z].rotation)==null?void 0:m.angle)==null?void 0:g.roll)||0))/r,yaw:((r-1)*(((x=(A=_e.face[z].rotation)==null?void 0:A.angle)==null?void 0:x.yaw)||0)+(((b=(y=e.face[z].rotation)==null?void 0:y.angle)==null?void 0:b.yaw)||0))/r,pitch:((r-1)*(((k=(w=_e.face[z].rotation)==null?void 0:w.angle)==null?void 0:k.pitch)||0)+(((N=(S=e.face[z].rotation)==null?void 0:S.angle)==null?void 0:N.pitch)||0))/r},Q.gaze={bearing:((r-1)*(((M=(R=_e.face[z].rotation)==null?void 0:R.gaze)==null?void 0:M.bearing)||0)+((($=(D=e.face[z].rotation)==null?void 0:D.gaze)==null?void 0:$.bearing)||0))/r,strength:((r-1)*(((P=(T=_e.face[z].rotation)==null?void 0:T.gaze)==null?void 0:P.strength)||0)+(((K=(W=e.face[z].rotation)==null?void 0:W.gaze)==null?void 0:K.strength)||0))/r},_e.face[z]={...e.face[z],rotation:Q,box:j,boxRaw:Z}}_e.face[z]={...e.face[z],box:j,boxRaw:Z}}if(!_e.object||e.object.length!==_e.object.length)_e.object=JSON.parse(JSON.stringify(e.object));else for(let z=0;z<e.object.length;z++){let j=e.object[z].box.map((Q,ne)=>((r-1)*_e.object[z].box[ne]+Q)/r),Z=e.object[z].boxRaw.map((Q,ne)=>((r-1)*_e.object[z].boxRaw[ne]+Q)/r);_e.object[z]={...e.object[z],box:j,boxRaw:Z}}if(e.persons){let z=e.persons;if(!_e.persons||z.length!==_e.persons.length)_e.persons=JSON.parse(JSON.stringify(z));else for(let j=0;j<z.length;j++)_e.persons[j].box=z[j].box.map((Z,Q)=>((r-1)*_e.persons[j].box[Q]+Z)/r)}e.gesture&&(_e.gesture=e.gesture);let a=ie();return T5=he.perfadd?T5+Math.round(a-n):Math.round(a-n),e.performance&&(_e.performance={...e.performance,interpolate:T5}),_e}function z0(e,t,n={order:2,multiplier:25}){let s=0;for(let r=0;r<e.length;r++){let a=!n.order||n.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);s+=!n.order||n.order===2?a*a:a**n.order}return(n.multiplier||20)*s}var $N=(e,t,n,s)=>{if(e===0)return 1;let r=t===2?Math.sqrt(e):e**(1/t),a=(1-r/100-n)/(s-n);return Math.max(Math.min(a,1),0)};function _N(e,t,n={order:2,multiplier:25,min:.2,max:.8}){let s=z0(e,t,n);return $N(s,n.order||2,n.min||0,n.max||1)}function DN(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let s=Number.MAX_SAFE_INTEGER,r=-1;for(let o=0;o<t.length;o++){let i=z0(e,t[o],n);if(i<s&&(s=i,r=o),s<(n.threshold||0))break}let a=$N(s,n.order||2,n.min||0,n.max||1);return{index:r,distance:s,similarity:a}}function FN(e,t,n,s,r){var i,l,c,u,d,p,h,f,m,g,A,x,y,b,w,k;let a=0,o=[];for(let S of e){let N={id:a++,face:S,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let P of t)S.box[0]>P.box[0]&&S.box[0]<P.box[0]+P.box[2]&&S.box[1]+S.box[3]>P.box[1]&&S.box[1]+S.box[3]<P.box[1]+P.box[3]&&(N.body=P);if(N.body)for(let P of n)P.box[0]+P.box[2]>N.body.box[0]&&P.box[0]+P.box[2]<N.body.box[0]+N.body.box[2]&&P.box[1]+P.box[3]>N.body.box[1]&&P.box[1]+P.box[3]<N.body.box[1]+N.body.box[3]&&N.hands&&(N.hands.left=P),P.box[0]<N.body.box[0]+N.body.box[2]&&P.box[0]>N.body.box[0]&&P.box[1]+P.box[3]>N.body.box[1]&&P.box[1]+P.box[3]<N.body.box[1]+N.body.box[3]&&N.hands&&(N.hands.right=P);for(let P of s)P.face!==void 0&&P.face===S.id?(i=N.gestures)==null||i.push(P):P.iris!==void 0&&P.iris===S.id?(l=N.gestures)==null||l.push(P):P.body!==void 0&&P.body===((c=N.body)==null?void 0:c.id)?(u=N.gestures)==null||u.push(P):P.hand!==void 0&&P.hand===((p=(d=N.hands)==null?void 0:d.left)==null?void 0:p.id)?(h=N.gestures)==null||h.push(P):P.hand!==void 0&&P.hand===((m=(f=N.hands)==null?void 0:f.right)==null?void 0:m.id)&&((g=N.gestures)==null||g.push(P));let R=[],M=[],D=P=>{P&&P.length===4&&(R.push(P[0],P[0]+P[2]),M.push(P[1],P[1]+P[3]))};D((A=N.face)==null?void 0:A.box),D((x=N.body)==null?void 0:x.box),D((b=(y=N.hands)==null?void 0:y.left)==null?void 0:b.box),D((k=(w=N.hands)==null?void 0:w.right)==null?void 0:k.box);let $=Math.min(...R),T=Math.min(...M);N.box=[$,T,Math.max(...R)-$,Math.max(...M)-T],r&&r[1]&&r[2]&&(N.boxRaw=[N.box[0]/r[2],N.box[1]/r[1],N.box[2]/r[2],N.box[3]/r[1]]),o.push(N)}return o}var L0=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,B0=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function k1e(e){let t=(r,a="application/octet-stream")=>fetch(`data:${a};base64,${r}`).then(o=>o.blob()),n,s;switch(e.config.warmup){case"face":n=await t(L0);break;case"body":case"full":n=await t(B0);break;default:n=null}if(n){let r=await createImageBitmap(n);s=await e.detect(r,e.config),r.close()}return s}async function I1e(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+L0;break;case"full":case"body":n="data:image/jpeg;base64,"+B0;break;default:n=null}let s;if(typeof Image!="undefined")s=new Image;else if(he.Image)s=new he.Image;else return;s.onload=async()=>{let r=Zn(s.naturalWidth,s.naturalHeight);if(!r)J("Warmup: Canvas not found"),t({});else{let a=r.getContext("2d");a&&a.drawImage(s,0,0);let o=await e.image(r),i=await e.detect(o.tensor,e.config);t(i)}},n?s.src=n:t(null)})}async function S1e(e){let t=r=>Buffer.from(r,"base64"),n;if(e.config.warmup==="face"&&(n=t(L0)),(e.config.warmup==="body"||e.config.warmup==="full")&&(n=t(B0)),!n)return null;let s;if(typeof void 0!="undefined"){let r=(void 0).decodeJpeg(n),a=r.expandDims(0);e.tf.dispose(r),s=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&J("Warmup tfjs-node not loaded");return s}async function PN(e,t){let n=ie();if(e.state="warmup",t&&(e.config=$n(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none")return{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:ie(),persons:[],error:null};let s;return new Promise(async r=>{typeof createImageBitmap=="function"?s=await k1e(e):typeof Image!="undefined"||he.Canvas!==void 0?s=await I1e(e):s=await S1e(e);let a=ie();e.config.debug&&J("Warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),r(s)})}var zc,Gp,Hp,W0,MN=class{constructor(t){fe(this,"version");fe(this,"config");fe(this,"result");fe(this,"state");fe(this,"process");fe(this,"tf");fe(this,"env");fe(this,"draw");fe(this,"models");fe(this,"events");fe(this,"faceTriangulation");fe(this,"faceUVMap");fe(this,"performance");ed(this,zc,void 0);ed(this,Gp,void 0);ed(this,Hp,void 0);fe(this,"gl");fe(this,"analyze",(...t)=>{if(!Qc(this,Gp))return;let n=this.tf.engine().state.numTensors,s=Qc(this,zc);td(this,zc,n);let r=n-s;r!==0&&J(...t,r)});ed(this,W0,t=>{if(!Qc(this,Hp))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof tt))return"input must be a tensor";try{this.tf.getBackend()}catch(n){return"backend not loaded"}return null});fe(this,"similarity",_N);fe(this,"distance",z0);fe(this,"match",DN);fe(this,"emit",t=>{var n;this.events&&this.events.dispatchEvent&&((n=this.events)==null||n.dispatchEvent(new Event(t)))});this.env=he,Sa.wasmPath=d0["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${rv}/dist/`,Sa.modelBasePath=he.browser?"../models/":"file://models/",Sa.backend=he.browser?"humangl":"tensorflow",this.version=Jx,Object.defineProperty(this,"version",{value:Jx}),this.config=JSON.parse(JSON.stringify(Sa)),Object.seal(this.config),t&&(this.config=$n(this.config,t)),this.tf=Dl,this.state="idle",td(this,zc,0),td(this,Gp,!1),td(this,Hp,!1),this.performance={},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new g5,this.draw={options:ga,canvas:(n,s)=>wN(n,s),face:(n,s,r)=>v5(n,s,r),body:(n,s,r)=>w5(n,s,r),hand:(n,s,r)=>k5(n,s,r),gesture:(n,s,r)=>b5(n,s,r),object:(n,s,r)=>I5(n,s,r),person:(n,s,r)=>vN(n,s,r),all:(n,s,r)=>kN(n,s,r)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=bT,this.faceUVMap=vT,this.gl=Et,this.emit("create")}reset(){let t=this.config.backend;this.config=JSON.parse(JSON.stringify(Sa)),this.config.backend=t}validate(t){return p2(Sa,t||this.config)}now(){return ie()}image(t,n=!0){return Sc(t,this.config,n)}async segmentation(t,n){return mN(t,n,this.config)}enhance(t){return zb(t)}compare(t,n){return b8(this.config,t,n)}async init(){await M0(this,!0),await this.tf.ready()}async load(t){this.state="load";let n=ie(),s=Object.values(this.models).filter(o=>o).length;t&&(this.config=$n(this.config,t)),this.env.initial&&(this.config.debug&&J(`version: ${this.version}`),this.config.debug&&J(`tfjs version: ${this.tf.version["tfjs-core"]}`),await M0(this)||J("error: backend check failed"),await hf(),this.env.browser&&(this.config.debug&&J("configuration:",this.config),this.config.debug&&J("environment:",this.env),this.config.debug&&J("tf flags:",this.tf.ENV.flags))),await gN(this),this.env.initial&&this.config.debug&&J("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(o=>o).length!==s&&(await AN(this),this.emit("load"));let a=Math.trunc(ie()-n);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(t=this.result){return RN(t,this.config)}async warmup(t){let n=ie(),s=await PN(this,t),r=ie();return this.performance.warmup=Math.trunc(r-n),s}async profile(t,n){let s=await this.tf.profile(()=>this.detect(t,n)),r={};for(let i of s.kernels)r[i.name]?r[i.name]+=i.kernelTimeMs:r[i.name]=i.kernelTimeMs;let a=[];Object.entries(r).forEach(i=>a.push({name:i[0],ms:i[1]})),a.sort((i,l)=>l.ms-i.ms),a.length=20;let o={};for(let i of a)o[i.name]=i.ms;return o}async detect(t,n){return this.state="detect",new Promise(async s=>{var g,A,x,y,b,w,k,S,N,R,M,D,$,T,P,W,K,z,j,Z,Q,ne;this.state="config";let r;this.config=$n(this.config,n),this.state="check";let a=Qc(this,W0).call(this,t);a&&(J(a,t),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ie(),persons:[],error:a}));let o=ie();await M0(this),await this.load(),r=ie(),this.state="image";let i=await Sc(t,this.config);if(this.process=i,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ie()-r):Math.trunc(ie()-r),this.analyze("Get Image:"),!i.tensor){this.config.debug&&J("could not convert input to tensor"),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ie(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),r=ie(),this.config.skipAllowed=await x8(this.config,i.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(ie()-r):Math.trunc(ie()-r),this.analyze("Check Changed:");let l=[],c=[],u=[],d=[];this.state="detect:face",this.config.async?(l=this.config.face.enabled?C5(this,i.tensor):[],this.performance.face&&delete this.performance.face):(r=ie(),l=this.config.face.enabled?await C5(this,i.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(l=await l),this.analyze("Start Body:"),this.state="detect:body";let p=this.config.body.maxDetected===-1?$n(this.config,{body:{maxDetected:this.config.face.enabled?1*l.length:1}}):this.config;this.config.async?(((g=this.config.body.modelPath)==null?void 0:g.includes("posenet"))?c=this.config.body.enabled?h5(i.tensor,p):[]:((A=this.config.body.modelPath)==null?void 0:A.includes("blazepose"))?c=this.config.body.enabled?vb(i.tensor,p):[]:((x=this.config.body.modelPath)==null?void 0:x.includes("efficientpose"))?c=this.config.body.enabled?Eb(i.tensor,p):[]:((y=this.config.body.modelPath)==null?void 0:y.includes("movenet"))&&(c=this.config.body.enabled?a5(i.tensor,p):[]),this.performance.body&&delete this.performance.body):(r=ie(),((b=this.config.body.modelPath)==null?void 0:b.includes("posenet"))?c=this.config.body.enabled?await h5(i.tensor,p):[]:((w=this.config.body.modelPath)==null?void 0:w.includes("blazepose"))?c=this.config.body.enabled?await vb(i.tensor,p):[]:((k=this.config.body.modelPath)==null?void 0:k.includes("efficientpose"))?c=this.config.body.enabled?await Eb(i.tensor,p):[]:((S=this.config.body.modelPath)==null?void 0:S.includes("movenet"))&&(c=this.config.body.enabled?await a5(i.tensor,p):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let h=this.config.hand.maxDetected===-1?$n(this.config,{hand:{maxDetected:this.config.face.enabled?2*l.length:1}}):this.config;this.config.async?(((R=(N=this.config.hand.detector)==null?void 0:N.modelPath)==null?void 0:R.includes("handdetect"))?u=this.config.hand.enabled?Hb(i.tensor,h):[]:((D=(M=this.config.hand.detector)==null?void 0:M.modelPath)==null?void 0:D.includes("handtrack"))&&(u=this.config.hand.enabled?Zb(i.tensor,h):[]),this.performance.hand&&delete this.performance.hand):(r=ie(),((T=($=this.config.hand.detector)==null?void 0:$.modelPath)==null?void 0:T.includes("handdetect"))?u=this.config.hand.enabled?await Hb(i.tensor,h):[]:((W=(P=this.config.hand.detector)==null?void 0:P.modelPath)==null?void 0:W.includes("handtrack"))&&(u=this.config.hand.enabled?await Zb(i.tensor,h):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?(((K=this.config.object.modelPath)==null?void 0:K.includes("nanodet"))?d=this.config.object.enabled?i5(i.tensor,this.config):[]:((z=this.config.object.modelPath)==null?void 0:z.includes("centernet"))&&(d=this.config.object.enabled?Ib(i.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(r=ie(),((j=this.config.object.modelPath)==null?void 0:j.includes("nanodet"))?d=this.config.object.enabled?await i5(i.tensor,this.config):[]:((Z=this.config.object.modelPath)==null?void 0:Z.includes("centernet"))&&(d=this.config.object.enabled?await Ib(i.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([l,c,u,d]=await Promise.all([l,c,u,d])),this.state="detect:gesture";let f=[];this.config.gesture.enabled&&(r=ie(),f=[...TN(l),...CN(c),...EN(u),...NN(l)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ie()-o):Math.trunc(ie()-o);let m=((ne=(Q=this.process)==null?void 0:Q.tensor)==null?void 0:ne.shape)||[];this.result={face:l,body:c,hand:u,gesture:f,object:d,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return FN(l,c,u,f,m)}},te(i.tensor),this.emit("detect"),this.state="idle",s(this.result)})}};zc=new WeakMap,Gp=new WeakMap,Hp=new WeakMap,W0=new WeakMap;return C1e;})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
