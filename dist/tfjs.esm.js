/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var cT=Object.create,Rd=Object.defineProperty,dT=Object.getOwnPropertyDescriptor,hw=Object.getOwnPropertyNames,pT=Object.getPrototypeOf,hT=Object.prototype.hasOwnProperty,fT=e=>Rd(e,"__esModule",{value:!0}),Pt=(e,t)=>function(){return t||(0,e[hw(e)[0]])((t={exports:{}}).exports,t),t.exports},Ae=(e,t)=>{for(var n in t)Rd(e,n,{get:t[n],enumerable:!0})},mT=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of hw(t))!hT.call(e,r)&&(n||r!=="default")&&Rd(e,r,{get:()=>t[r],enumerable:!(s=dT(t,r))||s.enumerable});return e},va=(e,t)=>mT(fT(Rd(e!=null?cT(pT(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),gT=Pt({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(F){}function s(F,$,z){this.low=F|0,this.high=$|0,this.unsigned=!!z}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(F){return(F&&F.__isLong__)===!0}s.isLong=r;var a={},i={};function o(F,$){var z,W,q;return $?(F>>>=0,(q=0<=F&&F<256)&&(W=i[F],W)?W:(z=c(F,(F|0)<0?-1:0,!0),q&&(i[F]=z),z)):(F|=0,(q=-128<=F&&F<128)&&(W=a[F],W)?W:(z=c(F,F<0?-1:0,!1),q&&(a[F]=z),z))}s.fromInt=o;function u(F,$){if(isNaN(F))return $?x:v;if($){if(F<0)return x;if(F>=g)return _}else{if(F<=-b)return P;if(F+1>=b)return R}return F<0?u(-F,$).neg():c(F%m|0,F/m|0,$)}s.fromNumber=u;function c(F,$,z){return new s(F,$,z)}s.fromBits=c;var l=Math.pow;function d(F,$,z){if(F.length===0)throw Error("empty string");if(F==="NaN"||F==="Infinity"||F==="+Infinity"||F==="-Infinity")return v;if(typeof $=="number"?(z=$,$=!1):$=!!$,z=z||10,z<2||36<z)throw RangeError("radix");var W;if((W=F.indexOf("-"))>0)throw Error("interior hyphen");if(W===0)return d(F.substring(1),$,z).neg();for(var q=u(l(z,8)),K=v,j=0;j<F.length;j+=8){var Q=Math.min(8,F.length-j),J=parseInt(F.substring(j,j+Q),z);if(Q<8){var ne=u(l(z,Q));K=K.mul(ne).add(u(J))}else K=K.mul(q),K=K.add(u(J))}return K.unsigned=$,K}s.fromString=d;function p(F,$){return typeof F=="number"?u(F,$):typeof F=="string"?d(F,$):c(F.low,F.high,typeof $=="boolean"?$:F.unsigned)}s.fromValue=p;var h=1<<16,f=1<<24,m=h*h,g=m*m,b=g/2,y=o(f),v=o(0);s.ZERO=v;var x=o(0,!0);s.UZERO=x;var k=o(1);s.ONE=k;var T=o(1,!0);s.UONE=T;var C=o(-1);s.NEG_ONE=C;var R=c(-1,2147483647,!1);s.MAX_VALUE=R;var _=c(-1,-1,!0);s.MAX_UNSIGNED_VALUE=_;var P=c(0,-2147483648,!1);s.MIN_VALUE=P;var D=s.prototype;D.toInt=function(){return this.unsigned?this.low>>>0:this.low},D.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},D.toString=function($){if($=$||10,$<2||36<$)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(P)){var z=u($),W=this.div(z),q=W.mul(z).sub(this);return W.toString($)+q.toInt().toString($)}else return"-"+this.neg().toString($);for(var K=u(l($,6),this.unsigned),j=this,Q="";;){var J=j.div(K),ne=j.sub(J.mul(K)).toInt()>>>0,se=ne.toString($);if(j=J,j.isZero())return se+Q;for(;se.length<6;)se="0"+se;Q=""+se+Q}},D.getHighBits=function(){return this.high},D.getHighBitsUnsigned=function(){return this.high>>>0},D.getLowBits=function(){return this.low},D.getLowBitsUnsigned=function(){return this.low>>>0},D.getNumBitsAbs=function(){if(this.isNegative())return this.eq(P)?64:this.neg().getNumBitsAbs();for(var $=this.high!=0?this.high:this.low,z=31;z>0&&($&1<<z)==0;z--);return this.high!=0?z+33:z+1},D.isZero=function(){return this.high===0&&this.low===0},D.eqz=D.isZero,D.isNegative=function(){return!this.unsigned&&this.high<0},D.isPositive=function(){return this.unsigned||this.high>=0},D.isOdd=function(){return(this.low&1)===1},D.isEven=function(){return(this.low&1)===0},D.equals=function($){return r($)||($=p($)),this.unsigned!==$.unsigned&&this.high>>>31===1&&$.high>>>31===1?!1:this.high===$.high&&this.low===$.low},D.eq=D.equals,D.notEquals=function($){return!this.eq($)},D.neq=D.notEquals,D.ne=D.notEquals,D.lessThan=function($){return this.comp($)<0},D.lt=D.lessThan,D.lessThanOrEqual=function($){return this.comp($)<=0},D.lte=D.lessThanOrEqual,D.le=D.lessThanOrEqual,D.greaterThan=function($){return this.comp($)>0},D.gt=D.greaterThan,D.greaterThanOrEqual=function($){return this.comp($)>=0},D.gte=D.greaterThanOrEqual,D.ge=D.greaterThanOrEqual,D.compare=function($){if(r($)||($=p($)),this.eq($))return 0;var z=this.isNegative(),W=$.isNegative();return z&&!W?-1:!z&&W?1:this.unsigned?$.high>>>0>this.high>>>0||$.high===this.high&&$.low>>>0>this.low>>>0?-1:1:this.sub($).isNegative()?-1:1},D.comp=D.compare,D.negate=function(){return!this.unsigned&&this.eq(P)?P:this.not().add(k)},D.neg=D.negate,D.add=function($){r($)||($=p($));var z=this.high>>>16,W=this.high&65535,q=this.low>>>16,K=this.low&65535,j=$.high>>>16,Q=$.high&65535,J=$.low>>>16,ne=$.low&65535,se=0,te=0,ie=0,ee=0;return ee+=K+ne,ie+=ee>>>16,ee&=65535,ie+=q+J,te+=ie>>>16,ie&=65535,te+=W+Q,se+=te>>>16,te&=65535,se+=z+j,se&=65535,c(ie<<16|ee,se<<16|te,this.unsigned)},D.subtract=function($){return r($)||($=p($)),this.add($.neg())},D.sub=D.subtract,D.multiply=function($){if(this.isZero())return v;if(r($)||($=p($)),n){var z=n.mul(this.low,this.high,$.low,$.high);return c(z,n.get_high(),this.unsigned)}if($.isZero())return v;if(this.eq(P))return $.isOdd()?P:v;if($.eq(P))return this.isOdd()?P:v;if(this.isNegative())return $.isNegative()?this.neg().mul($.neg()):this.neg().mul($).neg();if($.isNegative())return this.mul($.neg()).neg();if(this.lt(y)&&$.lt(y))return u(this.toNumber()*$.toNumber(),this.unsigned);var W=this.high>>>16,q=this.high&65535,K=this.low>>>16,j=this.low&65535,Q=$.high>>>16,J=$.high&65535,ne=$.low>>>16,se=$.low&65535,te=0,ie=0,ee=0,ce=0;return ce+=j*se,ee+=ce>>>16,ce&=65535,ee+=K*se,ie+=ee>>>16,ee&=65535,ee+=j*ne,ie+=ee>>>16,ee&=65535,ie+=q*se,te+=ie>>>16,ie&=65535,ie+=K*ne,te+=ie>>>16,ie&=65535,ie+=j*J,te+=ie>>>16,ie&=65535,te+=W*se+q*ne+K*J+j*Q,te&=65535,c(ee<<16|ce,te<<16|ie,this.unsigned)},D.mul=D.multiply,D.divide=function($){if(r($)||($=p($)),$.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&$.low===-1&&$.high===-1)return this;var z=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,$.low,$.high);return c(z,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?x:v;var W,q,K;if(this.unsigned){if($.unsigned||($=$.toUnsigned()),$.gt(this))return x;if($.gt(this.shru(1)))return T;K=x}else{if(this.eq(P)){if($.eq(k)||$.eq(C))return P;if($.eq(P))return k;var j=this.shr(1);return W=j.div($).shl(1),W.eq(v)?$.isNegative()?k:C:(q=this.sub($.mul(W)),K=W.add(q.div($)),K)}else if($.eq(P))return this.unsigned?x:v;if(this.isNegative())return $.isNegative()?this.neg().div($.neg()):this.neg().div($).neg();if($.isNegative())return this.div($.neg()).neg();K=v}for(q=this;q.gte($);){W=Math.max(1,Math.floor(q.toNumber()/$.toNumber()));for(var Q=Math.ceil(Math.log(W)/Math.LN2),J=Q<=48?1:l(2,Q-48),ne=u(W),se=ne.mul($);se.isNegative()||se.gt(q);)W-=J,ne=u(W,this.unsigned),se=ne.mul($);ne.isZero()&&(ne=k),K=K.add(ne),q=q.sub(se)}return K},D.div=D.divide,D.modulo=function($){if(r($)||($=p($)),n){var z=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,$.low,$.high);return c(z,n.get_high(),this.unsigned)}return this.sub(this.div($).mul($))},D.mod=D.modulo,D.rem=D.modulo,D.not=function(){return c(~this.low,~this.high,this.unsigned)},D.and=function($){return r($)||($=p($)),c(this.low&$.low,this.high&$.high,this.unsigned)},D.or=function($){return r($)||($=p($)),c(this.low|$.low,this.high|$.high,this.unsigned)},D.xor=function($){return r($)||($=p($)),c(this.low^$.low,this.high^$.high,this.unsigned)},D.shiftLeft=function($){return r($)&&($=$.toInt()),($&=63)===0?this:$<32?c(this.low<<$,this.high<<$|this.low>>>32-$,this.unsigned):c(0,this.low<<$-32,this.unsigned)},D.shl=D.shiftLeft,D.shiftRight=function($){return r($)&&($=$.toInt()),($&=63)===0?this:$<32?c(this.low>>>$|this.high<<32-$,this.high>>$,this.unsigned):c(this.high>>$-32,this.high>=0?0:-1,this.unsigned)},D.shr=D.shiftRight,D.shiftRightUnsigned=function($){if(r($)&&($=$.toInt()),$&=63,$===0)return this;var z=this.high;if($<32){var W=this.low;return c(W>>>$|z<<32-$,z>>>$,this.unsigned)}else return $===32?c(z,0,this.unsigned):c(z>>>$-32,0,this.unsigned)},D.shru=D.shiftRightUnsigned,D.shr_u=D.shiftRightUnsigned,D.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},D.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},D.toBytes=function($){return $?this.toBytesLE():this.toBytesBE()},D.toBytesLE=function(){var $=this.high,z=this.low;return[z&255,z>>>8&255,z>>>16&255,z>>>24,$&255,$>>>8&255,$>>>16&255,$>>>24]},D.toBytesBE=function(){var $=this.high,z=this.low;return[$>>>24,$>>>16&255,$>>>8&255,$&255,z>>>24,z>>>16&255,z>>>8&255,z&255]},s.fromBytes=function($,z,W){return W?s.fromBytesLE($,z):s.fromBytesBE($,z)},s.fromBytesLE=function($,z){return new s($[0]|$[1]<<8|$[2]<<16|$[3]<<24,$[4]|$[5]<<8|$[6]<<16|$[7]<<24,z)},s.fromBytesBE=function($,z){return new s($[4]<<24|$[5]<<16|$[6]<<8|$[7],$[0]<<24|$[1]<<16|$[2]<<8|$[3],z)}}}),bT=Pt({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),yT=Pt({"(disabled):util"(){}}),vT=Pt({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(c){var l=this,d=u();l.next=function(){var p=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=p-(l.c=p|0)},l.c=1,l.s0=d(" "),l.s1=d(" "),l.s2=d(" "),l.s0-=d(c),l.s0<0&&(l.s0+=1),l.s1-=d(c),l.s1<0&&(l.s1+=1),l.s2-=d(c),l.s2<0&&(l.s2+=1),d=null}function i(c,l){return l.c=c.c,l.s0=c.s0,l.s1=c.s1,l.s2=c.s2,l}function o(c,l){var d=new a(c),p=l&&l.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&i(p,d),h.state=function(){return i(d,{})}),h}function u(){var c=4022871197,l=function(d){d=String(d);for(var p=0;p<d.length;p++){c+=d.charCodeAt(p);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return l}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),xT=Pt({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(u){var c=this,l="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var p=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^p^p>>>8},u===(u|0)?c.x=u:l+=u;for(var d=0;d<l.length+64;d++)c.x^=l.charCodeAt(d)|0,c.next()}function i(u,c){return c.x=u.x,c.y=u.y,c.z=u.z,c.w=u.w,c}function o(u,c){var l=new a(u),d=c&&c.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(typeof d=="object"&&i(d,l),p.state=function(){return i(l,{})}),p}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),wT=Pt({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(u){var c=this,l="";c.next=function(){var p=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(p^p<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,u===(u|0)?c.x=u:l+=u;for(var d=0;d<l.length+64;d++)c.x^=l.charCodeAt(d)|0,d==l.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function i(u,c){return c.x=u.x,c.y=u.y,c.z=u.z,c.w=u.w,c.v=u.v,c.d=u.d,c}function o(u,c){var l=new a(u),d=c&&c.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(typeof d=="object"&&i(d,l),p.state=function(){return i(l,{})}),p}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),kT=Pt({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(u){var c=this;c.next=function(){var d=c.x,p=c.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,c.i=p+1&7,f};function l(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}l(c,u)}function i(u,c){return c.x=u.x.slice(),c.i=u.i,c}function o(u,c){u==null&&(u=+new Date);var l=new a(u),d=c&&c.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(d.x&&i(d,l),p.state=function(){return i(l,{})}),p}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),IT=Pt({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(u){var c=this;c.next=function(){var d=c.w,p=c.X,h=c.i,f,m;return c.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,c.i=h,m+(d^d>>>16)|0};function l(d,p){var h,f,m,g,b,y=[],v=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,v=Math.max(v,p.length)),m=0,g=-32;g<v;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(b=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(b=b+1640531527|0,h=y[g&127]^=f+b,m=h==0?m+1:0);for(m>=128&&(y[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=y[m+34&127],h=y[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,y[m]=f^h;d.w=b,d.X=y,d.i=m}l(c,u)}function i(u,c){return c.i=u.i,c.w=u.w,c.X=u.X.slice(),c}function o(u,c){u==null&&(u=+new Date);var l=new a(u),d=c&&c.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(d.X&&i(d,l),p.state=function(){return i(l,{})}),p}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),ST=Pt({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(u){var c=this,l="";c.next=function(){var p=c.b,h=c.c,f=c.d,m=c.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,c.b=p=p<<20^p>>>12^h,c.c=h=h-f|0,c.d=f<<16^h>>>16^m,c.a=m-p|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,u===Math.floor(u)?(c.a=u/4294967296|0,c.b=u|0):l+=u;for(var d=0;d<l.length+20;d++)c.b^=l.charCodeAt(d)|0,c.next()}function i(u,c){return c.a=u.a,c.b=u.b,c.c=u.c,c.d=u.d,c}function o(u,c){var l=new a(u),d=c&&c.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(typeof d=="object"&&i(d,l),p.state=function(){return i(l,{})}),p}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),CT=Pt({"(disabled):crypto"(){}}),NT=Pt({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,i=6,o=52,u="random",c=r.pow(a,i),l=r.pow(2,o),d=l*2,p=a-1,h;function f(k,T,C){var R=[];T=T==!0?{entropy:!0}:T||{};var _=y(b(T.entropy?[k,x(s)]:k==null?v():k,3),R),P=new m(R),D=function(){for(var F=P.g(i),$=c,z=0;F<l;)F=(F+z)*a,$*=a,z=P.g(1);for(;F>=d;)F/=2,$/=2,z>>>=1;return(F+z)/$};return D.int32=function(){return P.g(4)|0},D.quick=function(){return P.g(4)/4294967296},D.double=D,y(x(P.S),s),(T.pass||C||function(F,$,z,W){return W&&(W.S&&g(W,P),F.state=function(){return g(P,{})}),z?(r[u]=F,$):F})(D,_,"global"in T?T.global:this==r,T.state)}function m(k){var T,C=k.length,R=this,_=0,P=R.i=R.j=0,D=R.S=[];for(C||(k=[C++]);_<a;)D[_]=_++;for(_=0;_<a;_++)D[_]=D[P=p&P+k[_%C]+(T=D[_])],D[P]=T;(R.g=function(F){for(var $,z=0,W=R.i,q=R.j,K=R.S;F--;)$=K[W=p&W+1],z=z*a+K[p&(K[W]=K[q=p&q+$])+(K[q]=$)];return R.i=W,R.j=q,z})(a)}function g(k,T){return T.i=k.i,T.j=k.j,T.S=k.S.slice(),T}function b(k,T){var C=[],R=typeof k,_;if(T&&R=="object")for(_ in k)try{C.push(b(k[_],T-1))}catch(P){}return C.length?C:R=="string"?k:k+"\0"}function y(k,T){for(var C=k+"",R,_=0;_<C.length;)T[p&_]=p&(R^=T[p&_]*19)+C.charCodeAt(_++);return x(T)}function v(){try{var k;return h&&(k=h.randomBytes)?k=k(a):(k=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(k)),x(k)}catch(R){var T=n.navigator,C=T&&T.plugins;return[+new Date,n,C,n.screen,x(s)]}}function x(k){return String.fromCharCode.apply(0,k)}if(y(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=CT()}catch(k){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+u]=f})(typeof self!="undefined"?self:e,[],Math)}}),Dd=Pt({"src/node_modules/seedrandom/index.js"(e,t){var n=vT(),s=xT(),r=wT(),a=kT(),i=IT(),o=ST(),u=NT();u.alea=n,u.xor128=s,u.xorwow=r,u.xorshift7=a,u.xor4096=i,u.tychei=o,t.exports=u}}),fw=Pt({"(disabled):src/node_modules/string_decoder/index.js"(){}}),nd=Pt({"(disabled):fs"(){}}),Ou=Pt({"(disabled):path"(){}}),TT=Pt({"(disabled):worker_threads"(){}}),$T=Pt({"(disabled):perf_hooks"(){}}),AT=Pt({"(disabled):os"(){}}),ET=Pt({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return ee.buffer!=Qe&&fn(ee.buffer),Sn}function i(){return ee.buffer!=Qe&&fn(ee.buffer),Ht}function o(){return ee.buffer!=Qe&&fn(ee.buffer),Cn}function u(){return ee.buffer!=Qe&&fn(ee.buffer),Rn}function c(){return ee.buffer!=Qe&&fn(ee.buffer),Dn}var l=typeof r!="undefined"?r:{},d,p;l.ready=new Promise(function(S,A){d=S,p=A});var h;typeof process!="undefined"&&process.listeners&&(h={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f={},m;for(m in l)l.hasOwnProperty(m)&&(f[m]=l[m]);var g=[],b="./this.program",y=function(S,A){throw A},v=!1,x=!1,k=!1,T=!1;v=typeof window=="object",x=typeof importScripts=="function",k=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=!v&&!k&&!x;var C=l.ENVIRONMENT_IS_PTHREAD||!1;C&&(Qe=l.buffer);var R="";function _(S){return l.locateFile?l.locateFile(S,R):R+S}var P,D,F,$,z,W;if(k){x?R=Ou().dirname(R)+"/":R=__dirname+"/",P=function(A,M){return z||(z=nd()),W||(W=Ou()),A=W.normalize(A),z.readFileSync(A,M?null:"utf8")},F=function(A){var M=P(A,!0);return M.buffer||(M=new Uint8Array(M)),we(M.buffer),M},process.argv.length>1&&(b=process.argv[1].replace(/\\/g,"/")),g=process.argv.slice(2),process.on("uncaughtException",function(S){if(!(S instanceof wu))throw S}),process.on("unhandledRejection",zs),y=function(S){process.exit(S)},l.inspect=function(){return"[Emscripten Module object]"};var q;try{q=TT()}catch(S){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),S}global.Worker=q.Worker}else T?(typeof read!="undefined"&&(P=function(A){return read(A)}),F=function(A){var M;return typeof readbuffer=="function"?new Uint8Array(readbuffer(A)):(M=read(A,"binary"),we(typeof M=="object"),M)},typeof scriptArgs!="undefined"?g=scriptArgs:typeof arguments!="undefined"&&(g=arguments),typeof quit=="function"&&(y=function(S){quit(S)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(v||x)&&(x?R=self.location.href:typeof document!="undefined"&&document.currentScript&&(R=document.currentScript.src),typeof s!="undefined"&&s&&(R=s),R.indexOf("blob:")!==0?R=R.substr(0,R.lastIndexOf("/")+1):R="",k?(P=function(A,M){return z||(z=nd()),W||(W=Ou()),A=W.normalize(A),z.readFileSync(A,M?null:"utf8")},F=function(A){var M=P(A,!0);return M.buffer||(M=new Uint8Array(M)),we(M.buffer),M}):(P=function(S){var A=new XMLHttpRequest;return A.open("GET",S,!1),A.send(null),A.responseText},x&&(F=function(S){var A=new XMLHttpRequest;return A.open("GET",S,!1),A.responseType="arraybuffer",A.send(null),new Uint8Array(A.response)}),D=function(S,A,M){var Y=new XMLHttpRequest;Y.open("GET",S,!0),Y.responseType="arraybuffer",Y.onload=function(){if(Y.status==200||Y.status==0&&Y.response){A(Y.response);return}M()},Y.onerror=M,Y.send(null)}),$=function(S){document.title=S});k&&typeof performance=="undefined"&&(global.performance=$T().performance);var K=l.print||console.log.bind(console),j=l.printErr||console.warn.bind(console);for(m in f)f.hasOwnProperty(m)&&(l[m]=f[m]);f=null,l.arguments&&(g=l.arguments),l.thisProgram&&(b=l.thisProgram),l.quit&&(y=l.quit);function Q(S){Q.shown||(Q.shown={}),Q.shown[S]||(Q.shown[S]=1,j(S))}var J=Atomics.load,ne=Atomics.store,se=Atomics.compareExchange,te;l.wasmBinary&&(te=l.wasmBinary);var ie=l.noExitRuntime||!0;typeof WebAssembly!="object"&&zs("no native wasm support detected");var ee,ce,me=!1,Ie;function we(S,A){S||zs("Assertion failed: "+A)}function Te(S){var A=l["_"+S];return we(A,"Cannot call unknown function "+S+", make sure it is exported"),A}function Fe(S,A,M,Y,de){var ue={string:function(en){var Ei=0;if(en!=null&&en!==0){var Ev=(en.length<<2)+1;Ei=Ti(Ev),Ye(en,Ei,Ev)}return Ei},array:function(en){var Ei=Ti(en.length);return ht(en,Ei),Ei}};function le(en){return A==="string"?Be(en):A==="boolean"?Boolean(en):en}var ye=Te(S),et=[],zt=0;if(Y)for(var Et=0;Et<Y.length;Et++){var ar=ue[M[Et]];ar?(zt===0&&(zt=xu()),et[Et]=ar(Y[Et])):et[Et]=Y[Et]}var Ai=ye.apply(null,et);return Ai=le(Ai),zt!==0&&Ni(zt),Ai}function Xe(S,A,M,Y){M=M||[];var de=M.every(function(le){return le==="number"}),ue=A!=="string";return ue&&de&&!Y?Te(S):function(){return Fe(S,A,M,arguments,Y)}}function We(S,A,M){for(var Y=A+M,de="";!(A>=Y);){var ue=S[A++];if(!ue)return de;if(!(ue&128)){de+=String.fromCharCode(ue);continue}var le=S[A++]&63;if((ue&224)==192){de+=String.fromCharCode((ue&31)<<6|le);continue}var ye=S[A++]&63;if((ue&240)==224?ue=(ue&15)<<12|le<<6|ye:ue=(ue&7)<<18|le<<12|ye<<6|S[A++]&63,ue<65536)de+=String.fromCharCode(ue);else{var et=ue-65536;de+=String.fromCharCode(55296|et>>10,56320|et&1023)}}return de}function Be(S,A){return S?We(i(),S,A):""}function rt(S,A,M,Y){if(!(Y>0))return 0;for(var de=M,ue=M+Y-1,le=0;le<S.length;++le){var ye=S.charCodeAt(le);if(ye>=55296&&ye<=57343){var et=S.charCodeAt(++le);ye=65536+((ye&1023)<<10)|et&1023}if(ye<=127){if(M>=ue)break;A[M++]=ye}else if(ye<=2047){if(M+1>=ue)break;A[M++]=192|ye>>6,A[M++]=128|ye&63}else if(ye<=65535){if(M+2>=ue)break;A[M++]=224|ye>>12,A[M++]=128|ye>>6&63,A[M++]=128|ye&63}else{if(M+3>=ue)break;A[M++]=240|ye>>18,A[M++]=128|ye>>12&63,A[M++]=128|ye>>6&63,A[M++]=128|ye&63}}return A[M]=0,M-de}function Ye(S,A,M){return rt(S,i(),A,M)}function at(S){for(var A=0,M=0;M<S.length;++M){var Y=S.charCodeAt(M);Y>=55296&&Y<=57343&&(Y=65536+((Y&1023)<<10)|S.charCodeAt(++M)&1023),Y<=127?++A:Y<=2047?A+=2:Y<=65535?A+=3:A+=4}return A}function ht(S,A){a().set(S,A)}function pn(S,A){return S%A>0&&(S+=A-S%A),S}var Qe,Sn,Ht,Hn,hn,Cn,Rn,qn,Dn;function fn(S){Qe=S,l.HEAP8=Sn=new Int8Array(S),l.HEAP16=Hn=new Int16Array(S),l.HEAP32=Cn=new Int32Array(S),l.HEAPU8=Ht=new Uint8Array(S),l.HEAPU16=hn=new Uint16Array(S),l.HEAPU32=Rn=new Uint32Array(S),l.HEAPF32=qn=new Float32Array(S),l.HEAPF64=Dn=new Float64Array(S)}var Zs=l.INITIAL_MEMORY||16777216;if(C)ee=l.wasmMemory,Qe=l.buffer;else if(l.wasmMemory)ee=l.wasmMemory;else if(ee=new WebAssembly.Memory({initial:Zs/65536,maximum:32768,shared:!0}),!(ee.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),k&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");ee&&(Qe=ee.buffer),Zs=Qe.byteLength,fn(Qe);var Qt,Js=[],Fn=[],lu=[],cu=[],Ps=[],ac=!1,qp=!1;C||Fn.push({func:function(){Ic()}});function ic(){if(!C){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)jp(l.preRun.shift());wi(Js)}}function oc(){ac=!0,!C&&wi(Fn)}function uc(){C||wi(lu)}function mn(){C||(qp=!0)}function lc(){if(!C){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)Kp(l.postRun.shift());wi(Ps)}}function jp(S){Js.unshift(S)}function Kp(S){Ps.unshift(S)}var jn=0,du=null,zr=null;function Xp(S){we(!C,"addRunDependency cannot be used in a pthread worker"),jn++,l.monitorRunDependencies&&l.monitorRunDependencies(jn)}function Yp(S){if(jn--,l.monitorRunDependencies&&l.monitorRunDependencies(jn),jn==0&&(du!==null&&(clearInterval(du),du=null),zr)){var A=zr;zr=null,A()}}l.preloadedImages={},l.preloadedAudios={};function zs(S){l.onAbort&&l.onAbort(S),C&&console.error("Pthread aborting at "+new Error().stack),S+="",j(S),me=!0,Ie=1,S="abort("+S+"). Build with -s ASSERTIONS=1 for more info.";var A=new WebAssembly.RuntimeError(S);throw p(A),A}function Mr(S,A){return String.prototype.startsWith?S.startsWith(A):S.indexOf(A)===0}var Qp="data:application/octet-stream;base64,";function cc(S){return Mr(S,Qp)}var Zp="file://";function dc(S){return Mr(S,Zp)}var gn="tfjs-backend-wasm-threaded-simd.wasm";cc(gn)||(gn=_(gn));function Jp(S){try{if(S==gn&&te)return new Uint8Array(te);if(F)return F(S);throw"both async and sync fetching of the wasm failed"}catch(A){zs(A)}}function pc(){if(!te&&(v||x)){if(typeof fetch=="function"&&!dc(gn))return fetch(gn,{credentials:"same-origin"}).then(function(S){if(!S.ok)throw"failed to load wasm binary file at '"+gn+"'";return S.arrayBuffer()}).catch(function(){return Jp(gn)});if(D)return new Promise(function(S,A){D(gn,function(M){S(new Uint8Array(M))},A)})}return Promise.resolve().then(function(){return Jp(gn)})}function eh(){var S={a:qh};function A(le,ye){var et=le.exports;if(l.asm=et,Qt=l.asm.nb,ce=ye,!C){var zt=ke.unusedWorkers.length;ke.unusedWorkers.forEach(function(Et){ke.loadWasmModuleToWorker(Et,function(){--zt||Yp("wasm-instantiate")})})}}C||Xp("wasm-instantiate");function M(le){A(le.instance,le.module)}function Y(le){return pc().then(function(ye){return WebAssembly.instantiate(ye,S)}).then(le,function(ye){j("failed to asynchronously prepare wasm: "+ye),zs(ye)})}function de(){return!te&&typeof WebAssembly.instantiateStreaming=="function"&&!cc(gn)&&!dc(gn)&&typeof fetch=="function"?fetch(gn,{credentials:"same-origin"}).then(function(le){var ye=WebAssembly.instantiateStreaming(le,S);return ye.then(M,function(et){return j("wasm streaming compile failed: "+et),j("falling back to ArrayBuffer instantiation"),Y(M)})}):Y(M)}if(l.instantiateWasm)try{var ue=l.instantiateWasm(S,A);return ue}catch(le){return j("Module.instantiateWasm callback failed with error: "+le),!1}return de().catch(p),{}}var hc={10216:function(){throw"Canceled!"},10234:function(S,A){setTimeout(function(){Sv(S,A)},0)}};function th(){ke.initRuntime()}function wi(S){for(;S.length>0;){var A=S.shift();if(typeof A=="function"){A(l);continue}var M=A.func;typeof M=="number"?A.arg===void 0?Qt.get(M)():Qt.get(M)(A.arg):M(A.arg===void 0?null:A.arg)}}var er={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function pu(S,A){if(S<=0||S>a().length||S&!0||A<0)return-28;if(A==0)return 0;A>=2147483647&&(A=1/0);var M=Atomics.load(o(),$i>>2),Y=0;if(M==S){var de=Atomics.compareExchange(o(),$i>>2,M,0);if(de==M&&(--A,Y=1,A<=0))return 1}var ue=Atomics.notify(o(),S>>2,A);if(ue>=0)return ue+Y;throw"Atomics.notify returned an unexpected value "+ue}l._emscripten_futex_wake=pu;function nh(S){if(C)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in killThread!";o()[S+12>>2]=0;var A=ke.pthreads[S];A.worker.terminate(),ke.freeThreadData(A),ke.runningWorkers.splice(ke.runningWorkers.indexOf(A.worker),1),A.worker.pthread=void 0}function sh(S){if(C)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cancelThread!";var A=ke.pthreads[S];A.worker.postMessage({cmd:"cancel"})}function fc(S){if(C)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cleanupThread!";var A=ke.pthreads[S];if(A){o()[S+12>>2]=0;var M=A.worker;ke.returnWorkerToPool(M)}}var ke={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var S=8,A=0;A<S;++A)ke.allocateUnusedWorker()},initRuntime:function(){for(var S=Br(228),A=0;A<228/4;++A)u()[S/4+A]=0;o()[S+12>>2]=S;var M=S+152;o()[M>>2]=M;for(var Y=Br(512),A=0;A<128;++A)u()[Y/4+A]=0;Atomics.store(u(),S+100>>2,Y),Atomics.store(u(),S+40>>2,S),bf(S,!x,1),kv(S)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;ke.threadExitHandlers.length>0;)ke.threadExitHandlers.pop()();C&&rr()&&wv()},runExitHandlersAndDeinitThread:function(S,A){Atomics.store(u(),S+56>>2,1),Atomics.store(u(),S+60>>2,0),ke.runExitHandlers(),Atomics.store(u(),S+4>>2,A),Atomics.store(u(),S+0>>2,1),pu(S+0,2147483647),bf(0,0,0)},threadExit:function(S){var A=rr();A&&(ke.runExitHandlersAndDeinitThread(A,S),C&&postMessage({cmd:"exit"}))},threadCancel:function(){ke.runExitHandlersAndDeinitThread(rr(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var S in ke.pthreads){var A=ke.pthreads[S];A&&A.worker&&ke.returnWorkerToPool(A.worker)}ke.pthreads={};for(var M=0;M<ke.unusedWorkers.length;++M){var Y=ke.unusedWorkers[M];Y.terminate()}ke.unusedWorkers=[];for(var M=0;M<ke.runningWorkers.length;++M){var Y=ke.runningWorkers[M],A=Y.pthread;ke.freeThreadData(A),Y.terminate()}ke.runningWorkers=[]},freeThreadData:function(S){if(!!S){if(S.threadInfoStruct){var A=o()[S.threadInfoStruct+100>>2];o()[S.threadInfoStruct+100>>2]=0,vu(A),vu(S.threadInfoStruct)}S.threadInfoStruct=0,S.allocatedOwnStack&&S.stackBase&&vu(S.stackBase),S.stackBase=0,S.worker&&(S.worker.pthread=null)}},returnWorkerToPool:function(S){ke.runWithoutMainThreadQueuedCalls(function(){delete ke.pthreads[S.pthread.threadInfoStruct],ke.unusedWorkers.push(S),ke.runningWorkers.splice(ke.runningWorkers.indexOf(S),1),ke.freeThreadData(S.pthread),S.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(S){o()[Av>>2]=0;try{S()}finally{o()[Av>>2]=1}},receiveObjectTransfer:function(S){},loadWasmModuleToWorker:function(S,A){S.onmessage=function(M){var Y=M.data,de=Y.cmd;if(S.pthread&&(ke.currentProxiedOperationCallerThread=S.pthread.threadInfoStruct),Y.targetThread&&Y.targetThread!=rr()){var ue=ke.pthreads[Y.targetThread];ue?ue.worker.postMessage(M.data,Y.transferList):console.error('Internal error! Worker sent a message "'+de+'" to target pthread '+Y.targetThread+", but that thread no longer exists!"),ke.currentProxiedOperationCallerThread=void 0;return}if(de==="processQueuedMainThreadWork")$c();else if(de==="spawnThread")wc(M.data);else if(de==="cleanupThread")fc(Y.thread);else if(de==="killThread")nh(Y.thread);else if(de==="cancelThread")sh(Y.thread);else if(de==="loaded")S.loaded=!0,A&&A(S),S.runPthread&&(S.runPthread(),delete S.runPthread);else if(de==="print")K("Thread "+Y.threadId+": "+Y.text);else if(de==="printErr")j("Thread "+Y.threadId+": "+Y.text);else if(de==="alert")alert("Thread "+Y.threadId+": "+Y.text);else if(de==="exit"){var le=S.pthread&&Atomics.load(u(),S.pthread.threadInfoStruct+64>>2);le&&ke.returnWorkerToPool(S)}else if(de==="exitProcess")try{uT(Y.returnCode)}catch(ye){if(ye instanceof wu)return;throw ye}else de==="cancelDone"?ke.returnWorkerToPool(S):de==="objectTransfer"?ke.receiveObjectTransfer(M.data):M.data.target==="setimmediate"?S.postMessage(M.data):j("worker sent an unknown command "+de);ke.currentProxiedOperationCallerThread=void 0},S.onerror=function(M){j("pthread sent an error! "+M.filename+":"+M.lineno+": "+M.message)},k&&(S.on("message",function(M){S.onmessage({data:M})}),S.on("error",function(M){S.onerror(M)}),S.on("exit",function(M){})),S.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob||s,wasmMemory:ee,wasmModule:ce})},allocateUnusedWorker:function(){var S=_("tfjs-backend-wasm-threaded-simd.worker.js");ke.unusedWorkers.push(new Worker(S))},getNewWorker:function(){return ke.unusedWorkers.length==0&&(ke.allocateUnusedWorker(),ke.loadWasmModuleToWorker(ke.unusedWorkers[0])),ke.unusedWorkers.length>0?ke.unusedWorkers.pop():null},busySpinWait:function(S){for(var A=performance.now()+S;performance.now()<A;);}};function rh(S,A){Tv(S,A),Ni(S)}l.establishStackSpace=rh;function ah(){return ie}l.getNoExitRuntime=ah;function ih(S,A){return Qt.get(S)(A)}l.invokeEntryPoint=ih;function oh(S,A,M,Y){zs("Assertion failed: "+Be(S)+", at: "+[A?Be(A):"unknown filename",M,Y?Be(Y):"unknown function"])}function uh(S,A){var M=_main(S,A)}var Lr;k?Lr=function(){var S=process.hrtime();return S[0]*1e3+S[1]/1e6}:C?Lr=function(){return performance.now()-l.__performance_now_clock_drift}:typeof dateNow!="undefined"?Lr=dateNow:Lr=function(){return performance.now()};function lh(S){return o()[vv()>>2]=S,S}function ch(S,A){if(C)return tr(1,1,S,A)}function dh(S,A){if(S==A)postMessage({cmd:"processQueuedMainThreadWork"});else if(C)postMessage({targetThread:S,cmd:"processThreadQueue"});else{var M=ke.pthreads[S],Y=M&&M.worker;if(!Y)return;Y.postMessage({cmd:"processThreadQueue"})}return 1}function ph(){zs()}function hh(S,A,M){var Y=bh(A,M);return hc[S].apply(null,Y)}function fh(S,A){}function mc(S,A,M){if(S<=0||S>a().length||S&!0)return-28;if(v){if(Atomics.load(o(),S>>2)!=A)return-6;for(var de=performance.now(),ue=de+M,le=Atomics.exchange(o(),$i>>2,S);;){if(de=performance.now(),de>ue)return le=Atomics.exchange(o(),$i>>2,0),-73;if(le=Atomics.exchange(o(),$i>>2,0),le==0)break;if($c(),Atomics.load(o(),S>>2)!=A)return-6;le=Atomics.exchange(o(),$i>>2,S)}return 0}else{var Y=Atomics.wait(o(),S>>2,A,M);if(Y==="timed-out")return-73;if(Y==="not-equal")return-6;if(Y==="ok")return 0;throw"Atomics.wait returned an unexpected value "+Y}}function mh(S,A,M){i().copyWithin(S,A,A+M)}function gh(){return k?AT().cpus().length:navigator.hardwareConcurrency}function tr(S,A){for(var M=arguments.length-2,Y=xu(),de=M,ue=Ti(de*8),le=ue>>3,ye=0;ye<M;ye++){var et=arguments[2+ye];c()[le+ye]=et}var zt=Nv(S,de,ue,A);return Ni(Y),zt}var hu=[],fu=[];function bh(S,A){fu.length=0;var M;for(A>>=2;M=i()[S++];){var Y=M<105;Y&&A&1&&A++,fu.push(Y?c()[A++>>1]:o()[A]),++A}return fu}function yh(S,A,M){hu.length=A;for(var Y=M>>3,de=0;de<A;de++)hu[de]=c()[Y+de];var ue=S<0,le=ue?hc[-S-1]:Hh[S];return le.apply(null,hu)}function vh(){return i().length}function xh(S){try{return ee.grow(S-Qe.byteLength+65535>>>16),fn(ee.buffer),1}catch(A){}}function wh(S){var A=vh();if(S<=A)return!1;var M=2147483648;if(S>M)return!1;for(var Y=1;Y<=4;Y*=2){var de=A*(1+.2/Y);de=Math.min(de,S+100663296);var ue=Math.min(M,pn(Math.max(S,de),65536)),le=xh(ue);if(le)return!0}return!1}var Pe={inEventHandler:0,removeAllEventListeners:function(){for(var S=Pe.eventHandlers.length-1;S>=0;--S)Pe._removeHandler(S);Pe.eventHandlers=[],Pe.deferredCalls=[]},registerRemoveEventListeners:function(){Pe.removeEventListenersRegistered||(cu.push(Pe.removeAllEventListeners),Pe.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(S,A,M){function Y(le,ye){if(le.length!=ye.length)return!1;for(var et in le)if(le[et]!=ye[et])return!1;return!0}for(var de in Pe.deferredCalls){var ue=Pe.deferredCalls[de];if(ue.targetFunction==S&&Y(ue.argsList,M))return}Pe.deferredCalls.push({targetFunction:S,precedence:A,argsList:M}),Pe.deferredCalls.sort(function(le,ye){return le.precedence<ye.precedence})},removeDeferredCalls:function(S){for(var A=0;A<Pe.deferredCalls.length;++A)Pe.deferredCalls[A].targetFunction==S&&(Pe.deferredCalls.splice(A,1),--A)},canPerformEventHandlerRequests:function(){return Pe.inEventHandler&&Pe.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Pe.canPerformEventHandlerRequests())for(var S=0;S<Pe.deferredCalls.length;++S){var A=Pe.deferredCalls[S];Pe.deferredCalls.splice(S,1),--S,A.targetFunction.apply(null,A.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(S,A){for(var M=0;M<Pe.eventHandlers.length;++M)Pe.eventHandlers[M].target==S&&(!A||A==Pe.eventHandlers[M].eventTypeString)&&Pe._removeHandler(M--)},_removeHandler:function(S){var A=Pe.eventHandlers[S];A.target.removeEventListener(A.eventTypeString,A.eventListenerFunc,A.useCapture),Pe.eventHandlers.splice(S,1)},registerOrRemoveHandler:function(S){var A=function(de){++Pe.inEventHandler,Pe.currentEventHandler=S,Pe.runDeferredCalls(),S.handlerFunc(de),Pe.runDeferredCalls(),--Pe.inEventHandler};if(S.callbackfunc)S.eventListenerFunc=A,S.target.addEventListener(S.eventTypeString,A,S.useCapture),Pe.eventHandlers.push(S),Pe.registerRemoveEventListeners();else for(var M=0;M<Pe.eventHandlers.length;++M)Pe.eventHandlers[M].target==S.target&&Pe.eventHandlers[M].eventTypeString==S.eventTypeString&&Pe._removeHandler(M--)},queueEventHandlerOnThread_iiii:function(S,A,M,Y,de){var ue=xu(),le=Ti(12);o()[le>>2]=M,o()[le+4>>2]=Y,o()[le+8>>2]=de,gf(0,S,637534208,A,Y,le),Ni(ue)},getTargetThreadForEventCallback:function(S){switch(S){case 1:return 0;case 2:return ke.currentProxiedOperationCallerThread;default:return S}},getNodeNameForTarget:function(S){return S?S==window?"#window":S==screen?"#screen":S&&S.nodeName?S.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function kh(S){var A=at(S)+1,M=Br(A);return Ye(S,M,A),M}function Ih(S,A,M,Y){var de=xu(),ue=Ti(12),le=0;A&&(le=kh(A)),o()[ue>>2]=le,o()[ue+4>>2]=M,o()[ue+8>>2]=Y,gf(0,S,657457152,0,le,ue),Ni(de)}function Sh(S,A,M,Y){A=A?Be(A):"",Ih(S,A,M,Y)}function Ch(S){return S>2?Be(S):S}var Nh=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function Th(S){S=Ch(S);var A=Nh[S]||(typeof document!="undefined"?document.querySelector(S):void 0);return A}function mu(S){return Th(S)}function gc(S,A,M){var Y=mu(S);if(!Y)return-4;if(Y.canvasSharedPtr&&(o()[Y.canvasSharedPtr>>2]=A,o()[Y.canvasSharedPtr+4>>2]=M),Y.offscreenCanvas||!Y.controlTransferredOffscreen){Y.offscreenCanvas&&(Y=Y.offscreenCanvas);var de=!1;if(Y.GLctxObject&&Y.GLctxObject.GLctx){var ue=Y.GLctxObject.GLctx.getParameter(2978);de=ue[0]===0&&ue[1]===0&&ue[2]===Y.width&&ue[3]===Y.height}Y.width=A,Y.height=M,de&&Y.GLctxObject.GLctx.viewport(0,0,A,M)}else if(Y.canvasSharedPtr){var le=o()[Y.canvasSharedPtr+8>>2];return Sh(le,S,A,M),1}else return-4;return 0}function bc(S,A,M){return C?tr(2,1,S,A,M):gc(S,A,M)}function $h(S,A,M){var Y=mu(S);return Y?gc(S,A,M):bc(S,A,M)}function Ah(S){}function Eh(S,A){}function _h(S){var A=S.getExtension("ANGLE_instanced_arrays");if(A)return S.vertexAttribDivisor=function(M,Y){A.vertexAttribDivisorANGLE(M,Y)},S.drawArraysInstanced=function(M,Y,de,ue){A.drawArraysInstancedANGLE(M,Y,de,ue)},S.drawElementsInstanced=function(M,Y,de,ue,le){A.drawElementsInstancedANGLE(M,Y,de,ue,le)},1}function Rh(S){var A=S.getExtension("OES_vertex_array_object");if(A)return S.createVertexArray=function(){return A.createVertexArrayOES()},S.deleteVertexArray=function(M){A.deleteVertexArrayOES(M)},S.bindVertexArray=function(M){A.bindVertexArrayOES(M)},S.isVertexArray=function(M){return A.isVertexArrayOES(M)},1}function Dh(S){var A=S.getExtension("WEBGL_draw_buffers");if(A)return S.drawBuffers=function(M,Y){A.drawBuffersWEBGL(M,Y)},1}function Fh(S){return!!(S.multiDrawWebgl=S.getExtension("WEBGL_multi_draw"))}var Je={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(A){Je.lastError||(Je.lastError=A)},getNewId:function(S){for(var A=Je.counter++,M=S.length;M<A;M++)S[M]=null;return A},getSource:function(S,A,M,Y){for(var de="",ue=0;ue<A;++ue){var le=Y?o()[Y+ue*4>>2]:-1;de+=Be(o()[M+ue*4>>2],le<0?void 0:le)}return de},createContext:function(S,A){var M=S.getContext("webgl",A);if(!M)return 0;var Y=Je.registerContext(M,A);return Y},registerContext:function(S,A){var M=Br(8);o()[M+4>>2]=rr();var Y={handle:M,attributes:A,version:A.majorVersion,GLctx:S};return S.canvas&&(S.canvas.GLctxObject=Y),Je.contexts[M]=Y,(typeof A.enableExtensionsByDefault=="undefined"||A.enableExtensionsByDefault)&&Je.initExtensions(Y),M},makeContextCurrent:function(S){return Je.currentContext=Je.contexts[S],l.ctx=nr=Je.currentContext&&Je.currentContext.GLctx,!(S&&!nr)},getContext:function(S){return Je.contexts[S]},deleteContext:function(S){Je.currentContext===Je.contexts[S]&&(Je.currentContext=null),typeof Pe=="object"&&Pe.removeAllHandlersOnTarget(Je.contexts[S].GLctx.canvas),Je.contexts[S]&&Je.contexts[S].GLctx.canvas&&(Je.contexts[S].GLctx.canvas.GLctxObject=void 0),vu(Je.contexts[S].handle),Je.contexts[S]=null},initExtensions:function(S){if(S||(S=Je.currentContext),!S.initExtensionsDone){S.initExtensionsDone=!0;var A=S.GLctx;_h(A),Rh(A),Dh(A),A.disjointTimerQueryExt=A.getExtension("EXT_disjoint_timer_query"),Fh(A);var M=A.getSupportedExtensions()||[];M.forEach(function(Y){Y.indexOf("lose_context")<0&&Y.indexOf("debug")<0&&A.getExtension(Y)})}},populateUniformTable:function(S){for(var A=Je.programs[S],M=Je.programInfos[S]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},Y=M.uniforms,de=nr.getProgramParameter(A,35718),ue=0;ue<de;++ue){var le=nr.getActiveUniform(A,ue),ye=le.name;M.maxUniformLength=Math.max(M.maxUniformLength,ye.length+1),ye.slice(-1)=="]"&&(ye=ye.slice(0,ye.lastIndexOf("[")));var et=nr.getUniformLocation(A,ye);if(et){var zt=Je.getNewId(Je.uniforms);Y[ye]=[le.size,zt],Je.uniforms[zt]=et;for(var Et=1;Et<le.size;++Et){var ar=ye+"["+Et+"]";et=nr.getUniformLocation(A,ar),zt=Je.getNewId(Je.uniforms),Je.uniforms[zt]=et}}}}},Oh=["default","low-power","high-performance"];function Ph(S,A){var M=A>>2,Y=o()[M+6],de={alpha:!!o()[M+0],depth:!!o()[M+1],stencil:!!o()[M+2],antialias:!!o()[M+3],premultipliedAlpha:!!o()[M+4],preserveDrawingBuffer:!!o()[M+5],powerPreference:Oh[Y],failIfMajorPerformanceCaveat:!!o()[M+7],majorVersion:o()[M+8],minorVersion:o()[M+9],enableExtensionsByDefault:o()[M+10],explicitSwapControl:o()[M+11],proxyContextToMainThread:o()[M+12],renderViaOffscreenBackBuffer:o()[M+13]},ue=mu(S);if(!ue||de.explicitSwapControl)return 0;var le=Je.createContext(ue,de);return le}function zh(S,A){return Ph(S,A)}var ki={mappings:{},buffers:[null,[],[]],printChar:function(S,A){var M=ki.buffers[S];A===0||A===10?((S===1?K:j)(We(M,0)),M.length=0):M.push(A)},varargs:void 0,get:function(){ki.varargs+=4;var S=o()[ki.varargs-4>>2];return S},getStr:function(S){var A=Be(S);return A},get64:function(S,A){return S}};function yc(S){return C?tr(3,1,S):0}function vc(S,A,M,Y,de){if(C)return tr(4,1,S,A,M,Y,de)}function xc(S,A,M,Y){if(C)return tr(5,1,S,A,M,Y);for(var de=0,ue=0;ue<M;ue++){for(var le=o()[A+ue*8>>2],ye=o()[A+(ue*8+4)>>2],et=0;et<ye;et++)ki.printChar(S,i()[le+et]);de+=ye}return o()[Y>>2]=de,0}function Mh(S){var A=ke.threadExitHandlers.pop();S&&A()}function Lh(S,A){ke.threadExitHandlers.push(function(){Qt.get(S)(A)})}function wc(S){if(C)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var A=ke.getNewWorker();if(A.pthread!==void 0)throw"Internal error!";if(!S.pthread_ptr)throw"Internal error, no pthread ptr!";ke.runningWorkers.push(A);for(var M=Br(128*4),Y=0;Y<128;++Y)o()[M+Y*4>>2]=0;var de=S.stackBase+S.stackSize,ue=ke.pthreads[S.pthread_ptr]={worker:A,stackBase:S.stackBase,stackSize:S.stackSize,allocatedOwnStack:S.allocatedOwnStack,threadInfoStruct:S.pthread_ptr},le=ue.threadInfoStruct>>2;Atomics.store(u(),le+16,S.detached),Atomics.store(u(),le+25,M),Atomics.store(u(),le+10,ue.threadInfoStruct),Atomics.store(u(),le+20,S.stackSize),Atomics.store(u(),le+19,de),Atomics.store(u(),le+26,S.stackSize),Atomics.store(u(),le+28,de),Atomics.store(u(),le+29,S.detached);var ye=xv(),et=ye+40;Atomics.store(u(),le+43,et),A.pthread=ue;var zt={cmd:"run",start_routine:S.startRoutine,arg:S.arg,threadInfoStruct:S.pthread_ptr,stackBase:S.stackBase,stackSize:S.stackSize};A.runPthread=function(){zt.time=performance.now(),A.postMessage(zt,S.transferList)},A.loaded&&(A.runPthread(),delete A.runPthread)}function Bh(S,A,M,Y){if(typeof SharedArrayBuffer=="undefined")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!S)return j("pthread_create called with a null thread pointer!"),28;var de=[],ue=0;if(C&&(de.length===0||ue))return Cv(687865856,S,A,M,Y);if(ue)return ue;var le=0,ye=0,et=0;A&&A!=-1?(le=o()[A>>2],le+=81920,ye=o()[A+8>>2],et=o()[A+12>>2]!==0):le=2097152;var zt=ye==0;zt?ye=$v(16,le):(ye-=le,we(ye>0));for(var Et=Br(228),ar=0;ar<57;++ar)u()[(Et>>2)+ar]=0;o()[S>>2]=Et,o()[Et+12>>2]=Et;var Ai=Et+152;o()[Ai>>2]=Ai;var en={stackBase:ye,stackSize:le,allocatedOwnStack:zt,detached:et,startRoutine:M,pthread_ptr:Et,arg:Y,transferList:de};return C?(en.cmd="spawnThread",postMessage(en,de)):wc(en),0}function Vh(){if(!!C){var S=rr();if(!!S){var A=Atomics.load(u(),S+56>>2);if(!A){var M=Atomics.load(u(),S+0>>2);if(M==2)throw"Canceled!"}}}}function Wh(){k||x||Q("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Uh(S,A,M){if(!S)return j("pthread_join attempted on a null thread pointer!"),er.ESRCH;if(C&&rr()==S)return j("PThread "+S+" is attempting to join to itself!"),er.EDEADLK;if(!C&&Iv()==S)return j("Main thread "+S+" is attempting to join to itself!"),er.EDEADLK;var Y=o()[S+12>>2];if(Y!==S)return j("pthread_join attempted on thread "+S+", which does not point to a valid thread, or does not exist anymore!"),er.ESRCH;var de=Atomics.load(u(),S+64>>2);if(de)return j("Attempted to join thread "+S+", which was already detached!"),er.EINVAL;for(M&&Wh();;){var ue=Atomics.load(u(),S+0>>2);if(ue==1){var le=Atomics.load(u(),S+4>>2);return A&&(o()[A>>2]=le),Atomics.store(u(),S+64>>2,1),C?postMessage({cmd:"cleanupThread",thread:S}):fc(S),0}if(!M)return er.EBUSY;Vh(),C||$c(),mc(S+0,ue,C?100:1)}}function Gh(S,A){return Uh(S,A,!0)}function kc(S){if(C)return tr(6,1,S);switch(S){case 30:return 16384;case 85:var A=2147483648;return A/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return lh(28),-1}C||ke.initMainThreadBlock();var nr,Hh=[null,ch,bc,yc,vc,xc,kc],qh={e:oh,r:uh,x:dh,b:ph,y:hh,j:fh,d:mc,c:pu,f:Lr,p:mh,A:gh,u:yh,q:wh,v:$h,i:Ah,s:Eh,w:zh,l:yc,n:vc,g:xc,o:th,a:ee||l.wasmMemory,z:Mh,k:Lh,h:Bh,m:Gh,t:kc},yv=eh(),Ic=l.___wasm_call_ctors=function(){return(Ic=l.___wasm_call_ctors=l.asm.B).apply(null,arguments)},jh=l._init=function(){return(jh=l._init=l.asm.C).apply(null,arguments)},Kh=l._init_with_threads_count=function(){return(Kh=l._init_with_threads_count=l.asm.D).apply(null,arguments)},Xh=l._get_threads_count=function(){return(Xh=l._get_threads_count=l.asm.E).apply(null,arguments)},Yh=l._register_tensor=function(){return(Yh=l._register_tensor=l.asm.F).apply(null,arguments)},Qh=l._dispose_data=function(){return(Qh=l._dispose_data=l.asm.G).apply(null,arguments)},Zh=l._dispose=function(){return(Zh=l._dispose=l.asm.H).apply(null,arguments)},Jh=l._Abs=function(){return(Jh=l._Abs=l.asm.I).apply(null,arguments)},ef=l._Add=function(){return(ef=l._Add=l.asm.J).apply(null,arguments)},tf=l._AddN=function(){return(tf=l._AddN=l.asm.K).apply(null,arguments)},nf=l._All=function(){return(nf=l._All=l.asm.L).apply(null,arguments)},sf=l._Any=function(){return(sf=l._Any=l.asm.M).apply(null,arguments)},rf=l._ArgMax=function(){return(rf=l._ArgMax=l.asm.N).apply(null,arguments)},af=l._AvgPool=function(){return(af=l._AvgPool=l.asm.O).apply(null,arguments)},of=l._BatchMatMul=function(){return(of=l._BatchMatMul=l.asm.P).apply(null,arguments)},uf=l._Ceil=function(){return(uf=l._Ceil=l.asm.Q).apply(null,arguments)},lf=l._ClipByValue=function(){return(lf=l._ClipByValue=l.asm.R).apply(null,arguments)},cf=l._Conv2D=function(){return(cf=l._Conv2D=l.asm.S).apply(null,arguments)},df=l._Conv2DBackpropInput=function(){return(df=l._Conv2DBackpropInput=l.asm.T).apply(null,arguments)},pf=l._Cos=function(){return(pf=l._Cos=l.asm.U).apply(null,arguments)},hf=l._Cosh=function(){return(hf=l._Cosh=l.asm.V).apply(null,arguments)},Sc=l._CropAndResize=function(){return(Sc=l._CropAndResize=l.asm.W).apply(null,arguments)},Cc=l._Cumsum=function(){return(Cc=l._Cumsum=l.asm.X).apply(null,arguments)},gu=l._DepthToSpace=function(){return(gu=l._DepthToSpace=l.asm.Y).apply(null,arguments)},Ii=l._DepthwiseConv2dNative=function(){return(Ii=l._DepthwiseConv2dNative=l.asm.Z).apply(null,arguments)},ff=l._Elu=function(){return(ff=l._Elu=l.asm._).apply(null,arguments)},bu=l._Equal=function(){return(bu=l._Equal=l.asm.$).apply(null,arguments)},Si=l._Exp=function(){return(Si=l._Exp=l.asm.aa).apply(null,arguments)},Ci=l._FlipLeftRight=function(){return(Ci=l._FlipLeftRight=l.asm.ba).apply(null,arguments)},mf=l._Floor=function(){return(mf=l._Floor=l.asm.ca).apply(null,arguments)},Z=l._FloorDiv=function(){return(Z=l._FloorDiv=l.asm.da).apply(null,arguments)},re=l._FusedBatchNorm=function(){return(re=l._FusedBatchNorm=l.asm.ea).apply(null,arguments)},ge=l._FusedConv2D=function(){return(ge=l._FusedConv2D=l.asm.fa).apply(null,arguments)},Ze=l._FusedDepthwiseConv2D=function(){return(Ze=l._FusedDepthwiseConv2D=l.asm.ga).apply(null,arguments)},xt=l._Gather=function(){return(xt=l._Gather=l.asm.ha).apply(null,arguments)},ft=l._GatherNd=function(){return(ft=l._GatherNd=l.asm.ia).apply(null,arguments)},Ve=l._Greater=function(){return(Ve=l._Greater=l.asm.ja).apply(null,arguments)},Ue=l._GreaterEqual=function(){return(Ue=l._GreaterEqual=l.asm.ka).apply(null,arguments)},qt=l._LeakyRelu=function(){return(qt=l._LeakyRelu=l.asm.la).apply(null,arguments)},Ms=l._Less=function(){return(Ms=l._Less=l.asm.ma).apply(null,arguments)},Ls=l._LessEqual=function(){return(Ls=l._LessEqual=l.asm.na).apply(null,arguments)},Nc=l._Log=function(){return(Nc=l._Log=l.asm.oa).apply(null,arguments)},yu=l._LogicalAnd=function(){return(yu=l._LogicalAnd=l.asm.pa).apply(null,arguments)},Nn=l._Max=function(){return(Nn=l._Max=l.asm.qa).apply(null,arguments)},sr=l._MaxPool=function(){return(sr=l._MaxPool=l.asm.ra).apply(null,arguments)},Tc=l._Maximum=function(){return(Tc=l._Maximum=l.asm.sa).apply(null,arguments)},mN=l._Mean=function(){return(mN=l._Mean=l.asm.ta).apply(null,arguments)},gN=l._Min=function(){return(gN=l._Min=l.asm.ua).apply(null,arguments)},bN=l._Minimum=function(){return(bN=l._Minimum=l.asm.va).apply(null,arguments)},yN=l._MirrorPad=function(){return(yN=l._MirrorPad=l.asm.wa).apply(null,arguments)},vN=l._Multiply=function(){return(vN=l._Multiply=l.asm.xa).apply(null,arguments)},xN=l._Neg=function(){return(xN=l._Neg=l.asm.ya).apply(null,arguments)},wN=l._NonMaxSuppressionV3=function(){return(wN=l._NonMaxSuppressionV3=l.asm.za).apply(null,arguments)},kN=l._NonMaxSuppressionV4=function(){return(kN=l._NonMaxSuppressionV4=l.asm.Aa).apply(null,arguments)},IN=l._NonMaxSuppressionV5=function(){return(IN=l._NonMaxSuppressionV5=l.asm.Ba).apply(null,arguments)},SN=l._NotEqual=function(){return(SN=l._NotEqual=l.asm.Ca).apply(null,arguments)},CN=l._OneHot=function(){return(CN=l._OneHot=l.asm.Da).apply(null,arguments)},NN=l._PadV2=function(){return(NN=l._PadV2=l.asm.Ea).apply(null,arguments)},TN=l._Pow=function(){return(TN=l._Pow=l.asm.Fa).apply(null,arguments)},$N=l._Prelu=function(){return($N=l._Prelu=l.asm.Ga).apply(null,arguments)},AN=l._Prod=function(){return(AN=l._Prod=l.asm.Ha).apply(null,arguments)},EN=l._RealDiv=function(){return(EN=l._RealDiv=l.asm.Ia).apply(null,arguments)},_N=l._Relu=function(){return(_N=l._Relu=l.asm.Ja).apply(null,arguments)},RN=l._Relu6=function(){return(RN=l._Relu6=l.asm.Ka).apply(null,arguments)},DN=l._ResizeBilinear=function(){return(DN=l._ResizeBilinear=l.asm.La).apply(null,arguments)},FN=l._Reverse=function(){return(FN=l._Reverse=l.asm.Ma).apply(null,arguments)},ON=l._RotateWithOffset=function(){return(ON=l._RotateWithOffset=l.asm.Na).apply(null,arguments)},PN=l._Round=function(){return(PN=l._Round=l.asm.Oa).apply(null,arguments)},zN=l._Rsqrt=function(){return(zN=l._Rsqrt=l.asm.Pa).apply(null,arguments)},MN=l._ScatterNd=function(){return(MN=l._ScatterNd=l.asm.Qa).apply(null,arguments)},LN=l._SelectV2=function(){return(LN=l._SelectV2=l.asm.Ra).apply(null,arguments)},BN=l._Sigmoid=function(){return(BN=l._Sigmoid=l.asm.Sa).apply(null,arguments)},VN=l._Sin=function(){return(VN=l._Sin=l.asm.Ta).apply(null,arguments)},WN=l._Softmax=function(){return(WN=l._Softmax=l.asm.Ua).apply(null,arguments)},UN=l._SparseFillEmptyRows=function(){return(UN=l._SparseFillEmptyRows=l.asm.Va).apply(null,arguments)},GN=l._SparseReshape=function(){return(GN=l._SparseReshape=l.asm.Wa).apply(null,arguments)},HN=l._SparseSegmentReduction=function(){return(HN=l._SparseSegmentReduction=l.asm.Xa).apply(null,arguments)},qN=l._Sqrt=function(){return(qN=l._Sqrt=l.asm.Ya).apply(null,arguments)},jN=l._Square=function(){return(jN=l._Square=l.asm.Za).apply(null,arguments)},KN=l._SquaredDifference=function(){return(KN=l._SquaredDifference=l.asm._a).apply(null,arguments)},XN=l._Step=function(){return(XN=l._Step=l.asm.$a).apply(null,arguments)},YN=l._StridedSlice=function(){return(YN=l._StridedSlice=l.asm.ab).apply(null,arguments)},QN=l._Sub=function(){return(QN=l._Sub=l.asm.bb).apply(null,arguments)},ZN=l._Sum=function(){return(ZN=l._Sum=l.asm.cb).apply(null,arguments)},JN=l._Tan=function(){return(JN=l._Tan=l.asm.db).apply(null,arguments)},eT=l._Tanh=function(){return(eT=l._Tanh=l.asm.eb).apply(null,arguments)},tT=l._Tile=function(){return(tT=l._Tile=l.asm.fb).apply(null,arguments)},nT=l._TopK=function(){return(nT=l._TopK=l.asm.gb).apply(null,arguments)},sT=l._Transform=function(){return(sT=l._Transform=l.asm.hb).apply(null,arguments)},rT=l._Transpose=function(){return(rT=l._Transpose=l.asm.ib).apply(null,arguments)},aT=l.__FusedMatMul=function(){return(aT=l.__FusedMatMul=l.asm.jb).apply(null,arguments)},Br=l._malloc=function(){return(Br=l._malloc=l.asm.kb).apply(null,arguments)},vu=l._free=function(){return(vu=l._free=l.asm.lb).apply(null,arguments)},vv=l.___errno_location=function(){return(vv=l.___errno_location=l.asm.mb).apply(null,arguments)},xv=l._emscripten_get_global_libc=function(){return(xv=l._emscripten_get_global_libc=l.asm.ob).apply(null,arguments)},rr=l._pthread_self=function(){return(rr=l._pthread_self=l.asm.pb).apply(null,arguments)},wv=l.___pthread_tsd_run_dtors=function(){return(wv=l.___pthread_tsd_run_dtors=l.asm.qb).apply(null,arguments)},$c=l._emscripten_main_thread_process_queued_calls=function(){return($c=l._emscripten_main_thread_process_queued_calls=l.asm.rb).apply(null,arguments)},iT=l._emscripten_current_thread_process_queued_calls=function(){return(iT=l._emscripten_current_thread_process_queued_calls=l.asm.sb).apply(null,arguments)},kv=l._emscripten_register_main_browser_thread_id=function(){return(kv=l._emscripten_register_main_browser_thread_id=l.asm.tb).apply(null,arguments)},Iv=l._emscripten_main_browser_thread_id=function(){return(Iv=l._emscripten_main_browser_thread_id=l.asm.ub).apply(null,arguments)},Sv=l.__emscripten_do_dispatch_to_thread=function(){return(Sv=l.__emscripten_do_dispatch_to_thread=l.asm.vb).apply(null,arguments)},Cv=l._emscripten_sync_run_in_main_thread_4=function(){return(Cv=l._emscripten_sync_run_in_main_thread_4=l.asm.wb).apply(null,arguments)},Nv=l._emscripten_run_in_main_runtime_thread_js=function(){return(Nv=l._emscripten_run_in_main_runtime_thread_js=l.asm.xb).apply(null,arguments)},gf=l.__emscripten_call_on_thread=function(){return(gf=l.__emscripten_call_on_thread=l.asm.yb).apply(null,arguments)},oT=l._emscripten_tls_init=function(){return(oT=l._emscripten_tls_init=l.asm.zb).apply(null,arguments)},bf=l.__emscripten_thread_init=function(){return(bf=l.__emscripten_thread_init=l.asm.Ab).apply(null,arguments)},xu=l.stackSave=function(){return(xu=l.stackSave=l.asm.Bb).apply(null,arguments)},Ni=l.stackRestore=function(){return(Ni=l.stackRestore=l.asm.Cb).apply(null,arguments)},Ti=l.stackAlloc=function(){return(Ti=l.stackAlloc=l.asm.Db).apply(null,arguments)},Tv=l._emscripten_stack_set_limits=function(){return(Tv=l._emscripten_stack_set_limits=l.asm.Eb).apply(null,arguments)},$v=l._memalign=function(){return($v=l._memalign=l.asm.Fb).apply(null,arguments)},Av=l.__emscripten_allow_main_runtime_queued_calls=10208,$i=l.__emscripten_main_thread_futex=10412;l.cwrap=Xe,l.PThread=ke,l.PThread=ke,l.wasmMemory=ee,l.ExitStatus=wu;var Ac;function wu(S){this.name="ExitStatus",this.message="Program terminated with exit("+S+")",this.status=S}zr=function S(){Ac||yf(),Ac||(zr=S)};function yf(S){if(S=S||g,jn>0)return;if(C){d(l),oc(),postMessage({cmd:"loaded"});return}if(ic(),jn>0)return;function A(){Ac||(Ac=!0,l.calledRun=!0,!me&&(oc(),uc(),d(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),lc()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),A()},1)):A()}l.run=yf;function uT(S,A){if(!(A&&ie&&S===0)){if(!A&&C)throw postMessage({cmd:"exitProcess",returnCode:S}),new wu(S);ie||(ke.terminateAllThreads(),Ie=S,mn(),l.onExit&&l.onExit(S),me=!0),y(S,new wu(S))}}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();C&&(ie=!1,ke.initWorker()),yf();var Ec;h&&(Ec={uncaughtException:process.listeners("uncaughtException").filter(function(S){return!h.uncaughtException.indexOf(S)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(S){return!h.unhandledRejection.indexOf(S)>-1})});var _c;if(typeof WasmBackendModule!="undefined")_c=WasmBackendModule;else if(typeof r!="undefined")_c=r;else throw new Error("Could not find wasm module in post.js");if(Ec){var lT=_c._dispose;_c._dispose=function(){lT(),Ec.uncaughtException.forEach(function(S){process.removeListener("uncaughtException",S)}),Ec.unhandledRejection.forEach(function(S){process.removeListener("unhandledRejection",S)})}}return r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),_T=Pt({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},i,o;a.ready=new Promise(function(Z,re){i=Z,o=re});var u;typeof process!="undefined"&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var c={},l;for(l in a)a.hasOwnProperty(l)&&(c[l]=a[l]);var d=[],p="./this.program",h=function(Z,re){throw re},f=!1,m=!1,g=!1,b=!1;f=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",b=!f&&!g&&!m;var y="";function v(Z){return a.locateFile?a.locateFile(Z,y):y+Z}var x,k,T,C,R,_;g?(m?y=Ou().dirname(y)+"/":y=__dirname+"/",x=function(re,ge){return R||(R=nd()),_||(_=Ou()),re=_.normalize(re),R.readFileSync(re,ge?null:"utf8")},T=function(re){var ge=x(re,!0);return ge.buffer||(ge=new Uint8Array(ge)),K(ge.buffer),ge},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(Z){if(!(Z instanceof ff))throw Z}),process.on("unhandledRejection",Ps),h=function(Z){process.exit(Z)},a.inspect=function(){return"[Emscripten Module object]"}):b?(typeof read!="undefined"&&(x=function(re){return read(re)}),T=function(re){var ge;return typeof readbuffer=="function"?new Uint8Array(readbuffer(re)):(ge=read(re,"binary"),K(typeof ge=="object"),ge)},typeof scriptArgs!="undefined"?d=scriptArgs:typeof arguments!="undefined"&&(d=arguments),typeof quit=="function"&&(h=function(Z){quit(Z)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(f||m)&&(m?y=self.location.href:typeof document!="undefined"&&document.currentScript&&(y=document.currentScript.src),s&&(y=s),y.indexOf("blob:")!==0?y=y.substr(0,y.lastIndexOf("/")+1):y="",x=function(Z){var re=new XMLHttpRequest;return re.open("GET",Z,!1),re.send(null),re.responseText},m&&(T=function(Z){var re=new XMLHttpRequest;return re.open("GET",Z,!1),re.responseType="arraybuffer",re.send(null),new Uint8Array(re.response)}),k=function(Z,re,ge){var Ze=new XMLHttpRequest;Ze.open("GET",Z,!0),Ze.responseType="arraybuffer",Ze.onload=function(){if(Ze.status==200||Ze.status==0&&Ze.response){re(Ze.response);return}ge()},Ze.onerror=ge,Ze.send(null)},C=function(Z){document.title=Z});var P=a.print||console.log.bind(console),D=a.printErr||console.warn.bind(console);for(l in c)c.hasOwnProperty(l)&&(a[l]=c[l]);c=null,a.arguments&&(d=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(h=a.quit);var F;a.wasmBinary&&(F=a.wasmBinary);var $=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Ps("no native wasm support detected");var z,W=!1,q;function K(Z,re){Z||Ps("Assertion failed: "+re)}function j(Z){var re=a["_"+Z];return K(re,"Cannot call unknown function "+Z+", make sure it is exported"),re}function Q(Z,re,ge,Ze,xt){var ft={string:function(Nn){var sr=0;if(Nn!=null&&Nn!==0){var Tc=(Nn.length<<2)+1;sr=gu(Tc),ee(Nn,sr,Tc)}return sr},array:function(Nn){var sr=gu(Nn.length);return ce(Nn,sr),sr}};function Ve(Nn){return re==="string"?te(Nn):re==="boolean"?Boolean(Nn):Nn}var Ue=j(Z),qt=[],Ms=0;if(Ze)for(var Ls=0;Ls<Ze.length;Ls++){var Nc=ft[ge[Ls]];Nc?(Ms===0&&(Ms=Sc()),qt[Ls]=Nc(Ze[Ls])):qt[Ls]=Ze[Ls]}var yu=Ue.apply(null,qt);return yu=Ve(yu),Ms!==0&&Cc(Ms),yu}function J(Z,re,ge,Ze){ge=ge||[];var xt=ge.every(function(Ve){return Ve==="number"}),ft=re!=="string";return ft&&xt&&!Ze?j(Z):function(){return Q(Z,re,ge,arguments,Ze)}}var ne=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function se(Z,re,ge){for(var Ze=re+ge,xt=re;Z[xt]&&!(xt>=Ze);)++xt;if(xt-re>16&&Z.subarray&&ne)return ne.decode(Z.subarray(re,xt));for(var ft="";re<xt;){var Ve=Z[re++];if(!(Ve&128)){ft+=String.fromCharCode(Ve);continue}var Ue=Z[re++]&63;if((Ve&224)==192){ft+=String.fromCharCode((Ve&31)<<6|Ue);continue}var qt=Z[re++]&63;if((Ve&240)==224?Ve=(Ve&15)<<12|Ue<<6|qt:Ve=(Ve&7)<<18|Ue<<12|qt<<6|Z[re++]&63,Ve<65536)ft+=String.fromCharCode(Ve);else{var Ms=Ve-65536;ft+=String.fromCharCode(55296|Ms>>10,56320|Ms&1023)}}return ft}function te(Z,re){return Z?se(Te,Z,re):""}function ie(Z,re,ge,Ze){if(!(Ze>0))return 0;for(var xt=ge,ft=ge+Ze-1,Ve=0;Ve<Z.length;++Ve){var Ue=Z.charCodeAt(Ve);if(Ue>=55296&&Ue<=57343){var qt=Z.charCodeAt(++Ve);Ue=65536+((Ue&1023)<<10)|qt&1023}if(Ue<=127){if(ge>=ft)break;re[ge++]=Ue}else if(Ue<=2047){if(ge+1>=ft)break;re[ge++]=192|Ue>>6,re[ge++]=128|Ue&63}else if(Ue<=65535){if(ge+2>=ft)break;re[ge++]=224|Ue>>12,re[ge++]=128|Ue>>6&63,re[ge++]=128|Ue&63}else{if(ge+3>=ft)break;re[ge++]=240|Ue>>18,re[ge++]=128|Ue>>12&63,re[ge++]=128|Ue>>6&63,re[ge++]=128|Ue&63}}return re[ge]=0,ge-xt}function ee(Z,re,ge){return ie(Z,Te,re,ge)}function ce(Z,re){we.set(Z,re)}function me(Z,re){return Z%re>0&&(Z+=re-Z%re),Z}var Ie,we,Te,Fe,Xe,We,Be,rt,Ye;function at(Z){Ie=Z,a.HEAP8=we=new Int8Array(Z),a.HEAP16=Fe=new Int16Array(Z),a.HEAP32=We=new Int32Array(Z),a.HEAPU8=Te=new Uint8Array(Z),a.HEAPU16=Xe=new Uint16Array(Z),a.HEAPU32=Be=new Uint32Array(Z),a.HEAPF32=rt=new Float32Array(Z),a.HEAPF64=Ye=new Float64Array(Z)}var ht=a.INITIAL_MEMORY||16777216,pn,Qe=[],Sn=[],Ht=[],Hn=[],hn=!1;Sn.push({func:function(){pc()}});function Cn(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)fn(a.preRun.shift());jn(Qe)}function Rn(){hn=!0,jn(Sn)}function qn(){jn(Ht)}function Dn(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)Zs(a.postRun.shift());jn(Hn)}function fn(Z){Qe.unshift(Z)}function Zs(Z){Hn.unshift(Z)}var Qt=0,Js=null,Fn=null;function lu(Z){Qt++,a.monitorRunDependencies&&a.monitorRunDependencies(Qt)}function cu(Z){if(Qt--,a.monitorRunDependencies&&a.monitorRunDependencies(Qt),Qt==0&&(Js!==null&&(clearInterval(Js),Js=null),Fn)){var re=Fn;Fn=null,re()}}a.preloadedImages={},a.preloadedAudios={};function Ps(Z){a.onAbort&&a.onAbort(Z),Z+="",D(Z),W=!0,q=1,Z="abort("+Z+"). Build with -s ASSERTIONS=1 for more info.";var re=new WebAssembly.RuntimeError(Z);throw o(re),re}function ac(Z,re){return String.prototype.startsWith?Z.startsWith(re):Z.indexOf(re)===0}var qp="data:application/octet-stream;base64,";function ic(Z){return ac(Z,qp)}var oc="file://";function uc(Z){return ac(Z,oc)}var mn="tfjs-backend-wasm.wasm";ic(mn)||(mn=v(mn));function lc(Z){try{if(Z==mn&&F)return new Uint8Array(F);if(T)return T(Z);throw"both async and sync fetching of the wasm failed"}catch(re){Ps(re)}}function jp(){if(!F&&(f||m)){if(typeof fetch=="function"&&!uc(mn))return fetch(mn,{credentials:"same-origin"}).then(function(Z){if(!Z.ok)throw"failed to load wasm binary file at '"+mn+"'";return Z.arrayBuffer()}).catch(function(){return lc(mn)});if(k)return new Promise(function(Z,re){k(mn,function(ge){Z(new Uint8Array(ge))},re)})}return Promise.resolve().then(function(){return lc(mn)})}function Kp(){var Z={a:gn};function re(Ve,Ue){var qt=Ve.exports;a.asm=qt,z=a.asm.h,at(z.buffer),pn=a.asm.Va,cu("wasm-instantiate")}lu("wasm-instantiate");function ge(Ve){re(Ve.instance)}function Ze(Ve){return jp().then(function(Ue){return WebAssembly.instantiate(Ue,Z)}).then(Ve,function(Ue){D("failed to asynchronously prepare wasm: "+Ue),Ps(Ue)})}function xt(){return!F&&typeof WebAssembly.instantiateStreaming=="function"&&!ic(mn)&&!uc(mn)&&typeof fetch=="function"?fetch(mn,{credentials:"same-origin"}).then(function(Ve){var Ue=WebAssembly.instantiateStreaming(Ve,Z);return Ue.then(ge,function(qt){return D("wasm streaming compile failed: "+qt),D("falling back to ArrayBuffer instantiation"),Ze(ge)})}):Ze(ge)}if(a.instantiateWasm)try{var ft=a.instantiateWasm(Z,re);return ft}catch(Ve){return D("Module.instantiateWasm callback failed with error: "+Ve),!1}return xt().catch(o),{}}function jn(Z){for(;Z.length>0;){var re=Z.shift();if(typeof re=="function"){re(a);continue}var ge=re.func;typeof ge=="number"?re.arg===void 0?pn.get(ge)():pn.get(ge)(re.arg):ge(re.arg===void 0?null:re.arg)}}function du(){Ps()}function zr(Z,re,ge){Te.copyWithin(Z,re,re+ge)}function Xp(){return Te.length}function Yp(Z){try{return z.grow(Z-Ie.byteLength+65535>>>16),at(z.buffer),1}catch(re){}}function zs(Z){var re=Xp(),ge=2147483648;if(Z>ge)return!1;for(var Ze=1;Ze<=4;Ze*=2){var xt=re*(1+.2/Ze);xt=Math.min(xt,Z+100663296);var ft=Math.min(ge,me(Math.max(Z,xt),65536)),Ve=Yp(ft);if(Ve)return!0}return!1}var Mr={mappings:{},buffers:[null,[],[]],printChar:function(Z,re){var ge=Mr.buffers[Z];re===0||re===10?((Z===1?P:D)(se(ge,0)),ge.length=0):ge.push(re)},varargs:void 0,get:function(){Mr.varargs+=4;var Z=We[Mr.varargs-4>>2];return Z},getStr:function(Z){var re=te(Z);return re},get64:function(Z,re){return Z}};function Qp(Z){return 0}function cc(Z,re,ge,Ze,xt){}function Zp(Z,re,ge,Ze){for(var xt=0,ft=0;ft<ge;ft++){for(var Ve=We[re+ft*8>>2],Ue=We[re+(ft*8+4)>>2],qt=0;qt<Ue;qt++)Mr.printChar(Z,Te[Ve+qt]);xt+=Ue}return We[Ze>>2]=xt,0}function dc(){return 28}var gn={a:du,d:zr,e:zs,f:Qp,c:cc,b:Zp,g:dc},Jp=Kp(),pc=a.___wasm_call_ctors=function(){return(pc=a.___wasm_call_ctors=a.asm.i).apply(null,arguments)},eh=a._init=function(){return(eh=a._init=a.asm.j).apply(null,arguments)},hc=a._init_with_threads_count=function(){return(hc=a._init_with_threads_count=a.asm.k).apply(null,arguments)},th=a._get_threads_count=function(){return(th=a._get_threads_count=a.asm.l).apply(null,arguments)},wi=a._register_tensor=function(){return(wi=a._register_tensor=a.asm.m).apply(null,arguments)},er=a._dispose_data=function(){return(er=a._dispose_data=a.asm.n).apply(null,arguments)},pu=a._dispose=function(){return(pu=a._dispose=a.asm.o).apply(null,arguments)},nh=a._Abs=function(){return(nh=a._Abs=a.asm.p).apply(null,arguments)},sh=a._Add=function(){return(sh=a._Add=a.asm.q).apply(null,arguments)},fc=a._AddN=function(){return(fc=a._AddN=a.asm.r).apply(null,arguments)},ke=a._All=function(){return(ke=a._All=a.asm.s).apply(null,arguments)},rh=a._Any=function(){return(rh=a._Any=a.asm.t).apply(null,arguments)},ah=a._ArgMax=function(){return(ah=a._ArgMax=a.asm.u).apply(null,arguments)},ih=a._AvgPool=function(){return(ih=a._AvgPool=a.asm.v).apply(null,arguments)},oh=a._BatchMatMul=function(){return(oh=a._BatchMatMul=a.asm.w).apply(null,arguments)},uh=a._Ceil=function(){return(uh=a._Ceil=a.asm.x).apply(null,arguments)},Lr=a._ClipByValue=function(){return(Lr=a._ClipByValue=a.asm.y).apply(null,arguments)},lh=a._Conv2D=function(){return(lh=a._Conv2D=a.asm.z).apply(null,arguments)},ch=a._Conv2DBackpropInput=function(){return(ch=a._Conv2DBackpropInput=a.asm.A).apply(null,arguments)},dh=a._Cos=function(){return(dh=a._Cos=a.asm.B).apply(null,arguments)},ph=a._Cosh=function(){return(ph=a._Cosh=a.asm.C).apply(null,arguments)},hh=a._CropAndResize=function(){return(hh=a._CropAndResize=a.asm.D).apply(null,arguments)},fh=a._Cumsum=function(){return(fh=a._Cumsum=a.asm.E).apply(null,arguments)},mc=a._DepthToSpace=function(){return(mc=a._DepthToSpace=a.asm.F).apply(null,arguments)},mh=a._DepthwiseConv2dNative=function(){return(mh=a._DepthwiseConv2dNative=a.asm.G).apply(null,arguments)},gh=a._Elu=function(){return(gh=a._Elu=a.asm.H).apply(null,arguments)},tr=a._Equal=function(){return(tr=a._Equal=a.asm.I).apply(null,arguments)},hu=a._Exp=function(){return(hu=a._Exp=a.asm.J).apply(null,arguments)},fu=a._FlipLeftRight=function(){return(fu=a._FlipLeftRight=a.asm.K).apply(null,arguments)},bh=a._Floor=function(){return(bh=a._Floor=a.asm.L).apply(null,arguments)},yh=a._FloorDiv=function(){return(yh=a._FloorDiv=a.asm.M).apply(null,arguments)},vh=a._FusedBatchNorm=function(){return(vh=a._FusedBatchNorm=a.asm.N).apply(null,arguments)},xh=a._FusedConv2D=function(){return(xh=a._FusedConv2D=a.asm.O).apply(null,arguments)},wh=a._FusedDepthwiseConv2D=function(){return(wh=a._FusedDepthwiseConv2D=a.asm.P).apply(null,arguments)},Pe=a._Gather=function(){return(Pe=a._Gather=a.asm.Q).apply(null,arguments)},kh=a._GatherNd=function(){return(kh=a._GatherNd=a.asm.R).apply(null,arguments)},Ih=a._Greater=function(){return(Ih=a._Greater=a.asm.S).apply(null,arguments)},Sh=a._GreaterEqual=function(){return(Sh=a._GreaterEqual=a.asm.T).apply(null,arguments)},Ch=a._LeakyRelu=function(){return(Ch=a._LeakyRelu=a.asm.U).apply(null,arguments)},Nh=a._Less=function(){return(Nh=a._Less=a.asm.V).apply(null,arguments)},Th=a._LessEqual=function(){return(Th=a._LessEqual=a.asm.W).apply(null,arguments)},mu=a._Log=function(){return(mu=a._Log=a.asm.X).apply(null,arguments)},gc=a._LogicalAnd=function(){return(gc=a._LogicalAnd=a.asm.Y).apply(null,arguments)},bc=a._Max=function(){return(bc=a._Max=a.asm.Z).apply(null,arguments)},$h=a._MaxPool=function(){return($h=a._MaxPool=a.asm._).apply(null,arguments)},Ah=a._Maximum=function(){return(Ah=a._Maximum=a.asm.$).apply(null,arguments)},Eh=a._Mean=function(){return(Eh=a._Mean=a.asm.aa).apply(null,arguments)},_h=a._Min=function(){return(_h=a._Min=a.asm.ba).apply(null,arguments)},Rh=a._Minimum=function(){return(Rh=a._Minimum=a.asm.ca).apply(null,arguments)},Dh=a._MirrorPad=function(){return(Dh=a._MirrorPad=a.asm.da).apply(null,arguments)},Fh=a._Multiply=function(){return(Fh=a._Multiply=a.asm.ea).apply(null,arguments)},Je=a._Neg=function(){return(Je=a._Neg=a.asm.fa).apply(null,arguments)},Oh=a._NonMaxSuppressionV3=function(){return(Oh=a._NonMaxSuppressionV3=a.asm.ga).apply(null,arguments)},Ph=a._NonMaxSuppressionV4=function(){return(Ph=a._NonMaxSuppressionV4=a.asm.ha).apply(null,arguments)},zh=a._NonMaxSuppressionV5=function(){return(zh=a._NonMaxSuppressionV5=a.asm.ia).apply(null,arguments)},ki=a._NotEqual=function(){return(ki=a._NotEqual=a.asm.ja).apply(null,arguments)},yc=a._OneHot=function(){return(yc=a._OneHot=a.asm.ka).apply(null,arguments)},vc=a._PadV2=function(){return(vc=a._PadV2=a.asm.la).apply(null,arguments)},xc=a._Pow=function(){return(xc=a._Pow=a.asm.ma).apply(null,arguments)},Mh=a._Prelu=function(){return(Mh=a._Prelu=a.asm.na).apply(null,arguments)},Lh=a._Prod=function(){return(Lh=a._Prod=a.asm.oa).apply(null,arguments)},wc=a._RealDiv=function(){return(wc=a._RealDiv=a.asm.pa).apply(null,arguments)},Bh=a._Relu=function(){return(Bh=a._Relu=a.asm.qa).apply(null,arguments)},Vh=a._Relu6=function(){return(Vh=a._Relu6=a.asm.ra).apply(null,arguments)},Wh=a._ResizeBilinear=function(){return(Wh=a._ResizeBilinear=a.asm.sa).apply(null,arguments)},Uh=a._Reverse=function(){return(Uh=a._Reverse=a.asm.ta).apply(null,arguments)},Gh=a._RotateWithOffset=function(){return(Gh=a._RotateWithOffset=a.asm.ua).apply(null,arguments)},kc=a._Round=function(){return(kc=a._Round=a.asm.va).apply(null,arguments)},nr=a._Rsqrt=function(){return(nr=a._Rsqrt=a.asm.wa).apply(null,arguments)},Hh=a._ScatterNd=function(){return(Hh=a._ScatterNd=a.asm.xa).apply(null,arguments)},qh=a._SelectV2=function(){return(qh=a._SelectV2=a.asm.ya).apply(null,arguments)},yv=a._Sigmoid=function(){return(yv=a._Sigmoid=a.asm.za).apply(null,arguments)},Ic=a._Sin=function(){return(Ic=a._Sin=a.asm.Aa).apply(null,arguments)},jh=a._Softmax=function(){return(jh=a._Softmax=a.asm.Ba).apply(null,arguments)},Kh=a._SparseFillEmptyRows=function(){return(Kh=a._SparseFillEmptyRows=a.asm.Ca).apply(null,arguments)},Xh=a._SparseReshape=function(){return(Xh=a._SparseReshape=a.asm.Da).apply(null,arguments)},Yh=a._SparseSegmentReduction=function(){return(Yh=a._SparseSegmentReduction=a.asm.Ea).apply(null,arguments)},Qh=a._Sqrt=function(){return(Qh=a._Sqrt=a.asm.Fa).apply(null,arguments)},Zh=a._Square=function(){return(Zh=a._Square=a.asm.Ga).apply(null,arguments)},Jh=a._SquaredDifference=function(){return(Jh=a._SquaredDifference=a.asm.Ha).apply(null,arguments)},ef=a._Step=function(){return(ef=a._Step=a.asm.Ia).apply(null,arguments)},tf=a._StridedSlice=function(){return(tf=a._StridedSlice=a.asm.Ja).apply(null,arguments)},nf=a._Sub=function(){return(nf=a._Sub=a.asm.Ka).apply(null,arguments)},sf=a._Sum=function(){return(sf=a._Sum=a.asm.La).apply(null,arguments)},rf=a._Tan=function(){return(rf=a._Tan=a.asm.Ma).apply(null,arguments)},af=a._Tanh=function(){return(af=a._Tanh=a.asm.Na).apply(null,arguments)},of=a._Tile=function(){return(of=a._Tile=a.asm.Oa).apply(null,arguments)},uf=a._TopK=function(){return(uf=a._TopK=a.asm.Pa).apply(null,arguments)},lf=a._Transform=function(){return(lf=a._Transform=a.asm.Qa).apply(null,arguments)},cf=a._Transpose=function(){return(cf=a._Transpose=a.asm.Ra).apply(null,arguments)},df=a.__FusedMatMul=function(){return(df=a.__FusedMatMul=a.asm.Sa).apply(null,arguments)},pf=a._malloc=function(){return(pf=a._malloc=a.asm.Ta).apply(null,arguments)},hf=a._free=function(){return(hf=a._free=a.asm.Ua).apply(null,arguments)},Sc=a.stackSave=function(){return(Sc=a.stackSave=a.asm.Wa).apply(null,arguments)},Cc=a.stackRestore=function(){return(Cc=a.stackRestore=a.asm.Xa).apply(null,arguments)},gu=a.stackAlloc=function(){return(gu=a.stackAlloc=a.asm.Ya).apply(null,arguments)};a.cwrap=J;var Ii;function ff(Z){this.name="ExitStatus",this.message="Program terminated with exit("+Z+")",this.status=Z}Fn=function Z(){Ii||bu(),Ii||(Fn=Z)};function bu(Z){if(Z=Z||d,Qt>0||(Cn(),Qt>0))return;function re(){Ii||(Ii=!0,a.calledRun=!0,!W&&(Rn(),qn(),i(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Dn()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),re()},1)):re()}if(a.run=bu,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();bu();var Si;u&&(Si={uncaughtException:process.listeners("uncaughtException").filter(function(Z){return!u.uncaughtException.indexOf(Z)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Z){return!u.unhandledRejection.indexOf(Z)>-1})});var Ci;if(typeof r!="undefined")Ci=r;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Ci=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Si){var mf=Ci._dispose;Ci._dispose=function(){mf(),Si.uncaughtException.forEach(function(Z){process.removeListener("uncaughtException",Z)}),Si.unhandledRejection.forEach(function(Z){process.removeListener("unhandledRejection",Z)})}}return r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),RT=1e-7,DT=1e-4,Fd=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},tl=class{refCount(e){return On("refCount")}incRef(e){return On("incRef")}timerAvailable(){return!0}time(e){return On("time")}read(e){return On("read")}readSync(e){return On("readSync")}readToGPU(e,t){return On("readToGPU")}numDataIds(){return On("numDataIds")}disposeData(e,t){return On("disposeData")}write(e,t,n){return On("write")}move(e,t,n,s,r){return On("move")}memory(){return On("memory")}floatPrecision(){return On("floatPrecision")}epsilon(){return this.floatPrecision()===32?RT:DT}dispose(){return On("dispose")}};function On(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function mw(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,sd(e,t,n)}function FT(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,sd(e,n,s),sd(t,n,s)}function Bu(e,t,n){return Math.max(e,Math.min(t,n))}function OT(e){return e%2===0?e:e+1}function sd(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function PT(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function zT(e,t){let n=Math.random();return t*n+(1-n)*e}function MT(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function O(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function on(e,t,n=""){O(Sr(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function xa(e){O(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function na(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||Zt(e)&&!n)for(let s=0;s<e.length;++s)na(e[s],t,n);else t.push(e);return t}function pt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function LT(e){return e.length===0}function Sr(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ji(e){return e%1===0}function BT(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function VT(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function WT(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return mw(t),t}function Pu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function UT(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,i=()=>{if(e()){s();return}a++;let o=t(a);if(n!=null&&a>=n){r();return}setTimeout(i,o)};i()})}function GT(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function ss(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),O(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),O(e.every(s=>ji(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function gw(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:ss(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(a!=null){if(a[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(a[i]==null||a[i]>o)&&e[o]===1&&(n.push(e[o]),s.push(o)),a[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),s.push(o))}return{newShape:n,keptDims:s}}function bw(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function yw(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function vw(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function xw(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function HT(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function Zt(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Of(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function ww(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function lr(e){return typeof e=="string"||e instanceof String}function kw(e){return typeof e=="boolean"}function Iw(e){return typeof e=="number"}function Od(e){return Array.isArray(e)?Od(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Iw(e)?"float32":lr(e)?"string":kw(e)?"bool":"float32"}function gr(e){return!!(e&&e.constructor&&e.call&&e.apply)}function rd(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function no(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function Sw(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let i=0;i<a;i++)r[i]=n[e+i]}else{let a=t[0],i=t.slice(1),o=i.reduce((u,c)=>u*c)*(s?2:1);for(let u=0;u<a;u++)r[u]=Sw(e+u*o,i,n,s)}return r}function Wi(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Sw(0,e,t,n)}function Vm(e,t){let n=Pd(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Pd(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function qT(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Wi(e,new Float32Array(n));if(t==="int32")return Wi(e,new Int32Array(n));if(t==="bool")return Wi(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Wm(e){e.forEach(t=>{O(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function jT(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function KT(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function Um(e){return e&&e.then&&typeof e.then=="function"}var _v="tfjsflags",XT=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=YT,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Um(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);_v in e&&e[_v].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=ZT(s,r)})}};function YT(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(QT(t,s[0],s[1]),s.join("="))),t}function QT(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function ZT(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function X(){return Cw}var Cw=null;function JT(e){Cw=e}var vf;function Nw(){if(vf==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");vf=e}return vf}function e$(){let e=Nw();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Gm(e,t){let n=e$();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var so="Abs",nl="Acos",sl="Acosh",Cr="Add",wa="AddN",rl="All",al="Any",ka="ArgMax",il="ArgMin",ol="Asin",ul="Asinh",ll="Atan",cl="Atanh",dl="Atan2",Ia="AvgPool",Hm="AvgPoolGrad",zd="AvgPool3D",qm="AvgPool3DGrad",Sa="BatchMatMul",ro="BatchToSpaceND",jm="Bincount",t$="BroadcastTo",Km="BroadcastArgs",Ca="Cast",Na="Ceil",Nr="ClipByValue",Md="Complex",Ld="ComplexAbs",ao="Concat",Ta="Conv2D",Xm="Conv2DBackpropFilter",$a="Conv2DBackpropInput",Bd="Conv3D",Ym="Conv3DBackpropFilterV2",Qm="Conv3DBackpropInputV2",Aa="Cos",Ea="Cosh",io="Cumsum",oo="CropAndResize",Zm="DenseBincount",uo="DepthToSpace",_a="DepthwiseConv2dNative",Jm="DepthwiseConv2dNativeBackpropFilter",eg="DepthwiseConv2dNativeBackpropInput",tg="Diag",Vd="Dilation2D",Pf="Dilation2DBackpropInput",zf="Dilation2DBackpropFilter",Ra="RealDiv",Wd="Einsum",Da="Elu",ng="EluGrad",pl="Erf",lo="Equal",Fa="Exp",co="ExpandDims",po="Expm1",sg="FFT",hl="Fill",ho="FlipLeftRight",Oa="Floor",Pa="FloorDiv",za="FusedBatchNorm",fo="GatherV2",mo="GatherNd",go="Greater",Ma="GreaterEqual",La="Identity",rg="IFFT",Ud="Imag",fl="IsFinite",ml="IsInf",gl="IsNan",Ba="LeakyRelu",bo="Less",yo="LessEqual",ag="LinSpace",Va="Log",bl="Log1p",vo="LogicalAnd",yl="LogicalNot",Gd="LogicalOr",n$="LogSoftmax",Hd="LRN",ig="LRNGrad",Wa="Max",Ua="Maximum",Ga="MaxPool",og="MaxPoolGrad",qd="MaxPool3D",ug="MaxPool3DGrad",lg="MaxPoolWithArgmax",Ha="Mean",qa="Min",ja="Minimum",Ka="MirrorPad",vl="Mod",cg="Multinomial",Xa="Multiply",xo="Neg",wo="NotEqual",ko="NonMaxSuppressionV3",xl="NonMaxSuppressionV4",Io="NonMaxSuppressionV5",So="OnesLike",Co="OneHot",No="Pack",Ya="PadV2",qce="Pool",Qa="Pow",Za="Prelu",To="Prod",wl="Range",jd="Real",kl="Reciprocal",Ja="Relu",$o="Reshape",Il="ResizeNearestNeighbor",dg="ResizeNearestNeighborGrad",ei="ResizeBilinear",pg="ResizeBilinearGrad",ti="Relu6",Ao="Reverse",Eo="Round",ni="Rsqrt",_o="ScatterNd",Ro="Select",Sl="Selu",Do="Slice",si="Sin",Fo="Sinh",Cl="Sign",ri="Sigmoid",Nl="Softplus",ai="Sqrt",ii="Sum",Oo="SpaceToBatchND",Po="SplitV",oi="Softmax",Kd="SparseFillEmptyRows",Tl="SparseReshape",Xd="SparseSegmentMean",Yd="SparseSegmentSum",Qd="SparseToDense",ui="SquaredDifference",$l="Square",zo="StridedSlice",Zd="StringNGrams",hg="StringSplit",fg="StringToHashBucketFast",li="Sub",Mo="Tan",ci="Tanh",Tr="Tile",Lo="TopK",Bo="Transform",di="Transpose",mg="Unique",Vo="Unpack",Jd="UnsortedSegmentSum",Wo="ZerosLike",pi="Step",ad="FromPixels",Uo="RotateWithOffset",sa="_FusedMatMul",ra="FusedConv2D",aa="FusedDepthwiseConv2D";function ur(...e){X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(...e)}function s$(...e){X().getBool("IS_TEST")||X().getBool("PROD")||console.log(...e)}var Ki=Gm("kernelRegistry",()=>new Map),Vu=Gm("gradRegistry",()=>new Map);function Mf(e,t){let n=gg(e,t);return Ki.get(n)}function Rv(e){return Vu.get(e)}function Lf(e){let t=Ki.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function Al(e){let{kernelName:t,backendName:n}=e,s=gg(t,n);Ki.has(s)&&ur(`The kernel '${t}' for backend '${n}' is already registered`),Ki.set(s,e)}function r$(e){let{kernelName:t}=e;Vu.has(t)&&X().getBool("DEBUG")&&ur(`Overriding the gradient for '${t}'`),Vu.set(t,e)}function jce(e,t){let n=gg(e,t);if(!Ki.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Ki.delete(n)}function Kce(e){if(!Vu.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Vu.delete(e)}function Xce(e,t){Lf(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});Al(r)})}function gg(e,t){return`${t}_${e}`}var w={};Ae(w,{arraysEqual:()=>Sr,assert:()=>O,assertNonNegativeIntegerDimensions:()=>Wm,assertNonNull:()=>xa,assertShapesMatch:()=>on,bytesFromStringArray:()=>ww,bytesPerElement:()=>Of,checkConversionForErrors:()=>vw,clamp:()=>Bu,computeStrides:()=>no,createScalarValue:()=>c$,createShuffledIndices:()=>WT,decodeString:()=>id,distSquared:()=>MT,encodeString:()=>_l,fetch:()=>p$,fingerPrint64:()=>l$,flatten:()=>na,getArrayFromDType:()=>yw,getTypedArrayFromDType:()=>bw,hasEncodingLoss:()=>HT,hexToLong:()=>El,indexToLoc:()=>KT,inferDtype:()=>Od,inferFromImplicitShape:()=>GT,isBoolean:()=>kw,isFunction:()=>gr,isInt:()=>ji,isNumber:()=>Iw,isPromise:()=>Um,isScalarShape:()=>LT,isString:()=>lr,isTypedArray:()=>Zt,isValidDtype:()=>xw,locToIndex:()=>jT,makeOnesTypedArray:()=>Vm,makeZerosNestedTypedArray:()=>qT,makeZerosTypedArray:()=>Pd,nearestDivisor:()=>rd,nearestLargerEven:()=>OT,now:()=>Wu,parseAxisParam:()=>ss,randUniform:()=>zT,repeatedTry:()=>UT,rightPad:()=>Pu,shuffle:()=>mw,shuffleCombo:()=>FT,sizeFromShape:()=>pt,sizeToSquarishShape:()=>VT,squeezeShape:()=>gw,sum:()=>PT,swap:()=>sd,tanh:()=>BT,toNestedArray:()=>Wi,toTypedArray:()=>ep});var Dv=va(gT()),Hr=Dv.default||Dv;function El(e){return Hr.fromString(e,!0,16)}var Tw=El("c3a5c85c97cb3127"),Gr=El("b492b66fbe98f273"),tn=El("9ae16a3b2f90404f");function Bf(e){return e.xor(e.shru(47))}function $w(e,t,n){let s=e.slice(t,t+n);return Hr.fromBytes(Array.from(s),!0,!0)}function lt(e,t){return $w(e,t,8)}function Fv(e,t){return $w(e,t,4)}function Lt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function dr(e,t,n=El("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function a$(e,t,n,s,r,a){r=r.add(e),a=Lt(a.add(r).add(s),21);let i=r;return r=r.add(t),r=r.add(n),a=a.add(Lt(r,44)),[r.add(s),a.add(i)]}function Rc(e,t,n,s){return a$(lt(e,t),lt(e,t+8),lt(e,t+16),lt(e,t+24),n,s)}function i$(e,t=e.length){if(t>=8){let n=tn.add(t*2),s=lt(e,0).add(tn),r=lt(e,t-8),a=Lt(r,37).mul(n).add(s),i=Lt(s,25).add(r).mul(n);return dr(a,i,n)}if(t>=4){let n=tn.add(t*2),s=Fv(e,0);return dr(s.shl(3).add(t),Fv(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),i=t+(r<<2);return Bf(tn.mul(a).xor(Tw.mul(i))).mul(tn)}return tn}function o$(e,t=e.length){let n=tn.add(t*2),s=lt(e,0).mul(Gr),r=lt(e,8),a=lt(e,t-8).mul(n),i=lt(e,t-16).mul(tn);return dr(Lt(s.add(r),43).add(Lt(a,30)).add(i),s.add(Lt(r.add(tn),18)).add(a),n)}function u$(e,t=e.length){let n=tn.add(t*2),s=lt(e,0).mul(tn),r=lt(e,8),a=lt(e,t-8).mul(n),i=lt(e,t-16).mul(tn),o=Lt(s.add(r),43).add(Lt(a,30)).add(i),u=dr(o,s.add(Lt(r.add(tn),18)).add(a),n),c=lt(e,16).mul(n),l=lt(e,24),d=o.add(lt(e,t-32)).mul(n),p=u.add(lt(e,t-24)).mul(n);return dr(Lt(c.add(l),43).add(Lt(d,30)).add(p),c.add(Lt(l.add(s),18)).add(d),n)}function l$(e,t=e.length){let n=Hr.fromNumber(81,!0);if(t<=32)return t<=16?i$(e,t):o$(e,t);if(t<=64)return u$(e,t);let s=n,r=n.mul(Gr).add(113),a=Bf(r.mul(tn).add(113)).mul(tn),i=[Hr.UZERO,Hr.UZERO],o=[Hr.UZERO,Hr.UZERO];s=s.mul(tn).add(lt(e,0));let u=0,c=(t-1>>6)*64,l=c+(t-1&63)-63;do s=Lt(s.add(r).add(i[0]).add(lt(e,u+8)),37).mul(Gr),r=Lt(r.add(i[1]).add(lt(e,u+48)),42).mul(Gr),s=s.xor(o[1]),r=r.add(i[0]).add(lt(e,u+40)),a=Lt(a.add(o[0]),33).mul(Gr),i=Rc(e,u,i[1].mul(Gr),s.add(o[0])),o=Rc(e,u+32,a.add(o[1]),r.add(lt(e,u+16))),[a,s]=[s,a],u+=64;while(u!==c);let d=Gr.add(a.and(255).shl(1));return u=l,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Lt(s.add(r).add(i[0]).add(lt(e,u+8)),37).mul(d),r=Lt(r.add(i[1]).add(lt(e,u+48)),42).mul(d),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(lt(e,u+40))),a=Lt(a.add(o[0]),33).mul(d),i=Rc(e,u,i[1].mul(d),s.add(o[0])),o=Rc(e,u+32,a.add(o[1]),r.add(lt(e,u+16))),[a,s]=[s,a],dr(dr(i[0],o[0],d).add(Bf(r).mul(Tw)).add(a),dr(i[1],o[1],d).add(s),d)}function c$(e,t){return t==="string"?_l(e):ep([e],t)}function d$(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function ep(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=na(e)),X().getBool("DEBUG")&&vw(e,t),d$(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Wu(){return X().platform.now()}function p$(e,t){return X().platform.fetch(e,t)}function _l(e,t="utf-8"){return t=t||"utf-8",X().platform.encode(e,t)}function id(e,t="utf-8"){return t=t||"utf-8",X().platform.decode(e,t)}var h$=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new m$)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,i=Wu();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let u of s)u.dataSync();a=Promise.resolve({kernelMs:Wu()-i})}if(X().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<s.length;u++){let c=s[u];c.data().then(l=>{f$(l,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),s,a]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],r,o[2])})})}};function f$(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var m$=class{logKernelProfile(e,t,n,s,r,a){let i=typeof s=="number"?Pu(`${s}ms`,9):s.error,o=Pu(e,25),u=t.rank,c=t.size,l=Pu(t.shape.toString(),14),d="";for(let p in r){let h=r[p];if(h!=null){let f=h.shape||t.shape,m=f.length;d+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${u}D ${l}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function g$(e,t,n){let s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<e.length;u++){let c=e[u],l=c.inputs;for(let d in l){let p=l[d],h=!1;for(let f=0;f<t.length;f++)if(s[p.id]){c.outputs.forEach(m=>s[m.id]=!0),h=!0,r[c.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let i={};for(let u=e.length-1;u>=0;u--){let c=e[u],l=c.inputs;for(let d=0;d<c.outputs.length;d++)if(a[c.outputs[d].id]){for(let p in l)a[l[p].id]=!0,i[c.id]=!0;break}}let o=[];for(let u=0;u<e.length;u++){let c=e[u];if(r[c.id]&&i[c.id]){let l={};for(let p in c.inputs){let h=c.inputs[p];s[h.id]&&(l[p]=h)}let d=Object.assign({},c);d.inputs=l,d.outputs=c.outputs,o.push(d)}}return o}function b$(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],i=[];if(a.outputs.forEach(u=>{let c=e[u.id];c!=null?i.push(c):i.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let o=a.gradient(i);for(let u in a.inputs){if(!(u in o))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(o)}.`);let c=n(()=>o[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);let l=a.inputs[u];if(!Sr(c.shape,l.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(e[l.id]==null)e[l.id]=c;else{let d=e[l.id];e[l.id]=s(d,c),d.dispose()}}}}var Ov=20,ku=3,xf=7;function y$(e,t,n,s){let r=no(t),a=v$(e,t,n,r),i=t.length,o=Hc(e,t,n,r,a),u=["Tensor"];return s&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(c=>"    "+c).join(`
`)),u.join(`
`)}function v$(e,t,n,s){let r=pt(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,u=n==="complex64"?Tu(e):e;if(o>1)for(let c=0;c<r/a;c++){let l=c*a;for(let d=0;d<a;d++)i[d]=Math.max(i[d],Nu(u[l+d],0,n).length)}return i}function Nu(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(xf))} + ${parseFloat(e[1].toFixed(xf))}j`:lr(e)?s=`'${e}'`:n==="bool"?s=Aw(e):s=parseFloat(e.toFixed(xf)).toString(),Pu(s,t)}function Aw(e){return e===0?"false":"true"}function Hc(e,t,n,s,r,a=!0){let i=n==="complex64"?2:1,o=t[0],u=t.length;if(u===0){if(n==="complex64"){let m=Tu(e);return[Nu(m[0],0,n)]}return n==="bool"?[Aw(e[0])]:[e[0].toString()]}if(u===1){if(o>Ov){let g=ku*i,b=Array.from(e.slice(0,g)),y=Array.from(e.slice((o-ku)*i,o*i));return n==="complex64"&&(b=Tu(b),y=Tu(y)),["["+b.map((v,x)=>Nu(v,r[x],n)).join(", ")+", ..., "+y.map((v,x)=>Nu(v,r[o-ku+x],n)).join(", ")+"]"]}let m=n==="complex64"?Tu(e):Array.from(e);return["["+m.map((g,b)=>Nu(g,r[b],n)).join(", ")+"]"]}let c=t.slice(1),l=s.slice(1),d=s[0]*i,p=[];if(o>Ov){for(let m=0;m<ku;m++){let g=m*d,b=g+d;p.push(...Hc(e.slice(g,b),c,n,l,r,!1))}p.push("...");for(let m=o-ku;m<o;m++){let g=m*d,b=g+d;p.push(...Hc(e.slice(g,b),c,n,l,r,m===o-1))}}else for(let m=0;m<o;m++){let g=m*d,b=g+d;p.push(...Hc(e.slice(g,b),c,n,l,r,m===o-1))}let h=u===2?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Tu(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Vt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=pt(e),n!=null){let s=n.length;O(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||yw(t,this.size),this.strides=no(e)}set(e,...t){t.length===0&&(t=[0]),O(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return is().makeTensor(this.values,this.shape,this.dtype)}},is=null,Mi=null,x$=null;function w$(e){is=e}function k$(e){Mi=e}function I$(e){x$=e}var tt=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=pt(e),this.strides=no(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Mi.buffer(this.shape,this.dtype,e)}bufferSync(){return Mi.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Wi(this.shape,e,this.dtype==="complex64")}arraySync(){return Wi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=is().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>id(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),is().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=is().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>id(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await is().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(is().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Mi.print(this,e)}clone(){return this.throwIfDisposed(),Mi.clone(this)}toString(e=!1){let t=this.dataSync();return y$(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Mi.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),is().makeVariable(this,e,t,n)}};Object.defineProperty(tt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function S$(){return Gm("Tensor",()=>tt)}S$();var od=class extends tt{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Sr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);is().disposeTensor(this),this.dataId=e.dataId,is().incRef(this,null)}dispose(){is().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(od,Symbol.hasInstance,{value:e=>e instanceof tt&&e.assign!=null&&e.assign instanceof Function});var Ts={};Ae(Ts,{assertTypesMatch:()=>Fw,getTensorsInContainer:()=>bg,isTensorInList:()=>T$,makeTypesMatch:()=>vt});var C$=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(C$||{}),Ew=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(Ew||{}),_w=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(_w||{}),Rw=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(Rw||{}),Dw=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(Dw||{}),N$={float32:Rw,int32:Ew,bool:_w,complex64:Dw};function vn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return N$[e][t]}function tp(e){return vn(e,"int32")}function vt(e,t){if(e.dtype===t.dtype)return[e,t];let n=vn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Fw(e,t){O(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function T$(e,t){return t.some(n=>n.id===e.id)}function bg(e){let t=[];return Ow(e,t,new Set),t}function Ow(e,t,n){if(e==null)return;if(e instanceof tt){t.push(e);return}if(!$$(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),Ow(a,t,n))}}function $$(e){return Array.isArray(e)||typeof e=="object"}function wf(e){return e.kernelName!=null}var Pv=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Vf=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Pv}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ur(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new h$(this.backendInstance),!0}setupRegisteredKernels(){Lf(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Lf(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof tl)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,ur(`Initialization of backend ${e} failed`),ur(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return ur(`Initialization of backend ${e} failed`),ur(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Vf.nextTensorId++}nextVariableId(){return Vf.nextVariableId++}clone(e){let t=L.runKernel(La,{x:e}),n={x:e},s=a=>({x:()=>{let i="float32",o={x:a},u={dtype:i};return L.runKernel(Ca,o,u)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Mf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(o=>{r+=o.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,u=wf(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(wf(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=Mf(h,this.backendName);O(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),i=()=>{let b=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let y=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,b,y);let v=y.map(x=>{if(x.rank!=null)return x;let{dataId:k,shape:T,dtype:C}=x;return this.makeTensorFromDataId(k,T,C)});if(s){let x=this.getTensorsForGradient(h,f,v);n=this.saveTensorsForBackwardMode(x)}return v}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>h(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,m,g),g}}let{inputs:c,attrs:l}=e,d=wf(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(p=this.profiler.profileKernel(u,c,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(u,c,t,d,n,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(h=>c[h]!=null?c[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=Rv(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],i;s.saveAllInputs?(O(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=r.map(u=>t[u]);let o=n.filter((u,c)=>a[c]);return i.concat(o)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&lr(e[0])&&(r=e.map(o=>_l(o)));let a=s.write(r,t,n),i=new tt(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),n==="string"){let o=this.state.tensorInfo.get(a),u=ww(r);this.state.numBytes+=u-o.bytes,o.bytes=u}return i}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r=new tt(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new od(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Of(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof od||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Of(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=Rv(e);o!=null&&(s=o.gradFunc),s!=null&&(i.gradient=u=>(u=u.map((c,l)=>{if(c==null){let d=n[l],p=Pd(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),s(u.length>1?u:u[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=bg(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(O(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));O(r instanceof tt,()=>"The result y returned by f() must be a tensor.");let a=g$(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[r.id]=n==null?A$(r.shape):n,b$(i,a,u=>this.tidy(u),E$);let o=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let c of u.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:o}})}customGrad(e){return O(gr(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{O(t.every(i=>i instanceof tt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((i,o)=>{s[o]=i});let r=(i,o)=>(n=e(...t,o),O(n.value instanceof tt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(gr(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,o)=>{let u=n.gradFunc(i,o),c=Array.isArray(u)?u:[u];O(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(c.every(d=>d instanceof tt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let l={};return c.forEach((d,p)=>{l[p]=()=>d}),l};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Wu(),n=await this.backend.time(e);return n.wallMs=Wu()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Pv;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},yg=Vf;yg.nextTensorId=0;yg.nextVariableId=0;function A$(e){let t=Vm(pt(e),"float32");return L.makeTensor(t,e,"float32")}function Pw(){let e=Nw();if(e._tfengine==null){let t=new XT(e);e._tfengine=new yg(t)}return JT(e._tfengine.ENV),w$(()=>e._tfengine),e._tfengine}var L=Pw();function E$(e,t){let n={a:e,b:t};return L.runKernel(Cr,n)}var np={};Ae(np,{isBrowser:()=>zw,isMobile:()=>D$,mockIsMobile:()=>R$});function _$(){return typeof navigator!="undefined"&&navigator!=null}var Wf;function R$(e){Wf=e}function D$(e){if(Wf!==void 0)return Wf;if(e||_$()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function zw(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var fs=X();fs.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});fs.registerFlag("IS_BROWSER",()=>zw());fs.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");fs.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));fs.registerFlag("PROD",()=>!1);fs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>fs.getBool("DEBUG"));fs.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);fs.registerFlag("IS_TEST",()=>!1);fs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);fs.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Es(e,t){let n=e;if(Zt(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||Zt(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&X().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Mw(e,s,[]),s}function Mw(e,t,n){if(n=n||[],!Array.isArray(e)&&!Zt(e)){O(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}O(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),O(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)Mw(e[r],s,n.concat(r))}function zv(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function E(e,t,n,s="numeric"){if(e instanceof tt)return zv(s,e.dtype,t,n),e;let r=Od(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),zv(s,r,t,n),e==null||!Zt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let u=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${u}'`)}let a=Es(e,r);!Zt(e)&&!Array.isArray(e)&&(e=[e]);let o=r!=="string"?ep(e,r):na(e,[],!0);return L.makeTensor(o,a,r)}function Uu(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,i)=>E(a,`${t}[${i}]`,n,s))}var F$="__op";function B(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+F$;let r=(...a)=>{L.startScope(n);try{let i=s(...a);return Um(i)&&console.error("Cannot return a Promise inside of tidy."),L.endScope(i),i}catch(i){throw L.endScope(null),i}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function O$(e,t){let n=E(e,"real","complex"),s=E(t,"imag","complex");on(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return L.runKernel(Md,r)}var ia=B({complex_:O$});function $r(e,t,n,s){if(s==null&&(s=Od(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Zt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Wm(t);let r=pt(t),a=pt(n);O(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let i=0;i<n.length;++i){let o=n[i],u=i===n.length-1?o!==pt(t.slice(i)):!0;O(n[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Zt(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?ep(e,s):na(e,[],!0),L.makeTensor(e,t,s)}function ds(e,t,n){let s=Es(e,n);return $r(e,t,s,n)}var Uf={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},ud=4;async function P$(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<r.length;++i){let o=r[i],u=Array.isArray(e)?e[i].tensor:e[o];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${u.dtype}`);let c={name:o,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let l=new Promise(async d=>{let p=await u.bytes(),h=p.reduce((g,b)=>g+b.length,0)+ud*p.length,f=new Uint8Array(h),m=0;for(let g=0;g<p.length;g++){let b=p[g],y=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(y,m),m+=ud,f.set(b,m),m+=b.length}d(f)});s.push(l)}else s.push(u.data());t!=null&&(c.group=t),n.push(c)}let a=await Promise.all(s);return{data:z$(a),specs:n}}function Lw(e,t){let n={},s,r=0;for(let a of t){let i=a.name,o=a.dtype,u=a.shape,c=pt(u),l;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=Uf[d.dtype],h=e.slice(r,r+c*p),f=d.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(o==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){l=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];l[m]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=U$()),l=s(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(o==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];l[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=c*p}else if(o==="string"){let d=pt(a.shape);l=[];for(let p=0;p<d;p++){let h=new Uint32Array(e.slice(r,r+ud))[0];r+=ud;let f=new Uint8Array(e.slice(r,r+h));l.push(f),r+=h}}else{let d=Uf[o],p=e.slice(r,r+c*d);if(o==="float32")l=new Float32Array(p);else if(o==="int32")l=new Int32Array(p);else if(o==="bool")l=new Uint8Array(p);else if(o==="complex64"){l=new Float32Array(p);let h=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let b=0;b<h.length;b++)h[b]=l[b*2],f[b]=l[b*2+1];let m=ds(h,u,"float32"),g=ds(f,u,"float32");n[i]=ia(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=c*d}o!=="complex64"&&(n[i]=ds(l,u,o))}return n}function z$(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var vg=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function Mv(e){return vg?Buffer.byteLength(e):new Blob([e]).size}function M$(e){if(vg)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function L$(e){if(vg){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function xg(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function Lv(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function Bw(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function wg(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Rl(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:Mv(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:Mv(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function B$(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function V$(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function W$(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function U$(){let e=B$(),t=V$(),n=W$();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let i=0;i<s.length;i++){let o=s[i],u=e[n[o>>10]+(o&1023)]+t[o>>10];a[i]=u}return new Float32Array(r)}}var wt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return wt.instance==null&&(wt.instance=new wt),wt.instance}static registerSaveRouter(e){wt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){wt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return wt.getHandlers(e,"save")}static getLoadHandlers(e,t){return wt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?wt.getInstance().loadRouters:wt.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&s.push(i)}),s}},G$=e=>wt.registerSaveRouter(e),H$=e=>wt.registerLoadRouter(e),q$=e=>wt.getSaveHandlers(e),j$=(e,t)=>wt.getLoadHandlers(e,t),Gf="tensorflowjs",Hf=1,Xr="models_store",cr="model_info_store";function Vw(){if(!X().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function qf(e){let t=e.result;t.createObjectStore(Xr,{keyPath:"modelPath"}),t.createObjectStore(cr,{keyPath:"modelPath"})}var oa=class{constructor(e){if(this.indexedDB=Vw(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(Gf,Hf);r.onupgradeneeded=()=>qf(r),r.onsuccess=()=>{let a=r.result;if(t==null){let i=a.transaction(Xr,"readonly"),u=i.objectStore(Xr).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=c=>(a.close(),s(u.error)),i.oncomplete=()=>a.close()}else{let i=Rl(t),o=a.transaction(cr,"readwrite"),u=o.objectStore(cr),c=u.put({modelPath:this.modelPath,modelArtifactsInfo:i}),l;c.onsuccess=()=>{l=a.transaction(Xr,"readwrite");let p=l.objectStore(Xr).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});p.onsuccess=()=>n({modelArtifactsInfo:i}),p.onerror=h=>{u=o.objectStore(cr);let f=u.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(p.error)),f.onerror=m=>(a.close(),s(p.error))}},c.onerror=d=>(a.close(),s(c.error)),o.oncomplete=()=>{l==null?a.close():l.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};oa.URL_SCHEME="indexeddb://";var Ww=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(oa.URL_SCHEME)?K$(e.slice(oa.URL_SCHEME.length)):null;wt.registerSaveRouter(Ww);wt.registerLoadRouter(Ww);function K$(e){return new oa(e)}function X$(e){return e.startsWith(oa.URL_SCHEME)?e.slice(oa.URL_SCHEME.length):e}var Y$=class{constructor(){this.indexedDB=Vw()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(Gf,Hf);n.onupgradeneeded=()=>qf(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(cr,"readonly"),i=r.objectStore(cr).getAll();i.onsuccess=()=>{let o={};for(let u of i.result)o[u.modelPath]=u.modelArtifactsInfo;e(o)},i.onerror=o=>(s.close(),t(i.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=X$(e),new Promise((t,n)=>{let s=this.indexedDB.open(Gf,Hf);s.onupgradeneeded=()=>qf(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(cr,"readwrite"),i=a.objectStore(cr),o=i.get(e),u;o.onsuccess=()=>{if(o.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=i.delete(e),l=()=>{u=r.transaction(Xr,"readwrite");let p=u.objectStore(Xr).delete(e);p.onsuccess=()=>t(o.result.modelArtifactsInfo),p.onerror=h=>n(o.error)};c.onsuccess=l,c.onerror=d=>(l(),r.close(),n(o.error))}},o.onerror=c=>(r.close(),n(o.error)),a.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},Us="/",Li="tensorflowjs_models",Uw="info",Q$="model_topology",Z$="weight_specs",J$="weight_data",eA="model_metadata";function Gw(e){return{info:[Li,e,Uw].join(Us),topology:[Li,e,Q$].join(Us),weightSpecs:[Li,e,Z$].join(Us),weightData:[Li,e,J$].join(Us),modelMetadata:[Li,e,eA].join(Us)}}function Hw(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function tA(e){let t=e.split(Us);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Us)}function nA(e){return e.startsWith(ua.URL_SCHEME)?e.slice(ua.URL_SCHEME.length):e}var ua=class{constructor(e){if(!X().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Gw(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Rl(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,M$(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw Hw(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=L$(a),t}};ua.URL_SCHEME="localstorage://";var qw=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ua.URL_SCHEME)?sA(e.slice(ua.URL_SCHEME.length)):null;wt.registerSaveRouter(qw);wt.registerLoadRouter(qw);function sA(e){return new ua(e)}var rA=class{constructor(){O(X().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Li+Us,n=Us+Uw;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=tA(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=nA(e);let t=Gw(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return Hw(t),n}},Ui="://",zn=class{constructor(){this.managers={}}static getInstance(){return zn.instance==null&&(zn.instance=new zn),zn.instance}static registerManager(e,t){O(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ui)&&(e=e.slice(0,e.indexOf(Ui))),O(e.length>0,()=>"scheme must not be an empty string.");let n=zn.getInstance();O(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function qc(e){if(e.indexOf(Ui)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${zn.getSchemes().join(",")}`);return{scheme:e.split(Ui)[0],path:e.split(Ui)[1]}}async function jw(e,t,n=!1){O(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=wt.getLoadHandlers(e);O(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),O(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=wt.getSaveHandlers(t);O(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),O(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let i=a[0],o=qc(e).scheme,u=qc(e).path,c=o===qc(e).scheme,l=await r.load();n&&c&&await zn.getManager(o).removeModel(u);let d=await i.save(l);return n&&!c&&await zn.getManager(o).removeModel(u),d.modelArtifactsInfo}async function aA(){let e=zn.getSchemes(),t={};for(let n of e){let s=await zn.getManager(n).listModels();for(let r in s){let a=n+Ui+r;t[a]=s[r]}}return t}async function iA(e){let t=qc(e);return zn.getManager(t.scheme).removeModel(t.path)}async function oA(e,t){return jw(e,t,!1)}async function uA(e,t){return jw(e,t,!0)}var lA=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(X().get("IS_BROWSER")){X().setPlatform("browser",new lA);try{zn.registerManager(ua.URL_SCHEME,new rA)}catch(e){}try{zn.registerManager(oa.URL_SCHEME,new Y$)}catch(e){}}var cA={importFetch:()=>bT()},kf,dA=class{constructor(){this.util=yT(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return X().global.fetch!=null?X().global.fetch(e,t):(kf==null&&(kf=cA.importFetch()),kf(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};X().get("IS_NODE")&&!X().get("IS_BROWSER")&&X().setPlatform("node",new dA);function _e(e,t="float32",n){return t=t||"float32",Wm(e),new Vt(e,t,n)}function pA(e,t){let n=E(e,"x","cast");if(!xw(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return L.runKernel(Ca,s,r)}var pe=B({cast_:pA});function hA(e){let n={x:E(e,"x","clone","string_or_numeric")};return L.runKernel(La,n)}var pr=B({clone_:hA});function fA(e,t=!1){console.log(e.toString(t))}Pw();var mA={buffer:_e,cast:pe,clone:pr,print:fA};k$(mA);var An={};Ae(An,{browserFiles:()=>kA,browserHTTPRequest:()=>TA,concatenateArrayBuffers:()=>xg,copyModel:()=>oA,decodeWeights:()=>Lw,encodeWeights:()=>P$,fromMemory:()=>AA,getLoadHandlers:()=>j$,getModelArtifactsForJSON:()=>wg,getModelArtifactsInfoForJSON:()=>Rl,getSaveHandlers:()=>q$,http:()=>Ig,isHTTPScheme:()=>Kf,listModels:()=>aA,loadWeights:()=>IA,moveModel:()=>uA,registerLoadRouter:()=>H$,registerSaveRouter:()=>G$,removeModel:()=>iA,weightsLoaderFactory:()=>Xw,withSaveHandler:()=>EA});var gA="model",bA=".json",yA=".weights.bin";function Bv(e){return new Promise(t=>setTimeout(t)).then(e)}var jf=class{constructor(e){if(!X().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(jf.URL_SCHEME)&&(e=e.slice(jf.URL_SCHEME.length)),(e==null||e.length===0)&&(e=gA),this.modelJsonFileName=e+bA,this.weightDataFileName=e+yA}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=Bw(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Bv(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await Bv(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Rl(e)}}}},ld=jf;ld.URL_SCHEME="downloads://";var vA=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let o=wg(r,u=>this.loadWeights(u));e(o)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,xg(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let i=a.target.result;n(i)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>Lv(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let i=Lv(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},xA=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ld.URL_SCHEME)?wA(e.slice(ld.URL_SCHEME.length)):null;wt.registerSaveRouter(xA);function wA(e="model"){return new ld(e)}function kA(e){return new vA(e)}function Vv(e,t,n,s){i(e),n=n==null?0:n,s=s==null?1:s,o(n,s);let r=0,a=u=>(u.then(c=>{let l=n+ ++r/e.length*(s-n);return t(l),c}),u);function i(u){O(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function o(u,c){O(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),O(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),O(c>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${c}`)}return Promise.all(e.map(a))}async function Kw(e,t){t==null&&(t={});let n=t.fetchFunc==null?X().platform.fetch:t.fetchFunc,s=e.map(d=>n(d,t.requestInit,{isBinary:!0})),r=0,a=.5,o=(t.onProgress==null?await Promise.all(s):await Vv(s,t.onProgress,r,a)).map(d=>d.arrayBuffer()),u=.5,c=1;return t.onProgress==null?await Promise.all(o):await Vv(o,t.onProgress,u,c)}async function IA(e,t="",n,s){return Xw(i=>Kw(i,{requestInit:s}))(e,t,n)}function Xw(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},i=s!=null?s.map(()=>!1):[],o=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,y=Uf[b]*pt(g.shape),v=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:y})};s!=null?s.forEach((x,k)=>{x===g.name&&(v(),i[k]=!0)}):v(),o.push(g.name),m+=y})}),!i.every(h=>h)){let h=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let u=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),c=[];u.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;c.push(m)})});let l=await e(c),d={},p=0;return u.forEach(h=>{let f=t[h].paths.length,m=0;for(let x=0;x<f;x++)m+=l[p+x].byteLength;let g=new ArrayBuffer(m),b=new Uint8Array(g),y=0;for(let x=0;x<f;x++){let k=new Uint8Array(l[p+x]);b.set(k,y),y+=k.byteLength}a[h].forEach(x=>{let k=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),T=Lw(k,[x.manifestEntry]);for(let C in T)d[C]=T[C]}),p+=f}),d}}var SA="application/octet-stream",CA="application/json",kg=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(O(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=X().platform.fetch,O(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&O(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=Bw(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:CA}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:SA}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Rl(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return wg(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=NA(t),r=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let i=[],o=[];for(let c of e)for(let l of c.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(l)):i.push(r+l+s);this.weightUrlConverter&&i.push(...await Promise.all(o));let u=await Kw(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,xg(u)]}};kg.URL_SCHEME_REGEX=/^https?:\/\//;function NA(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function Kf(e){return e.match(kg.URL_SCHEME_REGEX)!=null}var Yw=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>Kf(s)):n=Kf(e),n)return Ig(e,t)}return null};wt.registerSaveRouter(Yw);wt.registerLoadRouter(Yw);function Ig(e,t){return new kg(e,t)}function TA(e,t){return Ig(e,t)}var If=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},$A=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function AA(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new If(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new If({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new If({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function EA(e){return new $A(e)}var _A={};Ae(_A,{confusionMatrix:()=>PA});function RA(e,t,n=!1,s=!1){let r=E(e,"a","matMul"),a=E(t,"b","matMul");[r,a]=vt(r,a);let i={a:r,b:a},o={transposeA:n,transposeB:s};return L.runKernel(Sa,i,o)}var Me=B({matMul_:RA});function DA(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:E(e,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:s};return L.runKernel(Co,a,i)}var cd=B({oneHot_:DA});function FA(e,t){let n=E(e,"x","transpose");if(t==null&&(t=n.shape.map((a,i)=>i).reverse()),O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{O(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let s={x:n},r={perm:t};return L.runKernel(di,s,r)}var qe=B({transpose_:FA});function OA(e,t,n){let s=E(e,"labels","confusionMatrix"),r=E(t,"predictions","confusionMatrix");O(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),O(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),O(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),O(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),O(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=cd(pe(s,"int32"),n),i=cd(pe(r,"int32"),n),o=qe(a),u=Me(o,i);return pe(u,"int32")}var PA=B({confusionMatrix_:OA}),Go={};Ae(Go,{assertAndGetBroadcastShape:()=>ot,getBroadcastDims:()=>Qw,getReductionAxes:()=>$t});function Qw(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&i===1&&s.unshift(a)}return s}function $t(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,i=t[a];(r==null||r===1&&i>1)&&n.unshift(a)}return n}function ot(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let i=t[t.length-r-1];if(i==null&&(i=1),a===1)n.unshift(i);else if(i===1)n.unshift(a);else if(a!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else n.unshift(a)}return n}var Zw={};Ae(Zw,{fromPixels:()=>GA,fromPixelsAsync:()=>WA,toPixels:()=>UA});function zA(e,t,n){if(xa(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Es(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return $r(e,t,s,n)}var Vr;function Jw(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r&&r&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(Mf(ad,L.backendName)!=null){let f={pixels:e},m={numChannels:t};return L.runKernel(ad,f,m)}let[c,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(i)d=e.getContext("2d").getImageData(0,0,c,l).data;else if(s||n)d=e.data;else if(a||r||o){if(Vr==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Vr=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Vr=document.createElement("canvas").getContext("2d");Vr.canvas.width=c,Vr.canvas.height=l,Vr.drawImage(e,0,0,c,l),d=Vr.getImageData(0,0,c,l).data}let p;if(t===4)p=new Int32Array(d);else{let f=c*l;p=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)p[m*t+g]=d[m*4+g]}return zA(p,[l,c,t],"int32")}function MA(e){return e!=null&&e.data instanceof Uint8Array}function LA(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function BA(e){return e!=null&&e.width!==0&&e.height!==0}function VA(e){return LA()&&!(e instanceof ImageBitmap)&&BA(e)&&!MA(e)}async function WA(e,t=3){let n=null;if(X().getBool("WRAP_TO_IMAGEBITMAP")&&VA(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return Jw(n,t)}async function UA(e,t){let n=E(e,"img","toPixels");if(!(e instanceof tt)){let c=n;n=pe(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o=n.dtype==="float32"?255:1,u=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){let l=[0,0,0,255];for(let p=0;p<a;p++){let h=i[c*a+p];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(l[0]=h*o,l[1]=h*o,l[2]=h*o):l[p]=h*o}let d=c*4;u[d+0]=Math.round(l[0]),u[d+1]=Math.round(l[1]),u[d+2]=Math.round(l[2]),u[d+3]=Math.round(l[3])}if(t!=null){t.width=r,t.height=s;let c=t.getContext("2d"),l=new ImageData(u,r,s);c.putImageData(l,0,0)}return n!==e&&n.dispose(),u}var GA=B({fromPixels_:Jw}),ek={};Ae(ek,{prepareAndValidate:()=>tk});function tk(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(pt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],i=1;for(let d=0;d<r.length-1;++d)i*=r[d];let o=e.shape,u=r.slice();u.pop();let c=1;for(let d=a;d<n;++d)c*=o[d],u.push(o[d]);let l=[...no(e.shape).map(d=>d/c),1].slice(0,a);return[u,i,c,l]}var nk={};Ae(nk,{calculateShapes:()=>sk,validateInput:()=>Cg,validateUpdateShape:()=>Sg});function Sg(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+s])throw new Error(a+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function Cg(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Sg(n,t,e)}function sk(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,i=1;for(let d=r;d<a;++d)i*=n[d];let o=r<1?1:r,u=pt(t.shape)/o,c=[...no(n.slice(0,r)),1],l=pt(n);return{sliceRank:r,numUpdates:u,sliceSize:i,strides:c,outputSize:l}}var kt={};Ae(kt,{assertParamsValid:()=>qA,computeFlatOffset:()=>QA,computeOutShape:()=>KA,getNormalizedAxes:()=>XA,isSliceContinous:()=>YA,maskToAxes:()=>jA,parseSliceParams:()=>pk,sliceInfo:()=>ZA,startForAxis:()=>ck,startIndicesWithElidedDims:()=>ok,stopForAxis:()=>dk,stopIndicesWithElidedDims:()=>uk,stridesForAxis:()=>lk,stridesWithElidedDims:()=>rk});var Xf=-2,HA=-1;function qA(e,t,n){let s=e.shape.length;O(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),O(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)O(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function jA(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function KA(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function rk(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function ak(e,t,n){return n<=e?n:n-(t-1)}function ik(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function XA(e,t,n,s,r,a,i,o,u){let c=e.length,l=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){let h=t[0],f=n+1;l=ok(i,h,f,s,e),d=uk(o,h,f,r,e),p=rk(a,h,f,e)}else for(let h=0;h<c;h++)l[h]=ck(i,s,a,e,h,u),d[h]=dk(o,r,a,e,h,u),p[h]=lk(a,h,u);return{begin:l,end:d,strides:p}}function ok(e,t,n,s,r){let a=[...r],i=ik(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{let u=ak(t,n,o),c=s[u];e&1<<u&&(c=0),a[o]=c}return a}function uk(e,t,n,s,r){let a=[...r],i=ik(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{let u=ak(t,n,o),c=s[u];e&1<<u&&(c=Number.MAX_SAFE_INTEGER),a[o]=c}for(let o=0;o<a.length;o++){let u=r[o];a[o]<0&&(a[o]+=u),a[o]=Bu(0,a[o],r[o])}return a}function lk(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function ck(e,t,n,s,r,a){let i=t[r],o=n[r]||1;(e&1<<r||a&1<<r||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=s[r];return i<0&&(i+=u),i=Bu(0,i,u-1),i}function dk(e,t,n,s,r,a){let i=t[r],o=n[r]||1;(e&1<<r||a&1<<r||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=s[r];return i<0&&(i+=u),o>0?i=Bu(0,i,u):i=Bu(-1,i,u-1),i}function YA(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function QA(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function pk(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(i=>{O(i!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((i,o)=>i>=0?i:(O(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-s[o])),[s,a]}function ZA(e,t,n,s,r,a,i,o,u){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let v=0;v<d.dims;v++)l&&(1<<v&o)!==0&&d.numAddAxisAfterEllipsis++,1<<v&i&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};JA(d,p);let h=!0,f=!0,m=!0,g=[],b=[];for(let v=0;v<e.length;++v){if(p.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);let x=!!(p.shrinkAxisMask&1<<v),k=e[v];if(k===-1){g.push(x?1:-1);continue}let T=[p.beginMask&1<<v,p.endMask&1<<v],C=[p.strides[v]>0?0:-1,p.strides[v]>0?k:k-1];if(x&&p.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[v]===1;let R=!!(p.beginMask&1<<v&&p.endMask&1<<v);if(p.beginValid&&p.endValid){if(x){let F=p.begin[v]<0?k+p.begin[v]:p.begin[v];if(p.begin[v]=F,p.end[v]=p.begin[v]+1,F<0||F>=k)throw Error(`slice index ${p.begin[v]} of dimension ${v} out of bounds.`)}else p.begin[v]=Wv(p.begin[v],0,p.strides[v],k,T,C),p.end[v]=Wv(p.end[v],1,p.strides[v],k,T,C);let D=p.strides[v]===1&&p.begin[v]===0&&p.end[v]===k;h=h&&D,f=f&&(v===0&&p.strides[v]===1||D)}else h=h&&p.strides[v]===1&&R,f=f&&(v===0&&p.strides[v]===1||R);let _,P=!1;if(p.beginValid&&p.endValid?(_=p.end[v]-p.begin[v],P=!0):x?(_=1,P=!0):R&&k>=0&&(p.strides[v]<0?_=-k:_=k,P=!0),P){let D;_===0||_<0!=p.strides[v]<0?D=0:D=Math.trunc(_/p.strides[v])+(_%p.strides[v]!==0?1:0),g.push(D)}else g.push(-1)}for(let v=0;v<p.finalShapeGatherIndices.length;++v){let x=p.finalShapeGatherIndices[v];x>=0?b.push(g[x]):x===Xf&&b.push(1)}return{finalShapeSparse:b.filter((v,x)=>p.finalShapeGatherIndices[x]!==Xf),finalShape:b,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function JA(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(Xf),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(HA),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function Wv(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let i=e<0?s+e:e;return i<a[0]?a[0]:i>a[1]?a[1]:i}}var ae={};Ae(ae,{Serializable:()=>hk,SerializationMap:()=>qr,registerClass:()=>Ar});var hk=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},qr=class{constructor(){this.classNameMap={}}static getMap(){return qr.instance==null&&(qr.instance=new qr),qr.instance}static register(e){qr.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Ar(e){O(e.className!=null,()=>"Class being registered does not have the static className property defined."),O(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),O(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),qr.register(e)}var eE={};Ae(eE,{TEST_EPSILON_FLOAT16:()=>fk,encodeStrings:()=>mk,expectArrayBuffersEqual:()=>oE,expectArraysClose:()=>nE,expectArraysEqual:()=>rE,expectNumbersClose:()=>aE,expectPromiseToFail:()=>sE,expectValuesInRange:()=>iE,testEpsilon:()=>Ng});var tE=.001,fk=.1;function nE(e,t,n){return n==null&&(n=Ng()),Yf(e,t,(s,r)=>Tg(s,r,n))}function Ng(){return L.backend.floatPrecision()===32?tE:fk}function Yf(e,t,n){let s=!0;if((Zt(e)||Zt(t))&&(s=!1),Zt(e)&&Zt(t)&&(s=!0),s){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Es(e),o=Es(t);if(!Sr(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let r=Zt(e)?e:na(e),a=Zt(t)?t:na(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let i=0;i<a.length;++i){let o=r[i],u=a[i];if(!n(o,u))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${u}.
Actual:   ${r}.
Expected: ${a}.`)}}function sE(e,t){e().then(()=>t.fail(),()=>t())}function rE(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return lr(e)||lr(e[0])||lr(t)||lr(t[0])?Yf(e,n,(s,r)=>s==r):Yf(e,t,(s,r)=>Tg(s,r,0))}function aE(e,t,n){if(n==null&&(n=Ng()),!Tg(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Tg(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function iE(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function oE(e,t){let n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function mk(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?mk(n):e[t]=_l(n)}return e}var Yce="0.0.0";function Qce(){X().set("PROD",!0)}function Zce(){X().set("DEBUG",!0)}function Jce(){X().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function gk(e){X().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}I$(gk);function ede(){L.disposeVariables()}function ks(){return L}function Qf(){return L.memory()}function tde(e){return L.profile(e)}function H(e,t){return L.tidy(e,t)}function Ee(e){bg(e).forEach(n=>n.dispose())}function jt(e){return L.keep(e)}function nde(e){return L.time(e)}function sde(e){return L.setBackend(e)}function rde(){return L.ready()}function ade(){return L.backendName}function ide(e){L.removeBackend(e)}function ode(e){return L.findBackend(e)}function ude(e){return L.findBackendFactory(e)}function sp(e,t,n=1){return L.registerBackend(e,t,n)}function uE(){return L.backend}function lde(e,t){X().setPlatform(e,t)}function lE(e,t){let n=E(e,"a","add"),s=E(t,"b","add");[n,s]=vt(n,s);let r={a:n,b:s};return L.runKernel(Cr,r)}var oe=B({add_:lE});function cE(e,t){let n=E(e,"a","floorDiv"),s=E(t,"b","floorDiv");[n,s]=vt(n,s);let r={a:n,b:s};return L.runKernel(Pa,r)}var bk=B({floorDiv_:cE});function dE(e,t){let n=E(e,"a","div"),s=E(t,"b","div");if([n,s]=vt(n,s),n.dtype==="int32"&&s.dtype==="int32")return bk(n,s);let r={a:n,b:s},a={};return L.runKernel(Ra,r,a)}var Se=B({div_:dE});function pE(e,t){let n=E(e,"a","mul"),s=E(t,"b","mul");[n,s]=vt(n,s);let r={a:n,b:s};return L.runKernel(Xa,r)}var V=B({mul_:pE});function hE(e){let t=E(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return L.runKernel(Ld,n)}else{let n={x:t};return L.runKernel(so,n)}}var Mt=B({abs_:hE});function fE(e){let n={x:E(e,"x","acos")};return L.runKernel(nl,n)}var mE=B({acos_:fE});function gE(e){let n={x:E(e,"x","acosh")};return L.runKernel(sl,n)}var bE=B({acosh_:gE});function yE(e){O(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),O(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>E(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!Sr(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return L.runKernel(wa,s)}var vE=B({addN_:yE});function xE(e,t=null,n=!1){let r={x:E(e,"x","all","bool")},a={axis:t,keepDims:n};return L.runKernel(rl,r,a)}var yk=B({all_:xE});function wE(e,t=null,n=!1){let r={x:E(e,"x","any","bool")},a={axis:t,keepDims:n};return L.runKernel(al,r,a)}var Zf=B({any_:wE});function kE(e,t=0){let s={x:E(e,"x","argMax")},r={axis:t};return L.runKernel(ka,s,r)}var Gu=B({argMax_:kE});function IE(e,t=0){let s={x:E(e,"x","argMin")},r={axis:t};return L.runKernel(il,s,r)}var SE=B({argMin_:IE});function CE(e){let n={x:E(e,"x","asin")};return L.runKernel(ol,n)}var NE=B({asin_:CE});function TE(e){let n={x:E(e,"x","asinh")};return L.runKernel(ul,n)}var $E=B({asinh_:TE});function AE(e){let n={x:E(e,"x","atan")};return L.runKernel(ll,n)}var EE=B({atan_:AE});function _E(e,t){let n=E(e,"a","atan2"),s=E(t,"b","atan2");[n,s]=vt(n,s);let r={a:n,b:s};return L.runKernel(dl,r)}var RE=B({atan2_:_E});function DE(e){let n={x:E(e,"x","atanh")};return L.runKernel(cl,n)}var FE=B({atanh_:DE});function OE(e,t,n,s,r="NHWC",a){let i=e[3],o=[...t,i],u=wk(r);return Dl(e,o,n,a,s,null,null,u)}function vk(e,t,n,s,r,a,i="channelsLast"){let[o,u]=dd(t),c;if(i==="channelsLast")c=[o,u,e[3],e[3]];else if(i==="channelsFirst")c=[o,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Dl(e,c,n,s,r,a,!1,i)}function PE(e,t,n,s,r,a,i="NDHWC"){let[o,u,c]=Jf(t),l,d;if(i==="NDHWC")d="channelsLast",l=[o,u,c,e[4],e[4]];else if(i==="NCDHW")d="channelsFirst",l=[o,u,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return xk(e,l,n,s,r,!1,d,a)}function Dl(e,t,n,s,r,a,i=!1,o="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if(o==="channelsLast")[u,c,l,d]=e;else if(o==="channelsFirst")[u,d,c,l]=e;else throw new Error(`Unknown dataFormat ${o}`);let[p,h,,f]=t,[m,g]=dd(n),[b,y]=dd(s),v=Gi(p,b),x=Gi(h,y),{padInfo:k,outHeight:T,outWidth:C}=LE(r,c,l,m,g,v,x,a,o),R=i?f*d:f,_;return o==="channelsFirst"?_=[u,R,T,C]:o==="channelsLast"&&(_=[u,T,C,R]),{batchSize:u,dataFormat:o,inHeight:c,inWidth:l,inChannels:d,outHeight:T,outWidth:C,outChannels:R,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:y,inShape:e,outShape:_,filterShape:t}}function xk(e,t,n,s,r,a=!1,i="channelsLast",o){let[u,c,l,d,p]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,d,p]=e;else if(i==="channelsFirst")[u,p,c,l,d]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,f,m,,g]=t,[b,y,v]=Jf(n),[x,k,T]=Jf(s),C=Gi(h,x),R=Gi(f,k),_=Gi(m,T),{padInfo:P,outDepth:D,outHeight:F,outWidth:$}=BE(r,c,l,d,b,y,v,C,R,_,o),z=a?g*p:g,W;return i==="channelsFirst"?W=[u,z,D,F,$]:i==="channelsLast"&&(W=[u,D,F,$,z]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:l,inWidth:d,inChannels:p,outDepth:D,outHeight:F,outWidth:$,outChannels:z,padInfo:P,strideDepth:b,strideHeight:y,strideWidth:v,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:R,effectiveFilterWidth:_,dilationDepth:x,dilationHeight:k,dilationWidth:T,inShape:e,outShape:W,filterShape:t}}function zE(e,t,n,s,r){s==null&&(s=$g(e,t,n));let a=e[0],i=e[1],o=Zr((a-t+2*s)/n+1,r),u=Zr((i-t+2*s)/n+1,r);return[o,u]}function ME(e,t,n,s,r,a){r==null&&(r=$g(e,t,s));let i=e[0],o=e[1],u=e[2],c=Zr((i-t+2*r)/s+1,a),l=Zr((o-t+2*r)/s+1,a),d=Zr((u-t+2*r)/s+1,a);return[c,l,d,n]}function $g(e,t,n,s=1){let r=Gi(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function dd(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function Jf(e){return typeof e=="number"?[e,e,e]:e}function Gi(e,t){return t<=1?e:e+(e-1)*(t-1)}function LE(e,t,n,s,r,a,i,o,u){let c,l,d;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=zE([t,n],a,s,e,o);l=h[0],d=h[1]}else if(e==="same"){l=Math.ceil(t/s),d=Math.ceil(n/r);let p=Math.max(0,(l-1)*s+a-t),h=Math.max(0,(d-1)*r+i-n),f=Math.floor(p/2),m=p-f,g=Math.floor(h/2),b=h-g;c={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-a+1)/s),d=Math.ceil((n-i+1)/r);else if(typeof e=="object"){let p=u==="channelsLast"?e[1][0]:e[2][0],h=u==="channelsLast"?e[1][1]:e[2][1],f=u==="channelsLast"?e[2][0]:e[3][0],m=u==="channelsLast"?e[2][1]:e[3][1];c={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=Zr((t-a+p+h)/s+1,o),d=Zr((n-i+f+m)/r+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:l,outWidth:d}}function BE(e,t,n,s,r,a,i,o,u,c,l){let d,p,h,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=ME([t,n,s,1],o,1,r,e,l);p=g[0],h=g[1],f=g[2]}else if(e==="same"){p=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/i);let m=(p-1)*r+o-t,g=(h-1)*a+u-n,b=(f-1)*i+c-s,y=Math.floor(m/2),v=m-y,x=Math.floor(g/2),k=g-x,T=Math.floor(b/2),C=b-T;d={top:x,bottom:k,left:T,right:C,front:y,back:v,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/r),h=Math.ceil((n-u+1)/a),f=Math.ceil((s-c+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}function Zr(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function br(e){let[t,n,s]=dd(e);return t===1&&n===1&&s===1}function Fs(e,t){return br(e)||br(t)}function wk(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function un(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")O(ji(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{O(ji(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function VE(e,t){let s={x:E(e,"x","reshape","string_or_numeric")},r={shape:t};return L.runKernel($o,s,r)}var G=B({reshape_:VE});function WE(e,t,n,s,r){let a=E(e,"x","avgPool","float32"),i=1;O(Fs(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=a,u=!1;a.rank===3&&(u=!0,o=G(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),un("avgPool",s,r);let c={x:o},l={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=L.runKernel(Ia,c,l);return d=pe(d,a.dtype),u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Ag=B({avgPool_:WE});function UE(e,t,n,s,r,a="NDHWC"){let i=E(e,"x","avgPool3d","float32"),o=i,u=!1;i.rank===4&&(u=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),O(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),un("avgPool3d",s,r);let c={x:o},l={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=L.runKernel(zd,c,l);return d=pe(d,o.dtype),u?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var kk=B({avgPool3d_:UE});function GE(e,t=0){O(e.length>=1,()=>"Pass at least one tensor to concat");let n=Uu(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return pr(n[0]);let s=n,r={axis:t};return L.runKernel(ao,s,r)}var Dt=B({concat_:GE});function HE(e){let n={x:E(e,"x","sigmoid","float32")};return L.runKernel(ri,n)}var Hs=B({sigmoid_:HE});function qE(e,t,n){let s=E(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return L.runKernel(Do,r,a)}var He=B({slice_:qE});function jE(e){let n={x:E(e,"x","tanh","float32")};return L.runKernel(ci,n)}var Hu=B({tanh_:jE});function KE(e,t,n,s,r,a){let i=E(e,"forgetBias","basicLSTMCell"),o=E(t,"lstmKernel","basicLSTMCell"),u=E(n,"lstmBias","basicLSTMCell"),c=E(s,"data","basicLSTMCell"),l=E(r,"c","basicLSTMCell"),d=E(a,"h","basicLSTMCell"),p=Dt([c,d],1),h=Me(p,o),f=oe(h,u),m=f.shape[0],g=f.shape[1]/4,b=[m,g],y=He(f,[0,0],b),v=He(f,[0,g],b),x=He(f,[0,g*2],b),k=He(f,[0,g*3],b),T=oe(V(Hs(y),Hu(v)),V(l,Hs(oe(i,x)))),C=V(Hu(T),Hs(k));return[T,C]}var cde=B({basicLSTMCell_:KE});function XE(e,t,n){let s=E(e,"x","batchToSpaceND"),r=t.reduce((o,u)=>o*u);O(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),O(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),O(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},i={blockShape:t,crops:n};return L.runKernel(ro,a,i)}var Eg=B({batchToSpaceND_:XE});function YE(e){let t;return e.rank===0||e.rank===1?t=G(e,[1,1,1,e.size]):e.rank===2?t=G(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function QE(e,t,n,s,r,a){a==null&&(a=.001);let i=E(e,"x","batchNorm"),o=E(t,"mean","batchNorm"),u=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let l;s!=null&&(l=E(s,"offset","batchNorm")),O(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(l==null||o.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:YE(i),scale:c,offset:l,mean:o,variance:u},h={varianceEpsilon:a},f=L.runKernel(za,p,h);return G(f,i.shape)}var qu=B({batchNorm_:QE});function ZE(e,t,n,s,r,a){let i=E(e,"x","batchNorm"),o=E(t,"mean","batchNorm"),u=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),O(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),O(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),O(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&O(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&O(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),qu(i,o,u,l,c,a)}var JE=B({batchNorm2d_:ZE});function e_(e,t,n,s,r,a){let i=E(e,"x","batchNorm"),o=E(t,"mean","batchNorm"),u=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),O(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),O(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),O(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&O(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&O(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),qu(i,o,u,l,c,a)}var t_=B({batchNorm3d_:e_});function n_(e,t,n,s,r,a){let i=E(e,"x","batchNorm"),o=E(t,"mean","batchNorm"),u=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),O(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),O(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),O(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&O(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&O(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),qu(i,o,u,l,c,a)}var s_=B({batchNorm4d_:n_});function r_(e,t,n){let s=E(e,"x","bincount"),r=E(t,"weights","bincount");O(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},i={size:n};return L.runKernel(jm,a,i)}var Ik=B({bincount_:r_});function a_(e,t){let n=E(e,"s0","broadcastArgs","int32"),s=E(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return L.runKernel(Km,r)}var i_=B({broadcastArgs_:a_});function o_(e,t){let n=E(e,"broadcastTo","x"),s=n.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let c=n.shape.slice();for(;c.length<t.length;)c.unshift(1);n=G(n,c)}let r=n.shape,a=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])a[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return pr(n);let o={x:n},u={reps:a};return L.runKernel(Tr,o,u)}var jc=B({broadcastTo_:o_});function u_(e){let n={x:E(e,"x","ceil","float32")};return L.runKernel(Na,n)}var l_=B({ceil_:u_});function c_(e,t,n){let s=E(e,"x","clipByValue");O(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return L.runKernel(Nr,r,a)}var Vn=B({clipByValue_:c_});function d_(e){return Dt(e,0)}var p_=B({concat1d_:d_});function h_(e,t){return Dt(e,t)}var f_=B({concat2d_:h_});function m_(e,t){return Dt(e,t)}var g_=B({concat3d_:m_});function b_(e,t){return Dt(e,t)}var y_=B({concat4d_:b_});function v_(e,t,n,s,r="NHWC",a=[1,1],i){let o=E(e,"x","conv2d","float32"),u=E(t,"filter","conv2d","float32"),c=o,l=!1;o.rank===3&&(l=!0,c=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),O(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),un("conv2d",s,i);let d=r==="NHWC"?c.shape[3]:c.shape[1];O(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),O(Fs(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let p={x:c,filter:u},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=L.runKernel(Ta,p,h);return l?G(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var la=B({conv2d_:v_});function x_(e,t,n,s,r="NWC",a=1,i){let o=E(e,"x","conv1d"),u=E(t,"filter","conv1d"),c=o,l=!1;o.rank===2&&(l=!0,c=G(o,[1,o.shape[0],o.shape[1]])),O(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),O(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),un("conv1d",s,i),O(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),O(Fs(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),O(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let d=G(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=G(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=la(p,d,[1,n],s,"NHWC",[1,a],i);return l?G(g,[g.shape[2],g.shape[3]]):G(g,[g.shape[0],g.shape[2],g.shape[3]])}var Sk=B({conv1d_:x_});function w_(e,t,n,s,r,a="NHWC",i){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,c=!1;t.rank===3&&(c=!0,u=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),O(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),O(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),O(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let l=a==="NHWC"?o[3]:o[1],d=a==="NHWC"?u.shape[3]:u.shape[1];O(l===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`),O(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),un("conv2dDerInput",r,i);let p={dy:u,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=L.runKernel($a,p,h);return c?G(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var _g=B({conv2DBackpropInput_:w_});function k_(e,t,n,s,r,a){let i=E(e,"x","conv2dTranspose"),o=E(t,"filter","conv2dTranspose");return _g(n,i,o,s,r,"NHWC",a)}var Ck=B({conv2dTranspose_:k_});function I_(e,t,n,s,r="NDHWC",a=[1,1,1]){let i=E(e,"x","conv3d"),o=E(t,"filter","conv3d"),u=i,c=!1;i.rank===4&&(c=!0,u=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),O(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),O(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),O(Fs(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),O(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let l={x:u,filter:o},d={strides:n,pad:s,dataFormat:r,dilations:a},p=L.runKernel(Bd,l,d);return c?G(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Nk=B({conv3d_:I_});function S_(e,t,n,s,r){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,o=!1;t.rank===4&&(o=!0,i=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let u=a[4],c=i.shape[4];O(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),O(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),O(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),O(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),O(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let l={dy:i,filter:n},d={pad:r,strides:s,inputShape:a},p=L.runKernel(Qm,l,d);return o?G(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Tk=B({conv3DBackpropInput_:S_});function C_(e,t,n,s,r){let a=E(e,"x","conv3dTranspose"),i=E(t,"filter","conv3dTranspose");return Tk(n,a,i,s,r)}var N_=B({conv3dTranspose_:C_});function T_(e){let n={x:E(e,"x","cos","float32")};return L.runKernel(Aa,n)}var Rg=B({cos_:T_});function $_(e){let n={x:E(e,"x","cosh","float32")};return L.runKernel(Ea,n)}var $k=B({cosh_:$_});function A_(e,t=0,n=!1,s=!1){let a={x:E(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:s};return L.runKernel(io,a,i)}var Ak=B({cumsum_:A_});function E_(e,t,n,s=!1){let r=E(e,"x","denseBincount"),a=E(t,"weights","denseBincount");O(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),O(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let i={x:r,weights:a},o={size:n,binaryOutput:s};return L.runKernel(Zm,i,o)}var __=B({denseBincount_:E_});function R_(e,t,n="NHWC"){let s=E(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],i=n==="NHWC"?s.shape[3]:s.shape[1];O(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),O(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),O(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);let o={x:s},u={blockSize:t,dataFormat:n};return L.runKernel(uo,o,u)}var D_=B({depthToSpace_:R_});function F_(e,t,n,s,r="NHWC",a=[1,1],i){let o=E(e,"x","depthwiseConv2d","float32"),u=E(t,"filter","depthwiseConv2d","float32"),c=o,l=!1;o.rank===3&&(l=!0,c=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),O(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),O(c.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),un("depthwiseConv2d",s,i);let d={x:c,filter:u},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},h=L.runKernel(_a,d,p);return l?G(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var rp=B({depthwiseConv2d_:F_});function O_(e){let n={x:E(e,"x","diag")};return L.runKernel(tg,n)}var dde=B({diag_:O_});function P_(e,t,n,s,r=[1,1],a="NHWC"){let i=E(e,"x","dilation2d"),o=E(t,"filter","dilation2d");O(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),O(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),O(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let u=i,c=!1;i.rank===3&&(u=G(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);let l={x:u,filter:o},d={strides:n,pad:s,dilations:r},p=L.runKernel(Vd,l,d);return c?G(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var z_=B({dilation2d_:P_});function M_(e,t){let n=E(e,"a","equal","string_or_numeric"),s=E(t,"b","equal","string_or_numeric");[n,s]=vt(n,s),ot(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(lo,r)}var Yn=B({equal_:M_});function L_(e,t,n){let s=E(t,"a","where"),r=E(n,"b","where"),a=E(e,"condition","where","bool"),i=ot(ot(a.shape,s.shape),r.shape),o=jc(a,i),u=jc(s,i),c=jc(r,i),l={condition:o,t:u,e:c};return L.runKernel(Ro,l)}var xn=B({where_:L_});function B_(e){let n={x:E(e,"x","zerosLike")};return L.runKernel(Wo,n)}var je=B({zerosLike_:B_});function V_(e,t){let n=E(e,"a","div"),s=E(t,"b","div");[n,s]=vt(n,s);let r=Se(n,s),a=je(r),i=Yn(s,a);return xn(i,a,r)}var W_=B({divNoNan_:V_});function U_(e,t){let n=E(e,"t1","dot"),s=E(t,"t2","dot");O((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(O(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let i=G(n,[1,-1]),o=G(s,[-1,1]),u=Me(i,o);return G(u,[])}else if(n.rank===1&&s.rank===2){let i=G(n,[1,-1]),o=G(s,[s.shape[0],s.shape[1]]),u=Me(i,o);return G(u,[u.size])}else if(n.rank===2&&s.rank===1){let i=G(s,[-1,1]),o=Me(n,i);return G(o,[o.size])}else{let i=G(s,[s.shape[0],s.shape[1]]);return Me(n,i)}}var pde=B({dot_:U_});function G_(e,...t){let n=t.map((r,a)=>E(r,`tensors${a}`,"einsum")),s={equation:e};return L.runKernel(Wd,n,s)}var H_=B({einsum_:G_});function q_(e){let n={x:E(e,"x","elu","float32")};return L.runKernel(Da,n)}var ap=B({elu_:q_});function j_(e){let t=E(e,"x","erf");O(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=pe(t,"float32"));let n={x:t};return L.runKernel(pl,n)}var K_=B({erf_:j_});function X_(e){let n={x:E(e,"x","exp")};return L.runKernel(Fa,n)}var Qn=B({exp_:X_});function Y_(e,t=0){let n=E(e,"x","expandDims","string_or_numeric");O(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return L.runKernel(co,s,r)}var Pn=B({expandDims_:Y_});function Q_(e){let n={x:E(e,"x","expm1")};return L.runKernel(po,n)}var Z_=B({expm1_:Q_});function J_(e,t){let n=E(e,"x","tile","string_or_numeric");O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return L.runKernel(Tr,s,r)}var us=B({tile_:J_});function eR(e,t,n,s="float32"){t==null&&(t=e);let r=_e([e,t],s),a=e<=t?e:t;for(let o=0;o<a;++o)r.set(1,o,o);let i=G(r.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return us(Pn(i,0),[n[0],1,1]);if(n.length===2)return us(Pn(Pn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return us(Pn(Pn(Pn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var Ek=B({eye_:eR});function Fl(e,t,n){let s={shape:e,value:t,dtype:n};return L.runKernel(hl,{},s)}function tR(e){let n={x:E(e,"x","floor","float32")};return L.runKernel(Oa,n)}var ip=B({floor_:tR});function nR(e,t,n=0,s=0){let r=E(e,"x","gather"),a=E(t,"indices","gather","int32"),i={x:r,indices:a},o={axis:n,batchDims:s};return L.runKernel(fo,i,o)}var ju=B({gather_:nR});function sR(e,t){let n=E(e,"a","greater","string_or_numeric"),s=E(t,"b","greater","string_or_numeric");[n,s]=vt(n,s),ot(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(go,r)}var Un=B({greater_:sR});function rR(e,t){let n=E(e,"a","greaterEqual","string_or_numeric"),s=E(t,"b","greaterEqual","string_or_numeric");[n,s]=vt(n,s),ot(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(Ma,r)}var Ho=B({greaterEqual_:rR});function aR(e){let n={input:E(e,"input","imag")};return L.runKernel(Ud,n)}var Dg=B({imag_:aR});function iR(e){let n={x:E(e,"x","isFinite")};return L.runKernel(fl,n)}var hde=B({isFinite_:iR});function oR(e){let n={x:E(e,"x","isInf")};return L.runKernel(ml,n)}var fde=B({isInf_:oR});function uR(e){let n={x:E(e,"x","isNaN")};return L.runKernel(gl,n)}var lR=B({isNaN_:uR});function cR(e,t=.2){let s={x:E(e,"x","leakyRelu")},r={alpha:t};return L.runKernel(Ba,s,r)}var Fg=B({leakyRelu_:cR});function dR(e,t){let n=E(e,"a","less","string_or_numeric"),s=E(t,"b","less","string_or_numeric");[n,s]=vt(n,s),ot(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(bo,r)}var _k=B({less_:dR});function pR(e,t){let n=E(e,"a","lessEqual","string_or_numeric"),s=E(t,"b","lessEqual","string_or_numeric");[n,s]=vt(n,s),ot(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(yo,r)}var qo=B({lessEqual_:pR});function hR(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return L.runKernel(ag,{},s)}function fR(e,t=5,n=1,s=1,r=.5){let a=E(e,"x","localResponseNormalization");O(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),O(ji(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;a.rank===3&&(o=!0,i=G(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let u={x:i},c={depthRadius:t,bias:n,alpha:s,beta:r},l=L.runKernel(Hd,u,c);return o?G(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var mR=B({localResponseNormalization_:fR});function gR(e){let n={x:E(e,"x","log","float32")};return L.runKernel(Va,n)}var Zn=B({log_:gR});function bR(e){let n={x:E(e,"x","log1p")};return L.runKernel(bl,n)}var Og=B({log1p_:bR});function mde(e){return O(gr(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=E(t,"x","tf.grad","string_or_numeric"),r=n!=null?E(n,"dy","tf.grad"):null;return L.tidy(()=>{let{value:a,grads:i}=L.gradients(()=>e(s),[s],r);return r!=null&&on(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),op(i),i[0]})}}function gde(e){return O(gr(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{O(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=Uu(t,"args","tf.grads","string_or_numeric"),r=n!=null?E(n,"dy","tf.grads"):null;return L.tidy(()=>{let{value:a,grads:i}=L.gradients(()=>e(...s),s,r);return r!=null&&on(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),op(i),i})}}function bde(e){return O(gr(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{O(t instanceof tt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),O(n==null||n instanceof tt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=L.gradients(()=>e(t),[t],n);return op(s),{grad:s[0],value:r}}}function yde(e){return O(gr(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{O(Array.isArray(t)&&t.every(r=>r instanceof tt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),O(n==null||n instanceof tt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=L.gradients(()=>e(...t),t,n);return n!=null&&on(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),op(s.grads),s}}function yR(e,t){O(gr(e),()=>"The f passed in variableGrads(f) must be a function"),O(t==null||Array.isArray(t)&&t.every(c=>c instanceof od),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in L.registeredVariables)t.push(L.registeredVariables[c])}let s=n?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),O(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:i,grads:o}=L.gradients(e,t,null,a);O(o.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return t.forEach((c,l)=>{o[l]!=null&&(u[c.name]=o[l])}),s!=null&&s.forEach(c=>u[c.name]=null),{value:i,grads:u}}function qs(e){return L.customGrad(e)}function op(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function vR(e){let n={x:E(e,"x","neg")};return L.runKernel(xo,n)}var It=B({neg_:vR});function xR(e){let n={x:E(e,"x","softplus")};return L.runKernel(Nl,n)}var Ol=B({softplus_:xR});function wR(e){let t=E(e,"x","logSigmoid");return qs(s=>({value:It(Ol(It(s))),gradFunc:i=>V(i,Hs(It(s)))}))(t)}var vde=B({logSigmoid_:wR});function kR(e,t=null,n=!1){let r={x:E(e,"x","max")},a={reductionIndices:t,keepDims:n};return L.runKernel(Wa,r,a)}var $s=B({max_:kR});function IR(e,t){let n=E(e,"a","sub"),s=E(t,"b","sub");[n,s]=vt(n,s);let r={a:n,b:s};return L.runKernel(li,r)}var be=B({sub_:IR});function SR(e,t=null,n=!1){let s=E(e,"x","sum");s.dtype==="bool"&&(s=pe(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return L.runKernel(ii,r,a)}var ve=B({sum_:SR});function CR(e,t=-1){let n=E(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return qs((r,a)=>{let o=$s(r,t,!0),u=be(r,o),c=be(pe(u,"float32"),Zn(ve(Qn(u),t,!0)));return a([c]),{value:c,gradFunc:(d,p)=>{let[h]=p,f=!0,m=Qn(h);return be(d,V(ve(d,t,f),m))}}})(n)}var Rk=B({logSoftmax_:CR});function Pg(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Dk(e,t,n){let s=e.length+t.length,r=[],a=0,i=0;for(let o=0;o<s;o++)n.indexOf(o)===-1?r.push(e[a++]):r.push(t[i++]);return r}function Fk(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function ca(e,t){let n=t.map(s=>1);return Dk(e,n,t)}function NR(e,t,n){O(Pg(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Ok(e,t){if(Pg(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function zg(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function TR(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function $R(e,t=null,n=!1){let s=E(e,"x","logSumExp"),r=ss(t,s.shape),a=$s(s,r,!0),i=be(s,a),o=Qn(i),u=ve(o,r),c=Zn(u),l=oe(G(a,c.shape),c);if(n){let d=ca(l.shape,r);return G(l,d)}return l}var AR=B({logSumExp_:$R});function ER(e,t){let n=E(e,"a","logicalAnd","bool"),s=E(t,"b","logicalAnd","bool");ot(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(vo,r)}var _s=B({logicalAnd_:ER});function _R(e){let n={x:E(e,"x","logicalNot","bool")};return L.runKernel(yl,n)}var Mg=B({logicalNot_:_R});function RR(e,t){let n=E(e,"a","logicalOr","bool"),s=E(t,"b","logicalOr","bool");ot(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(Gd,r)}var Pk=B({logicalOr_:RR});function DR(e,t){let n=E(e,"a","logicalXor","bool"),s=E(t,"b","logicalXor","bool");return ot(n.shape,s.shape),_s(Pk(e,t),Mg(_s(e,t)))}var xde=B({logicalXor_:DR});function FR(e,t,n,s,r){let a=E(e,"x","maxPool"),i=1,o=a,u=!1;a.rank===3&&(u=!0,o=G(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),O(Fs(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),un("maxPool",s,r);let c={x:o},l={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=L.runKernel(Ga,c,l);return u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Lg=B({maxPool_:FR});function OR(e,t=[1,1,1],n,s,r,a="NDHWC"){let i=E(e,"x","maxPool3d"),o=i,u=!1;i.rank===4&&(u=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),O(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),un("maxPool3d",s,r);let c={x:o},l={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=L.runKernel(qd,c,l);return u?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var zk=B({maxPool3d_:OR});function PR(e,t,n,s,r=!1){let i={x:E(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},u=L.runKernel(lg,i,o);return{result:u[0],indexes:u[1]}}var zR=B({maxPoolWithArgmax_:PR});function MR(e,t){let n=E(e,"a","maximum"),s=E(t,"b","maximum");[n,s]=vt(n,s),n.dtype==="bool"&&(n=pe(n,"int32"),s=pe(s,"int32")),ot(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(Ua,r)}var Er=B({maximum_:MR});function LR(e,t=null,n=!1){let r={x:E(e,"x","mean")},a={axis:t,keepDims:n};return L.runKernel(Ha,r,a)}var St=B({mean_:LR});function Tt(e,t="float32"){if(t==="complex64"){let s=Tt(e,"float32"),r=Tt(e,"float32");return ia(s,r)}let n=Pd(pt(e),t);return L.makeTensor(n,e,t)}function Mn(e,t="float32"){if(t==="complex64"){let s=Mn(e,"float32"),r=Tt(e,"float32");return ia(s,r)}let n=Vm(pt(e),t);return L.makeTensor(n,e,t)}function wde(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=E(e,"x","meshgrid",e instanceof tt?e.dtype:"float32");if(t===void 0)return[s];let r=E(t,"y","meshgrid",t instanceof tt?t.dtype:"float32"),a=pt(s.shape),i=pt(r.shape);return n==="xy"?(s=G(s,[1,-1]),r=G(r,[-1,1]),[Me(Mn([i,1],s.dtype),s),Me(r,Mn([1,a],r.dtype))]):(s=G(s,[-1,1]),r=G(r,[1,-1]),[Me(s,Mn([1,i],s.dtype)),Me(Mn([a,1],r.dtype),r)])}function BR(e,t=null,n=!1){let r={x:E(e,"x","min")},a={axis:t,keepDims:n};return L.runKernel(qa,r,a)}var em=B({min_:BR});function VR(e,t){let n=E(e,"a","minimum"),s=E(t,"b","minimum");[n,s]=vt(n,s),n.dtype==="bool"&&(n=pe(n,"int32"),s=pe(s,"int32")),ot(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(ja,r)}var up=B({minimum_:VR});function WR(e,t,n){O(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=E(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let o=0;o<s.rank;o++)O(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),O(t[o][0]>=0&&t[o][0]<=s.shape[o]-r&&t[o][1]>=0&&t[o][1]<=s.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},i={x:s};return L.runKernel(Ka,i,a)}var UR=B({mirrorPad_:WR});function GR(e,t){let n=E(e,"a","mod"),s=E(t,"b","mod");[n,s]=vt(n,s);let r={a:n,b:s};return L.runKernel(vl,r)}var HR=B({mod_:GR});function qR(e){let t=E(e,"x","square"),n={};return L.runKernel("Square",{x:t},n)}var ct=B({square_:qR});function jR(e,t=null,n=!1){e=E(e,"x","moments");let s=ss(t,e.shape),r=St(e,s,n),a=r.shape;n||(a=ca(r.shape,s));let i=ct(be(pe(e,"float32"),G(r,a))),o=St(i,s,n);return{mean:r,variance:o}}var Bg=B({moments_:jR});function KR(e,t,n,s){let r=E(t,"data","multiRNNCell"),a=Uu(n,"c","multiRNNCell"),i=Uu(s,"h","multiRNNCell"),o=r,u=[];for(let d=0;d<e.length;d++){let p=e[d](o,a[d],i[d]);u.push(p[0]),u.push(p[1]),o=p[1]}let c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}var kde=B({multiRNNCell_:KR});function XR(e,t,n,s=!1){let r=E(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let u={logits:i===1?G(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:s},l=L.runKernel(cg,u,c);return i===1?G(l,[l.size]):l}var YR=B({multinomial_:XR});function QR(e,t){let n=E(e,"a","notEqual","string_or_numeric"),s=E(t,"b","notEqual","string_or_numeric");[n,s]=vt(n,s),ot(n.shape,s.shape);let r={a:n,b:s};return L.runKernel(wo,r)}var Ku=B({notEqual_:QR});function ZR(e){let n={x:E(e,"x","onesLike")};return L.runKernel(So,n)}var Jn=B({onesLike_:ZR});function JR(e,t){let n=E(e,"v1","outerProduct"),s=E(t,"v2","outerProduct");O(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=G(n,[-1,1]),a=G(s,[1,-1]);return Me(r,a)}var Ide=B({outerProduct_:JR});function eD(e,t,n=0){let s=E(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return L.runKernel(Ya,a,r)}var hi=B({pad_:eD});function tD(e,t,n=0){return O(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),hi(e,[t],n)}var Sde=B({pad1d_:tD});function nD(e,t,n=0){return O(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),hi(e,t,n)}var Cde=B({pad2d_:nD});function sD(e,t,n=0){return O(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),hi(e,t,n)}var Nde=B({pad3d_:sD});function rD(e,t,n=0){return O(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),hi(e,t,n)}var Tde=B({pad4d_:rD});function aD(e,t,n){let s=E(e,"x","spaceToBatchND");O(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),O(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),O(s.shape.reduce((i,o,u)=>u>0&&u<=t.length?i&&(o+n[u-1][0]+n[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return L.runKernel(Oo,r,a)}var Vg=B({spaceToBatchND_:aD});function iD(e,t,n,s,r,a,i){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let o=E(e,"x","maxPool"),u=o,c=!1;o.rank===3&&(c=!0,u=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(Fs(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let l=vk(u.shape,t,a,r,s),d=[l.dilationHeight,l.dilationWidth],p;s==="same"?p=uD([l.filterHeight,l.filterWidth],d):p=[[0,0],[0,0]];let h=d[0]===1&&d[1]===1,[f,m]=oD([l.inHeight,l.inWidth],d,p),g=h?s:"valid",b=h?u:Vg(u,d,f),v=(n==="avg"?()=>Ag(b,t,a,g,i):()=>Lg(b,t,a,g,i))(),x=h?v:Eg(v,d,m);return c?G(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function oD(e,t,n){let s=n.map(l=>l[0]),r=n.map(l=>l[1]),a=e.concat(s,r),i=t.map((l,d)=>(l-a[d]%l)%l),o=r.map((l,d)=>l+i[d]),u=t.map((l,d)=>[s[d],o[d]]),c=t.map((l,d)=>[0,i[d]]);return[u,c]}function uD(e,t){let s=e.map((i,o)=>i+(i-1)*(t[o]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),a=s.map((i,o)=>i-r[o]);return s.map((i,o)=>[r[o],a[o]])}var $de=B({pool_:iD});function lD(e,t){let n=E(e,"base","pow"),s=E(t,"exp","pow");[n,s]=vt(n,s);let r={a:n,b:s};return L.runKernel(Qa,r)}var da=B({pow_:lD});function cD(e,t){let n=E(e,"x","prelu"),s=E(t,"alpha","prelu"),r={x:n,alpha:s};return L.runKernel(Za,r)}var Wg=B({prelu_:cD});function dD(e,t=null,n=!1){let s=E(e,"x","prod");s.dtype==="bool"&&(s=pe(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return L.runKernel(To,r,a)}var Mk=B({prod_:dD});function pD(e,t,n){let s=pt(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return L.makeTensor(r,e,n)}var Ade=B({rand_:pD}),Ug=va(Dd()),Gg=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=Ug.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},hD=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=Ug.alea(r.toString()),this.randn=new Gg(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},fD=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ug.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function mD(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new hD(t,n,s,r),i=_e(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var Ede=B({randomGamma_:mD});function gD(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new Gg(t,n,s,!1,r),i=_e(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var bD=B({randomNormal_:gD});function yD(e,t=0,n=1,s="float32",r){let a=_e(e,s),i=new fD(t,n,null,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}var Pl=B({randomUniform_:yD});function Xu(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return L.runKernel(wl,{},r)}function vD(e){let n={input:E(e,"input","real")};return L.runKernel(jd,n)}var pd=B({real_:vD});function xD(e){let n={x:E(e,"x","reciprocal")};return L.runKernel(kl,n)}var wD=B({reciprocal_:xD});function kD(e){let n={x:E(e,"x","relu")};return L.runKernel(Ja,n)}var Ks=B({relu_:kD});function ID(e){let n={x:E(e,"x","relu6")};return L.runKernel(ti,n)}var Lk=B({relu6_:ID});function SD(e,t){let s={x:E(e,"x","reverse")},r={dims:t};return L.runKernel(Ao,s,r)}var es=B({reverse_:SD});function CD(e){let t=E(e,"x","reverse");return O(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),es(t,0)}var _de=B({reverse1d_:CD});function ND(e,t){let n=E(e,"x","reverse");return O(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),es(n,t)}var Rde=B({reverse2d_:ND});function TD(e,t){let n=E(e,"x","reverse");return O(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),es(n,t)}var Dde=B({reverse3d_:TD});function $D(e,t){let n=E(e,"x","reverse");return O(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),es(n,t)}var Fde=B({reverse4d_:$D});function AD(e){let n={x:E(e,"x","round")};return L.runKernel(Eo,n)}var Bk=B({round_:AD});function ED(e){let n={x:E(e,"x","rsqrt","float32")};return L.runKernel(ni,n)}var Vk=B({rsqrt_:ED});function Ce(e,t){if((Zt(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Zt(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return $r(e,[],[],t)}function _D(e){let n={x:E(e,"x","selu")};return L.runKernel(Sl,n)}var Wk=B({selu_:_D});function RD(e,t,n,s,r,a=[1,1],i="NHWC"){let o=E(e,"x","separableConv2d"),u=E(t,"depthwiseFilter","separableConv2d"),c=E(n,"pointwiseFilter","separableConv2d"),l=o,d=!1;if(o.rank===3&&(d=!0,l=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),O(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),O(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),O(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let p=u.shape[2],h=u.shape[3];O(c.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`);let f=rp(l,u,s,r,i,a),g=la(f,c,1,"valid",i);return d?G(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var DD=B({separableConv2d_:RD});async function FD(e,t){let n=E(e,"x","setdiff1d"),s=E(t,"y","setdiff1d");O(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),O(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),O(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),i=new Set(a),o=0;for(let l=0;l<r.length;l++)i.has(r[l])||o++;let u=new Vt([o],n.dtype),c=new Vt([o],"int32");for(let l=0,d=0;l<r.length;l++)i.has(r[l])||(u.values[d]=r[l],c.values[d]=l,d++);return[u.toTensor(),c.toTensor()]}var OD=FD;function PD(e){let n={x:E(e,"x","sign")};return L.runKernel(Cl,n)}var zD=B({sign_:PD});function MD(e){let n={x:E(e,"x","sin","float32")};return L.runKernel(si,n)}var Uk=B({sin_:MD});function LD(e){let n={x:E(e,"x","sinh")};return L.runKernel(Fo,n)}var Gk=B({sinh_:LD});function BD(e,t,n){let s=E(e,"x","slice1d");return O(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),He(s,[t],[n])}var Hg=B({slice1d_:BD});function VD(e,t,n){let s=E(e,"x","slice2d");return O(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),He(s,t,n)}var Hk=B({slice2d_:VD});function WD(e,t,n){let s=E(e,"x","slice3d");return O(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),He(s,t,n)}var qg=B({slice3d_:WD});function UD(e,t,n){let s=E(e,"x","slice4d");return O(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),He(s,t,n)}var hd=B({slice4d_:UD});function GD(e,t=-1){let n=E(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return L.runKernel(oi,s,r)}var jg=B({softmax_:GD});function HD(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return L.runKernel(sg,t)}var Kg=B({fft_:HD});function qD(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return L.runKernel(rg,t)}var fd=B({ifft_:qD});function jD(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=G(e,[n,t]);s=fd(r)}else{let r=[n,2*(t-1)],a=G(pd(e),[n,t]),i=G(Dg(e),[n,t]),o=es(He(a,[0,1],[n,t-2]),1),u=V(es(He(i,[0,1],[n,t-2]),1),Ce(-1)),c=Dt([a,o],1),l=Dt([i,u],1),d=G(ia(c,l),[r[0],r[1]]);s=fd(d)}if(s=pd(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=G(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var qk=B({irfft_:jD});function KD(e,t,n=0){let r={x:E(e,"x","split")},a={numOrSizeSplits:t,axis:n};return L.runKernel(Po,r,a)}var Bn=B({split_:KD});function XD(e,t){O(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=He(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=Dt([e,Tt(f)],e.shape.length-1),n=t}else r=e;let a=je(r),i=G(ia(r,a),[s,n]),o=Kg(i),u=Math.floor(n/2)+1,c=pd(o),l=Dg(o),d=Bn(c,[u,n-u],c.shape.length-1),p=Bn(l,[u,n-u],l.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=u,G(ia(d[0],p[0]),h)}var Xg=B({rfft_:XD});function YD(e){let n={x:E(e,"x","sqrt","float32")};return L.runKernel(ai,n)}var rn=B({sqrt_:YD});function QD(e,t){let n=E(e,"a","squaredDifference"),s=E(t,"b","squaredDifference");[n,s]=vt(n,s),ot(n.shape,s.shape);let r={a:n,b:s},a={};return L.runKernel(ui,r,a)}var jk=B({squaredDifference_:QD});function ZD(e,t){let n=E(e,"x","squeeze");return G(n,gw(n.shape,t).newShape)}var yr=B({squeeze_:ZD});function JD(e,t=0){let n=Uu(e,"tensors","stack","string_or_numeric");O(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&O(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return L.runKernel(No,s,r)}var ts=B({stack_:JD});function e3(e,t=0){let s={x:E(e,"x","step")},r={alpha:t};return L.runKernel(pi,s,r)}var lp=B({step_:e3});function t3(e,t,n,s,r=0,a=0,i=0,o=0,u=0){let l={x:E(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return L.runKernel(zo,l,d)}var n3=B({stridedSlice_:t3});function s3(e){let n={x:E(e,"x","tan","float32")};return L.runKernel(Mo,n)}var r3=B({tan_:s3});function Jt(e,t){xa(e);let n=Es(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return $r(e,null,n,t)}function Hi(e,t,n){if(xa(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Es(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return $r(e,t,s,n)}function Ode(e,t,n){if(xa(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Es(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return $r(e,t,s,n)}function Pde(e,t,n){if(xa(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Es(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return $r(e,t,s,n)}function zde(e,t,n){if(xa(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Es(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,$r(e,t,s,n)}function a3(e,t=1,n=!0){let s=E(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},i={k:t,sorted:n},[o,u]=L.runKernel(Lo,a,i);return{values:o,indices:u}}var i3=B({topk_:a3});function o3(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new Gg(t,n,s,!0,r),i=_e(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var Yg=B({truncatedNormal_:o3});function u3(e,t=0){let n=E(e,"x","unique","string_or_numeric");O(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,i]=L.runKernel(mg,s,r);return{values:a,indices:i}}var Uv=B({unique_:u3});function l3(e,t,n){let s=E(e,"x","unsortedSegmentSum"),r=E(t,"segmentIds","unsortedSegmentSum","int32");O(ji(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},i={numSegments:n};return L.runKernel(Jd,a,i)}var c3=B({unsortedSegmentSum_:l3});function d3(e,t=0){let n=E(e,"x","unstack","string_or_numeric");O(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return L.runKernel(Vo,s,r)}var Rs=B({unstack_:d3});function p3(e,t=!0,n,s){return L.makeVariable(e,t,n,s)}function Kk(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=_e(e,"int32"),r=_e([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let i=s.indexToLoc(n[a]),o=a*e.length;r.values.set(i,o)}return r.toTensor()}async function h3(e){let t=E(e,"condition","whereAsync","bool"),n=await t.data(),s=Kk(t.shape,n);return e!==t&&t.dispose(),s}var Xk=h3;async function f3(e,t,n){let s=E(e,"tensor","boolMask"),r=E(t,"mask","boolMask","bool"),a=n==null?0:n,i=r.rank,o=s.shape;O(i>0,()=>"mask cannot be scalar"),on(o.slice(a,a+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=a;m<a+i;m++)u*=o[m];let c=o.slice(0,a).concat([u],o.slice(a+i)),l=G(s,c),d=G(r,[-1]),p=await Xk(d),h=yr(p,[1]),f=ju(l,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),l.dispose(),d.dispose(),p.dispose(),f}var Mde=f3;function m3(e,t="euclidean",n=null,s=!1){e=E(e,"x","norm");let r=Yk(e,t,n),a=r.shape;if(s){let i=ss(n,e.shape);a=ca(r.shape,i)}return G(r,a)}function Yk(e,t,n=null){if(e.rank===0)return Mt(e);if(e.rank!==1&&n===null)return Yk(G(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ve(Mt(e),n);if(t===1/0)return $s(Mt(e),n);if(t===-1/0)return em(Mt(e),n);if(t==="euclidean"||t===2)return rn(ve(da(Mt(e),Ce(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return $s(ve(Mt(e),n[0]),n[1]-1);if(t===1/0)return $s(ve(Mt(e),n[1]),n[0]);if(t===-1/0)return em(ve(Mt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return rn(ve(ct(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Qk=B({norm_:m3});function g3(e,t,n,s,r=!0){let a=E(e,"v","movingAverage"),i=E(t,"x","movingAverage"),o=E(n,"decay","movingAverage");Fw(a,i),O(Sr(a.shape,i.shape),()=>"Shape mismatch in v and x");let u=Ce(1),c=be(u,o),l=V(be(i,a),c);if(r){O(s!=null,()=>"When using zeroDebias: true, step is required.");let d=E(s,"step","movingAverage");l=Se(l,be(u,da(o,d)))}return oe(a,l)}var Lde=B({movingAverage_:g3});function b3(e,t,n){let s=E(e,"indices","scatterND","int32"),r=E(t,"updates","scatterND");Cg(r,s,n);let a={indices:s,updates:r},i={shape:n};return L.runKernel(_o,a,i)}var y3=B({scatterND_:b3});function v3(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function x3(e,t,n,s=0){let r=E(e,"sparseIndices","sparseToDense","int32"),a=E(t,"sparseValues","sparseToDense"),i=E(s,"defaultValue","sparseToDense",a.dtype);v3(r,a,n,i);let o={sparseIndices:r,sparseValues:a,defaultValue:i},u={outputShape:n};return L.runKernel(Qd,o,u)}var Zk=B({sparseToDense_:x3});function w3(e,t){let n=E(t,"indices","gatherND","int32"),r={params:E(e,"x","gatherND","string_or_numeric"),indices:n};return L.runKernel(mo,r)}var k3=B({gatherND_:w3});function I3(e,t){if(t==null)return e.shape.slice();if(Sr(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function S3(e,t,n,s){let r=E(e,"x","dropout");if(O(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),O(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof tt?r.clone():r;let a=I3(r,n),i=1-t,o=Se(ip(oe(Pl(a,0,1,"float32",s),i)),i);return V(r,o)}var C3=B({dropout_:S3});function N3(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Jk(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return Jt(r,"float32")}async function T3(e,t,n=1){let s=E(e,"predictions","inTopK"),r=E(t,"targets","inTopK");O(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),O(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),on(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];O(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let i=await s.data(),o=await r.data(),[u,c]=[i.length/a,a],l=bw("bool",u);for(let d=0;d<u;d++){let p=d*c,h=i.subarray(p,p+c),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),l[d]=0;for(let m=0;m<n;m++)if(f[m].index===o[d]){l[d]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),ds(l,r.shape,"bool")}var Bde=T3,pa={};Ae(pa,{conv2d:()=>E3,depthwiseConv2d:()=>F3,matMul:()=>P3});function $3(e,t,n,s,r,a="NHWC",i){let o=e;e.rank===3&&(o=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=G(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),O(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),O(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=a==="NHWC"?o.shape[3]:o.shape[1],l=a==="NHWC"?u.shape[3]:u.shape[1];O(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),O(l===n[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`),un("conv2dDerFilter",r,i);let d={x:o,dy:u},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return L.runKernel(Xm,d,p)}var Qg=B({conv2DBackpropFilter_:$3});function cp(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return V(e,lp(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function dp(e,t){let n=t,s=$t(e.shape,t.shape);return s.length>0&&(n=ve(n,s)),G(n,e.shape)}function pp(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Ks(e);if(t==="elu")return ap(e);if(t==="relu6")return Lk(e);if(t==="prelu")return Wg(e,n);if(t==="leakyrelu")return Fg(e,s);if(t==="sigmoid")return Hs(e);throw new Error(`Unknown fused activation ${t}.`)}var hp=(e,t)=>!(e>0)||t==="linear";function A3({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",hp(L.state.gradientDepth,u)===!1){let k=la(e,t,n,s,r,a,i);return o!=null&&(k=oe(k,o)),pp(k,u,c,l)}let d=E(e,"x","conv2d","float32"),p=E(t,"filter","conv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=G(d,[1,d.shape[0],d.shape[1],d.shape[2]])),O(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),O(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),un("fused conv2d",s,i),O(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),O(Fs(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),O(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=Dl(h.shape,p.shape,n,a,s,i),g;o!=null&&(g=E(o,"bias","fused conv2d"),[g]=vt(g,d),ot(m.outShape,g.shape));let b;c!=null&&(b=E(c,"prelu weights","fused conv2d"));let y=(k,T)=>{let[C,R,_,P]=T,D=cp(k,_,u);O(br(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let F=_g(R.shape,D,C,n,s),$=Qg(R,D,C.shape,n,s),z=[F,$];if(P!=null){let W=dp(P,D);z.push(W)}return z},v={x:h,filter:p,bias:g,preluActivationWeights:b},x={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return o==null?qs((T,C,R)=>{let _=L.runKernel(ra,v,x);return R([C,T,_]),f&&(_=G(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:y}})(h,p):qs((T,C,R,_)=>{let P=L.runKernel(ra,v,x);return _([C,T,P,R]),f&&(P=G(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:y}})(h,p,g)}var E3=B({fusedConv2d_:A3});function _3(e,t,n,s,r,a=[1,1],i){let o=e;e.rank===3&&(o=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:o,dy:u},l={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return L.runKernel(Jm,c,l)}var eI=B({depthwiseConv2dNativeBackpropFilter_:_3});function R3(e,t,n,s,r,a=[1,1],i){let o=t,u=!1;t.rank===3&&(u=!0,o=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:o,filter:n},l={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},d=L.runKernel(eg,c,l);return u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var tI=B({depthwiseConv2dNativeBackpropInput_:R3});function D3({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(hp(L.state.gradientDepth,u)===!1){let k=rp(e,t,n,s,r,a,i);return o!=null&&(k=oe(k,o)),pp(k,u,c,l)}let d=E(e,"x","depthwiseConv2d","float32"),p=E(t,"filter","depthwiseConv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=G(d,[1,d.shape[0],d.shape[1],d.shape[2]])),O(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),O(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),O(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),O(Fs(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),un("fused depthwiseConv2d",s,i);let m=Dl(h.shape,p.shape,n,a,s,i,!0),g;o!=null&&(g=E(o,"bias","fused conv2d"),[g]=vt(g,d),ot(m.outShape,g.shape));let b;c!=null&&(b=E(c,"prelu weights","fused depthwiseConv2d"));let y=(k,T)=>{O(br(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[C,R,_,P]=T,D=cp(k,_,u),F=tI(R.shape,D,C,n,s,a,i),$=eI(R,D,C.shape,n,s,a,i);if(P!=null){let z=dp(g,D);return[F,$,z]}return[F,$]},v={x:h,filter:p,bias:g,preluActivationWeights:b},x={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return o==null?qs((T,C,R)=>{let _=L.runKernel(aa,v,x);return R([C,T,_]),f&&(_=G(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:y}})(h,p):qs((T,C,R,_)=>{let P=L.runKernel(aa,v,x);return _([C,T,P,R]),f&&(P=G(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:y}})(h,p,g)}var F3=B({fusedDepthwiseConv2d_:D3});function O3({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(hp(L.state.gradientDepth,a)===!1){let D=Me(e,t,n,s);return r!=null&&(D=oe(D,r)),pp(D,a,i,o)}let u=E(e,"a","fused matMul"),c=E(t,"b","fused matMul");[u,c]=vt(u,c);let l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=pt(f),b=pt(m);O(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`);let v=ot(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,h]),x=n?G(u,[g,l,p]):G(u,[g,p,l]),k=s?G(c,[b,h,d]):G(c,[b,d,h]),T;r!=null&&(T=E(r,"bias","fused matMul"),[T]=vt(T,u),ot(v,T.shape));let C;i!=null&&(C=E(i,"prelu weights","fused matMul"));let R=(D,F)=>{let[$,z,W,q]=F,K=cp(G(D,W.shape),W,a),j,Q;if(!n&&!s?(j=Me(K,z,!1,!0),Q=Me($,K,!0,!1)):!n&&s?(j=Me(K,z,!1,!1),Q=Me(K,$,!0,!1)):n&&!s?(j=Me(z,K,!1,!0),Q=Me($,K,!1,!1)):(j=Me(z,K,!0,!0),Q=Me(K,$,!0,!0)),r!=null){let J=dp(q,K);return[j,Q,J]}else return[j,Q]},_={a:x,b:k,bias:T,preluActivationWeights:C},P={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};return r==null?qs((F,$,z)=>{let W=L.runKernel(sa,_,P);return z([F,$,W]),{value:G(W,v),gradFunc:R}})(x,k):qs((F,$,z,W)=>{let q=L.runKernel(sa,_,P);return W([F,$,q,z]),{value:G(q,v),gradFunc:R}})(x,k,T)}var P3=B({fusedMatMul_:O3});function z3(e){return Jk(e,.54,.46)}var M3=B({hammingWindow_:z3});function L3(e){return Jk(e,.5,.5)}var nI=B({hannWindow_:L3});function B3(e,t,n,s=!1,r=0){let a=0,i=[];for(;a+t<=e.size;)i.push(He(e,a,t)),a+=n;if(s)for(;a<e.size;){let o=a+t-e.size,u=Dt([He(e,a,t-o),Fl([o],r)]);i.push(u),a+=n}return i.length===0?Hi([],[0,t]):G(Dt(i),[i.length,t])}var sI=B({frame_:B3});function V3(e,t,n,s,r=nI){s==null&&(s=N3(t));let a=sI(e,t,n),i=V(a,r(t));return Xg(i,s)}var W3=B({stft_:V3});function U3(e,t,n,s,r="bilinear",a=0){let i=E(e,"image","cropAndResize"),o=E(t,"boxes","cropAndResize","float32"),u=E(n,"boxInd","cropAndResize","int32"),c=o.shape[0];O(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),O(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),O(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),O(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),O(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),O(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let l={image:i,boxes:o,boxInd:u},d={method:r,extrapolationValue:a,cropSize:s};return L.runKernel(oo,l,d)}var G3=B({cropAndResize_:U3});function H3(e){let t=E(e,"image","flipLeftRight","float32");O(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return L.runKernel(ho,n,{})}var q3=B({flipLeftRight_:H3});function j3(e){let t=E(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];O(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,us(t,r)}var K3=B({grayscaleToRGB_:j3});function X3(e,t,n=0,s=.5){let r=E(e,"image","rotateWithOffset","float32");O(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},i={radians:t,fillValue:n,center:s};return L.runKernel(Uo,a,i)}var Y3=B({rotateWithOffset_:X3});function jo(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let i=e.shape[0];return n=Math.min(n,i),O(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),O(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),O(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),O(t.rank===1,()=>"scores must be a 1D tensor"),O(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),O(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function Q3(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=E(e,"boxes","nonMaxSuppression","float32"),i=E(t,"scores","nonMaxSuppression","float32"),o=jo(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;let u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return L.runKernel(ko,{boxes:a,scores:i},u)}var Z3=B({nonMaxSuppression_:Q3});function J3(e,t,n){let s=eF(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function eF(e,t,n){return nF(e,t,n||tF)}function tF(e,t){return e>t?1:e<t?-1:0}function nF(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);let o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}function rI(e,t,n,s,r){return Zg(e,t,n,s,r,0)}function aI(e,t,n,s,r,a){return Zg(e,t,n,s,r,0,!1,a,!0)}function iI(e,t,n,s,r,a){return Zg(e,t,n,s,r,a,!0)}function Zg(e,t,n,s,r,a,i=!1,o=!1,u=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Gv);let l=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&c.length>0;){let g=c.pop(),{score:b,boxIndex:y,suppressBeginIndex:v}=g;if(b<r)break;let x=!1;for(let k=d.length-1;k>=v;--k){let T=sF(e,y,d[k]);if(T>=s){x=!0;break}if(g.score=g.score*rF(s,l,T),g.score<=r)break}g.suppressBeginIndex=d.length,x||(g.score===b?(d.push(y),p.push(g.score)):g.score>r&&J3(c,g,Gv))}let h=d.length,f=n-h;o&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:d};return i&&(m.selectedScores=p),u&&(m.validOutputs=h),m}function sF(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(o-a)*(u-i),f=(d-c)*(p-l);if(h<=0||f<=0)return 0;let m=Math.max(a,c),g=Math.max(i,l),b=Math.min(o,d),y=Math.min(u,p),v=Math.max(b-m,0)*Math.max(y-g,0);return v/(h+f-v)}function rF(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function Gv(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function aF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=E(e,"boxes","nonMaxSuppressionAsync"),i=E(t,"scores","nonMaxSuppressionAsync"),o=jo(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;let u=await Promise.all([a.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:d}=rI(c,l,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),Jt(d,"int32")}var iF=aF;function oF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let i=E(e,"boxes","nonMaxSuppression"),o=E(t,"scores","nonMaxSuppression"),u=jo(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;let c={boxes:i,scores:o},l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},d=L.runKernel(Io,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}var uF=B({nonMaxSuppressionWithScore_:oF});async function lF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let i=E(e,"boxes","nonMaxSuppressionAsync"),o=E(t,"scores","nonMaxSuppressionAsync"),u=jo(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;let c=await Promise.all([i.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=iI(l,d,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Jt(p,"int32"),selectedScores:Jt(h)}}var cF=lF;function dF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let i=E(e,"boxes","nonMaxSuppression"),o=E(t,"scores","nonMaxSuppression"),u=jo(i,o,n,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,p={boxes:i,scores:o},h={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:a},f=L.runKernel(xl,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}var pF=B({nonMaxSuppressionPadded_:dF});async function hF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let i=E(e,"boxes","nonMaxSuppressionAsync"),o=E(t,"scores","nonMaxSuppressionAsync"),u=jo(i,o,n,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=aI(p,h,c,l,d,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Jt(f,"int32"),validOutputs:Ce(m,"int32")}}var fF=hF;function mF(e,t,n=!1,s=!1){let r=E(e,"images","resizeBilinear");O(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,i=!1;r.rank===3&&(i=!0,a=G(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},c=L.runKernel(ei,o,u);return i?G(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var gF=B({resizeBilinear_:mF});function bF(e,t,n=!1,s=!1){let r=E(e,"images","resizeNearestNeighbor");O(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),O(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,i=!1;r.rank===3&&(i=!0,a=G(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},c=L.runKernel(Il,o,u);return i?G(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var yF=B({resizeNearestNeighbor_:bF});function vF(e,t="binary",n=!1,s=.5){let r=E(e,"image","threshold"),a=.2989,i=.587,o=.114,u=r.shape[0]*r.shape[1],c=V(Jt([s]),255),l,d,p,h;if(O(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),O(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),O(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),O(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[l,d,p]=Bn(r,[1,1,1],-1);let g=V(l,a),b=V(d,i),y=V(p,o);h=oe(oe(g,b),y)}else h=e;if(t==="otsu"){let g=Ik(pe(Bk(h),"int32"),ds([]),256);c=xF(g,u)}let f=n?qo(h,c):Un(h,c);return pe(V(f,255),"int32")}function xF(e,t){let n=Jt([-1]),s=Jt([0]),r=Jt([0]),a,i,o,u,c,l;for(let d=0;d<e.size-1;d++){a=He(e,0,d+1),i=He(e,d+1),c=Se(ve(a),t),l=Se(ve(i),t);let p=ve(V(a,Xu(0,a.size)));o=Se(p,ve(a));let h=Fl(i.shape,a.size),f=oe(Xu(0,i.size),h),m=V(i,f);u=Se(ve(m),ve(i));let g=be(o,u),b=be(o,u),y=V(c,l);r=V(V(y,g),b);let v=Un(r,s);s=xn(v,r,s),n=xn(v,Jt([d]),n)}return n}var wF=B({threshold_:vF});function kF(e,t,n="nearest",s="constant",r=0,a){let i=E(e,"image","transform","float32"),o=E(t,"transforms","transform","float32");O(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),O(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let u={image:i,transforms:o},c={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return L.runKernel(Bo,u,c)}var IF=B({transform_:kF});function SF(e,t,n){O(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=E(e,"a","bandPart");O(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);let o=G(Xu(0,a,1,"int32"),[-1,1]),u=Xu(0,i,1,"int32"),c=be(o,u),l=_s(qo(c,Ce(+t,"int32")),Ho(c,Ce(-n,"int32"))),d=Tt([a,i],s.dtype);return G(ts(Rs(G(s,[-1,a,i])).map(p=>xn(l,p,d))),r)}var CF=B({bandPart_:SF});function NF(e){let t;if(Array.isArray(e)){t=!1,O(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)O(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=Bn(e,e.shape[0],0).map(r=>yr(r,[0]));O(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(L.tidy(()=>{let a=s[r];if(r>0)for(let i=0;i<r;++i){let o=V(ve(V(n[i],a)),n[i]);a=be(a,o)}return Se(a,Qk(a,"euclidean"))}));return t?ts(n,0):n}var TF=B({gramSchmidt_:NF});function $F(e,t=!1){if(O(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return Hv(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((u,c)=>u*c),s=Rs(G(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(u=>{let[c,l]=Hv(u,t);r.push(c),a.push(l)});let i=G(ts(r,0),e.shape),o=G(ts(a,0),e.shape);return[i,o]}}function Hv(e,t=!1){return L.tidy(()=>{O(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=Ek(n),a=pr(e),i=Hi([[1]],[1,1]),o=pr(i),u=n>=s?s:n;for(let c=0;c<u;++c){let l=a,d=o,p=r;[o,a,r]=L.tidy(()=>{let h=He(a,[c,c],[n-c,1]),f=Qk(h),m=He(a,[c,c],[1,1]),g=xn(Un(m,0),Hi([[-1]]),Hi([[1]])),b=be(m,V(g,f)),y=Se(h,b);y.shape[0]===1?o=pr(i):o=Dt([i,He(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let v=It(Se(Me(g,b),f)),x=He(a,[c,0],[n-c,s]),k=V(v,o),T=qe(o);if(c===0)a=be(x,Me(k,Me(T,x)));else{let _=be(x,Me(k,Me(T,x)));a=Dt([He(a,[0,0],[c,s]),_],0)}let C=qe(k),R=He(r,[0,c],[n,r.shape[1]-c]);if(c===0)r=be(R,Me(Me(R,o),C));else{let _=be(R,Me(Me(R,o),C));r=Dt([He(r,[0,0],[n,c]),_],1)}return[o,a,r]}),Ee([l,d,p])}return!t&&n>s&&(r=He(r,[0,0],[n,s]),a=He(a,[0,0],[s,s])),[r,a]})}var AF=B({qr_:$F}),EF=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(EF||{});function _F(e,t,n=3){let s=E(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=E(t,"weights","computeWeightedLoss"));let a=r==null?s:V(s,r);if(n===0)return a;if(n===2)return ve(a);if(n===1){if(r==null)return St(a);{let i=s.size/r.size,o=Se(ve(a),ve(r));return i>1?Se(o,Ce(i)):o}}if(n===3){if(r==null)return Se(ve(a),Ce(s.size));{let i=V(r,Mn(s.shape)),o=pe(ve(Ku(i,Ce(0))),"float32");return Se(ve(a),o)}}throw Error(`Unknown reduction: ${n}`)}var Xs=B({computeWeightedLoss_:_F});function RF(e,t,n,s=3){let r=E(e,"labels","absoluteDifference"),a=E(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=E(n,"weights","absoluteDifference")),on(r.shape,a.shape,"Error in absoluteDifference: ");let o=Mt(be(r,a));return Xs(o,i,s)}var DF=B({absoluteDifference_:RF});function FF(e,t,n,s,r=3){let a=E(e,"labels","cosineDistance"),i=E(t,"predictions","cosineDistance"),o=null;s!=null&&(o=E(s,"weights","cosineDistance")),on(a.shape,i.shape,"Error in cosineDistance: ");let u=Ce(1),c=be(u,ve(V(a,i),n,!0));return Xs(c,o,r)}var OF=B({cosineDistance_:FF});function PF(e,t,n,s=3){let r=E(e,"labels","hingeLoss"),a=E(t,"predictions","hingeLoss"),i=null;n!=null&&(i=E(n,"weights","hingeLoss")),on(r.shape,a.shape,"Error in hingeLoss: ");let o=Ce(1);r=be(V(Ce(2),r),o);let u=Ks(be(o,V(r,a)));return Xs(u,i,s)}var zF=B({hingeLoss_:PF});function MF(e,t,n,s=1,r=3){let a=E(e,"labels","huberLoss"),i=E(t,"predictions","huberLoss"),o=null;n!=null&&(o=E(n,"weights","huberLoss")),on(a.shape,i.shape,"Error in huberLoss: ");let u=Ce(s),c=Mt(be(i,a)),l=up(c,u),d=be(c,l),p=oe(V(Ce(.5),ct(l)),V(u,d));return Xs(p,o,r)}var LF=B({huberLoss_:MF});function BF(e,t,n,s=1e-7,r=3){let a=E(e,"labels","logLoss"),i=E(t,"predictions","logLoss"),o=null;n!=null&&(o=E(n,"weights","logLoss")),on(a.shape,i.shape,"Error in logLoss: ");let u=Ce(1),c=Ce(s),l=It(V(a,Zn(oe(i,c)))),d=V(be(u,a),Zn(oe(be(u,i),c))),p=be(l,d);return Xs(p,o,r)}var VF=B({logLoss_:BF});function WF(e,t,n,s=3){let r=E(e,"labels","meanSquaredError"),a=E(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=E(n,"weights","meanSquaredError")),on(r.shape,a.shape,"Error in meanSquaredError: ");let o=jk(r,a);return Xs(o,i,s)}var UF=B({meanSquaredError_:WF});function GF(e,t){let n=E(e,"labels","sigmoidCrossEntropyWithLogits"),s=E(t,"logits","sigmoidCrossEntropyWithLogits");on(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Ks(s),a=V(s,n),i=Og(Qn(It(Mt(s))));return oe(be(r,a),i)}function HF(e,t,n,s=0,r=3){let a=E(e,"multiClassLabels","sigmoidCrossEntropy"),i=E(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=E(n,"weights","sigmoidCrossEntropy")),on(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){let c=Ce(s),l=Ce(1),d=Ce(.5);a=oe(V(a,be(l,c)),V(d,c))}let u=GF(a,i);return Xs(u,o,r)}var qF=B({sigmoidCrossEntropy_:HF});function jF(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return qs((r,a,i)=>{let u=AR(a,[n],!0),c=be(pe(a,"float32"),u);i([r,c]);let l=It(V(c,r));return{value:ve(l,[n]),gradFunc:(h,f)=>{let[m,g]=f,b=ca(h.shape,[n]);return[V(G(h,b),be(pe(m,"float32"),Qn(g))),V(G(h,b),be(Qn(g),pe(m,"float32")))]}}})(e,t)}function KF(e,t,n,s=0,r=3){let a=E(e,"onehotLabels","softmaxCrossEntropy"),i=E(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=E(n,"weights","softmaxCrossEntropy")),on(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){let c=Ce(s),l=Ce(1),d=Ce(a.shape[1]);a=oe(V(a,be(l,c)),Se(c,d))}let u=jF(a,i);return Xs(u,o,r)}var XF=B({softmaxCrossEntropy_:KF});function YF(e,t,n,s){let r=E(e,"indices","sparseFillEmptyRows","int32"),a=E(t,"values","sparseFillEmptyRows"),i=E(n,"denseShape","sparseFillEmptyRows","int32"),o=E(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let u={indices:r,values:a,denseShape:i,defaultValue:o},c=L.runKernel(Kd,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}var QF=B({sparseFillEmptyRows_:YF});function ZF(e,t,n){let s=E(e,"inputIndices","sparseReshape","int32"),r=E(t,"inputShape","sparseReshape","int32"),a=E(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let i={inputIndices:s,inputShape:r,newShape:a},o=L.runKernel(Tl,i);return{outputIndices:o[0],outputShape:o[1]}}var JF=B({sparseReshape_:ZF});function eO(e,t,n){let s=E(e,"data","sparseSegmentMean"),r=E(t,"indices","sparseSegmentMean","int32"),a=E(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let i={data:s,indices:r,segmentIds:a};return L.runKernel(Xd,i)}var tO=B({sparseSegmentMean_:eO});function nO(e,t,n){let s=E(e,"data","sparseSegmentSum"),r=E(t,"indices","sparseSegmentSum","int32"),a=E(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let i={data:s,indices:r,segmentIds:a};return L.runKernel(Yd,i)}var sO=B({sparseSegmentSum_:nO});function rO(e,t,n,s,r,a,i,o){let u=E(e,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let c=E(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},d={data:u,dataSplits:c},p=L.runKernel(Zd,d,l);return{nGrams:p[0],nGramsSplits:p[1]}}var aO=B({stringNGrams_:rO});function iO(e,t,n=!0){let s=E(e,"input","stringSplit","string"),r=E(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},i={input:s,delimiter:r},o=L.runKernel(hg,i,a);return{indices:o[0],values:o[1],shape:o[2]}}var oO=B({stringSplit_:iO});function uO(e,t){let n=E(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return L.runKernel(fg,r,s)}var lO=B({stringToHashBucketFast_:uO}),Vde={fft:Kg,ifft:fd,rfft:Xg,irfft:qk},Wde={hammingWindow:M3,hannWindow:nI,frame:sI,stft:W3},ls={flipLeftRight:q3,grayscaleToRGB:K3,resizeNearestNeighbor:yF,resizeBilinear:gF,rotateWithOffset:Y3,cropAndResize:G3,nonMaxSuppression:Z3,nonMaxSuppressionAsync:iF,nonMaxSuppressionWithScore:uF,nonMaxSuppressionWithScoreAsync:cF,nonMaxSuppressionPadded:pF,nonMaxSuppressionPaddedAsync:fF,threshold:wF,transform:IF},cO={bandPart:CF,gramSchmidt:TF,qr:AF},Ude={absoluteDifference:DF,computeWeightedLoss:Xs,cosineDistance:OF,hingeLoss:zF,huberLoss:LF,logLoss:VF,meanSquaredError:UF,sigmoidCrossEntropy:qF,softmaxCrossEntropy:XF},Dc={sparseFillEmptyRows:QF,sparseReshape:JF,sparseSegmentMean:tO,sparseSegmentSum:sO},Sf={stringNGrams:aO,stringSplit:oO,stringToHashBucketFast:lO},_r=class extends hk{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(a)}else this.applyGradients(r);return Ee(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return yR(e,t)}dispose(){this.iterations_!=null&&Ee(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(_r,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Jg=class extends _r{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=L.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:H(()=>je(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:H(()=>je(r).variable(a))});let i=Array.isArray(e)?e[s].tensor:e[n];if(i==null)return;let o=this.accumulatedGrads[s].variable,u=this.accumulatedUpdates[s].variable;H(()=>{let c=oe(V(o,this.rho),V(ct(i),1-this.rho)),l=V(Se(rn(oe(u,this.epsilon)),rn(oe(o,this.epsilon))),i),d=oe(V(u,this.rho),V(ct(l),1-this.rho));o.assign(c),u.assign(d);let p=oe(V(l,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ee(this.accumulatedGrads.map(e=>e.variable)),Ee(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Jg.className="Adadelta";Ar(Jg);var eb=class extends _r{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=L.registeredVariables[n];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:H(()=>Fl(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[s].variable;H(()=>{let o=oe(i,ct(a));i.assign(o);let u=oe(V(Se(a,rn(oe(o,L.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ee(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};eb.className="Adagrad";Ar(eb);var tb=class extends _r{constructor(e,t,n,s=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],H(()=>{this.accBeta1=Ce(t).variable(),this.accBeta2=Ce(n).variable()}),s==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);H(()=>{let n=be(1,this.accBeta1),s=be(1,this.accBeta2);t.forEach((r,a)=>{let i=L.registeredVariables[r],o=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:H(()=>je(i).variable(o))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:H(()=>je(i).variable(o))});let u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,d=oe(V(c,this.beta1),V(u,1-this.beta1)),p=oe(V(l,this.beta2),V(ct(u),1-this.beta2)),h=Se(d,n),f=Se(p,s);c.assign(d),l.assign(p);let m=oe(V(Se(h,oe(rn(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ee(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),H(()=>{this.accBeta1.assign(da(this.beta1,this.iterations_+1)),this.accBeta2.assign(da(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};tb.className="Adam";Ar(tb);var nb=class extends _r{constructor(e,t,n,s=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],H(()=>{this.iteration=Ce(0).variable(),this.accBeta1=Ce(t).variable()}),s==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);H(()=>{let n=be(1,this.accBeta1),s=Se(-this.learningRate,oe(V(this.iteration,this.decay),1));t.forEach((r,a)=>{let i=L.registeredVariables[r],o=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:je(i).variable(o)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:je(i).variable(o)});let u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,d=oe(V(c,this.beta1),V(u,1-this.beta1)),p=V(l,this.beta2),h=Mt(u),f=Er(p,h);c.assign(d),l.assign(f);let m=oe(V(Se(s,n),Se(d,oe(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(oe(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ee(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};nb.className="Adamax";Ar(nb);var fp=class extends _r{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=L.registeredVariables[n];H(()=>{let i=oe(V(this.c,r),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=jt(Ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};fp.className="SGD";Ar(fp);var sb=class extends fp{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=L.registeredVariables[n];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${n}/momentum`,variable:H(()=>je(r).variable(!1))});let a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[n];i!=null&&H(()=>{let o,u=oe(V(this.m,a),i);this.useNesterov?o=oe(V(this.c,oe(i,V(u,this.m))),r):o=oe(V(this.c,u),r),a.assign(u),r.assign(o)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ee(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};sb.className="Momentum";Ar(sb);var rb=class extends _r{constructor(e,t=.9,n=0,s=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=L.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=L.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:H(()=>je(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:H(()=>je(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:H(()=>je(r).variable(a))});let i=Array.isArray(e)?e[s].tensor:e[n];if(i==null)return;let o=this.accumulatedMeanSquares[s].variable,u=this.accumulatedMoments[s].variable;H(()=>{let c=oe(V(o,this.decay),V(ct(i),1-this.decay));if(this.centered){let l=this.accumulatedMeanGrads[s].variable,d=oe(V(l,this.decay),V(i,1-this.decay)),p=Se(V(i,this.learningRate),rn(be(c,oe(ct(d),this.epsilon)))),h=oe(V(u,this.momentum),p);o.assign(c),l.assign(d),u.assign(h);let f=be(r,h);r.assign(f)}else{let l=oe(V(o,this.decay),V(ct(i),1-this.decay)),d=oe(V(u,this.momentum),Se(V(i,this.learningRate),rn(oe(l,this.epsilon))));o.assign(l),u.assign(d);let p=be(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ee(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ee(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ee(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};rb.className="RMSProp";Ar(rb);var Wr=class{static sgd(e){return new fp(e)}static momentum(e,t,n=!1){return new sb(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new rb(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new tb(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Jg(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new nb(e,t,n,s,r)}static adagrad(e,t=.1){return new eb(e,t)}},_i={sgd:Wr.sgd,momentum:Wr.momentum,adadelta:Wr.adadelta,adagrad:Wr.adagrad,rmsprop:Wr.rmsprop,adamax:Wr.adamax,adam:Wr.adam},dO=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function pO(){return new Promise(e=>dO(()=>e()))}var N={};Ae(N,{ERF_A1:()=>IO,ERF_A2:()=>SO,ERF_A3:()=>CO,ERF_A4:()=>NO,ERF_A5:()=>TO,ERF_P:()=>kO,PARALLELIZE_THRESHOLD:()=>ab,SELU_SCALE:()=>uI,SELU_SCALEALPHA:()=>oI,applyActivation:()=>pp,assertAndGetBroadcastShape:()=>ot,assertAxesAreInnerMostDims:()=>NR,assertParamsConsistent:()=>hO,assignToTypedArray:()=>DO,axesAreInnerMostDims:()=>Pg,calculateShapes:()=>sk,checkEinsumDimSizes:()=>LO,checkPadOnDimRoundingMode:()=>un,combineLocations:()=>Dk,complexWithEvenIndex:()=>EO,complexWithOddIndex:()=>_O,computeConv2DInfo:()=>Dl,computeConv3DInfo:()=>xk,computeDefaultPad:()=>$g,computeDilation2DInfo:()=>OE,computeOptimalWindowSize:()=>mO,computeOutAndReduceShapes:()=>Fk,computeOutShape:()=>fO,computePool2DInfo:()=>vk,computePool3DInfo:()=>PE,convertConv2DDataFormat:()=>wk,decodeEinsumEquation:()=>zO,eitherStridesOrDilationsAreOne:()=>Fs,expandShapeToKeepDim:()=>ca,exponent:()=>OO,exponents:()=>FO,fromStringArrayToUint8:()=>iP,fromUint8ToStringArray:()=>aP,getAxesPermutation:()=>Ok,getBroadcastDims:()=>Qw,getComplexWithIndex:()=>RO,getEinsumComputePath:()=>BO,getEinsumPermutation:()=>MO,getFusedBiasGradient:()=>dp,getFusedDyActivation:()=>cp,getImageCenter:()=>gO,getInnerMostAxes:()=>TR,getPermuted:()=>yO,getReductionAxes:()=>$t,getReshaped:()=>bO,getReshapedPermuted:()=>vO,getSliceBeginCoords:()=>xO,getSliceSize:()=>wO,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>GO,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>HO,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>qO,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>XO,getSparseReshapeInputOutputMismatchErrorMessage:()=>QO,getSparseReshapeInputOutputMultipleErrorMessage:()=>YO,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>jO,getSparseReshapeNegativeOutputDimErrorMessage:()=>KO,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>tP,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>ZO,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>JO,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>eP,getUndoAxesPermutation:()=>zg,isIdentityPermutation:()=>VO,log:()=>s$,mergeRealAndImagArrays:()=>$O,prepareAndValidate:()=>tk,prepareSplitSize:()=>UO,segment_util:()=>lI,shouldFuse:()=>hp,slice_util:()=>kt,splitRealAndImagArrays:()=>AO,tupleValuesAreOne:()=>br,upcastType:()=>vn,validateInput:()=>Cg,validateUpdateShape:()=>Sg,warn:()=>ur});function hO(e,t){let n=e[0].length;e.forEach((r,a)=>{O(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),O(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let i=0;i<n;i++)O(i===t||r[i]===s[i],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function fO(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var ab=30;function mO(e){return e<=ab?e:rd(e,Math.floor(Math.sqrt(e)))}function gO(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function bO(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let i=0;i<a;++i)r=r.concat([e[i+1]/t[i],t[i]]);r=r.concat(e.slice(a+1))}return r}function yO(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?a.push(i):r.push(i);s.push(...r),s.push(0),s.push(...a)}return s}function vO(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function xO(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function wO(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var oI=1.7580993408473768,uI=1.0507009873554805,kO=.3275911,IO=.254829592,SO=-.284496736,CO=1.421413741,NO=-1.453152027,TO=1.061405429;function $O(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function AO(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function EO(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function _O(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function RO(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function DO(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function FO(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function OO(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var Cf="->",PO=/->/g,qv=",",jv="...";function zO(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(PO,"").length)/Cf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Cf}").`);let[s,r]=e.split(Cf);O(s.indexOf(jv)===-1,()=>`The ellipsis notation ("${jv}") is not supported yet.`);let a=s.split(qv),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let p=0;p<r.length;++p){let h=r[p];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);o.indexOf(h)===-1&&o.push(h)}for(let p=0;p<s.length;++p){let h=s[p];o.indexOf(h)===-1&&h!==qv&&o.push(h)}let u=new Array(a.length);for(let p=0;p<i;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);u[p]=[];for(let h=0;h<a[p].length;++h)u[p].push(o.indexOf(a[p][h]))}let c=o.length,l=r.length,d=[];for(let p=l;p<c;++p)d.push(p);return{allDims:o,summedDims:d,idDims:u}}function MO(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function LO(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let i=0;i<t[r].length;++i)s[t[r][i]]===void 0?s[t[r][i]]=a[i]:O(s[t[r][i]]===a[i],()=>`Expected dimension ${s[t[r][i]]} at axis ${i} of input shaped ${JSON.stringify(a)}, but got dimension ${a[i]}`)}}function BO(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let i=0;i<r;++i)s.push([]);let a=[];for(let i=0;i<n.length;++i){let o=n[i],u=WO(t,o);for(let c of u)a.indexOf(c)===-1&&(s[i].push(c),a.push(c))}return{path:n,steps:s}}function VO(e){return e.every((t,n)=>t===n)}function WO(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function UO(e,t,n=0){let s=[];if(typeof t=="number")O(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);O(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let i=t.reduce((o,u)=>u>0?o+u:o);t[a]=e.shape[n]-i}O(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function GO(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function HO(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function qO(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function jO(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function KO(e,t){return`size ${e} must be non-negative, not ${t}`}function XO(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function YO(e,t){let n=pt(e),s=pt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function QO(e,t){let n=pt(e),s=pt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function ZO(){return"segment ids must be >= 0"}function JO(){return"segment ids are not increasing"}function eP(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function tP(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var lI={};Ae(lI,{collectGatherOpShapeInfo:()=>rP,computeOutShape:()=>sP,segOpComputeOptimalWindowSize:()=>nP});function nP(e,t){let n=!1,s;for(e<=ab?(s=e,n=!0):s=rd(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=rd(e,s+1);return s}function sP(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function rP(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let d=0;d<s;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let i=e.shape[n],o=[],u=1,c=1,l=1;for(let d=0;d<s;++d)o.push(e.shape[d]),u*=e.shape[d];for(let d=s;d<n;d++)o.push(e.shape[d]),c*=e.shape[d];for(let d=s;d<r;d++)o.push(t.shape[d]);for(let d=n+1;d<a;d++)o.push(e.shape[d]),l*=e.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}function aP(e){try{return e.map(t=>id(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function iP(e){return e.map(t=>_l(t))}var ys={};Ae(ys,{nonMaxSuppressionV3Impl:()=>rI,nonMaxSuppressionV4Impl:()=>aI,nonMaxSuppressionV5Impl:()=>iI,whereImpl:()=>Kk});var cI={kernelName:so,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,lp(pe(n,"float32"),-1))}}},oP={kernelName:nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=ct(pe(n,"float32")),r=rn(be(Ce(1),s));return It(Se(e,r))}}}},uP={kernelName:sl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=rn(be(ct(pe(n,"float32")),1));return Se(e,s)}}}},lP={kernelName:Cr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=ot(n.shape,s.shape);return{a:()=>{let o=e,u=$t(n.shape,r);return u.length>0&&(o=ve(o,u)),G(o,n.shape)},b:()=>{let o=e,u=$t(s.shape,r);return u.length>0&&(o=ve(o,u)),G(o,s.shape)}}}},cP={kernelName:wa,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},dP={kernelName:ka,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>je(n)}}},pP={kernelName:il,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>je(n)}}},hP={kernelName:ol,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Se(e,rn(be(Ce(1),ct(pe(n,"float32")))))}}},fP={kernelName:ul,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=rn(oe(Ce(1),ct(pe(n,"float32"))));return Se(e,s)}}}},mP={kernelName:dl,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=ot(n.shape,s.shape);return{a:()=>{let o=oe(ct(n),ct(s)),u=V(e,Se(s,o)),c=$t(n.shape,r);return c.length>0&&(u=ve(u,c)),G(u,n.shape)},b:()=>{let o=oe(ct(n),ct(s)),u=It(V(e,Se(n,o))),c=$t(s.shape,r);return c.length>0&&(u=ve(u,c)),G(u,s.shape)}}}},gP={kernelName:ll,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Se(e,oe(ct(pe(n,"float32")),1))}}},bP={kernelName:cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Se(e,be(Ce(1),ct(pe(n,"float32"))))}}};function yP(e,t,n,s,r,a){let i=E(e,"dy","avgPool3dGrad"),o=E(t,"input","avgPool3dGrad"),u=i,c=o,l=!1;o.rank===4&&(l=!0,u=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),O(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),un("avgPool3dGrad",r,a);let d={dy:u,input:c},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=L.runKernel(qm,d,p);return l?G(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var vP=B({avgPool3dGrad_:yP}),xP={kernelName:zd,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>vP(e,s,r,a,i,o)}}};function wP(e,t,n,s,r){let a=E(e,"dy","avgPoolGrad"),i=E(t,"input","avgPoolGrad");O(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,u=a,c=!1;i.rank===3&&(c=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=G(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),O(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let l={dy:u,input:o},d={filterSize:n,strides:s,pad:r},p=L.runKernel(Hm,l,d);return c?G(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var kP=B({avgPoolGrad_:wP}),IP={kernelName:Ia,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>kP(e,s,r,a,i)}}},SP={kernelName:Sa,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:i}=n;return!a&&!i?{a:()=>Me(e,r,!1,!0),b:()=>Me(s,e,!0,!1)}:!a&&i?{a:()=>Me(e,r,!1,!1),b:()=>Me(e,s,!0,!1)}:a&&!i?{a:()=>Me(r,e,!1,!0),b:()=>Me(s,e,!1,!1)}:{a:()=>Me(r,e,!0,!0),b:()=>Me(e,s,!0,!0)}}},CP={kernelName:ro,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>Vg(e,s,r)}}},NP={kernelName:t$,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let u=r.length-1;u>=0;u--)if(r[u]===a[u])i[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>ve(e,o,!0)}}},TP={kernelName:Ca,gradFunc:e=>({x:()=>e.clone()})},$P={kernelName:Na,gradFunc:e=>({x:()=>je(e)})},AP={kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>xn(_s(Ho(s,r),qo(s,a)),e,je(e))}}},EP={kernelName:Ld,inputsToSave:["x"],gradFunc:cI.gradFunc},_P={kernelName:ao,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(u=>u.shape),{axis:r}=n,a=ss(r,t[0].shape)[0],i=s.map(u=>u[a]);return Bn(e,i,a).map(u=>()=>u)}},RP={kernelName:Ta,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return O(br(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>_g(s.shape,e,r,i,o,u),filter:()=>Qg(s,e,r.shape,i,o,u)}}},DP={kernelName:$a,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>la(e,r,a,i,o,1,u),filter:()=>Qg(e,s,r.shape,a,i,o,u)}}};function FP(e,t,n,s,r){let a=e;e.rank===4&&(a=G(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),O(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),O(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),O(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),O(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:a,dy:i},u={strides:s,pad:r,filterShape:n};return L.runKernel(Ym,o,u)}var OP=B({conv3DBackpropFilter_:FP}),PP={kernelName:Bd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;O(br(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[i,o]=t;return{x:()=>Tk(i.shape,e,o,r,a),filter:()=>OP(i,e,o.shape,r,a)}}},zP={kernelName:Aa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(It(Uk(pe(n,"float32"))),e)}}},MP={kernelName:Ea,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(Gk(pe(n,"float32")),e)}}},LP={kernelName:io,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{let o=Ok([r],s.rank),u=Ak(e,r,a,!i);return o!=null&&(u=qe(u,o)),u}}}},BP={kernelName:_a,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=s==null?[1,1]:s;O(br(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[u,c]=t;return O(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),O(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),O(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),O(Fs(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),un("depthwiseConv2d",a,i),{x:()=>tI(u.shape,e,c,r,a,o,i),filter:()=>eI(u,e,c.shape,r,a,o,i)}}},VP={kernelName:Vd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>L.runKernel(Pf,a,n),filter:()=>L.runKernel(zf,i,n)}}},WP={kernelName:Da,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>L.runKernel(ng,s)}}},UP={kernelName:pl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=V(Qn(It(ct(n))),2/Math.sqrt(Math.PI));return{x:()=>V(e,s)}}},GP={kernelName:Fa,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,n)}}},HP={kernelName:co,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>G(e,n.shape)}}},qP={kernelName:po,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,Qn(n))}}},jP={kernelName:Oa,gradFunc:e=>({x:()=>je(e)})},KP={kernelName:Pa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=ot(n.shape,s.shape);return{a:()=>{let o=Se(e,pe(s,"float32")),u=$t(n.shape,r);return u.length>0?G(ve(o,u),n.shape):o},b:()=>{let o=V(e,pe(n,"float32")),u=$t(s.shape,r);u.length>0&&(o=G(ve(o,u),s.shape));let c=ct(s);return It(Se(o,pe(c,"float32")))}}}},XP={kernelName:za,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,i,o]=t,u=o==null?Ce(1):o,c=$t(a.shape,r.shape),l=[];if(a.rank===1){for(let x=0;x<r.shape.length-1;++x)l.push(r.shape[x]);l.push(1)}let d=be(r,a),p=V(e,u),h=Vk(oe(i,Ce(s))),f=V(V(V(h,h),h),Ce(-.5));return{x:()=>a.rank===1?G(V(V(e,us(G(h,[1,1,1,a.shape[0]]),l)),u),r.shape):G(V(V(e,h),u),r.shape),mean:()=>{let x=V(V(h,Ce(-1)),p);return a.rank===1&&(x=ve(x,c)),G(x,a.shape)},variance:()=>{let x=V(V(f,d),p);return a.rank===1&&(x=ve(x,c)),G(x,a.shape)},scale:()=>{let x=V(d,h),k=V(e,x);return a.rank===1&&(k=ve(k,c)),G(k,a.shape)},offset:()=>{let x=e;return a.rank===1&&(x=ve(x,c)),G(x,a.shape)}}}},YP={kernelName:fo,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,i=ss(a,s.shape)[0];return{x:()=>{let u=s.shape,c=r.size,l=u.slice(0,i),d=l.length,p=u.slice(a,u.length).slice(1),h=p.length,f=Kv(0,d),m=Kv(d+1,d+1+h),g=Xv([l,[c],p]),b=G(e,g),y=G(r,[c]),v=Xv([[d],f,m]),x=qe(b,v),k=c3(x,y,s.shape[i]),T=zg(v);return k=qe(k,T),k},indices:()=>r}}};function Kv(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Xv(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var QP={kernelName:Ma,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>je(n),b:()=>je(s)}}},ZP={kernelName:La,gradFunc:e=>({x:()=>pe(e,"float32")})},JP={kernelName:fl,gradFunc:e=>({x:()=>je(e)})},ez={kernelName:ml,gradFunc:e=>({x:()=>je(e)})},tz={kernelName:gl,gradFunc:e=>({x:()=>je(e)})},nz={kernelName:Ba,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=Un(s,0);return{x:()=>xn(a,e,V(e,r))}}},sz={kernelName:bl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Se(e,oe(n,1))}}},rz={kernelName:Va,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Se(e,pe(n,"float32"))}}},az={kernelName:n$,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let i=Qn(s);return be(e,V(ve(e,r,!0),i))}}}};function iz(e,t,n,s=5,r=1,a=1,i=.5){let o={x:e,y:t,dy:n},u={depthRadius:s,bias:r,alpha:a,beta:i};return L.runKernel(ig,o,u)}var oz=B({localResponseNormalizationBackprop_:iz}),uz={kernelName:Hd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>oz(s,r,e,a,i,o,u)}}};function dI(e,t,n,s){return t.rank<n.rank&&(t=G(t,ca(t.shape,s))),e.rank<n.rank&&(e=G(e,ca(e.shape,s))),{x:()=>V(e,pe(Yn(n,t),e.dtype))}}var Yv={kernelName:Wa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],i=t[1],o=ss(r,a.shape),u=dI(e,i,a,o);return{x:()=>u.x()}}},lz={kernelName:Ua,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>V(e,pe(Ho(n,s),"float32")),b:()=>V(e,pe(_k(n,s),"float32"))}}};function cz(e,t,n,s,r,a,i){let o=E(e,"dy","maxPool3dGrad"),u=E(t,"input","maxPool3dGrad"),c=E(n,"output","maxPool3dGrad"),l=o,d=u,p=c,h=!1;u.rank===4&&(h=!0,l=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=G(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=G(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),O(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),O(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),O(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),un("maxPool3dGrad",a,i);let f={dy:l,input:d,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=L.runKernel(ug,f,m);return h?G(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var dz=B({maxPool3dGrad_:cz}),pz={kernelName:qd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>dz(e,s,r,a,i,o,u)}}};function hz(e,t,n,s,r,a,i){let o=E(e,"dy","maxPoolGrad"),u=E(t,"input","maxPoolGrad"),c=E(n,"output","maxPoolGrad");O(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),O(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),O(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),un("maxPoolGrad",a,i);let l={dy:o,input:u,output:c},d={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return L.runKernel(og,l,d)}var fz=B({maxPoolGrad_:hz}),mz={kernelName:Ga,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>fz(e,s,r,a,i,o)}}},gz={kernelName:Ha,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=ss(r,s.shape),o=Fk(s.shape,a)[1],u=pt(o);return{x:()=>{let l=s.shape.slice();a.forEach(h=>{l[h]=1});let d=G(e,l);return Se(V(d,Mn(s.shape,"float32")),u)}}}},bz={kernelName:qa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,i]=t,o=ss(r,a.shape),u=dI(e,i,a,o);return{x:()=>u.x()}}},yz={kernelName:ja,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>V(e,pe(qo(n,s),"float32")),b:()=>V(e,pe(Un(n,s),"float32"))}}},vz={kernelName:Ka,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(i=>i[0]);return{x:()=>He(e,a,s.shape)}}},xz={kernelName:vl,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=ot(n.shape,s.shape);return{a:()=>{let o=$t(n.shape,r);return o.length>0?G(ve(e,o),n.shape):e},b:()=>{let o=V(e,It(ip(Se(n,s)))),u=$t(s.shape,r);return u.length>0?G(ve(o,u),s.shape):o}}}},wz={kernelName:Xa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=ot(n.shape,s.shape);return{a:()=>{let o=V(e,pe(s,"float32")),u=$t(n.shape,r);return u.length>0?G(ve(o,u),n.shape):o},b:()=>{let o=V(e,pe(n,"float32")),u=$t(s.shape,r);return u.length>0?G(ve(o,u),s.shape):o}}}},kz={kernelName:xo,gradFunc:e=>({x:()=>It(e)})},Iz={kernelName:Co,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Tt(n.shape,"float32")}}},Sz={kernelName:So,gradFunc:e=>({x:()=>je(e)})},Cz={kernelName:No,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return Rs(e,s).map(a=>()=>a)}},Qv={kernelName:Ya,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(i=>i[0]);return{x:()=>He(e,a,s.shape)}}},Nz={kernelName:Qa,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,i=s,o=ot(a.shape,i.shape);return{a:()=>{let l=pe(i,"float32"),d=V(e,V(l,da(a,be(l,Ce(1))))),p=$t(a.shape,o);return p.length>0&&(d=ve(d,p)),G(d,a.shape)},b:()=>{let l=Un(a,0),d=xn(l,Zn(a),je(a)),p=V(e,V(r,d)),h=$t(i.shape,o);return h.length>0&&(p=ve(p,h)),G(p,i.shape)}}}},Tz={kernelName:Za,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=Un(n,0);return{x:()=>xn(r,e,V(e,s)),alpha:()=>{let a=xn(r,je(e),V(e,n)),i=$t(s.shape,e.shape);return i.length>0&&(a=ve(a,i)),G(a,s.shape)}}}},$z={kernelName:Ra,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=ot(n.shape,s.shape);return{a:()=>{let o=Se(e,pe(s,"float32")),u=$t(n.shape,r);return u.length>0?G(ve(o,u),n.shape):o},b:()=>{let o=V(e,pe(n,"float32")),u=$t(s.shape,r);u.length>0&&(o=G(ve(o,u),s.shape));let c=ct(s);return It(Se(o,pe(c,"float32")))}}}},Az={kernelName:kl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Se(e,It(ct(n)))}}},Ez={kernelName:ti,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=V(qo(n,6),lp(n));return{x:()=>V(e,pe(s,"float32"))}}},_z={kernelName:Ja,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,pe(lp(n),"float32"))}}},Rz={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>G(e,n.shape)}}},Dz={kernelName:ei,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>L.runKernel(pg,r,n)}}},Fz={kernelName:Il,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>L.runKernel(dg,r,n)}}},Oz={kernelName:Ao,gradFunc:(e,t,n)=>{let{dims:s}=n,r=ss(s,e.shape);return{x:()=>es(e,r)}}},Pz={kernelName:Eo,gradFunc:e=>({x:()=>je(e)})},zz={kernelName:ni,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>It(Se(e,V(da(n,1.5),2)))}}},Mz={kernelName:Ro,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>pe(je(n),"float32"),t:()=>V(e,pe(n,e.dtype)),e:()=>V(e,pe(Mg(n),e.dtype))}}},Lz={kernelName:Sl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Un(n,Ce(0)),r=Ce(oI),a=Ce(uI),i=V(e,a),o=V(V(e,r),Qn(pe(n,"float32")));return xn(s,i,o)}}}},Bz={kernelName:ri,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(n,be(Ce(1),n)))}}},Vz={kernelName:Cl,gradFunc:e=>({x:()=>je(e)})},Wz={kernelName:si,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(Rg(pe(n,"float32")),e)}}},Uz={kernelName:Fo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V($k(pe(n,"float32")),e)}}},Gz={kernelName:Do,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,i=s.shape,[o,u]=pk(s,r,a),c=[];for(let l=0;l<e.rank;l++)c.push([o[l],i[l]-o[l]-u[l]]);return{x:()=>hi(e,c)}}},Hz={kernelName:oi,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,i=V(e,s);return{logits:()=>be(i,V(ve(i,[r],a),s))}}},qz={kernelName:Nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,Hs(n))}}},Zv={kernelName:Oo,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>Eg(e,s,r)}}},Jv={kernelName:Po,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>Dt(e,s)}}},jz={kernelName:ai,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Se(e,V(rn(pe(n,"float32")),2))}}},Kz={kernelName:$l,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(pe(n,"float32"),2))}}},Xz={kernelName:ui,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Ce(2);return{a:()=>V(e,V(r,be(n,s))),b:()=>V(e,V(r,be(s,n)))}}},Yz={kernelName:pi,gradFunc:e=>({x:()=>je(e)})},Qz={kernelName:li,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=ot(n.shape,s.shape);return{a:()=>{let o=e,u=$t(n.shape,r);return u.length>0&&(o=ve(o,u)),G(o,n.shape)},b:()=>{let o=e,u=$t(s.shape,r);return u.length>0&&(o=ve(o,u)),G(It(o),s.shape)}}}},Zz={kernelName:ii,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;ss(a,s.shape).forEach(c=>{r[c]=1});let o=G(e,r),u=V(o,Mn(s.shape,"float32"));return{x:()=>u}}},Jz={kernelName:Mo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Se(e,ct(Rg(n)))}}},eM={kernelName:ci,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(be(Ce(1),ct(n)),e)}}},tM={kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let i=je(s);if(s.rank===1)for(let o=0;o<r[0];++o)i=oe(i,He(e,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)i=oe(i,He(e,[o*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)for(let c=0;c<r[2];++c)i=oe(i,He(e,[o*s.shape[0],u*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)for(let c=0;c<r[2];++c)for(let l=0;l<r[3];++l)i=oe(i,He(e,[o*s.shape[0],u*s.shape[1],c*s.shape[2],l*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}},nM={kernelName:di,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=zg(r);return{x:()=>qe(e,a)}}},sM={kernelName:Vo,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>ts(e,r)}}},rM={kernelName:Jd,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>aM(e,n)}}};function aM(e,t){let n=Er(t,je(t)),s=ju(e,n),r=Ho(t,Ce(0,"int32")),a=s.rank-r.rank;for(let o=0;o<a;++o)r=Pn(r,o+1);r=_s(r,Mn(s.shape,"bool"));let i=je(s);return xn(r,s,i)}var iM={kernelName:Wo,gradFunc:e=>({x:()=>je(e)})},oM=[cI,oP,uP,lP,cP,dP,pP,hP,fP,mP,gP,bP,xP,IP,SP,CP,NP,TP,$P,AP,EP,_P,DP,RP,PP,zP,MP,LP,BP,VP,$z,WP,UP,GP,HP,qP,KP,jP,XP,YP,QP,ZP,JP,ez,tz,nz,sz,rz,az,uz,Yv,Yv,lz,pz,mz,gz,bz,yz,vz,xz,wz,kz,Iz,Sz,Cz,Qv,Qv,Nz,Tz,Az,Ez,_z,Rz,Dz,Fz,Oz,Pz,zz,Mz,Lz,Bz,Vz,Wz,Uz,Gz,Hz,qz,Zv,Zv,Jv,Jv,jz,Xz,Kz,Yz,Qz,Zz,Jz,eM,tM,nM,sM,rM,iM];for(let e of oM)r$(e);var uM={};Ae(uM,{maxNorm:()=>pM,minMaxNorm:()=>mM,nonNeg:()=>fM,unitNorm:()=>hM});var Nf;function _t(){return Nf==null&&(Nf=uE().epsilon()),Nf}function ms(){return"channelsLast"}var Bs=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Bs.prototype)}},cs=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,cs.prototype)}},U=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,U.prototype)}},Re=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Re.prototype)}},pI=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,pI.prototype)}};function ha(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Is(e,t){if(!e)throw new pI(t)}function ex(e,t){let n=0;for(let s of e)s===t&&n++;return n}function bn(e){return e.length===1?e[0]:e}function dt(e){return Array.isArray(e)?e:[e]}function Vs(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function jr(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var Kn={};function ib(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function tm(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>tm(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:tm(s))}}}function zl(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,i;if(a in n)i=n[a];else if(a in Kn)i=Kn[a];else if(i=t[a],i==null)throw new U(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let a=e;if(a.className==null||a.config==null)throw new U(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let i=a.className,o,u;if(i in n?[o,u]=n[i]:i in Kn?[o,u]=Kn.className:i in t&&([o,u]=t[i]),o==null)throw new U(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let c={};for(let h of Object.keys(Kn))c[h]=Kn[h];for(let h of Object.keys(n))c[h]=n[h];let l=a.config;l.customObjects=c;let d={...Kn};for(let h of Object.keys(n))Kn[h]=n[h];tm(a.config);let p=u(o,a.config,n,r);return Kn={...d},p}else{let c={...Kn};for(let d of Object.keys(n))Kn[d]=n[d];let l=new o(a.config);return Kn={...c},l}}}function lM(e,t){return e<t?-1:e>t?1:0}function Fc(e,t){return-1*lM(e,t)}function hr(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function cM(e){if(e==null)throw new U(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function fi(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new U(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function ob(e,t,n=0,s=1/0){return Is(n>=0),Is(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function Bt(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>Bt(n,`element ${s+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${hI(e)}.`)}function hI(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>hI(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function dM(e,t,n){let s=n!=null?n():w.now(),r;return(...i)=>{let o=n!=null?n():w.now();return o-s<t||(s=o,r=e(...i)),r}}function fI(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function ub(e,t){return H(()=>rn(ve(V(e,e),t,!0)))}var Ml=class extends ae.Serializable{getConfig(){return{}}},lb=class extends Ml{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return H(()=>{let t=ub(e,this.axis),n=Vn(t,0,this.maxValue);return V(e,Se(n,oe(_t(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};lb.className="MaxNorm";ae.registerClass(lb);var cb=class extends Ml{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return H(()=>Se(e,oe(_t(),ub(e,this.axis))))}getConfig(){return{axis:this.axis}}};cb.className="UnitNorm";ae.registerClass(cb);var db=class extends Ml{apply(e){return Ks(e)}};db.className="NonNeg";ae.registerClass(db);var pb=class extends Ml{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return H(()=>{let t=ub(e,this.axis),n=oe(V(this.rate,Vn(t,this.minValue,this.maxValue)),V(1-this.rate,t));return V(e,Se(n,oe(_t(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};pb.className="MinMaxNorm";ae.registerClass(pb);var tx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ft(e){return ib(e)}function nx(e,t={}){return zl(e,ae.SerializationMap.getMap().classNameMap,t,"constraint")}function Ot(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in tx?tx[e]:e,config:{}};return nx(n)}else return e instanceof Ml?e:nx(e)}function pM(e){return new lb(e)}function hM(e){return new cb(e)}function fM(){return new db}function mM(e){return new pb(e)}var gM={};Ae(gM,{constant:()=>LM,glorotNormal:()=>qM,glorotUniform:()=>HM,heNormal:()=>jM,heUniform:()=>KM,identity:()=>UM,leCunNormal:()=>XM,leCunUniform:()=>YM,ones:()=>MM,orthogonal:()=>QM,randomNormal:()=>VM,randomUniform:()=>BM,truncatedNormal:()=>WM,varianceScaling:()=>GM,zeros:()=>zM});var bM=["channelsFirst","channelsLast"],yM=["nearest","bilinear"],vM=["valid","same","causal"],xM=["max","avg"],wM=["sum","mul","concat","ave"],Ri=new Map;function Ct(e){fi(bM,"DataFormat",e)}function kM(e){fi(yM,"InterpolationFormat",e)}function Gn(e){fi(vM,"PaddingMode",e)}function mI(e){fi(xM,"PoolMode",e)}var zu=[],sx="/";function Jr(e,t){zu.push(e);try{let n=t();return zu.pop(),n}catch(n){throw zu.pop(),n}}function IM(){return zu.length===0?"":zu.join(sx)+sx}function gI(e){if(!yI(e))throw new Error("Not a valid tensor name: '"+e+"'");return IM()+e}function bI(e){if(!yI(e))throw new Error("Not a valid tensor name: '"+e+"'");Ri.has(e)||Ri.set(e,0);let t=Ri.get(e);if(Ri.set(e,Ri.get(e)+1),t>0){let n=`${e}_${t}`;return Ri.set(n,1),n}else return e}var SM=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function yI(e){return!!e.match(SM)}function CM(e){return e===parseInt(e.toString(),10)}function fr(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Xi(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function vr(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function gs(e,t){if(t<e)throw new U(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}function mp(e,t){return pe(e,t)}function Ll(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),G(e,n)}function NM(e,t){return H(()=>{if(e.shape.length!==2)throw new U(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Ll(e,1);return nm(n,[1,t,1])})}function TM(e){let t=[fr(e.shape)];return G(e,t)}function $M(e){if(e.rank<=1)throw new U(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],fr(e.shape,1)];return G(e,t)}function ea(e,t,n){return H(()=>{switch(e.rank){case 1:return Hg(e,t,n);case 2:return Hk(e,[t,0],[n,e.shape[1]]);case 3:return qg(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return hd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return He(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return He(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new U(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Tf(e,t,n){return H(()=>{switch(e.rank){case 1:return Hg(e,t,n);case 2:return Hk(e,[0,t],[e.shape[0],n]);case 3:return qg(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return hd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new U(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Oc(e,t,n,s){return H(()=>{switch(e.rank){case 1:return Hg(e,t,n);case 2:switch(s){case 1:return ea(e,t,n);case 2:return Tf(e,t,n);default:throw new U(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return ea(e,t,n);case 2:return qg(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Tf(e,t,n);default:throw new U(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return ea(e,t,n);case 2:return hd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return hd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Tf(e,t,n);default:throw new U(`The axis is not within the rank of the tensor ${s}`)}default:throw new U(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function hb(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Dt(e,t)}function rx(e,t){switch(e.rank){case 1:return p_([e,t]);case 2:return f_([e,t],0);case 3:return g_([e,t],0);case 4:return y_([e,t],0);default:throw new U(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function nm(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new U(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return us(e,t)}function gp(e,t=0,n=1,s,r){return bD(e,t,n,s,r)}function As(e,t,n,s){if(e.rank<2||t.rank<2)throw new Re(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Re(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return pa.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?sm(e.rank,s,ms()):null,activation:n});{let r=e.shape.slice(),a=r.pop();e=G(e,[-1,a]);let i=t.shape.slice(),o=i.pop(),u=i.pop(),c=[...i,o],l=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=G(qe(t,l),[u,-1]);let d=[...r,...c],p=!1,h=!1;return G(pa.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:s?sm(e.rank,s,ms()):null,activation:n}),d)}}function vI(e,t,n){return H(()=>(Array.isArray(t)?t=Jt(t,"int32"):t=pe(t,"int32"),ju(e,t,n)))}function Bl(e){return V(e,e)}function sm(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new U(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?G(t,[1,s[0],1,1,1]):G(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?G(t,[1,1,1,1,s[0]]):G(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?G(t,[1,s[0],1,1]):G(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?G(t,[1,1,1,s[0]]):G(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?G(t,[1,s[0],1]):G(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?G(t,[1,1,s[0]]):G(t,[1].concat(s))}else if(e<3)return t;throw new U(`Unsupported input rank by biasAdd: ${t.rank}`)}function vs(e,t,n){return H(()=>(n==null&&(n=ms()),Ct(n),oe(e,sm(e.rank,t,n))))}function AM(e,t=1){if(t!==1)throw new Re(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ap(e)}function EM(e){return H(()=>Se(e,oe(Mt(e),1)))}function xI(e,t,n,s){return H(()=>C3(e,t,n,s))}function _M(e){return H(()=>{let t=oe(.5,V(.2,e));return Vn(t,0,1)})}function Vl(e,t,n=!1){return n?e():t()}var RM=["fanIn","fanOut","fanAvg"],DM=["normal","uniform","truncatedNormal"];function FM(e){fi(RM,"FanMode",e)}function OM(e){fi(DM,"Distribution",e)}var rs=class extends ae.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},fb=class extends rs{apply(e,t){return Tt(e,t)}};fb.className="Zeros";ae.registerClass(fb);var bp=class extends rs{apply(e,t){return Mn(e,t)}};bp.className="Ones";ae.registerClass(bp);var mb=class extends rs{constructor(e){super();if(typeof e!="object")throw new U(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new U(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return H(()=>V(Ce(this.value),Mn(e,t)))}getConfig(){return{value:this.value}}};mb.className="Constant";ae.registerClass(mb);var gb=class extends rs{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Pl(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};gb.className="RandomUniform";ae.registerClass(gb);var bb=class extends rs{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Re(`randomNormal does not support dType ${t}.`);return gp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};bb.className="RandomNormal";ae.registerClass(bb);var yb=class extends rs{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Re(`truncatedNormal does not support dType ${t}.`);return Yg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};yb.className="TruncatedNormal";ae.registerClass(yb);var vb=class extends rs{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return H(()=>{if(e.length!==2||e[0]!==e[1])throw new U("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,Ek(e[0]))})}getConfig(){return{gain:this.gain}}};vb.className="Identity";ae.registerClass(vb);function PM(e,t="channelsLast"){let n,s;if(Ct(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=fr(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=fr(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=fr(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var wn=class extends rs{constructor(e){super();if(e.scale<0)throw new U(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,FM(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,OM(this.distribution),this.seed=e.seed}apply(e,t){let n=PM(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Re(`${this.getClassName()} does not support dType ${t}.`);return Yg(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return Pl(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};wn.className="VarianceScaling";ae.registerClass(wn);var yp=class extends wn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return wn.className}};yp.className="GlorotUniform";ae.registerClass(yp);var vp=class extends wn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return wn.className}};vp.className="GlorotNormal";ae.registerClass(vp);var xp=class extends wn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return wn.className}};xp.className="HeNormal";ae.registerClass(xp);var wp=class extends wn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return wn.className}};wp.className="HeUniform";ae.registerClass(wp);var kp=class extends wn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return wn.className}};kp.className="LeCunNormal";ae.registerClass(kp);var Ip=class extends wn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return wn.className}};Ip.className="LeCunNormal";ae.registerClass(Ip);var xb=class extends rs{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Re("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return H(()=>{if(e.length<2)throw new Re("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=gp(n,0,1,"float32"),r=cO.gramSchmidt(s);return e[0]>e[1]&&(r=qe(r)),V(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};xb.className="Orthogonal";ae.registerClass(xb);var ax={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ix(e,t={}){return zl(e,ae.SerializationMap.getMap().classNameMap,t,"initializer")}function yt(e){return ib(e)}function mt(e){if(typeof e=="string"){let t=e in ax?ax[e]:e;if(t==="GlorotNormal")return new vp;if(t==="GlorotUniform")return new yp;if(t==="HeNormal")return new xp;if(t==="HeUniform")return new wp;if(t==="LeCunNormal")return new kp;if(t==="LeCunUniform")return new Ip;{let n={};return n.className=t,n.config={},ix(n)}}else return e instanceof rs?e:ix(e)}function zM(){return new fb}function MM(){return new bp}function LM(e){return new mb(e)}function BM(e){return new gb(e)}function VM(e){return new bb(e)}function WM(e){return new yb(e)}function UM(e){return new vb(e)}function GM(e){return new wn(e)}function HM(e){return new yp(e)}function qM(e){return new vp(e)}function jM(e){return new xp(e)}function KM(e){return new wp(e)}function XM(e){return new kp(e)}function YM(e){return new Ip(e)}function QM(e){return new xb(e)}var ZM={};Ae(ZM,{Layer:()=>Ge,RNN:()=>Rr,RNNCell:()=>Gl,activation:()=>FB,add:()=>UB,alphaDropout:()=>N4,average:()=>GB,averagePooling1d:()=>Ey,averagePooling2d:()=>_y,averagePooling3d:()=>Ry,avgPool1d:()=>JB,avgPool2d:()=>t4,avgPool3d:()=>s4,avgPooling1d:()=>e4,avgPooling2d:()=>n4,avgPooling3d:()=>r4,batchNormalization:()=>YB,bidirectional:()=>y4,concatenate:()=>HB,conv1d:()=>CB,conv2d:()=>NB,conv2dTranspose:()=>TB,conv3d:()=>$B,conv3dTranspose:()=>AB,convLstm2d:()=>f4,convLstm2dCell:()=>m4,cropping2D:()=>_B,dense:()=>OB,depthwiseConv2d:()=>DB,dot:()=>XB,dropout:()=>PB,elu:()=>vB,embedding:()=>WB,flatten:()=>MB,gaussianDropout:()=>C4,gaussianNoise:()=>S4,globalAveragePooling1d:()=>a4,globalAveragePooling2d:()=>i4,globalMaxPool1d:()=>x4,globalMaxPool2d:()=>w4,globalMaxPooling1d:()=>m0,globalMaxPooling2d:()=>g0,gru:()=>u4,gruCell:()=>l4,input:()=>aB,inputLayer:()=>yB,layerNormalization:()=>QB,leakyReLU:()=>wB,lstm:()=>c4,lstmCell:()=>d4,masking:()=>T4,maxPool1d:()=>k4,maxPool2d:()=>I4,maxPooling1d:()=>b0,maxPooling2d:()=>y0,maxPooling3d:()=>o4,maximum:()=>qB,minimum:()=>jB,multiply:()=>KB,permute:()=>VB,prelu:()=>kB,reLU:()=>xB,repeatVector:()=>LB,reshape:()=>BB,rnn:()=>g4,separableConv2d:()=>EB,simpleRNN:()=>p4,simpleRNNCell:()=>h4,softmax:()=>IB,spatialDropout1d:()=>zB,stackedRNNCells:()=>b4,thresholdedReLU:()=>SB,timeDistributed:()=>v4,upSampling2d:()=>RB,zeroPadding2d:()=>ZB});var JM=0;function wI(){return JM++}var Pc={};function Sp(e=""){return e in Pc||(Pc[e]=0),Pc[e]+=1,e+Pc[e].toString()}function rm(e){return Array.isArray(e)&&Array.isArray(e[0])}function md(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function De(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new U(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function nt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new U(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function gd(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var ox="Variable",eL=class{constructor(e,t="float32",n=ox,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=wI(),n=n==null?ox:n,this.originalName=gI(n),this.name=bI(this.originalName),this.trainable_=s,this.constraint=r,this.val=p3(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),tL(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function tL(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function am(e){return e.map(t=>t.read())}function wb(e){e.forEach(t=>{t[0].write(t[1])})}var Rt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Ns=class{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=wI(),a!=null&&(this.originalName=gI(a),this.name=bI(this.originalName)),this.rank=t.length}},nL=0,Cp=class{constructor(e,t){this.callArgs=t,this.id=nL++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},sL=0,Ge=class extends ae.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=sL++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Vs(n)+"_"+Sp(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new cs(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new U(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return bn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return bn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Bs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Bs(`Layer ${this.name} is not connected, no input to return.`);return bn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Bs(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Bs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return bn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=dt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=dt(this.inputSpec);if(e.length!==t.length)throw new U(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new U(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new U(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new U(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new U(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let i=s.shape;for(let o in r.axes){let u=Number(o),c=r.axes[o],l=u>=0?i[u]:i[i.length+u];if(c!=null&&[c,null].indexOf(l)===-1)throw new U(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${i}.`)}}if(r.shape!=null)for(let i=0;i<r.shape.length;++i){let o=r.shape[i],u=s.shape[i];if(o!=null&&u!=null&&o!==u)throw new U(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=dt(e),s=!0;for(let a of n)if(!(a instanceof Ns)){s=!1;break}let r=!0;for(let a of n)if(a instanceof Ns){r=!1;break}if(s===r)throw new U("Arguments to apply() must be all SymbolicTensors or all Tensors");return Jr(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of dt(e))a.push(i.shape);this.build(bn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),i=dt(a),o=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),o.push(u);if(a=bn(o),this.activityRegularizer!=null)throw new Re("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=rL(e),i=this.computeOutputShape(a),o,u=aL(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((c,l)=>new Ns(u,c,this,dt(e),t,this.name,l)):o=new Ns(u,i,this,dt(e),t,this.name),this.addInboundNode(e,o,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Re("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Bs(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Bs(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cs(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return gd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return am(e?this.trainableWeights:this.weights)}setWeights(e){H(()=>{let t=this.weights;if(t.length!==e.length)throw new U(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=am(t);for(let r=0;r<s.length;++r){let a=s[r],i=t[r],o=e[r];if(!w.arraysEqual(a.shape,o.shape))throw new U(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}wb(n)})}addWeight(e,t,n,s,r,a,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new U(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=o!=null?o():mt("zeros"));let u=s.apply(t,n),c=new eL(u,n,e,a,i);return u.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=dt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,i=null){let o=dt(e);t=dt(t),n=dt(n),s=dt(s),r=md(r),a=md(a);let u=[],c=[],l=[];for(let d of o)u.push(d.sourceLayer),c.push(d.nodeIndex),l.push(d.tensorIndex);new Cp({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function rL(e){e=dt(e);let t=[];for(let n of e)t.push(n.shape);return bn(t)}function aL(e){return"float32"}function kI(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let i=s.inputTensors[a],o=s.inboundLayers[a],u=s.nodeIndices[a],c=kI(i,o,u);for(let l of c)r.indexOf(l)===-1&&r.push(l)}return r}}}var Ko=class extends Ge{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Sp("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new U("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new U("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new U("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new Ns(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Cp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new U(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Ko.className="InputLayer";ae.registerClass(Ko);function II(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new U("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Ko({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function or(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let i=a;t.push(i.data()),n.push(r),s.push(i)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];Ee(s)}}function SI(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var iL=125,Yi=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},oL=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},uL=class extends Yi{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let i=H(()=>oe(this.totals[s],V(r,n)));this.totals[s]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:H(()=>{let s=V(Se(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),jt(t[n])}))}},lL=class extends Yi{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let o=a[i];e.push(o.data()),t.push(r),n.push(i)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},cL=class extends Yi{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||pO,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=iL),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=dM(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await or(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await or(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await or(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await or(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await or(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await or(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await or(e),await this.trainEnd(e))}};function CI(e,t){return e==null&&(e={}),e instanceof Yi?[e]:Array.isArray(e)&&e[0]instanceof Yi?e:dt(e).map(s=>new cL(s,t))}var xs=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),xs.checkForDuplicate(t),xs.constructors[e]==null&&(xs.constructors[e]=[]),xs.constructors[e].push(t)}static checkForDuplicate(e){for(let t in xs.constructors)xs.constructors[+t].forEach(s=>{if(s===e)throw new U("Duplicate callback constructor.")})}static clear(){xs.constructors={}}static createCallbacks(e){let t=[];for(let n in xs.constructors){let s=+n;e>=s&&t.push(...xs.constructors[s])}return t.map(n=>new n)}},kb=xs;kb.constructors={};function NI(e,t,n,s,r,a,i,o,u){let c=new lL,l=[new uL,...kb.createCallbacks(t)];e!=null&&l.push(...e),l.push(c);let d=new oL(l);return d.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:c}}function ps(e,t={},n=!1){return zl(e,ae.SerializationMap.getMap().classNameMap,t,"layer",n)}function bd(e,t){return H(()=>{e.dtype!=="float32"&&(e=pe(e,"float32"));let n=ve(Bl(e),t,!0),s=Fl(n.shape,_t()),r=rn(Er(n,s));return Se(e,r)})}function mi(e,t){return H(()=>St(Bl(be(t,e)),-1))}function Np(e,t){return H(()=>St(Mt(be(t,e)),-1))}function Xo(e,t){return H(()=>{let n=be(e,t),s=Vn(Mt(e),_t(),Number.MAX_VALUE),r=Mt(Se(n,s));return V(100,St(r,-1))})}function dL(e,t){return H(()=>{let n=Vn(t,_t(),Number.MAX_VALUE),s=Zn(oe(1,n)),r=Vn(e,_t(),Number.MAX_VALUE),a=Zn(oe(1,r));return St(Bl(be(s,a)),-1)})}function pL(e,t){return H(()=>{let n=Er(0,be(1,V(e,t)));return St(Bl(n),-1)})}function hL(e,t){return H(()=>{let n=Er(0,be(1,V(e,t)));return St(n,-1)})}function fL(e,t){return H(()=>{let n=ve(V(e,t),-1),s=$s(V(be(1,e),t),-1);return Er(0,oe(1,be(s,n)))})}function mL(e,t){return H(()=>{let n=Math.log(2),s=be(t,e),r=be(oe(s,Ol(V(-2,s))),n);return St(r,-1)})}function Yu(e,t,n=!1){return H(()=>{if(n)t=jg(t);else{let s=ve(t,t.shape.length-1,!0);t=Se(t,s)}return t=Vn(t,_t(),1-_t()),It(ve(V(pe(e,"float32"),Zn(t)),t.shape.length-1))})}function yd(e,t,n=!1){return H(()=>{let s=pe(ip(TM(e)),"int32");t=Vn(t,_t(),1-_t());let r=t.shape,a=G(cd(s,r[r.length-1]),r);return Yu(a,t,n)})}function gL(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new U(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return H(()=>{let n=Ks(t),s=It(Mt(t));return oe(be(n,V(t,e)),Og(Qn(s)))})}function Tp(e,t){return H(()=>{let n;return n=Vn(t,_t(),1-_t()),n=Zn(Se(n,be(1,n))),St(gL(e,n),-1)})}function bL(e,t){return H(()=>{let n=Vn(e,_t(),1),s=Vn(t,_t(),1);return ve(V(e,Zn(Se(n,s))),-1)})}function yL(e,t){return H(()=>{let n=Zn(oe(_t(),t));return St(be(t,V(e,n)),-1)})}function Ib(e,t){return H(()=>{let n=bd(e,-1),s=bd(t,-1),r=V(n,s);return It(ve(r,-1))})}var vd={meanSquaredError:mi,meanAbsoluteError:Np,meanAbsolutePercentageError:Xo,meanSquaredLogarithmicError:dL,squaredHinge:pL,hinge:hL,categoricalHinge:fL,logcosh:mL,categoricalCrossentropy:Yu,sparseCategoricalCrossentropy:yd,binaryCrossentropy:Tp,kullbackLeiblerDivergence:bL,poisson:yL,cosineProximity:Ib};function $f(e){if(typeof e=="string"){if(e in vd)return vd[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new U(t)}else return e}function Sb(e,t){return H(()=>{let n=V(.5,Jn(t)),s=mp(Un(t,n),e.dtype);return St(Yn(e,s),-1)})}function Cb(e,t){return H(()=>mp(Yn(Gu(e,-1),Gu(t,-1)),"float32"))}function TI(e,t){return H(()=>pe(ve(_s(Yn(e,1),Yn(t,1))),"float32"))}function vL(e,t){return H(()=>pe(ve(_s(Yn(e,1),Yn(t,0))),"float32"))}function xL(e,t){return H(()=>pe(ve(_s(Yn(e,0),Yn(t,1))),"float32"))}function $I(e,t){return H(()=>{let n=TI(e,t),s=xL(e,t),r=oe(n,s);return pe(xn(Un(r,0),Se(n,r),0),"float32")})}function wL(e,t){return H(()=>{let n=TI(e,t),s=vL(e,t),r=oe(n,s);return pe(xn(Un(r,0),Se(n,r),0),"float32")})}function AI(e,t){return Tp(e,t)}function EI(e,t){return e.rank===t.rank&&(e=yr(e,[e.rank-1])),t=Gu(t,-1),t.dtype!==e.dtype&&(t=pe(t,e.dtype)),pe(Yn(e,t),"float32")}var kL=mi,IL=mi,SL=Np,CL=Np,NL=Xo,TL=Xo,Nb=Yu,$L=Ib,_I=yd,xd={binaryAccuracy:Sb,categoricalAccuracy:Cb,precision:$I,categoricalCrossentropy:Nb,sparseCategoricalCrossentropy:_I,mse:kL,MSE:IL,mae:SL,MAE:CL,mape:NL,MAPE:TL,cosine:$L};function AL(e){if(typeof e=="string"&&e in xd)return xd[e];if(typeof e!="string"&&e!=null)return e;throw new U(`Unknown metric ${e}`)}function zc(e){if(Is(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(vd))if(vd[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(xd))if(xd[n]===e){t=n;break}return t!==void 0?t:e.name}}function EL(e){let t={Adagrad:()=>_i.adagrad(.01),Adadelta:()=>_i.adadelta(1,.95,_t()),Adam:()=>_i.adam(.001,.9,.999,_t()),Adamax:()=>_i.adamax(.002,.9,.999,_t(),0),RMSProp:()=>_i.rmsprop(.001,.9,0,_t()),SGD:()=>_i.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new U(`Unknown Optimizer ${e}`)}var ux=1*1024*1024;function lx(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!im(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>ux&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${ux}.`)}}function im(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!im(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!im(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function _L(e,t,n,s=console.log){let r=DL(e),a=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(l=>Math.floor(t*l)));let i;if(!r){a.push("Receives inputs"),i=[];for(let l in e.nodesByDepth)i.push(...e.nodesByDepth[l])}s("_".repeat(t)),wd(a,n,s),s("=".repeat(t));let o=e.layers;for(let l=0;l<o.length;++l)r?FL(o[l],n,s):OL(o[l],n,i,s),s((l===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let u=RL(e),c=gd(e.nonTrainableWeights);s(`Total params: ${u+c}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function RL(e){let t;return e.collectedTrainableWeights!=null?t=gd(e.collectedTrainableWeights):t=gd(e.trainableWeights),t}function DL(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let i of r.inboundNodes)if(s.indexOf(i)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function wd(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function FL(e,t,n){let s,r;try{r=e.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch(u){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(u){s="multiple"}let a=e.name,i=e.getClassName(),o=[`${a} (${i})`,r,s,e.countParams().toString()];wd(o,t,n)}function OL(e,t,n,s){let r,a;try{a=e.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch(d){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(d){r="multiple"}let i=[];for(let d of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(d)===-1))for(let p=0;p<d.inboundLayers.length;++p){let h=d.inboundLayers[p].name,f=d.nodeIndices[p],m=d.tensorIndices[p];i.push(`${h}[${f}][${m}]`)}let o=e.name,u=e.getClassName(),c=i.length===0?"":i[0],l=[`${o} (${u})`,a,r,e.countParams().toString(),c];wd(l,t,s);for(let d=1;d<i.length;++d)wd(["","","","",i[d]],t,s)}function RI(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Qu(e,t){if(e===null)return null;if(typeof e=="string")return jr(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];RI(t,r,a)?n.push(a):n.push(Qu(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=jr(s);n[a]=Qu(r,a)}}return n}}function om(e,t){if(e==null)return null;if(typeof e=="string")return Vs(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];RI(t,r,a)?n.push(a):n.push(om(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=Vs(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=om(r,s)}return n}}var DI="0.0.0";function PL(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return pe(t,e.dtype)}catch(n){throw new U(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Yr=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Yr)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=PL(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new U(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ns){if(this.id2Value[e.id]==null)throw new U(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new U(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ns){if(this.id2Value[e.id]==null)throw new U(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new U(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ee(this.id2Mask)}},Af={},cx={};function $u(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),i=a?e:[e],o=i.map(f=>f.name),u=[],c=t.names();for(let f of o)c.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let l=o.join(",")+"|"+t.names().join(","),d,p;if(Af[l]==null){let f=zL(i,t);d=f.sorted,p=f.recipientCounts,Af[l]=d,cx[l]=p}d=Af[l],p={},r||Object.assign(p,cx[l]);let h=new Yr(t);for(let f=0;f<d.length;++f){if(s!=null){let _=Qf().numTensors;_>s.maxNumTensors&&(s.maxNumTensors=_),_<s.minNumTensors&&(s.minNumTensors=_)}let m=d[f],g=m.sourceLayer;if(g instanceof Ko)continue;let b=[],y=[],v=[],x=!1;for(let _ of m.inputs){let P=h.getValue(_),D=h.getMask(_);b.push(P),y.push(D),D!=null&&(x=!0),r||(p[_.name]--,p[_.name]===0&&!t.hasKey(_)&&o.indexOf(_.name)===-1&&!P.isDisposed&&_.sourceLayer.stateful!==!0&&v.push(P))}x&&(n=n||{},n.mask=y[0]);let k=dt(g.apply(b,n)),T=null;g.supportsMasking&&(T=g.computeMask(b,y));let C=LL(m),R=Array.isArray(C)?C:[C];for(let _=0;_<R.length;++_){h.hasKey(R[_])||h.add(R[_],k[_],Array.isArray(T)?T[0]:T);let P=o.indexOf(R[_].name);P!==-1&&(u[P]=k[_])}r||Ee(v)}return h.disposeMasks(),a?u:u[0]}function zL(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=dx(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:i,recipientMap:o}=dx(a,t);for(let u of i)r.has(u.name)||(n.push(u),r.add(u.name));for(let u in o)s[u]==null&&(s[u]=new Set),o[u].forEach(c=>s[u].add(c))}}return{sorted:n,recipientCounts:ML(s)}}function ML(e){let t={};for(let n in e)t[n]=e[n].size;return t}function dx(e,t){let n=new Set,s=[],r={};for(let o of t.names())n.add(o);let a=[],i=[];for(a.push(e);a.length>0;){let o=a[a.length-1];if(n.has(o.name)){a.pop();continue}let u=i[i.length-1]===a.length-1;if(o.inputs.length===0||u)a.pop(),s.push(o),n.add(o.name),u&&i.pop();else{i.push(a.length-1);for(let c of o.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(o.name),!n.has(c.name)&&a.push(c)}}return{sorted:s,recipientMap:r}}function LL(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var ws=class extends Ge{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=Sp(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],hr(this.inputs).length!==this.inputs.length)throw new U(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);hr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(x)}for(let b of this.inputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;Is(v===0,"input layer has >1 nodes"),Is(x===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(x)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let y=this.inputLayers[b];if(!(y instanceof Ko))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},n={},s={},r={},a={},i=[],o=(b,y,v,x,k,T)=>{(x==null||k==null||T==null)&&(x=b.sourceLayer,k=b.nodeIndex,T=b.tensorIndex);let C=x.inboundNodes[k];if(v.indexOf(C)!==-1)throw new cs(`The tensor ${b.name} at layer "${x.name}" is part of a cycle.`);if(y.indexOf(C)!==-1)return;this.containerNodes.add(ws.nodeKey(x,k)),x.id in a||(a[x.id]=Object.keys(a).length),v.indexOf(C)===-1&&v.push(C);let R=C.inboundLayers.length;for(let _=0;_<R;_++){let P=C.inputTensors[_],D=C.inboundLayers[_],F=C.nodeIndices[_],$=C.tensorIndices[_];o(P,y,v,D,F,$)}for(y.push(C);v.indexOf(C)>=0;)v.splice(v.indexOf(C),1);i.push(C)},u=[],c=[];for(let b of this.outputs)o(b,u,c);let l=i.slice().reverse();for(let b of l){n[b.id]=b,b.id in t||(t[b.id]=0);let y=t[b.id],v=s[b.outboundLayer.id]==null?0:s[b.outboundLayer.id];y=Math.max(y,v),s[b.outboundLayer.id]=y,r[b.outboundLayer.id]=b.outboundLayer,t[b.id]=y;for(let x=0;x<b.inboundLayers.length;x++){let k=b.inboundLayers[x],T=b.nodeIndices[x],C=k.inboundNodes[T],R=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(y+1,R),n[C.id]=C}}let d={};for(let b in t){let y=t[b];y in d||(d[y]=[]),d[y].push(n[b])}let p={};for(let b in s){let y=s[b];y in p||(p[y]=[]),p[y].push(r[b])}let h=Object.keys(p).map(b=>parseInt(b,10)).sort(Fc);this.layers=[];for(let b of h){let y=p[b];y.sort((v,x)=>{let k=a[v.id],T=a[x.id];return k<T?-1:k>T?1:0});for(let v of y)v instanceof ws&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=p,h=Object.keys(d).map(b=>parseInt(b,10)).sort(Fc);let f=this.inputs.slice(),m=[];for(let b of h)for(let y of d[b]){let v=y.outboundLayer;if(v!=null){for(let x of y.inputTensors)if(f.indexOf(x)===-1)throw new cs(`Graph disconnected: cannot obtain value for tensor ${x} at layer "${v.name}". The following previous layers were accessed without issue: ${m}`);for(let x of y.outputTensors)f.push(x);m.push(v.name)}}this.nodesByDepth=d;let g=this.layers.map(b=>b.name);for(let b of g){let y=g.filter(v=>v===b).length;if(y!==1)throw new cs(`The name "${b}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Cp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new U("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new U(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,s++}let r=[];for(let a in e){let i=a;if(n[a]==null){let o=a.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(n[i]!=null)r.push([n[i],e[a]]);else if(t)throw new U(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new U(`${a.length} of ${s} weights are not set: ${a}`)}wb(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${DI}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=om(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return H(()=>{e=dt(e);let n=new Yr;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return $u(this.outputs,n,t)})}computeMask(e,t){return H(()=>{e=dt(e);let n;return t==null?n=ha(null,e.length):n=dt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=md(e);if(t.length!==this.inputLayers.length)throw new U(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],u=t[i],c=o.name+"_0_0";n[c]=u}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Fc);if(s.length>1)for(let i of s){let o=this.nodesByDepth[i];for(let u of o){let c=u.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(c.id)!==-1)continue;let l=[];for(let f=0;f<u.inboundLayers.length;f++){let m=u.inboundLayers[f],g=u.nodeIndices[f],b=u.tensorIndices[f],y=`${m.name}_${g}_${b}`,v=n[y];l.push(v)}let d=c.computeOutputShape(bn(l)),p=md(d),h=c.inboundNodes.indexOf(u);for(let f=0;f<p.length;f++){let m=`${c.name}_${h}_${f}`;n[m]=p[f]}}}let r=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],u=this.outputLayersNodeIndices[i],c=this.outputLayersTensorIndices[i],l=`${o.name}_${u}_${c}`;a.push(l)}for(let i=0;i<a.length;i++){let o=a[i];Is(o in n),r.push(n[o])}return bn(r)}runInternalGraph(e,t){t==null&&(t=ha(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let u=this.inputs[o],c=e[o],l=t[o];n[u.id]=[c,l]}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Fc);for(let o of s){let u=this.nodesByDepth[o];for(let c of u){let l=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,h=new Array;for(let f of d)f.id in n&&h.push(n[f.id]);if(h.length===d.length){let f={},m,g,b,y;if(c.callArgs!=null&&(f=c.callArgs),h.length===1){let[v,x]=h[0];f.mask==null&&(f.mask=x),b=dt(l.call(v,f)),y=dt(l.computeMask(v,x)),m=[v],g=[x]}else m=h.map(v=>v[0]),g=h.map(v=>v[1]),f.mask==null&&(f.mask=g),b=dt(l.call(m,f)),y=dt(l.computeMask(m,g));if(l.activityRegularizer)throw new Re("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<p.length;++v){let x=p[v],k=b[v],T=y[v];n[x.id]=[k,T]}}}}let r=[],a=[],i=[];for(let o of this.outputs){Is(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[u,c]=n[o.id];i.push(u.shape),r.push(u),a.push(c)}return[r,a,i]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof ws?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=ws.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new U(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new U("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new U(`No such layer: ${e}`)}calculateLosses(){return H(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=ws.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),o=a.getConfig(),u=[];for(let l=0;l<a.inboundNodes.length;l++){let d=a.inboundNodes[l],p=ws.nodeKey(a,l),h={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],b=d.nodeIndices[m],y=d.tensorIndices[m],v=ws.nodeKey(g,b),x=t[v];x==null&&(x=0),f.push([g.name,x,y,h])}u.push(f)}}}let c={};c.name=a.name,c.className=i,c.config=o,c.inboundNodes=u,n.push(c)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],o=this.inputLayersNodeIndices[a],u=ws.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let l=this.inputLayersTensorIndices[a];s.push([i.name,c,l])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],o=this.outputLayersNodeIndices[a],u=ws.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let l=this.outputLayersTensorIndices[a];r.push([i.name,c,l])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function i(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function o(m,g){let b=[],y;for(let v of g){let x=v[0],k=v[1],T=v[2];if(y=v[3]==null?{}:v[3],!(x in r)){i(m,g);return}let C=r[x];if(C.inboundNodes.length<=k){i(m,g);return}let R=C.inboundNodes[k];b.push(R.outputTensors[T])}b.length>0&&m.apply(bn(b),y)}function u(m){let g=m.name,b=ps(m,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(s),r[g]=b,m.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new U(`Corrupted configuration, expected array for nodeData: ${v}`);i(b,v)})}let c=t.name,l=t.layers;for(let m of l)u(m);for(;!cM(a);)for(let m of l){let g=r[m.name];if(g.name in a){let b=a[g.name];delete a[g.name];for(let y of b)o(g,y)}}let d=[],p=[],h=t.inputLayers;for(let m of h){let g=m[0],b=m[1],y=m[2];Is(g in r);let x=r[g].inboundNodes[b].outputTensors;d.push(x[y])}let f=t.outputLayers;for(let m of f){let g=m[0],b=m[1],y=m[2];Is(g in r);let x=r[g].inboundNodes[b].outputTensors;p.push(x[y])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new U("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){H(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function BL(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function FI(e,t){return BL(e,t,"classWeight")}async function OI(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=H(()=>{if(e.shape.length===1)return pr(e);if(e.shape.length===2){if(e.shape[1]>1)return Gu(e,1);if(e.shape[1]===1)return G(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());Ee(r);let i=[];return a.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),Jt(i,"float32")}else return null}function VL(e,t){return V(e,t)}var WL=32;function PI(e,t){let n,s,r=t;n=r.xs,s=r.ys,w.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=px("input",e.inputNames,n),i=px("output",e.outputNames,s),o=a[0].shape[0];w.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let u=0;u<a.length;u++)w.assert(a[u].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${a[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let u=0;u<i.length;u++)w.assert(i[u].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:a,ys:i}}function px(e,t,n){if(n instanceof tt)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new U(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function UL(e){if(e.length===3)throw new Re("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function GL(e,t,n){let s=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,i;if(r)if(hx(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=UL(n.validationData);a=g.xs,i=g.ys}let o=e.makeTrainFunction(),u=e.getDedupedMetricsNames(),c;r?c=u.slice().concat(u.map(g=>"val_"+g)):c=u.slice();let l=CI(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:h}=NI(l,d,n.epochs,null,null,HL(t,n),null,r,c);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await p.onEpochBegin(f);let b=0,y=0;for(s||(m=await t.iterator());s?b<n.batchesPerEpoch:!0;){let v=await m.next();if(s&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){let{xs:x,ys:k}=PI(e,v.value),T={};T.batch=y,T.size=x[0].shape[0],await p.onBatchBegin(y,T);let C=[];if(n.classWeight!=null){let P=FI(n.classWeight,e.outputNames);for(let D=0;D<P.length;++D)C.push(await OI(k[D],null,P[D]))}let R=x.concat(k).concat(C),_=o(R);Ee(R);for(let P=0;P<u.length;++P){let D=u[P],F=_[P];T[D]=F,jt(F)}await p.onBatchEnd(y,T),SI(T),y++,b++}if(s?b>=n.batchesPerEpoch:v.done){if(r){let x;hx(n.validationData)?x=dt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):x=dt(e.evaluate(a,i,{batchSize:n.validationBatchSize==null?WL:n.validationBatchSize,verbose:0}));for(let k=0;k<e.metricsNames.length;++k)g[`val_${e.metricsNames[k]}`]=x[k]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function HL(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function hx(e){return typeof e.iterator=="function"}function qL(e){return typeof e.next=="function"}async function jL(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Re("Verbose mode is not implemented yet.");w.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=qL(t)?t:await t.iterator(),o=0,u=0;for(;s?u<n.batches:!0;){let c=await i.next();if(a=H(()=>{if(c.value){let{xs:l,ys:d}=PI(e,c.value),p=l.concat(d),h=H(()=>r(p));if(Ee(p),u===0)for(let m=0;m<h.length;++m)a.push(Ce(0));let f=p[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],b=a[m];a[m]=H(()=>oe(a[m],V(f,g))),u>0&&Ee(b)}Ee(h),o+=f,++u}return a}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<a.length;++c){let l=a[c];a[c]=Se(a[c],o),Ee(l)}return bn(a)}function um(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Au(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>ea(s,t,n-t)):ea(e,t,n-t)}function Tb(e,t){return H(()=>e==null?null:Array.isArray(e)?e.map(n=>Tb(n,t)):vI(e,t.dtype==="int32"?t:pe(t,"int32")))}function lm(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function KL(e,t,n,s,r,a,i,o,u,c,l,d,p,h,f){r==null&&(r=32),a==null&&(a=1),l==null&&(l=!0),p==null&&(p=0);let m=!1;if(u!=null&&c!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new U("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),b;g!=null&&(b=gs(0,g)),i==null&&(i=1);let{callbackList:y,history:v}=NI(o,i,a,p,g,h,r,m,d);y.setModel(e),e.history=v,await y.onTrainBegin(),e.stopTraining_=!1;for(let x=p;x<a;++x){await y.onEpochBegin(x);let k={};if(h!=null)throw new Re("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Re("batch shuffling is not implemneted yet");l&&w.shuffle(b);let T=Jt(b),C=lm(g,r);for(let R=0;R<C.length;++R){let _={};if(await y.onBatchBegin(R,_),H(()=>{let P=C[R][0],D=C[R][1],F=ea(T,P,D-P);_.batch=R,_.size=D-P;let $=Tb(n,F),z=t($);for(let W=0;W<s.length;++W){let q=s[W],K=z[W];_[q]=K,jt(K)}if(R===C.length-1&&m){let W=e.testLoop(u,c,r);for(let q=0;q<s.length;++q){let K=s[q],j=W[q];jt(j),k["val_"+K]=j}}}),await y.onBatchEnd(R,_),SI(_),e.stopTraining_)break}T.dispose()}if(await y.onEpochEnd(x,k),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}async function XL(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,i,o,u,c,l,d,p;try{let h=s.batchSize==null?32:s.batchSize;um(h);let f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,h);r=m[0],a=m[1],p=m[2];let g=!1,b;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)u=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new Re("validationData including sample weights is not supported yet."):new U(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let _=!0,P=await e.standardizeUserData(u,c,null,null,_,h);l=P[0],d=P[1],b=l.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;let _=Math.floor(r[0].shape[0]*(1-s.validationSplit)),P=r[0].shape[0];l=Au(r,_,P),i=r,r=Au(r,0,_),d=Au(a,_,P),o=a,a=Au(a,0,_),b=l.concat(d)}else s.validationSteps!=null&&(g=!0);let y=r.concat(a).concat(p);e.checkTrainableWeightsConsistency();let v=e.makeTrainFunction(),x=e.getDedupedMetricsNames(),k,T;g?(e.makeTestFunction(),k=e.testFunction,T=x.slice().concat(x.map(_=>"val_"+_))):(k=null,b=[],T=x.slice());let C=CI(s.callbacks,s.yieldEvery);return await KL(e,v,y,x,h,s.epochs,s.verbose,C,k,b,s.shuffle,T,s.initialEpoch,null,null)}finally{e.isTraining=!1,os(r,t),os(a,n),os(i,t),os(o,n),os(l,u),os(d,c),p!=null&&Ee(p)}}function zI(e){let t=[];e instanceof tt&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(Ll(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function os(e,t){if(e==null)return;let n=[];if(t instanceof tt)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof tt)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function YL(e){return e instanceof tt}function cm(e){return Array.isArray(e)}function fx(e){return!YL(e)&&!cm(e)}function mx(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(cm(e)&&e.length>0)i=!0;else if(fx(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new U(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let a;if(fx(e)){e=e,a=[];for(let i of t){if(e[i]==null)throw new U(`No data provided for "${i}". Need data for each key in: ${t}`);a.push(e[i])}}else if(cm(e)){if(e=e,e.length!==t.length)throw new U(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new U(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=zI(a),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=a[i];if(o.shape.length!==n[i].length)throw new U(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let u=0;u<n[i].length;++u){if(u===0&&!s)continue;let c=o.shape[u],l=n[i][u];if(l!=null&&l>=0&&c!==l)throw new U(`${r} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${r} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return a}function QL(e,t,n){let s=hr(e.map(a=>a.shape[0]));s.sort();let r=hr(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new U(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new U(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!w.arraysEqual(s,r))throw new U(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function ZL(e,t,n){let s=[mi,Tp,Yu];for(let r=0;r<e.length;++r){let a=e[r],i=t[r],o=n[r];if(i!=null){if(i===Yu&&a.shape[a.shape.length-1]===1)throw new U(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){let u=a.shape.slice(1),c=o.slice(1);for(let l=0;l<u.length;++l){let d=u[l],p=c[l];if(p!=null&&d!==p)throw new U(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function gx(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new U(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new U(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=a[i];if(o.shape.length!==n[i].length)throw new U(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let u=0;u<n[i].length;++u){if(u===0&&!s)continue;let c=o.shape[u],l=n[i][u];if(l!=null&&l!==c)throw new U(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function JL(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var eB="layers-model",mr=class extends ws{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new U("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");_L(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=EL(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof _r))throw new U("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new U(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push($f(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new U(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>$f(i))}else{let a=$f(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],o=this.outputNames[a];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Jr("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=JL(e.metrics,this.outputNames),r=(a,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,a])};Jr("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=s[a];(u=>{let c="",l,d,p;for(let h of u){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===Tp?["accuracy","acc"].indexOf(h)!==-1?d=Sb:["crossentropy","ce"].indexOf(h)!==-1&&(d=AI):this.lossFunctions[a]===yd?["accuracy","acc"].indexOf(h)!==-1?d=EI:["crossentropy","ce"].indexOf(h)!==-1&&(d=_I):["accuracy","acc"].indexOf(h)!==-1?d=Cb:["crossentropy","ce"].indexOf(h)!==-1&&(d=Nb);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),p=d,l=c+g}else p=AL(h),l=c+zc(h);let f;Jr(l,()=>{f=p}),r(a,l,f)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;um(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let i=a[0].concat(a[1]);this.makeTestFunction();let o=this.testFunction,u=this.testLoop(o,i,s,n.verbose,n.steps);return bn(u)}finally{os(a[0],e),os(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),jL(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new U(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new U(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new U("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Yr;if(e instanceof tt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new U(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)a.add(this.inputs[o],e[o])}else for(let o of this.inputs){let u=e[o.name];if(u==null)throw new U(`No value is provided for the model's input ${o.name}`);a.add(o,u)}let i=$u(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=ha(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(i=>i.name);for(let i=0;i<e.length;++i){let o=a.indexOf(e[i]);if(o!==-1&&(t[i]=r[o],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new U(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return H(()=>{let s=this.checkNumSamples(e);if(n)throw new Re("Verbose predictLoop() is not implemented yet.");let r=lm(s,t),a=this.outputs.map(i=>[]);for(let i=0;i<r.length;++i)H(()=>{let u=r[i][0],c=r[i][1],l=Au(e,u,c),d=[];if(Array.isArray(l))for(let h=0;h<l.length;++h)d.push({key:this.inputs[h],value:l[h]});else d.push({key:this.inputs[0],value:l});let p=new Yr(d);return $u(this.outputs,p)}).forEach((u,c)=>a[c].push(u));return bn(a.map(i=>Dt(i,0)))})}predict(e,t={}){let n=zI(e);gx(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return um(s),this.predictLoop(n,s)}finally{os(n,e)}}predictOnBatch(e){gx(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new cs("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===yd?r.push(i.slice(0,i.length-1).concat([1])):r.push(i)}if(e=mx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=mx(t,this.feedOutputNames,r,!1,"target"),QL(e,t,null),ZL(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new U(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[i,o]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(s!=null){let c=FI(s,this.outputNames);u=[];for(let l=0;l<c.length;++l)u.push(await OI(o[l],null,c[l]))}return[i,o,u]}testLoop(e,t,n,s=0,r){return H(()=>{let a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new Re("Verbose mode is not implemented yet.");if(r!=null)throw new Re("steps mode in testLoop() is not implemented yet");{let o=lm(a,n),u=Jt(gs(0,a));for(let c=0;c<o.length;++c){let l=o[c][0],d=o[c][1],p=ea(u,l,d-l),h=Tb(t,p),f=e(h);if(c===0)for(let m=0;m<f.length;++m)i.push(Ce(0));for(let m=0;m<f.length;++m){let g=f[m];i[m]=oe(i[m],V(d-l,g))}}for(let c=0;c<i.length;++c)i[c]=Se(i[c],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;ex(e,s)>1&&(r+=`_${ex(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let l=[];for(let f=0;f<this.inputs.length;++f)l.push({key:this.inputs[f],value:n[f]});let d=new Yr(l),p=$u(this.outputs,d,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](s[f],p[f]);r[f]!=null&&(g=VL(g,r[f]));let b=St(g);t.push(b),f===0?h=g:h=oe(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],b=this.metricsTensors[f][1];m=St(g(s[b],p[b]))}jt(m),a.push(m)}return h=St(h),this.calculateLosses().forEach(f=>{h=oe(h,f)}),h},o=this.collectedTrainableWeights.map(l=>l.read()),u=!0;return[this.optimizer_.minimize(i,u,o)].concat(a)}}makeTestFunction(){this.testFunction=e=>H(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:s[u]});let i=new Yr(a),o=$u(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let c=this.lossFunctions[u],l=St(c(r[u],o[u]));u===0?n=l:n=oe(n,l),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let c=this.metricsTensors[u][0],l=this.metricsTensors[u][1],d=St(c(r[l],o[l]));t.push(d)}return t})}async fit(e,t,n={}){return XL(this,e,t,n)}async fitDataset(e,t){return GL(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],i=this.makeTrainFunction()(s.concat(r)),o=[];for(let u of i){let c=await u.data();o.push(c[0])}return Ee(i),os(n[0],e),os(n[1],t),bn(o)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Qf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Qf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Vs(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Vs(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=Vs(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Vs(zc(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Vs(zc(e)));{let e={};for(let t in this.metrics)e[t]=Vs(zc(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Qu(e.optimizer_config),n=ps(t),s;if(typeof e.loss=="string")s=jr(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>jr(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=jr(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>jr(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=jr(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=An.getSaveHandlers(e);if(u.length===0)throw new U(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new U(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new U("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await An.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,i={modelTopology:this.toJSON(r,s),format:eB,generatedBy:`TensorFlow.js tfjs-layers v${DI}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:c,specs:l}=await An.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...l),n.data=An.concatenateArrayBuffers([n.data,c])}return this.userDefinedMetadata!=null&&(lx(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){lx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};mr.className="Model";ae.registerClass(mr);var MI=class extends mr{};MI.className="Functional";ae.registerClass(MI);async function tB(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=Qu(n),r=ps(s,t);if(e.weightsManifest!=null){let a=await An.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(o=>o.originalName)),i={};for(let o of r.weights)i[o.originalName]=a[o.originalName];r.loadWeights(i),Ee(a)}return r}async function nB(e,t){if(t==null&&(t={}),typeof e=="string"){let n=An.getLoadHandlers(e,t);if(n.length===0)n.push(An.browserHTTPRequest(e,t));else if(n.length>1)throw new U(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return sB(e,void 0,t)}async function sB(e,t,n){if(n==null&&(n={}),e.load==null)throw new U("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,i=s.weightData!=null&&s.weightSpecs!=null&&a,o=ps(Qu(r),t,i),u=s.trainingConfig;if(u!=null&&o.loadTrainingConfig(u),s.userDefinedMetadata!=null&&o.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new U("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:c,optimizerWeights:l}=rB(s.weightData,s.weightSpecs);o.loadWeights(c,a),o.optimizer!=null&&l.length>0&&await o.optimizer.setWeights(l),Ee(c),Ee(l.map(d=>d.tensor))}return o}function rB(e,t){let n=An.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var dm=class extends mr{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Sp("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new U(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof dm||e instanceof mr,n;if(t){if(n=e,n.outputs.length!==1)throw new U("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new U("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new U("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=II({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new U(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new U("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=kI(this.outputs[0])}this.inboundNodes=[],new Cp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ha(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(nt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new mr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new cs("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new cs("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new cs("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new cs("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new U("Legacy serialization format not supported yet.");r=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof dm))throw new Re(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of r){let c=ps(o,void 0,s);s&&c.setFastWeightInitDuringBuild(!0),i.add(c)}return i}set stopTraining(e){if(this.model==null)throw new U("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new U("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},$b=dm;$b.className="Sequential";ae.registerClass($b);function Gde(e){return new mr(e)}function Hde(e){return new $b(e)}function qde(e,t){return t==null&&(t={}),nB(e,t)}function aB(e){return II(e)}function jde(e,t){kb.registerCallbackConstructor(e,t)}var kn=class extends ae.Serializable{getConfig(){return{}}},LI=class extends kn{apply(e,t=1){return AM(e,t)}};LI.className="elu";ae.registerClass(LI);var BI=class extends kn{apply(e){return Wk(e)}};BI.className="selu";ae.registerClass(BI);var VI=class extends kn{apply(e){return Ks(e)}};VI.className="relu";ae.registerClass(VI);var WI=class extends kn{apply(e){return H(()=>up(6,Ks(e)))}};WI.className="relu6";ae.registerClass(WI);var UI=class extends kn{apply(e){return e}};UI.className="linear";ae.registerClass(UI);var GI=class extends kn{apply(e){return Hs(e)}};GI.className="sigmoid";ae.registerClass(GI);var HI=class extends kn{apply(e){return _M(e)}};HI.className="hardSigmoid";ae.registerClass(HI);var qI=class extends kn{apply(e){return Ol(e)}};qI.className="softplus";ae.registerClass(qI);var jI=class extends kn{apply(e){return EM(e)}};jI.className="softsign";ae.registerClass(jI);var KI=class extends kn{apply(e){return Hu(e)}};KI.className="tanh";ae.registerClass(KI);var Ab=class extends kn{apply(e,t=-1){return jg(e,t)}};Ab.className="softmax";ae.registerClass(Ab);var XI=class extends kn{apply(e,t=-1){return Rk(e,t)}};XI.className="logSoftmax";ae.registerClass(XI);var YI=class extends kn{apply(e,t=1){return H(()=>V(Hs(V(e,t)),e))}};YI.className="swish";ae.registerClass(YI);var QI=class extends kn{apply(e){return H(()=>V(e,Hu(Ol(e))))}};QI.className="mish";ae.registerClass(QI);function xr(e){return e.getClassName()}function Ef(e,t={}){return zl(e,ae.SerializationMap.getMap().classNameMap,t,"activation")}function wr(e){if(e==null){let t={};return t.className="linear",t.config={},Ef(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},Ef(t)}else return e instanceof kn?e:Ef(e)}function Eb(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var ZI=class extends ae.Serializable{},Wl=class extends ZI{constructor(e){super();Eb(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return H(()=>{let t=Tt([1]);return this.hasL1&&(t=oe(t,ve(V(this.l1,Mt(e))))),this.hasL2&&(t=oe(t,ve(V(this.l2,Bl(e))))),G(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Wl.className="L1L2";ae.registerClass(Wl);function iB(e){return Eb(e),new Wl({l1:e!=null?e.l1:null,l2:0})}function oB(e){return Eb(e),new Wl({l2:e!=null?e.l2:null,l1:0})}var bx={l1l2:"L1L2"};function it(e){return ib(e)}function yx(e,t={}){return zl(e,ae.SerializationMap.getMap().classNameMap,t,"regularizer")}function gt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in bx?bx[e]:e,config:{}};return yx(n)}else return e instanceof ZI?e:yx(e)}var _b=class extends Ge{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=De(e);let n=Ks(e);return this.maxValue!=null&&(n=Vn(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};_b.className="ReLU";ae.registerClass(_b);var Rb=class extends Ge{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=De(e);return Fg(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Rb.className="LeakyReLU";ae.registerClass(Rb);var Db=class extends Ge{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=mt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gt(e.alphaRegularizer),this.alphaConstraint=Ot(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new U(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=nt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Rt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=De(e),Wg(e,this.alpha.read())}getConfig(){let e={alphaInitializer:yt(this.alphaInitializer),alphaRegularizer:it(this.alphaRegularizer),alphaConstraint:Ft(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Db.className="PReLU";ae.registerClass(Db);var Fb=class extends Ge{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Re(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=De(e);return ap(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Fb.className="ELU";ae.registerClass(Fb);var Ob=class extends Ge{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=De(e);return V(n,pe(Un(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Ob.className="ThresholdedReLU";ae.registerClass(Ob);var Pb=class extends Ge{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Ab().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=De(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Pb.className="Softmax";ae.registerClass(Pb);function qi(e,t,n){if(typeof e=="number")return ha(e,t);if(e.length!==t)throw new U(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!CM(r))throw new U(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function hs(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),i;return n==="same"?i=e:i=e-a+1,Math.floor((i+s-1)/s)}function Ss(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+vr([n-t,0]);else if(s==="same")e=e*t;else throw new U(`Unsupport padding mode: ${s}.`);return e}function zb(e,t){return H(()=>(Ct(t),t==="channelsFirst"?qe(e,[0,2,3,1]):e))}function JI(e,t){return H(()=>(Ct(t),t==="channelsFirst"?qe(e,[0,2,3,4,1]):e))}function uB(e,t,n,s=1,r="valid",a,i=1){return H(()=>{if(a==null&&(a=ms()),Ct(a),e.shape.length!==3)throw new U(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new U(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new U(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=qe(e,[0,2,1])),r==="causal")throw new Re("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Sk(e,t,s,r==="same"?"same":"valid","NWC",i);return n!=null&&(o=vs(o,n)),o})}function vx(e,t,n,s=[1,1],r="valid",a,i,o=null){return H(()=>{if(a==null&&(a=ms()),Ct(a),e.rank!==3&&e.rank!==4)throw new U(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new U(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=zb(e,a);if(r==="causal")throw new Re("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=pa.conv2d({x:u,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),a==="channelsFirst"&&(u=qe(u,[0,3,1,2])),u})}function lB(e,t,n,s=[1,1,1],r="valid",a,i){return H(()=>{if(a==null&&(a=ms()),Ct(a),e.rank!==4&&e.rank!==5)throw new U(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new U(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=JI(e,a);if(r==="causal")throw new Re("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Nk(o,t,s,r==="same"?"same":"valid","NDHWC",i),n!=null&&(o=vs(o,n)),a==="channelsFirst"&&(o=qe(o,[0,4,1,2,3])),o})}var Mb=class extends Ge{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Mb.verifyArgs(t),this.rank=e,Bt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Re(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=qi(t.kernelSize,e,"kernelSize"),this.strides=qi(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Gn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ct(this.dataFormat),this.activation=wr(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=mt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ot(t.biasConstraint),this.biasRegularizer=gt(t.biasRegularizer),this.activityRegularizer=gt(t.activityRegularizer),this.dilationRate=qi(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new U(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new U(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new U(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Is("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!ob(e.kernelSize,"number",1,3))throw new U(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:xr(this.activation),useBias:this.useBias,biasInitializer:yt(this.biasInitializer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),biasConstraint:Ft(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Ul=class extends Mb{constructor(e,t){super(e,t);this.kernel=null,Ul.verifyArgs(t),this.filters=t.filters,Bt(this.filters,"filters"),this.kernelInitializer=mt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ot(t.kernelConstraint),this.kernelRegularizer=gt(t.kernelRegularizer)}build(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new U(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return H(()=>{e=De(e);let n,s=this.bias==null?null:this.bias.read(),r=fI(this.activation.getClassName());if(r!=null&&this.rank===2)n=vx(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=uB(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=vx(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=lB(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Re("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=nt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=hs(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:yt(this.kernelInitializer),kernelRegularizer:it(this.kernelRegularizer),kernelConstraint:Ft(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new U(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},e0=class extends Ul{constructor(e){super(2,e);e0.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ob(e.kernelSize,"number",1,2))throw new U(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},$p=e0;$p.className="Conv2D";ae.registerClass($p);var t0=class extends Ul{constructor(e){super(3,e);t0.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new U(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},Ap=t0;Ap.className="Conv3D";ae.registerClass(Ap);var Lb=class extends $p{constructor(e){super(e);if(this.inputSpec=[new Rt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new U(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=nt(e),e.length!==4)throw new U("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new U("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Rt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return H(()=>{let n=De(e);if(n.shape.length!==4)throw new U(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let o=s[a],u=s[i],c=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=Ss(o,d,c,this.padding),f=Ss(u,p,l,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,1]));let g=Ck(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=qe(g,[0,3,1,2])),this.bias!=null&&(g=vs(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=nt(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[s]=Ss(t[s],o,a,this.padding),t[r]=Ss(t[r],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Lb.className="Conv2DTranspose";ae.registerClass(Lb);var Bb=class extends Ap{constructor(e){super(e);if(this.inputSpec=[new Rt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new U(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=nt(e),e.length!==5)throw new U("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new U("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Rt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return H(()=>{let n=De(e);if(n.shape.length!==5)throw new U(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,i,o;this.dataFormat==="channelsFirst"?(o=2,a=3,i=4):(o=1,a=2,i=3);let u=s[o],c=s[a],l=s[i],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],b=Ss(u,f,d,this.padding),y=Ss(c,m,p,this.padding),v=Ss(l,g,h,this.padding),x=[r,b,y,v,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,4,1]));let k=N_(n,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=qe(k,[0,4,1,2,3])),this.bias!==null&&(k=vs(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(e){e=nt(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],l=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[s]=Ss(t[s],c,i,this.padding),t[r]=Ss(t[r],l,o,this.padding),t[a]=Ss(t[a],d,u,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Bb.className="Conv3DTranspose";ae.registerClass(Bb);var n0=class extends Ul{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new U("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new U("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new U(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=mt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gt(t.depthwiseRegularizer),this.depthwiseConstraint=Ot(t.depthwiseConstraint),this.pointwiseInitializer=mt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gt(t.pointwiseRegularizer),this.pointwiseConstraint=Ot(t.pointwiseConstraint)}build(e){if(e=nt(e),e.length<this.rank+2)throw new U(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new U(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Rt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return H(()=>{e=De(e);let n;if(this.rank===1)throw new Re("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=qe(e,[0,2,3,1])),n=DD(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=vs(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=qe(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=yt(this.depthwiseInitializer),e.pointwiseInitializer=yt(this.pointwiseInitializer),e.depthwiseRegularizer=it(this.depthwiseRegularizer),e.pointwiseRegularizer=it(this.pointwiseRegularizer),e.depthwiseConstraint=Ft(this.depthwiseConstraint),e.pointwiseConstraint=Ft(this.pointwiseConstraint),e}};n0.className="SeparableConv";var Vb=class extends n0{constructor(e){super(2,e)}};Vb.className="SeparableConv2D";ae.registerClass(Vb);var s0=class extends Ul{constructor(e){super(1,e);s0.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ob(e.kernelSize,"number",1,1))throw new U(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Wb=s0;Wb.className="Conv1D";ae.registerClass(Wb);var Ub=class extends Ge{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return H(()=>{if(e=De(e),this.dataFormat==="channelsLast"){let n=Oc(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Oc(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Oc(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Oc(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Ub.className="Cropping2D";ae.registerClass(Ub);var Gb=class extends Ge{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ct(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,kM(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return H(()=>{let n=De(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=qe(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],i=this.interpolation==="nearest"?ls.resizeNearestNeighbor(n,[r,a]):ls.resizeBilinear(n,[r,a]);return qe(i,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?ls.resizeNearestNeighbor(n,[r,a]):ls.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Gb.className="UpSampling2D";ae.registerClass(Gb);function cB(e,t,n=[1,1],s="valid",r,a){return H(()=>{r==null&&(r=ms()),Ct(r);let i=zb(e,r);if(e.rank!==4)throw new U(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new U(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=rp(i,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(i=qe(i,[0,3,1,2])),i})}var Hb=class extends Mb{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=mt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ot(e.depthwiseConstraint),this.depthwiseRegularizer=gt(e.depthwiseRegularizer)}build(e){if(e=nt(e),e.length<4)throw new U(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new U(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return H(()=>{e=De(e);let n=cB(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=vs(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=hs(t,this.kernelSize[0],this.padding,this.strides[0]),a=hs(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=yt(this.depthwiseInitializer),e.depthwiseRegularizer=it(this.depthwiseRegularizer),e.depthwiseConstraint=Ft(this.depthwiseRegularizer),e}};Hb.className="DepthwiseConv2D";ae.registerClass(Hb);function r0(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new U("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function a0(e,t,n,s=!1,r,a,i=!1,o=!1){return H(()=>{let u=t.shape.length;if(u<3)throw new U(`Input should be at least 3D, but is ${u}D.`);let c=[1,0].concat(gs(2,u));if(t=qe(t,c),a!=null)throw new Re("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=pe(pe(r,"bool"),"float32"),r.rank===u-1&&(r=Pn(r,-1)),r=qe(r,c)),s&&(t=es(t,0),r!=null&&(r=es(r,0)));let l=[],d,p=n,h=t.shape[0],f=Rs(t),m;r!=null&&(m=Rs(r));for(let b=0;b<h;++b){let y=f[b],v=H(()=>e(y,p));if(r==null)d=v[0],p=v[1];else{let x=H(()=>{let k=m[b],T=be(Jn(k),k),C=oe(V(v[0],k),V(p[0],T)),R=p.map((_,P)=>oe(V(v[1][P],k),V(_,T)));return{output:C,newStates:R}});d=x.output,p=x.newStates}o&&l.push(d)}let g;return o&&(g=ts(l,1)),[d,g,p]})}var i0=class extends Ge{constructor(e){super(e);let t;if(e.cell==null)throw new U("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Rp({cells:e.cell}):t=e.cell,t.stateSize==null)throw new U("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Rt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return gs(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){rm(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return H(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Re("Constants support is not implemented in RNN yet.");rm(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Rt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new U(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Rt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){H(()=>{if(!this.stateful)throw new Bs("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new U("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Tt([n,s])):this.states_=[Tt([n,this.cell.stateSize])];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Tt([n,s])):this.states_[0]=Tt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new U(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,i=[n,a];if(!w.arraysEqual(r.shape,i))throw new U(`State ${s} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>jt(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=r0(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new Rt({shape:u.shape}));i=i.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Ns){let u=[e].concat(a),c=this.inputSpec.concat(i),l=this.inputSpec;this.inputSpec=c;let d=super.apply(u,t);return this.inputSpec=l,d}else return super.apply(e,t)}call(e,t){return H(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=De(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new U(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:s},u=a0((h,f)=>{let m=this.cell.call([h].concat(f),i);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=u[0],l=u[1],d=u[2];this.stateful&&this.resetStates(d,s);let p=this.returnSequences?l:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return H(()=>{let t=Tt(e.shape);return t=ve(t,[1,2]),t=Ll(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?nm(t,[1,n]):t):this.cell.stateSize>1?[nm(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===i0.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=ps(s,n);return new e(Object.assign(t,{cell:r}))}},Rr=i0;Rr.className="RNN";ae.registerClass(Rr);var Gl=class extends Ge{},Ep=class extends Gl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Bt(this.units,"units"),this.activation=wr(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=mt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gt(e.kernelRegularizer),this.recurrentRegularizer=gt(e.recurrentRegularizer),this.biasRegularizer=gt(e.biasRegularizer),this.kernelConstraint=Ot(e.kernelConstraint),this.recurrentConstraint=Ot(e.recurrentConstraint),this.biasConstraint=Ot(e.biasConstraint),this.dropout=Xi([1,vr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Xi([1,vr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return H(()=>{if(e=e,e.length!==2)throw new U(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=kr({ones:()=>Jn(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=kr({ones:()=>Jn(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?r=As(V(e,a),this.kernel.read()):r=As(e,this.kernel.read()),this.bias!=null&&(r=vs(r,this.bias.read())),i!=null&&(n=V(n,i));let o=oe(r,As(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:xr(this.activation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),recurrentInitializer:yt(this.recurrentInitializer),biasInitializer:yt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Ft(this.kernelConstraint),recurrentConstraint:Ft(this.recurrentConstraint),biasConstraint:Ft(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};Ep.className="SimpleRNNCell";ae.registerClass(Ep);var qb=class extends Rr{constructor(e){e.cell=new Ep(e);super(e)}call(e,t){return H(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};qb.className="SimpleRNN";ae.registerClass(qb);var _p=class extends Gl{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new U("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Bt(this.units,"units"),this.activation=wr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=wr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=mt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gt(e.kernelRegularizer),this.recurrentRegularizer=gt(e.recurrentRegularizer),this.biasRegularizer=gt(e.biasRegularizer),this.kernelConstraint=Ot(e.kernelConstraint),this.recurrentConstraint=Ot(e.recurrentConstraint),this.biasConstraint=Ot(e.biasConstraint),this.dropout=Xi([1,vr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Xi([1,vr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return H(()=>{if(e=e,e.length!==2)throw new U(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=kr({ones:()=>Jn(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=kr({ones:()=>Jn(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,i,o,u;0<this.dropout&&this.dropout<1&&(e=V(e,r[0]));let c=As(e,this.kernel.read());this.useBias&&(c=vs(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=V(s,a[0]));let l=this.recurrentKernel.read(),[d,p]=Bn(l,[2*this.units,this.units],l.rank-1),h=As(s,d),[f,m,g]=Bn(c,3,c.rank-1),[b,y]=Bn(h,2,h.rank-1);i=this.recurrentActivation.apply(oe(f,b)),o=this.recurrentActivation.apply(oe(m,y));let v=As(V(o,s),p);u=this.activation.apply(oe(g,v));let x=oe(V(i,s),V(oe(1,It(i)),u));return[x,x]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:xr(this.activation),recurrentActivation:xr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),recurrentInitializer:yt(this.recurrentInitializer),biasInitializer:yt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Ft(this.kernelConstraint),recurrentConstraint:Ft(this.recurrentConstraint),biasConstraint:Ft(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};_p.className="GRUCell";ae.registerClass(_p);var jb=class extends Rr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new _p(e);super(e)}call(e,t){return H(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};jb.className="GRU";ae.registerClass(jb);var Hl=class extends Gl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Bt(this.units,"units"),this.activation=wr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=wr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=mt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=gt(e.kernelRegularizer),this.recurrentRegularizer=gt(e.recurrentRegularizer),this.biasRegularizer=gt(e.biasRegularizer),this.kernelConstraint=Ot(e.kernelConstraint),this.recurrentConstraint=Ot(e.recurrentConstraint),this.biasConstraint=Ot(e.biasConstraint),this.dropout=Xi([1,vr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Xi([1,vr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=nt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends rs{apply(i,o){let u=r.apply([a]),c=new bp().apply([a]),l=r.apply([a*2]);return rx(rx(u,c),l)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return H(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new U(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=kr({ones:()=>Jn(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=kr({ones:()=>Jn(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,o,u,c,l;0<this.dropout&&this.dropout<1&&(e=V(e,a[0]));let d=As(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=V(s,i[0])),d=oe(d,As(s,this.recurrentKernel.read())),this.useBias&&(d=vs(d,this.bias.read()));let[p,h,f,m]=Bn(d,4,d.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(h),c=oe(V(u,r),V(o,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=V(l,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:xr(this.activation),recurrentActivation:xr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),recurrentInitializer:yt(this.recurrentInitializer),biasInitializer:yt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Ft(this.kernelConstraint),recurrentConstraint:Ft(this.recurrentConstraint),biasConstraint:Ft(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};Hl.className="LSTMCell";ae.registerClass(Hl);var Kb=class extends Rr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Hl(e);super(e)}call(e,t){return H(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Kb.className="LSTM";ae.registerClass(Kb);var Rp=class extends Gl{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return H(()=>{e=e;let n=e.slice(1),s=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?s.push(n.splice(0,i.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=s[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(let i of r.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){rm(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{Jr(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(ps(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return am(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}wb(t)}};Rp.className="StackedRNNCells";ae.registerClass(Rp);function kr(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>a!=null?a(t(),n):xI(t(),n),o=()=>Vl(i,t,s);return!r||r<=1?jt(o().clone()):Array(r).fill(void 0).map(o).map(c=>jt(c.clone()))}var o0=class extends Rr{constructor(e){if(e.unroll)throw new Re("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Re("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Rt({ndim:5})]}call(e,t){return H(()=>{if(this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new U("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return H(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Tt(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){H(()=>{if(!this.stateful)throw new Bs("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new U("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Tt(r)):this.states_=[Tt(r)];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Tt(r)):this.states_[0]=Tt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new U(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let i=0;i<this.states_.length;++i){let o=e[i],u=r;if(!w.arraysEqual(o.shape,u))throw new U(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${o.shape}`);this.states_[i]=o}}this.states_=this.states_.map(i=>jt(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o=t==="channelsFirst",u=e[o?3:2],c=e[o?4:3],l=hs(u,s[0],r,a[0],i[0]),d=hs(c,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,l,d]:[l,d,n]]}};o0.className="ConvRNN2D";var Dp=class extends Hl{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super({...e,units:t});this.filters=t,Bt(this.filters,"filters"),this.kernelSize=qi(n,2,"kernelSize"),this.kernelSize.forEach(o=>Bt(o,"kernelSize")),this.strides=qi(s||1,2,"strides"),this.strides.forEach(o=>Bt(o,"strides")),this.padding=r||"valid",Gn(this.padding),this.dataFormat=a||"channelsLast",Ct(this.dataFormat),this.dilationRate=qi(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Bt(o,"dilationRate"))}build(e){var t;e=nt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new U(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let u=this.biasInitializer,c=this.filters;o=new(t=class extends rs{apply(l,d){let p=u.apply([c]),h=Mn([c]),f=u.apply([c*2]);return hb([p,h,f])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return H(()=>{if(e.length!==3)throw new U(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=kr({ones:()=>Jn(s),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,u=(Q,J,ne)=>!J||!J[ne]?Q:V(J[ne],Q),c=u(s,o,0),l=u(s,o,1),d=u(s,o,2),p=u(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=kr({ones:()=>Jn(r),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=u(r,h,0),m=u(r,h,1),g=u(r,h,2),b=u(r,h,3),y=3,[v,x,k,T]=Bn(this.kernel.read(),i,y),[C,R,_,P]=this.useBias?Bn(this.bias.read(),i):[null,null,null,null];c=this.inputConv(c,v,C,this.padding),l=this.inputConv(l,x,R,this.padding),d=this.inputConv(d,k,_,this.padding),p=this.inputConv(p,T,P,this.padding);let[D,F,$,z]=Bn(this.recurrentKernel.read(),i,y);f=this.recurrentConv(f,D),m=this.recurrentConv(m,F),g=this.recurrentConv(g,$),b=this.recurrentConv(b,z);let W=this.recurrentActivation.apply(oe(c,f)),q=this.recurrentActivation.apply(oe(l,m)),K=oe(V(q,a),V(W,this.activation.apply(oe(d,g)))),j=V(this.recurrentActivation.apply(oe(p,b)),this.activation.apply(K));return[j,j,K]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=la(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?vs(r,n,this.dataFormat):r}recurrentConv(e,t){return la(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Dp.className="ConvLSTM2DCell";ae.registerClass(Dp);var Xb=class extends o0{constructor(e){let t=new Dp(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Xb.className="ConvLSTM2D";ae.registerClass(Xb);var Fp=class extends Ge{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return H(()=>{this.invokeCallHook(e,t);let n=De(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Vl(()=>xI(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Fp.className="Dropout";ae.registerClass(Fp);var Yb=class extends Fp{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Yb.className="SpatialDropout1D";ae.registerClass(Yb);var Qb=class extends Ge{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Bt(this.units,"units"),this.activation=wr(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ot(e.kernelConstraint),this.biasConstraint=Ot(e.biasConstraint),this.kernelRegularizer=gt(e.kernelRegularizer),this.biasRegularizer=gt(e.biasRegularizer),this.activityRegularizer=gt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=nt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=nt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return H(()=>{this.invokeCallHook(e,t);let n=De(e),s=fI(this.activation.getClassName()),r;return s!=null?r=As(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=As(n,this.kernel.read()),this.bias!=null&&(r=vs(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:xr(this.activation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),biasInitializer:yt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Ft(this.kernelConstraint),biasConstraint:Ft(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Qb.className="Dense";ae.registerClass(Qb);var Zb=class extends Ge{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=nt(e);for(let t of e.slice(1))if(t==null)throw new U(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],fr(e,1)]}call(e,t){return H(()=>{this.invokeCallHook(e,t);let n=De(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=qe(n,s)}return $M(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Zb.className="Flatten";ae.registerClass(Zb);var Jb=class extends Ge{constructor(e){super(e);this.supportsMasking=!0,this.activation=wr(e.activation)}call(e,t){return H(()=>{this.invokeCallHook(e,t);let n=De(e);return this.activation.apply(n)})}getConfig(){let e={activation:xr(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Jb.className="Activation";ae.registerClass(Jb);var ey=class extends Ge{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return H(()=>(e=De(e),NM(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};ey.className="RepeatVector";ae.registerClass(ey);var ty=class extends Ge{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let o=0;o<s.length;++o){let u=s[o];if(this.isUnknown(u))if(a===null)a=o;else throw new U("Can only specifiy one unknown dimension.");else r*=u}let i=fr(e);if(a!==null){if(r===0||i%r!==0)throw new U(n);s[a]=i/r}else if(i!==r)throw new U(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return H(()=>{this.invokeCallHook(e,t);let n=De(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return G(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};ty.className="Reshape";ae.registerClass(ty);var ny=class extends Ge{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=gs(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Rt({ndim:this.dims.length+1})]}computeOutputShape(e){e=nt(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return qe(De(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};ny.className="Permute";ae.registerClass(ny);var sy=class extends Ge{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=De(e),s=-1;return Zf(Ku(n,this.maskValue),s)}call(e,t){return H(()=>{this.invokeCallHook(e,t);let n=De(e),s=-1,r=!0,a=Zf(Ku(n,this.maskValue),s,r);return V(n,pe(a,n.dtype))})}};sy.className="Masking";ae.registerClass(sy);var ry=class extends Ge{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(dt(e.inputLength))}this.inputDim=e.inputDim,Bt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Bt(this.outputDim,"outputDim"),this.embeddingsInitializer=mt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gt(e.embeddingsRegularizer),this.activityRegularizer=gt(e.activityRegularizer),this.embeddingsConstraint=Ot(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return H(()=>this.maskZero?(e=De(e),Ku(e,je(e))):null)}computeOutputShape(e){if(e=nt(e),this.inputLength==null)return[...e,this.outputDim];let t=dt(this.inputLength);if(t.length!==e.length-1)throw new U(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new U(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return H(()=>{this.invokeCallHook(e,t);let n=De(e);n.dtype!=="int32"&&(n=mp(n,"int32"));let s=vI(this.embeddings.read(),G(n,[n.size]));return G(s,nt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:yt(this.embeddingsInitializer),embeddingsRegularizer:it(this.embeddingsRegularizer),activityRegularizer:it(this.activityRegularizer),embeddingsConstraint:Ft(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};ry.className="Embedding";ae.registerClass(ry);var gi=class extends Ge{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Re}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new U("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[nt(e)]),e=e,e.length<2)throw new U(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=hr(t),t.length>1)throw new U(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&hr(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return H(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=vr(s);for(let a of e){let i=a.rank;for(let o=0;o<r-i;++o)a=Ll(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let o of e){let u=o.rank;if(u==null){let c=o.shape,l=c[0],d=c.slice(1).concat([l]),p=G(o,[l].concat(fr(c.slice(1))));p=qe(p,[1,0]),p=G(p,d),n.push(p),r=!0}else if(u>1){let c=gs(1,u).concat([0]);n.push(qe(o,c)),r=!0}else n.push(o)}let a=this.mergeFunction(n),i=a.rank;if(r){if(i==null){let o=a.shape,u=o.length,c=o[u-1],l=[c].concat(o.slice(0,o.length-1));a=G(qe(G(a,[-1,c]),[1,0]),l)}else if(i>1){let o=[i-1].concat(gs(0,i-1));a=qe(a,o)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=hr(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return H(()=>{if(t==null)return null;if(!Array.isArray(t))throw new U("`mask` should be an Array");if(!Array.isArray(e))throw new U("`inputs` should be an Array");if(t.length!==e.length)throw new U(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Pn(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=_s(n,t[s]);return n})}},ay=class extends gi{constructor(e){super(e)}mergeFunction(e){return H(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=oe(t,e[n]);return t})}};ay.className="Add";ae.registerClass(ay);var iy=class extends gi{constructor(e){super(e)}mergeFunction(e){return H(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=V(t,e[n]);return t})}};iy.className="Multiply";ae.registerClass(iy);var oy=class extends gi{constructor(e){super(e)}mergeFunction(e){return H(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=oe(t,e[n]);return V(1/e.length,t)})}};oy.className="Average";ae.registerClass(oy);var uy=class extends gi{constructor(e){super(e)}mergeFunction(e){return H(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Er(t,e[n]);return t})}};uy.className="Maximum";ae.registerClass(uy);var ly=class extends gi{constructor(e){super(e)}mergeFunction(e){return H(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=up(t,e[n]);return t})}};ly.className="Minimum";ae.registerClass(ly);var cy=class extends gi{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new U("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let i of n)if(w.arraysEqual(i,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new U("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return H(()=>hb(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new U("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new U("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new U("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new U(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return H(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(pe(Jn(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Pn(t[a],-1)):s.push(t[a]);let r=Dt(s,this.axis);return yk(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};cy.className="Concatenate";ae.registerClass(cy);function Iu(e,t){for(;e<0;)e+=t;return e}function dB(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Re("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Re("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return H(()=>{let i;if(s>r){i=s-r;let u=[];for(let c=0;c<i;++c)u.push(1);t=G(t,t.shape.concat(u))}else if(r>s){i=r-s;let u=[];for(let c=0;c<i;++c)u.push(1);e=G(e,e.shape.concat(u))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?o=ve(V(e,t),a[0]):o=ve(V(qe(e,[1,0]),t),a[1]);else{let u=a[0]!==e.shape.length-1,c=a[1]===t.shape.length-1;o=Me(e,t,u,c)}if(i>0){let u;s>r?u=s+r-3:u=s-1;let c=[];for(let l=u;l<u+i;++l)c.push(l);o=yr(o,c)}return o.shape.length===1&&(o=Pn(o,1)),o})}var dy=class extends gi{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Re("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new U(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new U(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>Iu(r,e[a].shape.length)):s=[Iu(this.axes,t.shape.length),Iu(this.axes,n.shape.length)],this.normalize&&(t=bd(t,s[0]),n=bd(n,s[1])),dB(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Iu(this.axes,e.length),Iu(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Re("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};dy.className="Dot";ae.registerClass(dy);var py=class extends Ge{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return H(()=>{this.invokeCallHook(e,t);let n=De(e);return Vl(()=>oe(gp(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};py.className="GaussianNoise";ae.registerClass(py);var hy=class extends Ge{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return H(()=>{this.invokeCallHook(e,t);let n=De(e);return this.rate>0&&this.rate<1?Vl(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return V(n,gp(n.shape,1,r))},()=>n,t.training||!1):n})}};hy.className="GaussianDropout";ae.registerClass(hy);var fy=class extends Ge{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||De(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return H(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Vl(()=>{let r=De(e),a=1.6732632423543772,i=1.0507009873554805,o=-a*i,u=Ho(Pl(n),this.rate);u=mp(u,"float32");let c=((1-this.rate)*(1+this.rate*o**2))**-.5,l=-c*o*this.rate,d=oe(V(r,u),V(oe(u,-1),o));return oe(V(d,c),l)},()=>De(e),t.training||!1)}return e})}};fy.className="AlphaDropout";ae.registerClass(fy);function Zu(e,t,n,s,r,a=.001){let i;if(e.rank===2)i=JE(e,t,n,s,r,a);else if(e.rank===3)i=t_(e,t,n,s,r,a);else if(e.rank===4)i=s_(e,t,n,s,r,a);else throw new Re(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function pB(e,t,n,s,r=.001){return H(()=>{let a=Bg(e,s),i=a.mean,o=a.variance;return[Zu(e,i,o,n,t,r),i,o]})}function hB(e,t,n,s,r=.001){return H(()=>{let a=Bg(e,s),i=a.mean,o=a.variance,u=[];for(let f of gs(0,e.rank))s.indexOf(f)!==-1?u.push(1):u.push(e.shape[f]);let c=G(i,u),l=G(o,u),d=t==null?null:G(t,u),p=n==null?null:G(n,u);return[Zu(e,c,l,p,d,r),i,o]})}function fB(e,t,n,s,r=.001){return w.arraysEqual(s.slice().sort(),gs(0,e.rank-1))?pB(e,t,n,s,r):hB(e,t,n,s,r)}var my=class extends Ge{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=mt(e.betaInitializer||"zeros"),this.gammaInitializer=mt(e.gammaInitializer||"ones"),this.movingMeanInitializer=mt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=mt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ot(e.betaConstraint),this.gammaConstraint=Ot(e.gammaConstraint),this.betaRegularizer=gt(e.betaRegularizer),this.gammaRegularizer=gt(e.gammaRegularizer)}build(e){e=nt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new U(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Rt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return H(()=>{let n=t.training==null?!1:t.training,s=De(e),r=s.shape,a=r.length,i=gs(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);let u=ha(1,a);u[o]=r[o];let c=i.slice();c.sort();let l=!w.arraysEqual(c,gs(0,a).slice(0,a-1)),d=()=>{if(l){let b=G(this.movingMean.read(),u),y=G(this.movingVariance.read(),u),v=this.center?G(this.beta.read(),u):null,x=this.scale?G(this.gamma.read(),u):null;return Zu(s,b,y,v,x,this.epsilon)}else return Zu(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[p,h,f]=fB(s,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(b,y,v)=>{H(()=>{let x=1-v,k=b.read(),T=V(be(k,y),x);b.write(be(k,T))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:yt(this.betaInitializer),gammaInitializer:yt(this.gammaInitializer),movingMeanInitializer:yt(this.movingMeanInitializer),movingVarianceInitializer:yt(this.movingVarianceInitializer),betaRegularizer:it(this.betaRegularizer),gammaRegularizer:it(this.gammaRegularizer),betaConstraint:Ft(this.betaConstraint),gammaConstraint:Ft(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};my.className="BatchNormalization";ae.registerClass(my);var gy=class extends Ge{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=mt(e.betaInitializer||"zeros"),this.gammaInitializer=mt(e.gammaInitializer||"ones"),this.betaRegularizer=gt(e.betaRegularizer),this.gammaRegularizer=gt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=nt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==hr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=De(e),s=n.shape,r=s.length;return H(()=>{let{mean:i,variance:o}=Bg(n,this.axis,!0),u=ha(1,r);for(let f of this.axis)u[f]=s[f];let c=f=>f!=null&&f.shape.length!==r?G(f,u):f,l=c(this.gamma.read()),d=c(this.beta.read()),p=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(p.push(s[f]),h.push(1)):(p.push(1),h.push(s[f]));return i=us(i,p),o=us(o,p),l=us(l,h),d=us(d,h),Zu(n,i,o,d,l,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:yt(this.betaInitializer),gammaInitializer:yt(this.gammaInitializer),betaRegularizer:it(this.betaRegularizer),gammaRegularizer:it(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};gy.className="LayerNormalization";ae.registerClass(gy);function mB(e,t,n){return H(()=>{if(e.rank!==4)throw new U(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new U("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=ms()),n!=="channelsLast"&&n!=="channelsFirst")throw new U(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],hi(e,s)})}var by=class extends Ge{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?ms():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new U(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new U(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new U(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Rt({ndim:4})]}computeOutputShape(e){e=nt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return H(()=>mB(De(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};by.className="ZeroPadding2D";ae.registerClass(by);function Op(e,t,n,s,r,a){return H(()=>{Ct(r),mI(a),Gn(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=ms()),a==null&&(a="max"),e=zb(e,r);let i,o=s==="same"?"same":"valid";return a==="max"?i=Lg(e,t,n,o):i=Ag(e,t,n,o),r==="channelsFirst"&&(i=qe(i,[0,3,1,2])),i})}function u0(e,t,n,s,r,a){return H(()=>{Ct(r),mI(a),Gn(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=ms()),a==null&&(a="max"),e=JI(e,r);let i,o=s==="same"?"same":"valid";return a==="max"?i=zk(e,t,n,o):i=kk(e,t,n,o),r==="channelsFirst"&&(i=qe(i,[0,4,1,2,3])),i})}var l0=class extends Ge{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new U(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Bt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new U(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Bt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Gn(this.padding),this.inputSpec=[new Rt({ndim:3})]}computeOutputShape(e){e=nt(e);let t=hs(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return H(()=>{this.invokeCallHook(e,t),e=Ll(De(e),2);let n=this.poolingFunction(De(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return yr(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},yy=class extends l0{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),Op(e,t,n,s,r,"max")}};yy.className="MaxPooling1D";ae.registerClass(yy);var vy=class extends l0{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),Op(e,t,n,s,r,"avg")}};vy.className="AveragePooling1D";ae.registerClass(vy);var c0=class extends Ge{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new U(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Bt(this.poolSize,"poolSize"),Bt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ct(this.dataFormat),Gn(this.padding),this.inputSpec=[new Rt({ndim:4})]}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=hs(t,this.poolSize[0],this.padding,this.strides[0]),n=hs(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return H(()=>(this.invokeCallHook(e,t),this.poolingFunction(De(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xy=class extends c0{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),Op(e,t,n,s,r,"max")}};xy.className="MaxPooling2D";ae.registerClass(xy);var wy=class extends c0{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),Op(e,t,n,s,r,"avg")}};wy.className="AveragePooling2D";ae.registerClass(wy);var d0=class extends Ge{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new U(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Bt(this.poolSize,"poolSize"),Bt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ct(this.dataFormat),Gn(this.padding),this.inputSpec=[new Rt({ndim:5})]}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=hs(t,this.poolSize[0],this.padding,this.strides[0]),n=hs(n,this.poolSize[1],this.padding,this.strides[1]),s=hs(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return H(()=>(this.invokeCallHook(e,t),this.poolingFunction(De(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ky=class extends d0{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),u0(e,t,n,s,r,"max")}};ky.className="MaxPooling3D";ae.registerClass(ky);var Iy=class extends d0{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),u0(e,t,n,s,r,"avg")}};Iy.className="AveragePooling3D";ae.registerClass(Iy);var p0=class extends Ge{constructor(e){super(e);this.inputSpec=[new Rt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Re}},Sy=class extends p0{constructor(e){super(e||{})}call(e,t){return H(()=>{let n=De(e);return St(n,1)})}};Sy.className="GlobalAveragePooling1D";ae.registerClass(Sy);var Cy=class extends p0{constructor(e){super(e||{})}call(e,t){return H(()=>{let n=De(e);return $s(n,1)})}};Cy.className="GlobalMaxPooling1D";ae.registerClass(Cy);var h0=class extends Ge{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ct(this.dataFormat),this.inputSpec=[new Rt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Re}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ny=class extends h0{call(e,t){return H(()=>{let n=De(e);return this.dataFormat==="channelsLast"?St(n,[1,2]):St(n,[2,3])})}};Ny.className="GlobalAveragePooling2D";ae.registerClass(Ny);var Ty=class extends h0{call(e,t){return H(()=>{let n=De(e);return this.dataFormat==="channelsLast"?$s(n,[1,2]):$s(n,[2,3])})}};Ty.className="GlobalMaxPooling2D";ae.registerClass(Ty);var f0=class extends Ge{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=ps(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},$y=class extends f0{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=nt(e),e.length<3)throw new U(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=nt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return H(()=>(e=De(e),a0((a,i)=>[De(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};$y.className="TimeDistributed";ae.registerClass($y);function gB(e){fi(wM,"BidirectionalMergeMode",e)}var bB="concat",Ay=class extends f0{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ps(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=ps(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?bB:e.mergeMode,gB(this.mergeMode),e.weights)throw new Re("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):bn(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=r0(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new U("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(l=>new Rt({shape:l.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),i.push(...c)}if(s!=null)throw new Re("Support for constants in Bidirectional layers is not implemented yet.");let o=a[0]instanceof Ns;for(let u of a)if(u instanceof Ns!==o)throw new U("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let u=[e].concat(a),c=this.inputSpec.concat(i),l=this.inputSpec;this.inputSpec=c;let d=super.apply(u,t);return this.inputSpec=l,d}else return super.apply(e,t)}call(e,t){return H(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),u=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=es(r,1));let i;return this.mergeMode==="concat"?i=hb([s,r]):this.mergeMode==="sum"?i=oe(s,r):this.mergeMode==="ave"?i=V(.5,oe(s,r)):this.mergeMode==="mul"?i=V(s,r):this.mergeMode==null&&(i=[s,r]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Jr(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Jr(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=ps(t.layer);if(delete t.layer,t.numConstants!=null)throw new Re("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};Ay.className="Bidirectional";ae.registerClass(Ay);function yB(e){return new Ko(e)}function vB(e){return new Fb(e)}function xB(e){return new _b(e)}function wB(e){return new Rb(e)}function kB(e){return new Db(e)}function IB(e){return new Pb(e)}function SB(e){return new Ob(e)}function CB(e){return new Wb(e)}function NB(e){return new $p(e)}function TB(e){return new Lb(e)}function $B(e){return new Ap(e)}function AB(e){return new Bb(e)}function EB(e){return new Vb(e)}function _B(e){return new Ub(e)}function RB(e){return new Gb(e)}function DB(e){return new Hb(e)}function FB(e){return new Jb(e)}function OB(e){return new Qb(e)}function PB(e){return new Fp(e)}function zB(e){return new Yb(e)}function MB(e){return new Zb(e)}function LB(e){return new ey(e)}function BB(e){return new ty(e)}function VB(e){return new ny(e)}function WB(e){return new ry(e)}function UB(e){return new ay(e)}function GB(e){return new oy(e)}function HB(e){return new cy(e)}function qB(e){return new uy(e)}function jB(e){return new ly(e)}function KB(e){return new iy(e)}function XB(e){return new dy(e)}function YB(e){return new my(e)}function QB(e){return new gy(e)}function ZB(e){return new by(e)}function Ey(e){return new vy(e)}function JB(e){return Ey(e)}function e4(e){return Ey(e)}function _y(e){return new wy(e)}function t4(e){return _y(e)}function n4(e){return _y(e)}function Ry(e){return new Iy(e)}function s4(e){return Ry(e)}function r4(e){return Ry(e)}function a4(e){return new Sy(e)}function i4(e){return new Ny(e)}function m0(e){return new Cy(e)}function g0(e){return new Ty(e)}function b0(e){return new yy(e)}function y0(e){return new xy(e)}function o4(e){return new ky(e)}function u4(e){return new jb(e)}function l4(e){return new _p(e)}function c4(e){return new Kb(e)}function d4(e){return new Hl(e)}function p4(e){return new qb(e)}function h4(e){return new Ep(e)}function f4(e){return new Xb(e)}function m4(e){return new Dp(e)}function g4(e){return new Rr(e)}function b4(e){return new Rp(e)}function y4(e){return new Ay(e)}function v4(e){return new $y(e)}var x4=m0,w4=g0,k4=b0,I4=y0;function S4(e){return new py(e)}function C4(e){return new hy(e)}function N4(e){return new fy(e)}function T4(e){return new sy(e)}var $4={};Ae($4,{MAPE:()=>L4,MSE:()=>W4,binaryAccuracy:()=>A4,binaryCrossentropy:()=>E4,categoricalAccuracy:()=>R4,categoricalCrossentropy:()=>D4,cosineProximity:()=>P4,mape:()=>B4,meanAbsoluteError:()=>z4,meanAbsolutePercentageError:()=>M4,meanSquaredError:()=>V4,mse:()=>U4,precision:()=>F4,recall:()=>O4,sparseCategoricalAccuracy:()=>_4});function A4(e,t){return Sb(e,t)}function E4(e,t){return AI(e,t)}function _4(e,t){return EI(e,t)}function R4(e,t){return Cb(e,t)}function D4(e,t){return Nb(e,t)}function F4(e,t){return $I(e,t)}function O4(e,t){return wL(e,t)}function P4(e,t){return Ib(e,t)}function z4(e,t){return Np(e,t)}function M4(e,t){return Xo(e,t)}function L4(e,t){return Xo(e,t)}function B4(e,t){return Xo(e,t)}function V4(e,t){return mi(e,t)}function W4(e,t){return mi(e,t)}function U4(e,t){return mi(e,t)}var G4={};Ae(G4,{modelFromJSON:()=>tB});var H4={};Ae(H4,{l1:()=>j4,l1l2:()=>q4,l2:()=>K4});function q4(e){return new Wl(e)}function j4(e){return iB(e)}function K4(e){return oB(e)}var X4=class extends Yi{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof mr))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Mc(e,t){return e<t}function xx(e,t){return e>t}var Y4=class extends X4{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Re("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Mc:this.mode==="max"?this.monitorFunc=xx:this.monitor.indexOf("acc")!==-1?this.monitorFunc=xx:this.monitorFunc=Mc,this.monitorFunc===Mc&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Mc?1/0:-1/0}async onEpochEnd(e,t){await or(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function Q4(e){return new Y4(e)}var Kde={earlyStopping:Q4},Z4=X();Z4.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var v0=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(v0||{}),wx;(e=>{let t;(n=>{n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(wx||(wx={}));var Dy={};function Xde(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Dy[e]=n}function x0(e){return Dy[e]}function Yde(e){delete Dy[e]}function I(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let o=a.inputIndexStart,u=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?o+1:a.inputIndexEnd;if(a.type==="tensor")return nn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(o,u).map(p=>nn(p,n,s,r));let c=nn(t.inputNames.slice(o)[0],n,s,r),l=c.dataSync();return a.type==="number"?l[0]:w.toNestedArray(c.shape,l)}let i=t.attrParams[e];return i&&i.value}function nn(e,t,n,s){let[r,a]=$n(e);if(s!=null){let o=s.getHashTableHandleByName(r);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[kd(r,o)]);return i!==void 0?t[kd(r,i)][a]:void 0}function J4(e,t,n){return t[kd(e,n.currentContextId)]}function Cs(e,t){let[n,s,r]=$n(e);return[kd(n,t&&t.currentContextId),s,r]}function kd(e,t){return t?`${e}-${t}`:e}function $n(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function Kc(e,t,n){let s=I("pad",e,t,n);if(s==="explicit"){s=I("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function Ws(e){return e.kept?e:pr(e)}var w0={};Ae(w0,{json:()=>eV});var eV=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],k0={};Ae(k0,{json:()=>tV});var tV=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],I0={};Ae(I0,{json:()=>nV});var nV=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],S0={};Ae(S0,{json:()=>sV});var sV=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],C0={};Ae(C0,{json:()=>rV});var rV=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],N0={};Ae(N0,{json:()=>aV});var aV=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],T0={};Ae(T0,{json:()=>iV});var iV=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],$0={};Ae($0,{json:()=>oV});var oV=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],A0={};Ae(A0,{json:()=>uV});var uV=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],E0={};Ae(E0,{json:()=>lV});var lV=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],_0={};Ae(_0,{json:()=>cV});var cV=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],R0={};Ae(R0,{json:()=>dV});var dV=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],D0={};Ae(D0,{json:()=>pV});var pV=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],F0={};Ae(F0,{json:()=>hV});var hV=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],O0={};Ae(O0,{json:()=>fV});var fV=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],P0={};Ae(P0,{json:()=>mV});var mV=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],z0={};Ae(z0,{json:()=>gV});var gV=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],M0={};Ae(M0,{json:()=>bV});var bV=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],L0={};Ae(L0,{json:()=>yV});var yV=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],kx=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[w0,k0,I0,S0,C0,N0,T0,$0,A0,E0,_0,R0,D0,F0,O0,P0,z0,M0,L0],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],i=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),o=[],u=[],c={},l={};t!=null&&(c=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));let d=Object.keys(i);d.forEach(f=>{let m=i[f];m.inputNames.forEach((g,b)=>{let[y,,v]=Cs(g),x=i[y];if(x.outputs!=null){let k=x.outputs.indexOf(v);if(k!==-1){let T=`${y}:${k}`;m.inputNames[b]=T}}m.inputs.push(x),x.children.push(m)})}),Object.keys(l).length===0?d.forEach(f=>{let m=i[f];m.children.length===0&&u.push(m)}):Object.keys(l).forEach(f=>{let[m]=Cs(f),g=i[m];g!=null&&(g.signatureKey=l[f],u.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(f=>{let[m]=Cs(f),g=i[m];g&&(g.signatureKey=c[f],o.push(g))}):o=s;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:i,inputs:o,outputs:u,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=x0(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.substr(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,i;switch(r.type){case"string":i=pm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=pm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":i=vm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=vm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":i=fm(e.attr,r.tfName,r.defaultValue||0),i===void 0&&!!r.tfDeprecatedName&&(i=fm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":i=ym(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=ym(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":i=hm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=hm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":i=wm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=wm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":i=bm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=bm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":i=xm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=xm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":i=mm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=mm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":i=gm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=gm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":i=Ix(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Ix(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:i,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((l,d)=>(l[d.name]=this.mapNode(d),d.op==="Const"&&s.push(l[d.name]),l),{}));let a=[],i=[];e.signature.inputArg.forEach(l=>{let[d]=Cs(l.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Fy(l.type),type:"dtype"}},children:[]};p.signatureKey=l.name,a.push(p),r[d]=p}),Object.keys(r).forEach(l=>{let d=r[l];d.inputNames.forEach((p,h)=>{let[f,,m]=Cs(p),g=r[f];if(g.outputs!=null){let b=g.outputs.indexOf(m);if(b!==-1){let y=`${f}:${b}`;d.inputNames[h]=y}}d.inputs.push(g),g.children.push(d)})});let u=e.ret;e.signature.outputArg.forEach(l=>{let[d,p]=Cs(u[l.name]),h=r[d];h!=null&&(h.defaultOutput=p,i.push(h))});let c=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:i,weights:s,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function vV(e){let t=X().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function B0(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):vV(e);return t?n:n.toLowerCase()}function pm(e,t,n,s=!1){let r=e[t];return r!=null?B0(r.s,s):n}function hm(e,t,n){let s=e[t];return s?s.b:n}function fm(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function Fy(e){switch(typeof e=="string"&&(e=v0[e]),e){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function Ix(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function mm(e,t,n){let s=e[t];return s&&s.type?Fy(s.type):n}function gm(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>Fy(r)):n}function V0(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function bm(e,t,n){let s=e[t];return s&&s.shape?V0(s.shape):n}function ym(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function vm(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>B0(a,s)):n}function xm(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>V0(r)):n}function wm(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var xV=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return nn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return nn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return fm(this.node.rawAttrs,e,t);if(n.s!=null)return pm(this.node.rawAttrs,e,t);if(n.b!=null)return hm(this.node.rawAttrs,e,t);if(n.shape!=null)return bm(this.node.rawAttrs,e,t);if(n.type!=null)return mm(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return ym(this.node.rawAttrs,e,t);if(n.list.s!=null)return vm(this.node.rawAttrs,e,t);if(n.list.shape!=null)return xm(this.node.rawAttrs,e,t);if(n.list.b!=null)return wm(this.node.rawAttrs,e,t);if(n.list.type!=null)return gm(this.node.rawAttrs,e,t)}return t}},wV=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[oe(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[vE(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[HR(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[V(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[Se(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[W_(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[bk(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[be(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[up(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[Er(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[da(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[jk(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},kV=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Mt(I("x",e,t,n))];case"Acos":return[mE(I("x",e,t,n))];case"Acosh":return[bE(I("x",e,t,n))];case"Asin":return[NE(I("x",e,t,n))];case"Asinh":return[$E(I("x",e,t,n))];case"Atan":return[EE(I("x",e,t,n))];case"Atan2":return[RE(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[FE(I("x",e,t,n))];case"Ceil":return[l_(I("x",e,t,n))];case"Complex":return[ia(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[Rg(I("x",e,t,n))];case"Cosh":return[$k(I("x",e,t,n))];case"Elu":return[ap(I("x",e,t,n))];case"Erf":return[K_(I("x",e,t,n))];case"Exp":return[Qn(I("x",e,t,n))];case"Expm1":return[Z_(I("x",e,t,n))];case"Floor":return[ip(I("x",e,t,n))];case"Log":return[Zn(I("x",e,t,n))];case"Log1p":return[Og(I("x",e,t,n))];case"Imag":return[Dg(I("x",e,t,n))];case"Neg":return[It(I("x",e,t,n))];case"Reciprocal":return[wD(I("x",e,t,n))];case"Real":return[pd(I("x",e,t,n))];case"Relu":return[Ks(I("x",e,t,n))];case"Round":return[Bk(I("x",e,t,n))];case"Selu":return[Wk(I("x",e,t,n))];case"Sigmoid":return[Hs(I("x",e,t,n))];case"Sin":return[Uk(I("x",e,t,n))];case"Sign":return[zD(I("x",e,t,n))];case"Sinh":return[Gk(I("x",e,t,n))];case"Softplus":return[Ol(I("x",e,t,n))];case"Sqrt":return[rn(I("x",e,t,n))];case"Square":return[ct(I("x",e,t,n))];case"Tanh":return[Hu(I("x",e,t,n))];case"Tan":return[r3(I("x",e,t,n))];case"ClipByValue":return[Vn(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[Lk(I("x",e,t,n))];case"Rsqrt":return[Vk(nn(e.inputNames[0],t,n))];case"Prod":return[Mk(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[Fg(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[Wg(I("x",e,t,n),I("alpha",e,t,n))];case"IsNan":return[lR(nn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Xn(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];w.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function Sx(e){return!(typeof e=="number"||e.some(t=>t<0))}function Su(e,t,n){let s=km(e,n),r=!Sx(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=km(a.shape,s)}),!Sx(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function km(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var IV=class{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ce(0),jt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Xn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,jt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return ds([],[0].concat(this.elementShape));let n=this.readMany(e);return Xn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),ts(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return ds([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return Xn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Dt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Rs(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];H(()=>{t=G(t,[1,n,r]);for(let o=0;o<e.length;++o){let u=o===0?0:s[o-1],c=[0,u,0],l=[1,e[o],r];a[o]=G(He(t,c,l),this.elementShape)}return a});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,a)}},ql=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);Xn(t,r.shape,"TensorList shape mismatch: "),jt(r)}),this.idTensor=Ce(0),this.maxNumElements=s,jt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ql([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Xn(e,this.elementShape,"TensorList shape mismatch: ");let s=Su(this.elementShape,this.tensors,e);return H(()=>{let r=this.tensors.map(a=>G(a,s));return ts(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Su(this.elementShape,this.tensors,e),s=this.tensors.pop();return Xn(s.shape,e,"TensorList shape mismatch: "),G(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Xn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");jt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Xn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=Su(this.elementShape,this.tensors,t);return G(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Xn(this.elementShape,t.shape,"TensorList shape mismatch: "),jt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Xn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=Su(this.elementShape,this.tensors,n);return e.length===0?ds([],[0].concat(s)):H(()=>{let r=e.map(a=>G(this.tensors[a],s));return ts(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Xn(this.elementShape,t,"TensorList shape mismatch: ");let n=Su(this.elementShape,this.tensors,t);return this.size()===0?ds([],[0].concat(n)):H(()=>{let s=this.tensors.map(r=>G(r,n));return Dt(s,0)})}};function SV(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);Xn(r,t,"TensorList shape mismatch: ");let a=Rs(e);return new ql(a,t,s)}function CV(e,t,n){return new ql([],e,t,n)}function NV(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new ql([],n,e.dtype,s),i=Rs(e,0);return t.forEach((o,u)=>{a.setItem(o,i[u])}),a}function TV(e,t,n){let s=0,r=t.map(l=>(s+=l,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),i=km(a,n),o=s===0?0:e.size/s,u=H(()=>{let l=[];e=G(e,[1,s,o]);for(let d=0;d<t.length;++d){let p=d===0?0:r[d-1],h=[0,p,0],f=[1,t[d],o];l[d]=G(He(e,h,f),i)}return e.dispose(),l}),c=new ql([],n,e.dtype,t.length);for(let l=0;l<u.length;l++)c.setItem(l,u[l]);return c}var $V=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=I("thenBranch",e,t,n),r=I("elseBranch",e,t,n),a=I("cond",e,t,n),i=I("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=I("body",e,t,n),r=I("cond",e,t,n),a=I("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map(l=>l.id),u=await i[0].data();i.forEach(l=>{!l.kept&&o.indexOf(l.id)===-1&&l.dispose()});let c=a;for(;u[0];){let l=c;c=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);let d=c.map(h=>h.id);l.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});let p=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await p[0].data(),p.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return c}case"LoopCond":{let s=I("pred",e,t,n);return[Ws(s)]}case"Switch":{let s=I("pred",e,t,n),r=I("data",e,t,n);return r.kept||(r=Ws(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>nn(r,t,n)!==void 0);if(s){let r=nn(s,t,n);return[Ws(r)]}return}case"Enter":{let s=I("frameName",e,t,n),r=I("tensor",e,t,n);return n.enterFrame(s),[Ws(r)]}case"Exit":{let s=I("tensor",e,t,n);return n.exitFrame(),[Ws(s)]}case"NextIteration":{let s=I("tensor",e,t,n);return n.nextIteration(),[Ws(s)]}case"TensorArrayV3":{let s=I("size",e,t,n),r=I("dtype",e,t,n),a=I("elementShape",e,t,n),i=I("dynamicSize",e,t,n),o=I("clearAfterRead",e,t,n),u=I("identicalElementShapes",e,t,n),c=I("name",e,t,n),l=new IV(c,r,s,a,u,i,o);return n.addTensorArray(l),[l.idTensor,Ce(1)]}case"TensorArrayWriteV3":{let s=I("tensorArrayId",e,t,n),r=I("index",e,t,n),a=I("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{let s=I("tensorArrayId",e,t,n),r=I("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),a=I("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),a=I("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=I("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=I("tensorArrayId",e,t,n),r=I("tensor",e,t,n),a=I("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Ce(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=I("tensorListId",e,t,n),r=I("index",e,t,n),a=I("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{let s=I("tensorListId",e,t,n),r=I("index",e,t,n),a=I("elementShape",e,t,n),i=I("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{let s=I("indices",e,t,n),r=I("tensor",e,t,n),a=I("elementShape",e,t,n),i=I("numElements",e,t,n),o=NV(r,s,a,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=I("elementShape",e,t,n),r=I("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let i=I(a,e,t,n),o=CV(s,r,i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let s=I("tensorListId",e,t,n),r=I("indices",e,t,n),a=I("elementShape",e,t,n),i=I("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{let s=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n),i=I("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{let s=I("tensor",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n),i=SV(s,r,a);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":{let s=I("tensorListId",e,t,n),r=n.getTensorList(s.id),a=I("dtype",e,t,n),i=I("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{let s=I("tensorListId",e,t,n),r=I("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=I("tensor",e,t,n),r=I("elementShape",e,t,n),a=I("lengths",e,t,n),i=TV(s,a,r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Cx(e,t,n){let[s,r]=I("fusedOps",e,t,n),a=s==="biasadd",i=!a,o=r==="prelu",u=s==="fusedbatchnorm",c=I("numArgs",e,t,n);if(a){if(o&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=I("strides",e,t,n),d=Kc(e,t,n),p=I("dataFormat",e,t,n).toUpperCase(),h=I("dilations",e,t,n),[f,m]=I("args",e,t,n);i&&(m=f,f=void 0);let g=I("leakyreluAlpha",e,t,n);return{stride:l,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var AV=(e,t,n)=>{switch(e.op){case"Conv1D":{let s=I("stride",e,t,n),r=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),i=I("dilation",e,t,n);return[Sk(I("x",e,t,n),I("filter",e,t,n),s,r,a,i)]}case"Conv2D":{let s=I("strides",e,t,n),r=Kc(e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),i=I("dilations",e,t,n);return[la(I("x",e,t,n),I("filter",e,t,n),[s[1],s[2]],r,a,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=Cx(e,t,n);return[pa.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{let{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=Cx(e,t,n);return[pa.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let s=I("outputShape",e,t,n),r=I("strides",e,t,n),a=Kc(e,t,n);return[Ck(I("x",e,t,n),I("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let s=I("strides",e,t,n),r=Kc(e,t,n),a=I("dilations",e,t,n),i=I("dataFormat",e,t,n).toUpperCase();return[rp(I("input",e,t,n),I("filter",e,t,n),[s[1],s[2]],r,i,[a[1],a[2]])]}case"Conv3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),i=I("dilations",e,t,n);return[Nk(I("x",e,t,n),I("filter",e,t,n),[s[1],s[2],s[3]],r,a,[i[1],i[2],i[3]])]}case"AvgPool":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Ag(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Lg(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n),i=I("includeBatchInIndex",e,t,n),{result:o,indexes:u}=zR(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,i);return[o,u]}case"AvgPool3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[kk(I("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[zk(I("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("dilations",e,t,n),i=s[1],o=s[2],u=a[1],c=a[2];return[z_(I("x",e,t,n),I("filter",e,t,n),[i,o],r,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},EV=(e,t,n)=>{switch(e.op){case"Fill":{let s=I("shape",e,t,n),r=I("dtype",e,t,n),a=I("value",e,t,n);return[Fl(s,a,r)]}case"LinSpace":{let s=I("start",e,t,n),r=I("stop",e,t,n),a=I("num",e,t,n);return[hR(s,r,a)]}case"Multinomial":{let s=I("logits",e,t,n),r=I("numSamples",e,t,n),a=I("seed",e,t,n);return[YR(s,r,a)]}case"OneHot":{let s=I("indices",e,t,n),r=I("depth",e,t,n),a=I("onValue",e,t,n),i=I("offValue",e,t,n);return[cd(s,r,a,i)]}case"Ones":return[Mn(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[Jn(I("x",e,t,n))];case"RandomUniform":return[Pl(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{let s=I("start",e,t,n),r=I("stop",e,t,n),a=I("step",e,t,n);return[Xu(s,r,a,I("dtype",e,t,n))]}case"TruncatedNormal":{let s=I("shape",e,t,n),r=I("mean",e,t,n),a=I("stdDev",e,t,n),i=I("seed",e,t,n);return[Yg(s,r,a,I("dtype",e,t,n),i)]}case"Zeros":return[Tt(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[je(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function _f(e,t,n){let s=I("boxes",e,t,n),r=I("scores",e,t,n),a=I("maxOutputSize",e,t,n),i=I("iouThreshold",e,t,n),o=I("scoreThreshold",e,t,n),u=I("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}}var _V=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=_f(e,t,n),c=await ls.nonMaxSuppressionWithScoreAsync(s,r,a,i,o,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=_f(e,t,n),u=I("padToMaxOutputSize",e,t,n),c=await ls.nonMaxSuppressionPaddedAsync(s,r,a,i,o,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=_f(e,t,n);return[await ls.nonMaxSuppressionAsync(s,r,a,i,o)]}case"Where":{let s=pe(I("condition",e,t,n),"bool"),r=[await Xk(s)];return s.dispose(),r}case"ListDiff":return OD(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},RV=(e,t,n)=>{switch(e.op){case"TopKV2":{let s=I("x",e,t,n),r=I("k",e,t,n),a=I("sorted",e,t,n),i=i3(s,r,a);return[i.values,i.indices]}case"Unique":{let s=I("x",e,t,n),r=Uv(s);return[r.values,r.indices]}case"UniqueV2":{let s=I("x",e,t,n),r=I("axis",e,t,n),a=Uv(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},DV=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let s=I("default",e,t,n);return[nn(e.name,t,n)||s];case"Placeholder":return[nn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=I("x",e,t,n);return[Ws(c)]}case"IdentityN":return I("x",e,t,n).map(c=>Ws(c));case"Snapshot":let r=I("x",e,t,n);return[Ws(r)];case"Shape":return[Jt(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map(c=>Jt(c.shape));case"Size":return[Ce(I("x",e,t,n).size,"int32")];case"Rank":return[Ce(I("x",e,t,n).rank,"int32")];case"NoOp":return[Ce(1)];case"Print":let a=I("x",e,t,n),i=I("data",e,t,n),o=I("message",e,t,n),u=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let c=0;c<i.length;c++)console.log(Array.prototype.slice.call(i[c].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},FV=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ce(0),this.tensorMap=new Map,jt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),H(()=>{let s=Rs(t),r=n.length,a=s.length;w.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let i=0;i<r;i++){let o=n[i],u=s[i];jt(u),this.tensorMap.set(o,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return H(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],i=this.findWithDefault(a,t);s.push(i)}return ts(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},OV=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=I("keyDType",e,t,n),a=I("valueDType",e,t,n),i=new FV(r,a);return s.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=I("tableHandle",e,t,n,s),a=I("keys",e,t,n),i=I("values",e,t,n);return[await s.getHashTableById(r.id).import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=I("tableHandle",e,t,n,s),a=I("keys",e,t,n),i=I("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=I("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},PV=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let s=I("images",e,t,n),r=I("size",e,t,n),a=I("alignCorners",e,t,n),i=I("halfPixelCenters",e,t,n);return[ls.resizeBilinear(s,[r[0],r[1]],a,i)]}case"ResizeNearestNeighbor":{let s=I("images",e,t,n),r=I("size",e,t,n),a=I("alignCorners",e,t,n),i=I("halfPixelCenters",e,t,n);return[ls.resizeNearestNeighbor(s,[r[0],r[1]],a,i)]}case"CropAndResize":{let s=I("image",e,t,n),r=I("boxes",e,t,n),a=I("boxInd",e,t,n),i=I("cropSize",e,t,n),o=I("method",e,t,n),u=I("extrapolationValue",e,t,n);return[ls.cropAndResize(s,r,a,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},zV=(e,t,n)=>{switch(e.op){case"Equal":return[Yn(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[Ku(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[Un(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[Ho(I("a",e,t,n),I("b",e,t,n))];case"Less":return[_k(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[qo(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[_s(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[Mg(I("a",e,t,n))];case"LogicalOr":return[Pk(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[xn(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},MV=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Me(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Einsum":return[H_(I("equation",e,t,n),...I("tensors",e,t,n))];case"Transpose":return[qe(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":let[s,r]=I("fusedOps",e,t,n),a=s==="biasadd",i=r==="prelu",o=I("numArgs",e,t,n),u=I("leakyreluAlpha",e,t,n);if(a){if(i&&o!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,l]=I("args",e,t,n);return[pa.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:c,activation:r,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},LV=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[qu(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"FusedBatchNormV3":return[qu(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[mR(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[jg(I("x",e,t,n))];case"LogSoftmax":return[Rk(I("x",e,t,n))];case"SparseToDense":return[Zk(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},BV=(e,t,n)=>{switch(e.op){case"Max":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[$s(I("x",e,t,n),i,o)]}case"Mean":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[St(I("x",e,t,n),i,o)]}case"Min":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[em(I("x",e,t,n),i,o)]}case"Sum":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[ve(I("x",e,t,n),i,o)]}case"All":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[yk(I("x",e,t,n),i,o)]}case"Any":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Zf(I("x",e,t,n),i,o)]}case"ArgMax":{let i=I("axis",e,t,n);return[Gu(I("x",e,t,n),i)]}case"ArgMin":{let i=I("axis",e,t,n);return[SE(I("x",e,t,n),i)]}case"Prod":{let i=I("axis",e,t,n),o=I("keepDims",e,t,n);return[Mk(I("x",e,t,n),i,o)]}case"Cumsum":{let i=I("axis",e,t,n),o=I("exclusive",e,t,n),u=I("reverse",e,t,n);return[Ak(I("x",e,t,n),i,o,u)]}case"Bincount":let s=I("x",e,t,n),r=I("weights",e,t,n),a=I("size",e,t,n);return[Ik(s,r,a)];case"DenseBincount":{let i=I("x",e,t,n),o=I("weights",e,t,n),u=I("size",e,t,n),c=I("binaryOutput",e,t,n);return[__(i,o,u,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},VV=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let s=I("n",e,t,n),r=I("axis",e,t,n),a=I("tensors",e,t,n);return a=a.slice(0,s),[Dt(a,r)]}case"Gather":{let s=I("x",e,t,n),r=I("indices",e,t,n);return[ju(s,pe(r,"int32"),0)]}case"GatherV2":{let s=I("axis",e,t,n),r=I("batchDims",e,t,n),a=I("x",e,t,n),i=I("indices",e,t,n);return[ju(a,pe(i,"int32"),s,r)]}case"Reverse":{let s=I("dims",e,t,n),r=[];for(let i=0;i<s.length;i++)s[i]&&r.push(i);let a=I("x",e,t,n);return[es(a,r)]}case"ReverseV2":{let s=I("axis",e,t,n),r=I("x",e,t,n);return[es(r,s)]}case"Slice":{let s=I("begin",e,t,n),r=I("size",e,t,n);return[He(I("x",e,t,n),s,r)]}case"StridedSlice":{let s=I("begin",e,t,n),r=I("end",e,t,n),a=I("strides",e,t,n),i=I("beginMask",e,t,n),o=I("endMask",e,t,n),u=I("ellipsisMask",e,t,n),c=I("newAxisMask",e,t,n),l=I("shrinkAxisMask",e,t,n),d=I("x",e,t,n);return[n3(d,s,r,a,i,o,u,c,l)]}case"Pack":return H(()=>{let s=I("axis",e,t,n),r=I("tensors",e,t,n),a=r[0].shape,i=yr(r[0]).shape,o=r.map(u=>{let c=w.arraysEqual(u.shape,a);if(!c&&!w.arraysEqual(yr(u).shape,i))throw new Error("the input tensors shape does not match");return c?u:G(u,a)});return[ts(o,s)]});case"Unpack":{let s=I("axis",e,t,n),r=I("tensor",e,t,n);return Rs(r,s)}case"Tile":{let s=I("reps",e,t,n);return[us(I("x",e,t,n),s)]}case"Split":case"SplitV":{let s=I("axis",e,t,n),r=I("numOrSizeSplits",e,t,n),a=I("x",e,t,n);return Bn(a,r,s)}case"ScatterNd":{let s=I("indices",e,t,n),r=I("values",e,t,n),a=I("shape",e,t,n);return[y3(s,r,a)]}case"GatherNd":{let s=I("x",e,t,n),r=I("indices",e,t,n);return[k3(s,r)]}case"SparseToDense":{let s=I("sparseIndices",e,t,n),r=I("outputShape",e,t,n),a=I("sparseValues",e,t,n),i=I("defaultValue",e,t,n);return[Zk(s,a,r,a.dtype===i.dtype?i:pe(i,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},WV=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:i}=Dc.sparseFillEmptyRows(I("indices",e,t,n),I("values",e,t,n),I("denseShape",e,t,n),I("defaultValue",e,t,n));return[s,r,a,i]}case"SparseReshape":{let{outputIndices:s,outputShape:r}=Dc.sparseReshape(I("inputIndices",e,t,n),I("inputShape",e,t,n),I("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[Dc.sparseSegmentMean(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];case"SparseSegmentSum":return[Dc.sparseSegmentSum(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},UV=(e,t,n)=>{switch(e.op){case"FFT":return[Kg(I("x",e,t,n))];case"IFFT":return[fd(I("x",e,t,n))];case"RFFT":return[Xg(I("x",e,t,n))];case"IRFFT":return[qk(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},GV=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:s,nGramsSplits:r}=Sf.stringNGrams(I("data",e,t,n),I("dataSplits",e,t,n),I("separator",e,t,n),I("nGramWidths",e,t,n),I("leftPad",e,t,n),I("rightPad",e,t,n),I("padWidth",e,t,n),I("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{let{indices:s,values:r,shape:a}=Sf.stringSplit(I("input",e,t,n),I("delimiter",e,t,n),I("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[Sf.stringToHashBucketFast(I("input",e,t,n),I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},HV=(e,t,n)=>{switch(e.op){case"Cast":return[pe(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{let s=I("axis",e,t,n);return[Pn(I("x",e,t,n),s)]}case"Squeeze":{let s=I("axis",e,t,n);return[yr(I("x",e,t,n),s)]}case"Reshape":return[G(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[UR(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[hi(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{let s=I("blockShape",e,t,n),r=I("paddings",e,t,n);return[Vg(I("x",e,t,n),s,r)]}case"BatchToSpaceND":{let s=I("blockShape",e,t,n),r=I("crops",e,t,n);return[Eg(I("x",e,t,n),s,r)]}case"DepthToSpace":{let s=I("blockSize",e,t,n),r=I("dataFormat",e,t,n).toUpperCase();return[D_(I("x",e,t,n),s,r)]}case"BroadcastTo":return[jc(I("x",e,t,n),I("shape",e,t,n))];case"BroadcastArgs":return[i_(I("s0",e,t,n),I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Nx(e,t,n,s){let r=((a,i,o)=>{switch(a.category){case"arithmetic":return H(()=>wV(a,i,o));case"basic_math":return H(()=>kV(a,i,o));case"control":return $V(a,i,o);case"convolution":return H(()=>AV(a,i,o));case"creation":return H(()=>EV(a,i,o));case"dynamic":return _V(a,i,o);case"evaluation":return H(()=>RV(a,i,o));case"image":return H(()=>PV(a,i,o));case"graph":return H(()=>DV(a,i,o));case"logical":return H(()=>zV(a,i,o));case"matrices":return H(()=>MV(a,i,o));case"normalization":return H(()=>LV(a,i,o));case"reduction":return H(()=>BV(a,i,o));case"slice_join":return H(()=>VV(a,i,o));case"sparse":return H(()=>WV(a,i,o));case"spectral":return H(()=>UV(a,i,o));case"string":return H(()=>GV(a,i,o));case"transformation":return H(()=>HV(a,i,o));case"hash_table":return OV(a,i,o,s);case"custom":let u=x0(a.op);if(u&&u.customExecutor)return u.customExecutor(new xV(a,i,o));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(r)?r.then(a=>[].concat(a)):[].concat(r)}var Tx=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function $x(e,t,n,s){let r=new Set,a=[],i=null,o=null,u=new Set,c=Object.keys(e).map(p=>$n(p)[0]),l=[];s!=null&&(l=s.map(p=>$n(p.name)[0]));let d=[...t];for(;d.length>0;){let p=d.pop();if((W0(p)||YV(p)||QV(p))&&i==null&&(i=p,o=i.children.map(h=>h.name).filter(h=>r.has(h))),r.add(p.name),n[p.name]==null&&c.indexOf(p.name)===-1&&l.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(h=>{u.has(h.name)||(u.add(h.name),d.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}function qV(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map(l=>$n(l)[0]).map(l=>e.nodes[l]),o=e.initNodes;i.forEach(l=>{s.has(l.name)&&a.push(l)}),e.weights.forEach(l=>{s.has(l.name)&&a.push(l)}),o!=null&&o.forEach(l=>{s.has(l.name)&&a.push(l)});let u=new Set,c=[];for(;a.length>0;){let l=a.pop();u.add(l.name),t[l.name]||c.push(l),l.children.forEach(d=>{!u.has(d.name)&&s.has(d.name)&&d.inputs.every(p=>u.has(p.name))&&a.push(d)})}return c}var jV=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],KV=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],XV=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function W0(e){return jV.indexOf(e.op)>=0}function YV(e){return KV.indexOf(e.op)>=0}function QV(e){return XV.indexOf(e.op)>=0}var Im=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Im(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=$x(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let i=t.map(u=>u.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${s}]`)}return qV(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(l=>this.graph.nodes[$n(l)[0]]),r=t.map(l=>$n(l)[0]),a=r.map(l=>this.graph.nodes[l]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(s,a),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,a),this.compiledMap.set(i,o));let u={},c={};return H(()=>{let l=new Tx(this.weightMap,u,c,this.functionExecutorMap),d={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=$n(f),b=[];b[g]=e[f],d[m]=b});let p=this.getFrozenTensorIds(d),h={};for(let f=0;f<o.length;f++){let m=o[f];if(!d[m.name]){let g=Nx(m,d,l,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);d[m.name]=g,this.checkTensorForDisposal(m.name,m,d,l,p,r,h)}}return this.parent==null&&l.dispose(p),t.map(f=>nn(f,d,l))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let u=J4(o.name,n,s);u!=null&&u.forEach(c=>{if(c&&!c.kept&&!r.has(c.id)){let l=i[c.id];if(l===1){if(!this.keepTensorForDebug)c.dispose();else{let[d,p]=Cs(t.name,s);this.intermediateTensors[d]?this.intermediateTensors[d][p]=c:(this.intermediateTensors[d]=[],this.intermediateTensors[d][p]=c)}delete i[c.id]}else l!=null&&i[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=X().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){console.warn(c.message)}this.resetIntermediateTensors();let a=new Tx(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let i=t.map(c=>nn(c,this.tensorsMap,a)),o=i.map(c=>c.id),u=Object.keys(e).map(c=>e[c].id);return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,i)=>(r[this.inputs[i].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(y=>this.graph.nodes[$n(y)[0]]),i=n.map(y=>$n(y)[0]),o=i.map(y=>this.graph.nodes[y]);o.length===0&&(o=this._outputs);let{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:d}=$x(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(y=>({node:y,contexts:t.currentContext})),h={...this.weightMap};Object.keys(e).forEach(y=>{let[v,x]=$n(y),k=[];k[x]=e[y],h[v]=k});let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let y=this.processStack(a,p,t,h,g,m,i,f,u);await Promise.all(y)}l==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=o.filter(y=>!W0(y)&&!nn(y.name,h,t)).map(y=>y.name);if(b.length>0){let y="";throw l!=null&&(y=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${y}`)}return h}processStack(e,t,n,s,r,a,i,o,u){let c=[];for(;t.length>0;){let l=t.pop();n.currentContext=l.contexts;let d="";if(l.node.op==="Enter"&&I("isConstant",l.node,s,n)&&([d]=Cs(l.node.name,n)),s[l.node.name]==null){let p=Nx(l.node,s,n,this._resourceManager);d||([d]=Cs(l.node.name,n));let h=n.currentContext;w.isPromise(p)?c.push(p.then(f=>(s[d]=f,n.currentContext=h,this.checkTensorForDisposal(d,l.node,s,n,a,i,o),this.processChildNodes(l.node,t,n,s,r,u),f))):(s[d]=p,this.checkTensorForDisposal(d,l.node,s,n,a,i,o),this.processChildNodes(l.node,t,n,s,r,u))}else this.processChildNodes(l.node,t,n,s,r,u)}return c}processChildNodes(e,t,n,s,r,a){e.children.forEach(i=>{let[o]=Cs(i.name,n);r[o]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!nn(u,s,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!nn(u,s,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=$n(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((o,u)=>a[u]===-1||a[u]===o);w.assert(i,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&w.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=$n(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=$n(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},ZV=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},JV="?tfjs-format=file",eW="model.json",tW=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new ZV}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=An.browserHTTPRequest(e,this.loadOptions);else{let t=An.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(An.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=An.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Im(kx.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=kx.Instance.transformGraph(e.modelInitializer);this.initializer=new Im(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=An.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof tt)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Qde(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${eW}${JV}`);let n=new tW(e,t);return await n.load(),n}var Zde="0.0.0",nW={};Ae(nW,{CSVDataset:()=>eS,Dataset:()=>Yo,FileDataSource:()=>oS,TextLineDataset:()=>J0,URLDataSource:()=>uS,array:()=>CW,csv:()=>PW,func:()=>zW,generator:()=>MW,microphone:()=>BW,version_data:()=>VW,webcam:()=>LW,zip:()=>NW});var sW=va(Dd()),rW=va(Dd());function aW(e,t){return Id(e,t)}function Id(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(Qi(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let i in e){let o=e[i],u=Id(o,t,n,s);a[i]=u}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function iW(e,t=G0){return U0(e,t)}function U0(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(Qi(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let i in s){let o=e.map(c=>c[i]),u=U0(o,t,n);a[i]=u}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function G0(e){return e===null?null:Qi(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function H0(e,t){let n=new Map;Id(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let i=await a;n.set(r,i)}}return Id(e,t,n)}function Qi(e){let t=!1;if(X().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=fw();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof tt)&&!(e instanceof Promise)&&!t)}function oW(e){return e==null||uW(e)||Array.isArray(e)||typeof e=="object"&&e instanceof tt||w.isTypedArray(e)}function uW(e){return e===null||typeof e!="object"&&typeof e!="function"}function lW(e){return aW(e,cW)}function cW(e){return e instanceof tt?{value:e.clone(),recurse:!1}:Qi(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var q0=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},j0=class extends q0{constructor(){super(j0.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},K0=j0;K0.INITIAL_CAPACITY=32;function X0(e){return new hW(e)}function Oy(e){return new fW(e)}function dW(e,t){return new Y0(e,t)}function pW(e,t=Q0.FAIL){return new IW(e,t)}var Ut=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new wW(this,e)}filter(e){return new vW(this,e)}map(e){return new xW(this,e)}mapAsync(e){return new Ax(this,e)}serialMapAsync(e){return new Ax(this,e).serial()}flatmap(e){return new kW(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new yW(this,e,t)}columnMajorBatch(e,t=!0,n=G0){return this.rowMajorBatch(e,t).map(r=>iW(r,n))}concatenate(e,t){return new Y0(X0([this,e]),t)}take(e){return e<0||e==null?this:new bW(this,e)}skip(e){return e<0||e==null?this:new gW(this,e)}prefetch(e){return new Z0(this,e)}shuffle(e,t){return new SW(this,e,t)}serial(){return new mW(this)}},hW=class extends Ut{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:lW(e),done:!1}}},fW=class extends Ut{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},mW=class extends Ut{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},gW=class extends Ut{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ee(e.value)}return this.upstream.next()}},bW=class extends Ut{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},yW=class extends Ut{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},vW=class extends Ut{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ee(e.value)}}},xW=class extends Ut{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ts.getTensorsInContainer(e.value),n=this.transform(e.value),s=Ts.getTensorsInContainer(n);for(let r of t)Ts.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},wW=class extends Ut{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Ax=class extends Ut{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ts.getTensorsInContainer(e.value),n=await this.transform(e.value),s=Ts.getTensorsInContainer(n);for(let r of t)Ts.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},Py=class extends Ut{constructor(){super();this.outputQueue=new K0,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},kW=class extends Py{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ts.getTensorsInContainer(e.value),n=this.transform(e.value),s=Ts.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)Ts.isTensorInList(r,s)||r.dispose();return!0}},Y0=class extends Ut{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Q0=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(Q0||{}),IW=class extends Ut{constructor(e,t=0){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof Ut?{value:a.next().then(o=>(t++,o.done&&n++,o.value)),recurse:!1}:{value:null,recurse:!0}}let r=await H0(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},Z0=class extends Ut{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new q0(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},SW=class extends Z0{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=rW.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Yo=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),Tn(async()=>(await n.iterator()).columnMajorBatch(e,t,TW),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Tn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Tn(async()=>(await t.iterator()).filter(s=>H(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Tn(async()=>(await t.iterator()).map(n=>H(()=>e(n))),this.size)}mapAsync(e){let t=this;return Tn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Tn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Tn(async()=>{let s=Oy(async()=>({value:await t.iterator(),done:!1}));return dW(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Tn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=sW.alea(t||w.now().toString());return Tn(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Tn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Yo.MAX_BUFFER_SIZE=1e4;function Tn(e,t=null){return new class extends Yo{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function CW(e){return Tn(async()=>X0(e),e.length)}function NW(e){if(!Qi(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Tn(async()=>{let n=await H0(e,s=>{if(s instanceof Yo)return{value:s.iterator(),recurse:!1};if(Qi(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return pW(n,1)},t)}function TW(e){if(e===null)return null;let t=e[0];return oW(t)?{value:$W(e),recurse:!1}:{value:null,recurse:!0}}function $W(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof tt?ts(e):ds(e)}var J0=class extends Yo{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},Lc='"',Cu=Symbol("out"),Ex=Symbol("field"),Bc=Symbol("quote"),Rf=Symbol("quoteafterquote"),_x=Symbol("quoteinquote"),eS=class extends Yo{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new J0(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[r],u=null;if(o==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let c=Number(o);if(isNaN(c))i&&i.dtype==="bool"?u=this.getBoolean(o):u=o;else if(!i||!i.dtype)u=c;else switch(i.dtype){case"float32":u=c;break;case"int32":u=Math.floor(c);break;case"bool":u=this.getBoolean(o);break;default:u=c}}i&&i.isLabel?s[a]=u:n[a]=u}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=Cu;for(let i=0;i<r;i++)switch(a){case Cu:switch(e.charAt(i)){case Lc:s=i+1,a=Bc;break;case this.delimiter:if(s=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Cu;break;default:a=Ex,s=i;break}break;case Ex:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i)),a=Cu,s=i+1;break;default:}break;case Bc:switch(e.charAt(i)){case Lc:a=Rf;break;default:}break;case Rf:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i-1)),a=Cu,s=i+1;break;case Lc:a=Bc;break;default:a=_x;break}break;case _x:switch(e.charAt(i)){case Lc:a=Bc;break;default:}break;default:}if(a===Rf?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},tS=class extends Ut{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(X().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new tS(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),ds(n,t)}},nS=class extends Ut{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Jt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,i=r+n,o=s+a;this.cropBox=Hi([a,r,o,i],[1,4])}else this.cropBox=Hi([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(X().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new nS(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Zw.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return H(()=>{let t=Pn(pe(e,"float32"),0),n;n=ls.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return G(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},sS=class{},rS=class extends Ut{split(e){return new AW(this,e)}},AW=class extends rS{constructor(e,t){super();this.upstream=e,this.impl=new EW(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},EW=class extends Py{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},_W=class extends Ut{decodeUTF8(){return new RW(this)}},RW=class extends rS{constructor(e){super();this.upstream=e,this.impl=new DW(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},DW=class extends Py{constructor(e){super();if(this.upstream=e,X().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=fw();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return X().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},aS=class extends _W{constructor(e,t={}){super();this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(X().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=i=>{let o=r.result;if(o instanceof ArrayBuffer&&(o=new Uint8Array(o)),!(o instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(o)},r.onabort=i=>n(new Error("Aborted")),r.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function FW(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=OW(e));let a=await(n||w.fetch)(s,r);if(a.ok){let i=new Uint8Array(await a.arrayBuffer());return new aS(i,t)}else throw new Error(a.statusText)}var OW=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function iS(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var oS=class extends sS{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(iS(this.input)&&X().get("IS_NODE")){let e=nd();this.input=e.readFileSync(this.input.substr(7))}return new aS(this.input,this.options)}},uS=class extends sS{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return iS(this.url)?new oS(this.url,this.fileOptions).iterator():FW(this.url,this.fileOptions)}};function PW(e,t={}){return new eS(new uS(e),t)}function zW(e){let t=Oy(e);return Tn(async()=>t)}function MW(e){return Tn(async()=>{let t=await e();return Oy(()=>t.next())})}async function LW(e,t){return nS.create(e,t)}async function BW(e){return tS.create(e)}var VW="0.0.0";function xe(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var WW=ys.whereImpl,lS=class extends tl{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new Fd(this,ks())}nextDataId(){return lS.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,X().get("IS_NODE")&&N.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return N.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,n)}makeOutput(e,t,n){let s=this.write(e,t,n);return ks().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){xe([e],"where");let t=this.readSync(e.dataId);return WW(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},cS=lS;cS.nextDataId=0;var zy={};Ae(zy,{addImpl:()=>pS,bincountImpl:()=>Ly,bincountReduceImpl:()=>hS,ceilImpl:()=>fS,concatImpl:()=>By,equalImpl:()=>mS,expImpl:()=>bS,expm1Impl:()=>vS,floorImpl:()=>xS,gatherNdImpl:()=>wS,gatherV2Impl:()=>kS,greaterEqualImpl:()=>SS,greaterImpl:()=>IS,lessEqualImpl:()=>NS,lessImpl:()=>CS,linSpaceImpl:()=>TS,logImpl:()=>$S,maxImpl:()=>AS,maximumImpl:()=>ES,minimumImpl:()=>_S,multiplyImpl:()=>Vy,negImpl:()=>RS,notEqualImpl:()=>DS,prodImpl:()=>FS,rangeImpl:()=>Uy,rsqrtImpl:()=>OS,sigmoidImpl:()=>EU,simpleAbsImpl:()=>dS,sliceImpl:()=>Cd,sparseFillEmptyRowsImpl:()=>zS,sparseReshapeImpl:()=>MS,sparseSegmentReductionImpl:()=>Gy,sqrtImpl:()=>DU,squaredDifferenceImpl:()=>LS,stridedSliceImpl:()=>BS,stringNGramsImpl:()=>VS,stringSplitImpl:()=>WS,stringToHashBucketFastImpl:()=>US,subImpl:()=>GS,tileImpl:()=>HS,topKImpl:()=>jS,transposeImpl:()=>Wy,uniqueImpl:()=>KS});function dS(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var UW=e=>{let{x:t}=e.inputs,n=e.backend;xe(t,"abs");let s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=dS(r),n.makeOutput(s,t.shape,t.dtype)},GW={kernelName:so,backendName:"cpu",kernelFunc:UW};function At(e){return(t,n,s,r,a)=>{let i=N.assertAndGetBroadcastShape(t,n),o=i.length,u=w.computeStrides(i),c=w.sizeFromShape(i),l=w.getTypedArrayFromDType(a,c),d=t.length,p=n.length,h=w.computeStrides(t),f=w.computeStrides(n),m=N.getBroadcastDims(t,i),g=N.getBroadcastDims(n,i);if(m.length+g.length===0)for(let b=0;b<l.length;++b)l[b]=e(s[b%s.length],r[b%r.length]);else for(let b=0;b<l.length;++b){let y=w.indexToLoc(b,o,u),v=y.slice(-d);m.forEach(C=>v[C]=0);let x=w.locToIndex(v,d,h),k=y.slice(-p);g.forEach(C=>k[C]=0);let T=w.locToIndex(k,p,f);l[b]=e(s[x],r[T])}return[l,i]}}function En(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64"),u=n.data.get(o.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}var HW={kernelName:Md,backendName:"cpu",kernelFunc:En};function Sd(e,t,n="float32"){if(n==="complex64"){let r=Sd(e,t,"float32"),a=Sd(e,t,"float32");return En({inputs:{real:r,imag:a},backend:e})}let s=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Ds(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var qW={kernelName:La,backendName:"cpu",kernelFunc:Ds};function fa(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var jW={kernelName:jd,backendName:"cpu",kernelFunc:fa};function Ir(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Ds({inputs:{x:r},backend:n});let i=Sd(n,r.shape,r.dtype),o=Ir({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=En({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}if(r.dtype==="complex64"){let i=fa({inputs:{input:r},backend:n}),o=Ir({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=Ds({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32"){let i=n.data.get(r.dataId).values,o=Int32Array.from(i);return n.makeTensorInfo(r.shape,"int32",o)}if(a==="bool"){let i=n.data.get(r.dataId).values,o=w.toTypedArray([0],r.dtype),[u,c]=At((l,d)=>l!==d?1:0)(r.shape,[],i,o,"bool");return n.makeTensorInfo(c,"bool",u)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var KW={kernelName:Ca,backendName:"cpu",kernelFunc:Ir};function Gt(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;xe([i,o],e);let c=u.data.get(i.dataId).values,l=u.data.get(o.dataId).values,d=i.dtype==="string"?N.fromUint8ToStringArray(c):c,p=i.dtype==="string"?N.fromUint8ToStringArray(l):l,h=s||i.dtype,[f,m]=t(i.shape,o.shape,d,p,h);return u.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;if(i.dtype==="complex64"||o.dtype==="complex64"){let c=Ir({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(c.dataId),d=l.complexTensorInfos.real,p=l.complexTensorInfos.imag,h=u.data.get(d.dataId).values,f=u.data.get(p.dataId).values,m=Ir({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),b=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,v=u.data.get(b.dataId).values,x=u.data.get(y.dataId).values,[k,T,C]=n(i.shape,o.shape,h,f,v,x),R=u.makeTensorInfo(C,"float32",k),_=u.makeTensorInfo(C,"float32",T),P=En({inputs:{real:R,imag:_},backend:u});return u.disposeIntermediateTensorInfo(c),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(R),u.disposeIntermediateTensorInfo(_),P}else{let c=u.data.get(i.dataId).values,l=u.data.get(o.dataId).values,d=s||i.dtype,[p,h]=t(i.shape,o.shape,c,l,d);return u.makeTensorInfo(h,d,p)}}}function My(e){return(t,n,s,r,a,i)=>{let o=N.assertAndGetBroadcastShape(t,n),u=w.sizeFromShape(o),c=o.length,l=w.computeStrides(o),d=w.getTypedArrayFromDType("float32",u),p=w.getTypedArrayFromDType("float32",u),h=N.getBroadcastDims(t,o),f=N.getBroadcastDims(n,o),m=N.mergeRealAndImagArrays(s,r),g=N.mergeRealAndImagArrays(a,i),b=t.length,y=w.computeStrides(t),v=n.length,x=w.computeStrides(n);if(h.length+f.length===0)for(let k=0;k<d.length;k++){let T=k%m.length,C=k%g.length,R=e(m[T*2],m[T*2+1],g[C*2],g[C*2+1]);d[k]=R.real,p[k]=R.imag}else for(let k=0;k<d.length;k++){let T=w.indexToLoc(k,c,l),C=T.slice(-b);h.forEach(F=>C[F]=0);let R=w.locToIndex(C,b,y),_=T.slice(-v);f.forEach(F=>_[F]=0);let P=w.locToIndex(_,v,x),D=e(m[R*2],m[R*2+1],g[P*2],g[P*2+1]);d[k]=D.real,p[k]=D.imag}return[d,p,o]}}var pS=At((e,t)=>e+t),XW=My((e,t,n,s)=>({real:e+n,imag:t+s})),jl=Gt(Cr,pS,XW),YW={kernelName:Cr,backendName:"cpu",kernelFunc:jl};function Ly(e,t,n,s,r){let a=w.sizeFromShape(s),i=w.makeZerosTypedArray(r,n);for(let o=0;o<e.length;o++){let u=e[o];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(a>0?i[u]+=t[o]:i[u]+=1)}return i}function hS(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],i=_e([r,n],t.dtype);for(let o=0;o<r;o++)for(let u=0;u<a;u++){let c=e.get(o,u);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(s?i.set(1,o,c):t.size>0?i.set(i.get(o,c)+t.get(o,u),o,c):i.set(i.get(o,c)+1,o,c))}return i}function Dr(e){return(t,n,s)=>{let r=w.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function st(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:i}=s;if(xe(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=a,u=o.data.get(i.dataId).values,c=w.sizeFromShape(i.shape),l=n||i.dtype,d=w.getArrayFromDType(l,c);for(let p=0;p<c;++p)d[p]=t(u[p],r);return o.makeTensorInfo(i.shape,l,d)}}function Qo(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:i}=s;if(xe(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=a,u=o.data.get(i.dataId).values,c=n||i.dtype,l=t(u,c,r);return o.makeTensorInfo(i.shape,c,l)}}var fS=Dr(e=>Math.ceil(e)),QW=Qo(Na,fS),ZW={kernelName:Na,backendName:"cpu",kernelFunc:QW};function By(e,t,n,s){let r=w.getArrayFromDType(n,w.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);r.set(i.vals,a),a+=o})}else{let a=0;e.forEach(i=>{let o=n==="string"?N.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let c=0;c<i.shape[0];++c){let l=c*t[1]+a;for(let d=0;d<i.shape[1];++d)r[l+d]=o[u++]}a+=i.shape[1]})}return r}var mS=At((e,t)=>e===t?1:0),gS=Gt(lo,mS,null,"bool"),JW={kernelName:lo,backendName:"cpu",kernelFunc:gS},bS=Dr(e=>Math.exp(e)),yS=Qo(Fa,bS,"float32"),eU={kernelName:Fa,backendName:"cpu",kernelFunc:yS},vS=Dr(e=>Math.expm1(e)),tU=Qo(po,vS),nU={kernelName:po,backendName:"cpu",kernelFunc:tU},xS=Dr(e=>Math.floor(e)),sU=Qo(Oa,xS),rU={kernelName:Oa,backendName:"cpu",kernelFunc:sU};function wS(e,t,n,s,r,a,i,o,u){let c=_e([s,a],n);for(let l=0;l<s;l++){let d=[],p=0;for(let h=0;h<r;h++){let f=e[l*r+h];p+=f*i[h],d.push(f)}if(p<0||p>=u/a)throw new Error(`Invalid indices: ${d} does not index into ${o}`);for(let h=0;h<a;h++)c.values[l*a+h]=t.get(...t.indexToLoc(p*a+h))}return c}function kS(e,t,n){let s=_e(n,e.dtype);for(let r=0;r<s.size;++r){let i=s.indexToLoc(r).slice(),o=i[0],u=i[2],c=t.locToIndex([o,u]);i[2]=t.values[c];let l=e.locToIndex(i);0<=l&&l<e.values.length&&(s.values[r]=e.values[l])}return s}var IS=At((e,t)=>e>t?1:0),aU=Gt(go,IS,null,"bool"),iU={kernelName:go,backendName:"cpu",kernelFunc:aU},SS=At((e,t)=>e>=t?1:0),oU=Gt(Ma,SS,null,"bool"),uU={kernelName:Ma,backendName:"cpu",kernelFunc:oU},CS=At((e,t)=>e<t?1:0),lU=Gt(bo,CS,null,"bool"),cU={kernelName:bo,backendName:"cpu",kernelFunc:lU},NS=At((e,t)=>e<=t?1:0),dU=Gt(yo,NS,null,"bool"),pU={kernelName:yo,backendName:"cpu",kernelFunc:dU};function TS(e,t,n){let s=(t-e)/(n-1),r=w.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var $S=Dr(e=>Math.log(e)),hU=Qo(Va,$S),fU={kernelName:Va,backendName:"cpu",kernelFunc:hU};function AS(e,t,n,s){let r=w.getTypedArrayFromDType(s,w.sizeFromShape(n));for(let a=0;a<r.length;++a){let i=a*t,o=e[i];for(let u=0;u<t;++u){let c=e[i+u];(Number.isNaN(c)||c>o)&&(o=c)}r[a]=o}return r}var ES=At((e,t)=>Math.max(e,t)),mU=Gt(Ua,ES),gU={kernelName:Ua,backendName:"cpu",kernelFunc:mU},_S=At((e,t)=>Math.min(e,t)),bU=Gt(ja,_S),yU={kernelName:ja,backendName:"cpu",kernelFunc:bU},Vy=At((e,t)=>e*t),vU=My((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Pp=Gt(Xa,Vy,vU),xU={kernelName:Xa,backendName:"cpu",kernelFunc:Pp};function RS(e,t,n){let s=w.createScalarValue(-1,n);return Vy([],t,s,e,n)}function wU(e){let{inputs:t,backend:n}=e,{x:s}=t;xe(s,"neg");let r=n.data.get(s.dataId).values,[a,i]=RS(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}var kU={kernelName:xo,backendName:"cpu",kernelFunc:wU},DS=At((e,t)=>e!==t?1:0),IU=Gt(wo,DS,null,"bool"),SU={kernelName:wo,backendName:"cpu",kernelFunc:IU};function Wy(e,t,n,s,r){let a=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),u=w.computeStrides(r),c=w.getTypedArrayFromDType(n,w.sizeFromShape(r));for(let l=0;l<i;++l){let d=w.indexToLoc(l,a,o),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[s[f]];let h=w.locToIndex(p,a,u);c[h]=e[l]}return c}function Wn(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;xe(r,"transpose");let i=r.shape.length,o=new Array(i);for(let d=0;d<o.length;d++)o[d]=r.shape[a[d]];let u=s.data.get(r.dataId).values,c=Wy(u,r.shape,r.dtype,a,o);return{dataId:s.write(c,o,r.dtype),shape:o,dtype:r.dtype}}var CU={kernelName:di,backendName:"cpu",kernelFunc:Wn};function FS(e,t,n,s){let[r,a]=N.computeOutAndReduceShapes(e,s),i=vn(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(r),i),u=w.sizeFromShape(a);for(let c=0;c<o.length;++c){let l=c*u,d=1;for(let p=0;p<u;++p)d*=n[l+p];o[c]=d}return{outVals:o,outShape:r,outDtype:i}}function NU(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;xe(r,"prod");let o=r.shape.length,u=w.parseAxisParam(a,r.shape),c=N.getAxesPermutation(u,o),l=u,d=r,p=[];c!=null&&(d=Wn({inputs:{x:r},backend:n,attrs:{perm:c}}),p.push(d),l=N.getInnerMostAxes(l.length,o));let h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=FS(d.shape,d.dtype,h,l),b=m;return i&&(b=N.expandShapeToKeepDim(m,u)),p.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(b,g,f)}var TU={kernelName:To,backendName:"cpu",kernelFunc:NU};function Uy(e,t,n,s){let r=e===t,a=e<t&&n<0,i=t<e&&n>1;if(r||a||i)return w.makeZerosTypedArray(0,s);let o=Math.abs(Math.ceil((t-e)/n)),u=w.makeZerosTypedArray(o,s);t<e&&n===1&&(n=-1),u[0]=e;for(let c=1;c<u.length;c++)u[c]=u[c-1]+n;return u}var OS=Dr(e=>1/Math.sqrt(e)),$U=Qo(ni,OS),AU={kernelName:ni,backendName:"cpu",kernelFunc:$U},EU=Dr(e=>1/(1+Math.exp(-e))),PS=st(ri,e=>1/(1+Math.exp(-e))),_U={kernelName:ri,backendName:"cpu",kernelFunc:PS};function Cd(e,t,n,s,r){let a=kt.isSliceContinous(s,t,n),i=w.sizeFromShape(n),o=w.computeStrides(s);if(a){let d=kt.computeFlatOffset(t,o);return r==="string"?e.slice(d,d+i):e.subarray(d,d+i)}let u=r==="string"?N.fromUint8ToStringArray(e):e,c=_e(s,r,u),l=_e(n,r);for(let d=0;d<l.size;++d){let p=l.indexToLoc(d),h=p.map((f,m)=>f+t[m]);l.set(c.get(...h),...p)}return r==="string"?N.fromStringArrayToUint8(l.values):l.values}function ma(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;xe(r,"slice");let[o,u]=kt.parseSliceParams(r,a,i);kt.assertParamsValid(r,o,u);let c=n.data.get(r.dataId).values,l=Cd(c,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,l)}var RU={kernelName:Do,backendName:"cpu",kernelFunc:ma};function zS(e,t,n,s,r,a,i){let o=t[0],u=a[0],c=new Array(u),l=new Array(o),d=t[1];if(u===0){if(o!==0)throw new Error(N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=w.getArrayFromDType(n,0),b=w.getArrayFromDType(r,0);return[g,[0,d],b,c,l]}let p=!0,h=0,f=new Array(u).fill(0);for(let g=0;g<o;++g){let b=e[g*d];if(b<0)throw new Error(N.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=u)throw new Error(N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,u));++f[b],p=p&&b>=h,h=b}let m=!0;for(let g=0;g<u;++g){let b=f[g]===0;c[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,b=s;for(let y=0;y<o;++y)l[y]=y;return[g,[o,d],b,c,l]}else{let g=f[u-1],b=w.getArrayFromDType(n,g*d),y=w.getArrayFromDType(r,g),v=new Array(u).fill(0);for(let x=0;x<o;++x){let k=e[x*d],T=v[k],C=(k===0?0:f[k-1])+T;v[k]++;for(let R=0;R<d;++R)b[C*d+R]=e[x*d+R];y[C]=s[x],l[x]=C}for(let x=0;x<u;++x)if(v[x]===0){let T=x===0?0:f[x-1];b[T*d+0]=x;for(let C=1;C<d;++C)b[T*d+C]=0;y[T]=i}return[b,[g,d],y,c,l]}}function MS(e,t,n,s,r){let a=w.sizeFromShape(s),i=t[0],o=r.length,u=[],c=1,l=-1;for(let g=0;g<o;++g){let b=r[g];if(b===-1){if(l!==-1)throw new Error(N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,g));l=g,u.push(1)}else{if(b<0)throw new Error(N.getSparseReshapeNegativeOutputDimErrorMessage(g,b));c*=b,u.push(b)}}if(l!==-1){if(c<=0)throw new Error(N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/c);if(c*g!==a)throw new Error(N.getSparseReshapeInputOutputMultipleErrorMessage(s,u));u[l]=g}if(w.sizeFromShape(u)!==a)throw new Error(N.getSparseReshapeInputOutputMismatchErrorMessage(s,u));let p=s.length,h=[];if(p>0){h[p-1]=1;for(let g=p-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(o>0){f[o-1]=1;for(let g=o-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let m=w.getArrayFromDType(n,i*o);for(let g=0;g<i;++g){let b=0;for(let y=0;y<p;++y)b+=e[g*p+y]*h[y];for(let y=0;y<o;++y)m[g*o+y]=Math.trunc(b/f[y]),b%=f[y]}return[m,[i,o],u]}function Gy(e,t,n,s,r,a=!1,i=0){let o=s.length,u=[t[0],e.length/t[0]],c=u[1],d=o>0?r[o-1]+1:0;if(d<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=d;let h=p.reduce((v,x)=>v*x,1),f=w.getArrayFromDType(n,h);if(o===0)return d>0&&f.fill(i),[f,p];if(d<=0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,b=0,y=r[m];for(;;){let v=0;if(g<o){if(v=r[g],y===v){++g;continue}if(y>=v)throw new Error(N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>b&&f.fill(i,b*c,y*c);for(let x=m;x<g;++x){let k=s[x];if(k<0||k>=u[0])throw new Error(N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,s[x],u[0]));for(let T=0;T<c;T++)f[y*c+T]+=e[k*c+T]}if(a)for(let x=0;x<c;x++)f[y*c+x]/=g-m;if(m=g,++g,b=y+1,y=v,g>o)break}return b<d&&f.fill(i,b*c,d*c),[f,p]}var DU=Dr(e=>Math.sqrt(e)),FU=st(ai,e=>Math.sqrt(e)),OU={kernelName:ai,backendName:"cpu",kernelFunc:FU},LS=At((e,t)=>{let n=e-t;return n*n}),PU=Gt(ui,LS),zU={kernelName:ui,backendName:"cpu",kernelFunc:PU};function BS(e,t,n,s){let r=_e(e,t.dtype);for(let a=0;a<r.size;a++){let i=r.indexToLoc(a),o=new Array(i.length);for(let u=0;u<o.length;u++)o[u]=i[u]*n[u]+s[u];r.set(t.get(...o),...i)}return r}var MU=class{constructor(e,t,n,s,r,a){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){let o=this.getPadWidth(a),u=Math.max(0,o-i),c=Math.max(0,o-(r-(i+1))),l=a-(u+c),d=t+(u>0?0:i-o),p=0;p+=u*this.leftPad.length;for(let b=0;b<l;++b)p+=e[d+b].length;p+=c*this.rightPad.length,p+=(u+c+l-1)*this.separator.length,n[s+i]=new Uint8Array(p);let f=n[s+i],m=0,g=b=>b.forEach(y=>f[m++]=y);for(let b=0;b<u;++b)g(this.leftPad),g(this.separator);for(let b=0;b<l-1;++b)g(e[d+b]),g(this.separator);if(l>0){g(e[d+l-1]);for(let b=0;b<c;++b)g(this.separator),g(this.rightPad)}else{for(let b=0;b<c-1;++b)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let u=1;u<s;++u){let c=t[u]>=o;if(c=c&&t[u]<=n,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${o}, ${n}]`);o=t[u]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let r=s-1,a=w.getArrayFromDType("int32",s);if(n===0||s===0){let o=new Array(n);for(let u=0;u<=r;++u)a[u]=0;return[o,a]}a[0]=0;for(let o=1;o<=r;++o){let u=t[o]-t[o-1],c=0;this.nGramWidths.forEach(l=>{c+=this.getNumNGrams(u,l)}),this.preserveShort&&u>0&&c===0&&(c=1),a[o]=a[o-1]+c}let i=new Array(a[r]);for(let o=0;o<r;++o){let u=t[o],c=a[o];if(this.nGramWidths.forEach(l=>{let d=t[o+1]-t[o],p=this.getNumNGrams(d,l);this.createNGrams(e,u,i,c,p,l),c+=p}),this.preserveShort&&c===a[o]){let l=t[o+1]-t[o];if(l===0)continue;let d=l+2*this.padWidth,p=1;this.createNGrams(e,u,i,c,p,d)}}return[i,a]}};function VS(e,t,n,s,r,a,i,o){return new MU(n,s,r,a,i,o).compute(e,t)}function LU(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],i=e.indexOf(a);for(;i!==-1;){let o=e.subarray(0,i);(!n||o.length!==0)&&s.push(o),e=e.subarray(i+1),i=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let i=e.subarray(r,a);(!n||i.length!==0)&&s.push(i),r=a+1}}function WS(e,t,n){let s=e.length,r=[],a=0,i=0,o=new Array(s);for(let p=0;p<s;++p){let h=r.length;LU(e[p],t,n,r);let f=r.length-h;o[p]=f,a+=f,i=Math.max(i,f)}let u=w.getArrayFromDType("int32",a*2),c=new Array(a),l=[s,i],d=0;for(let p=0;p<s;++p)for(let h=0;h<o[p];++h)u[d*2]=p,u[d*2+1]=h,c[d]=r[d],++d;return[u,c,l]}function US(e,t){let n=w.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=w.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var GS=At((e,t)=>e-t),BU=My((e,t,n,s)=>({real:e-n,imag:t-s})),Hy=Gt(li,GS,BU),VU={kernelName:li,backendName:"cpu",kernelFunc:Hy};function HS(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=_e(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),i=new Array(e.rank);for(let u=0;u<i.length;u++)i[u]=a[u]%e.shape[u];let o=e.locToIndex(i);s.values[r]=e.values[o]}return s}var Eu=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function qS(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let o=s-n+1,u=t-n+1,c=Math.log(o),l=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*l*(o-l)/o)*Math.sign(u-o/2),p=Math.max(n,Math.floor(t-u*l/o+d)),h=Math.min(s,Math.floor(t+(o-u)*l/o+d));qS(e,t,p,h)}let r=e[t],a=n,i=s;for(w.swap(e,n,t),Eu(e[s],r)>0&&w.swap(e,n,s);a<i;){for(w.swap(e,a,i),a++,i--;Eu(e[a],r)<0;)a=a+1;for(;Eu(e[i],r)>0;)i=i-1}Eu(e[n],r)===0?w.swap(e,n,i):(i=i+1,w.swap(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function jS(e,t,n,s,r){let a=t[t.length-1],[i,o]=[e.length/a,a],u=w.getTypedArrayFromDType(n,i*s),c=w.getTypedArrayFromDType("int32",i*s);for(let d=0;d<i;d++){let p=d*o,h=e.subarray(p,p+o),f=new Array(h.length);h.forEach((y,v)=>f[v]={value:y,index:v}),s<f.length&&(qS(f,s),f=f.slice(0,s)),r&&f.sort(Eu);let m=d*s,g=u.subarray(m,m+s),b=c.subarray(m,m+s);for(let y=0;y<s;y++)g[y]=f[y].value,b[y]=f[y].index}let l=t.slice();return l[l.length-1]=s,[_e(l,n,u),_e(l,"int32",c)]}function KS(e,t,n,s){let r=w.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let i={},o=new Int32Array(n[r]),u=new Vt(a,s,e),c=[],l=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(l)m=e[f].toString();else{let g=[];for(let b=0;b<a[0];b++)for(let y=0;y<a[2];y++)g.push(u.get(b,f,y));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,c.push(f)}}let d=a.slice();d[1]=Object.keys(i).length;let p=new Vt(d,s);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let b=0;b<a[2];b++)p.set(u.get(g,f,b),g,m,b)});let h=n.slice();return h[r]=d[1],{outputValues:p.values,outputShape:h,indices:o}}var Jde="0.0.0";sp("cpu",()=>new cS,1);var XS=st(Da,e=>e>=0?e:Math.exp(e)-1),WU={kernelName:Da,backendName:"cpu",kernelFunc:XS};function YS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;xe([r],"leakyRelu");let i=w.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,u=w.getTypedArrayFromDType("float32",i);for(let c=0;c<o.length;c++)u[c]=o[c]<0?a*o[c]:o[c];return n.makeTensorInfo(r.shape,"float32",u)}var UU={kernelName:Ba,backendName:"cpu",kernelFunc:YS},GU=At((e,t)=>e<0?t*e:e);function QS(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;xe([s,r],"prelu");let a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,u]=GU(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}var HU={kernelName:Za,backendName:"cpu",kernelFunc:QS},ZS=st(Ja,e=>Math.max(0,e)),qU={kernelName:Ja,backendName:"cpu",kernelFunc:ZS},JS=st(ti,e=>Math.min(Math.max(0,e),6)),jU={kernelName:ti,backendName:"cpu",kernelFunc:JS};function qy(e,t,n,s,r){if(n==="linear")return Ds({inputs:{x:t},backend:e});if(n==="relu")return ZS({inputs:{x:t},backend:e});if(n==="elu")return XS({inputs:{x:t},backend:e});if(n==="relu6")return JS({inputs:{x:t},backend:e});if(n==="prelu")return QS({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return YS({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return PS({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function bt(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=w.sizeFromShape(r.shape),o=w.inferFromImplicitShape(a,i),u=w.sizeFromShape(o);w.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){let l=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;l.shape=o,d.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var KU={kernelName:$o,backendName:"cpu",kernelFunc:bt};function e1(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;xe([r,a],"matMul");let u=r.shape.length,c=a.shape.length,l=i?r.shape[u-2]:r.shape[u-1],d=o?a.shape[c-1]:a.shape[c-2],p=i?r.shape[u-1]:r.shape[u-2],h=o?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),v=Go.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);w.assert(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,l,p]:[g,p,l],k=o?[b,h,d]:[b,d,h],T=bt({inputs:{x:r},backend:n,attrs:{shape:x}}),C=bt({inputs:{x:a},backend:n,attrs:{shape:k}}),R=i?T.shape[1]:T.shape[2],_=i?T.shape[2]:T.shape[1],P=o?C.shape[1]:C.shape[2],D=Math.max(g,b),F=n.data.get(T.dataId).values,$=n.data.get(C.dataId).values,z=w.computeStrides(T.shape),W=w.computeStrides(C.shape),[q,K,j]=i?[z[0],1,z[1]]:[z[0],z[1],1],[Q,J,ne]=o?[1,W[1],W[0]]:[W[1],1,W[0]],se=_*P,te=_e([D,_,P],T.dtype),ie=te.values,ee=n.blockSize;for(let ce=0;ce<D;ce++)for(let me=0;me<_;me+=ee)for(let Ie=0;Ie<P;Ie+=ee)for(let we=0;we<R;we+=ee){let Te=Math.min(me+ee,_),Fe=Math.min(Ie+ee,P),Xe=Math.min(we+ee,R);for(let We=me;We<Te;We++)for(let Be=Ie;Be<Fe;Be++){let rt=0;for(let Ye=we;Ye<Xe;Ye++){let at=Math.min(ce,g-1)*q,ht=Math.min(ce,b-1)*ne,pn=F[at+We*K+Ye*j],Qe=$[Ye*Q+Be*J+ht];rt+=pn*Qe}ie[ce*se+(We*P+Be)]+=rt}}return n.disposeIntermediateTensorInfo(T),n.disposeIntermediateTensorInfo(C),n.makeTensorInfo(v,te.dtype,te.values)}var XU={kernelName:Sa,backendName:"cpu",kernelFunc:e1};function YU(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s,p,h,f,m=[];p=e1({inputs:{a:r,b:a},attrs:{transposeA:u,transposeB:c},backend:n}),i&&(h=jl({inputs:{a:p,b:i},backend:n}),m.push(p),p=h),l&&(f=qy(n,p,l,o,d),m.push(p),p=f);for(let b of m)n.disposeIntermediateTensorInfo(b);return p}var QU={kernelName:sa,backendName:"cpu",kernelFunc:YU},ZU=st(nl,e=>Math.acos(e)),JU={kernelName:nl,backendName:"cpu",kernelFunc:ZU},eG=st(sl,e=>Math.acosh(e)),tG={kernelName:sl,backendName:"cpu",kernelFunc:eG};function nG(e){let{inputs:t,backend:n}=e,s=t;xe(t,"addN");let r=s.map(o=>n.data.get(o.dataId).values),a=_e(s[0].shape,s[0].dtype),i=a.values;for(let o=0;o<s.length;o++){let u=r[o];for(let c=0;c<i.length;c++)i[c]+=u[c]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var sG={kernelName:wa,backendName:"cpu",kernelFunc:nG};function rG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;xe(r,"all");let o=w.parseAxisParam(a,r.shape),u=o,c=N.getAxesPermutation(u,r.shape.length),l=r;c!=null&&(l=Wn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,r.shape.length)),N.assertAxesAreInnerMostDims("all",u,l.shape.length);let[d,p]=N.computeOutAndReduceShapes(l.shape,u),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];v=v&&k}f[b]=v}c!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,f);if(i){let b=N.expandShapeToKeepDim(d,o),y=bt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var aG={kernelName:rl,backendName:"cpu",kernelFunc:rG};function iG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;xe(r,"any");let o=w.parseAxisParam(a,r.shape),u=o,c=N.getAxesPermutation(u,r.shape.length),l=r;c!=null&&(l=Wn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,r.shape.length)),N.assertAxesAreInnerMostDims("any",u,l.shape.length);let[d,p]=N.computeOutAndReduceShapes(l.shape,u),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];v=v||k}f[b]=v}c!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,f);if(i){let b=N.expandShapeToKeepDim(d,o),y=bt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var oG={kernelName:al,backendName:"cpu",kernelFunc:iG};function uG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;xe(r,"argMax");let i=w.parseAxisParam(a,r.shape),o=N.getAxesPermutation(i,r.shape.length),u=r,c=[];o!=null&&(u=Wn({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[l,d]=N.computeOutAndReduceShapes(u.shape,i),p=w.sizeFromShape(l),h=w.makeZerosTypedArray(p,"int32"),f=w.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let g=0;g<h.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let k=m[b+x];k>y&&(y=k,v=x)}h[g]=v}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(l,"int32",h)}var lG={kernelName:ka,backendName:"cpu",kernelFunc:uG};function cG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;xe(r,"argMin");let i=w.parseAxisParam(a,r.shape),o=N.getAxesPermutation(i,r.shape.length),u=r,c=[];o!=null&&(u=Wn({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[l,d]=N.computeOutAndReduceShapes(u.shape,i),p=w.sizeFromShape(l),h=w.makeZerosTypedArray(p,"int32"),f=w.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let g=0;g<h.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let k=m[b+x];k<y&&(y=k,v=x)}h[g]=v}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(l,"int32",h)}var dG={kernelName:il,backendName:"cpu",kernelFunc:cG},pG=st(ol,e=>Math.asin(e)),hG={kernelName:ol,backendName:"cpu",kernelFunc:pG},fG=st(ul,e=>Math.asinh(e)),mG={kernelName:ul,backendName:"cpu",kernelFunc:fG},gG=st(ll,e=>Math.atan(e)),bG={kernelName:ll,backendName:"cpu",kernelFunc:gG},yG=At((e,t)=>Math.atan2(e,t)),vG=Gt(dl,yG),xG={kernelName:dl,backendName:"cpu",kernelFunc:vG},wG=st(cl,e=>Math.atanh(e)),kG={kernelName:cl,backendName:"cpu",kernelFunc:wG};function jy(e,t,n,s,r,a){let i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,l=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=_e(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let x=0;x<r.batchSize;++x){let k=x*b,T=x*s[0];for(let C=0;C<r.inChannels;++C)for(let R=0;R<r.outHeight;++R){let _=R*i-p,P=Math.max(0,_),D=Math.min(r.inHeight,l+_),F=k+R*y;for(let $=0;$<r.outWidth;++$){let z=$*o-h,W=Math.max(0,z),q=Math.min(r.inWidth,d+z),K=f,j=0,Q=0;for(let ne=P;ne<D;ne+=u){let se=T+ne*s[1];for(let te=W;te<q;te+=c){let ie=se+te*s[2],ee=e[ie+C];a==="max"&&ee>K?K=ee:a==="avg"&&(j+=ee,Q++)}if(isNaN(K))break}let J=F+$*v+C;g[J]=a==="avg"?j/Q:K}}}return m}function t1(e,t,n,s,r=!1,a=!1){let i=_e(s.outShape,"int32"),o=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=_e(t,n,e);for(let g=0;g<s.batchSize;++g)for(let b=0;b<s.inChannels;++b)for(let y=0;y<s.outHeight;++y){let v=y*o-h,x=v;for(;x<0;)x+=c;let k=Math.min(s.inHeight,d+v);for(let T=0;T<s.outWidth;++T){let C=T*u-f,R=C;for(;R<0;)R+=l;let _=Math.min(s.inWidth,p+C),P=Number.NEGATIVE_INFINITY,D=-1;for(let F=x;F<k;F+=c){let $=F-v;for(let z=R;z<_;z+=l){let W=z-C,q=m.get(g,F,z,b);q>P&&(P=q,r?D=a?((g*s.inHeight+F)*s.inWidth+z)*s.inChannels+b:(F*s.inWidth+z)*s.inChannels+b:D=$*p+W)}}i.set(D,g,y,T,b)}}return i}function n1(e,t,n,s,r,a){let i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,c=r.dilationDepth,l=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,y=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=_e(r.outShape,n),x=v.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],T=r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[3]*r.outShape[4],R=r.outShape[4];for(let _=0;_<r.batchSize;++_){let P=_*k,D=_*s[0];for(let F=0;F<r.inChannels;++F)for(let $=0;$<r.outDepth;++$){let z=$*i-m,W=z;for(;W<0;)W+=c;let q=Math.min(r.inDepth,p+z),K=P+$*T;for(let j=0;j<r.outHeight;++j){let Q=j*o-g,J=Q;for(;J<0;)J+=l;let ne=Math.min(r.inHeight,h+Q),se=K+j*C;for(let te=0;te<r.outWidth;++te){let ie=te*u-b,ee=ie;for(;ee<0;)ee+=d;let ce=Math.min(r.inWidth,f+ie),me=se+te*R,Ie=y,we=0,Te=0;for(let Xe=W;Xe<q;Xe+=c){let We=D+Xe*s[1];for(let Be=J;Be<ne;Be+=l){let rt=We+Be*s[2];for(let Ye=ee;Ye<ce;Ye+=d){let at=rt+Ye*s[3],ht=e[at+F];if(a==="max"&&ht>Ie?Ie=ht:a==="avg"&&(we+=ht,Te++),isNaN(Ie))break}if(isNaN(Ie))break}if(isNaN(Ie))break}let Fe=me+F;x[Fe]=a==="avg"?we/Te:Ie}}}}return v}function IG(e,t){let n=_e(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let y=b*s-p,v=y;for(;v<0;)v+=i;let x=Math.min(t.inDepth,c+y);for(let k=0;k<t.outHeight;++k){let T=k*r-h,C=T;for(;C<0;)C+=o;let R=Math.min(t.inHeight,l+T);for(let _=0;_<t.outWidth;++_){let P=_*a-f,D=P;for(;D<0;)D+=u;let F=Math.min(t.inWidth,d+P),$=Number.NEGATIVE_INFINITY,z=-1;for(let W=v;W<x;W+=i){let q=W-y;for(let K=C;K<R;K+=o){let j=K-T;for(let Q=D;Q<F;Q+=u){let J=Q-P,ne=e.get(m,W,K,Q,g);ne>=$&&($=ne,z=q*l*d+j*l+J)}}}n.set(z,m,b,k,_,g)}}}return n}function SG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;xe(r,"avgPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,c=1;w.assert(N.eitherStridesOrDilationsAreOne(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let l=N.computePool2DInfo(r.shape,a,i,c,o,u),d;if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))d=Ds({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),f=jy(p,r.shape,r.dtype,h,l,"avg");d=n.makeTensorInfo(l.outShape,r.dtype,f.values)}return d}var CG={kernelName:Ia,backendName:"cpu",kernelFunc:SG};function NG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=s;xe(r,"avgPool3d");let l=N.computePool3DInfo(r.shape,a,i,1,o,u,c),d=n.data.get(r.dataId).values,p=n1(d,r.shape,r.dtype,w.computeStrides(r.shape),l,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var TG={kernelName:zd,backendName:"cpu",kernelFunc:NG};function $G(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=s;xe([r,a],"avgPool3DGrad");let l=N.computePool3DInfo(a.shape,i,o,1,u,c),d=l.strideDepth,p=l.strideHeight,h=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,b=l.dilationDepth,y=l.dilationHeight,v=l.dilationWidth,x=l.effectiveFilterDepth,k=l.effectiveFilterHeight,T=l.effectiveFilterWidth,C=x-1-l.padInfo.front,R=T-1-l.padInfo.left,_=k-1-l.padInfo.top,P=_e(a.shape,"float32"),D=1/(f*m*g),F=n.bufferSync(r);for(let $=0;$<l.batchSize;++$)for(let z=0;z<l.inChannels;++z)for(let W=0;W<l.inDepth;++W)for(let q=0;q<l.inHeight;++q)for(let K=0;K<l.inWidth;++K){let j=W-C,Q=q-_,J=K-R,ne=0;for(let se=0;se<x;se+=b){let te=(j+se)/d;if(!(te<0||te>=l.outDepth||Math.floor(te)!==te))for(let ie=0;ie<k;ie+=y){let ee=(Q+ie)/p;if(!(ee<0||ee>=l.outHeight||Math.floor(ee)!==ee))for(let ce=0;ce<T;ce+=v){let me=(J+ce)/h;if(me<0||me>=l.outWidth||Math.floor(me)!==me)continue;ne+=F.get($,te,ee,me,z)}}}P.set(ne*D,$,W,q,K,z)}return n.makeTensorInfo(P.shape,P.dtype,P.values)}var AG={kernelName:qm,backendName:"cpu",kernelFunc:$G};function EG(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;xe([r,a],"avgPoolGrad");let{filterSize:o,strides:u,pad:c}=s,l=N.computePool2DInfo(i.shape,o,u,1,c),d=l.strideHeight,p=l.strideWidth,h=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,b=l.effectiveFilterHeight,y=l.effectiveFilterWidth,v=y-1-l.padInfo.left,x=b-1-l.padInfo.top,k=_e(i.shape,"float32"),T=1/(h*f),C=n.data.get(r.dataId).values,R=_e(r.shape,"float32",C);for(let _=0;_<l.batchSize;++_)for(let P=0;P<l.inChannels;++P)for(let D=0;D<l.inHeight;++D)for(let F=0;F<l.inWidth;++F){let $=D-x,z=F-v,W=0;for(let q=0;q<b;q+=m){let K=($+q)/d;if(!(K<0||K>=l.outHeight||Math.floor(K)!==K))for(let j=0;j<y;j+=g){let Q=(z+j)/p;if(Q<0||Q>=l.outWidth||Math.floor(Q)!==Q)continue;W+=R.get(_,K,Q,P)}}k.set(W*T,_,D,F,P)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var _G={kernelName:Hm,backendName:"cpu",kernelFunc:EG};function RG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:u}=t;w.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),xe([r,o,u,a,i],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);let l=n.data.get(r.dataId).values,d=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,b=h.length,y=p.length,v=d.length,x=0,k=0,T=0,C=0;for(let R=0;R<l.length;++R)m[R]=f[x++]+(l[R]-d[k++])*h[T++]/Math.sqrt(p[C++]+c),x>=g&&(x=0),k>=v&&(k=0),T>=b&&(T=0),C>=y&&(C=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var DG={kernelName:za,backendName:"cpu",kernelFunc:RG};function FG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;xe([r],"batchToSpaceND");let o=a.reduce((b,y)=>b*y),u=N.getReshaped(r.shape,a,o),c=N.getPermuted(u.length,a.length),l=N.getReshapedPermuted(r.shape,a,o),d=N.getSliceBeginCoords(i,a.length),p=N.getSliceSize(l,i,a.length),h=bt({inputs:{x:r},backend:n,attrs:{shape:u}}),f=Wn({inputs:{x:h},backend:n,attrs:{perm:c}}),m=bt({inputs:{x:f},backend:n,attrs:{shape:l}}),g=ma({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var OG={kernelName:ro,backendName:"cpu",kernelFunc:FG};function PG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=Ly(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,c)}var zG={kernelName:jm,backendName:"cpu",kernelFunc:PG};function MG(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=N.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var LG={kernelName:Km,backendName:"cpu",kernelFunc:MG},BG=st(Nr,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),VG={kernelName:Nr,backendName:"cpu",kernelFunc:BG},WG=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let c=0;c<o.length;c++){let l=o[c],d=u[c];s[c]=Math.hypot(l,d)}return n.makeOutput(s,t.shape,"float32")},UG={kernelName:Ld,backendName:"cpu",kernelFunc:WG};function Zi(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var GG={kernelName:Ud,backendName:"cpu",kernelFunc:Zi};function Ji(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=N.computeOutShape(t.map(m=>m.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(m=>w.sizeFromShape(m.shape)>0);if(o.length===1)return Ds({inputs:{x:o[0]},backend:n});let u=o.map(m=>m.shape);if(N.assertParamsConsistent(u,a),o[0].dtype==="complex64"){let m=o.map(x=>fa({inputs:{input:x},backend:n})),g=o.map(x=>Zi({inputs:{input:x},backend:n})),b=Ji({inputs:m,backend:n,attrs:{axis:a}}),y=Ji({inputs:g,backend:n,attrs:{axis:a}}),v=En({inputs:{real:b,imag:y},backend:n});return m.forEach(x=>n.disposeIntermediateTensorInfo(x)),g.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),v}let c=o.map(m=>{let g=w.sizeFromShape(m.shape.slice(a));return bt({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),l=c.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));i=N.computeOutShape(c.map(m=>m.shape),1);let d=c[0].shape[0]===1,p=By(l,i,t[0].dtype,d),h=N.computeOutShape(o.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,p);return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var HG={kernelName:ao,backendName:"cpu",kernelFunc:Ji};function s1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=s;xe([r,a],"conv2d");let d=N.convertConv2DDataFormat(u),p=N.computeConv2DInfo(r.shape,a.shape,i,c,o,l,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,b=p.padInfo.left,y=p.padInfo.top,v=p.dataFormat==="channelsLast",x=new Vt(p.outShape,r.dtype),k=w.computeStrides(r.shape),T=w.computeStrides(a.shape),C=k[0],R=v?k[1]:k[2],_=v?k[2]:1,P=v?1:k[1],D=x.strides[0],F=v?x.strides[1]:x.strides[2],$=v?x.strides[2]:1,z=v?1:x.strides[1],W=n.data.get(r.dataId).values,q=n.data.get(a.dataId).values,K=x.values;for(let j=0;j<p.batchSize;++j){let Q=j*C,J=j*D;for(let ne=0;ne<p.outHeight;++ne){let se=J+ne*F,te=ne*p.strideHeight-y;for(let ie=0;ie<h;++ie){let ee=te+ie*m;if(ee<0||ee>=p.inHeight)continue;let ce=ie*T[0],me=Q+ee*R;for(let Ie=0;Ie<p.outWidth;++Ie){let we=se+Ie*$,Te=Ie*p.strideWidth-b;for(let Fe=0;Fe<f;++Fe){let Xe=Te+Fe*g;if(Xe<0||Xe>=p.inWidth)continue;let We=ce+Fe*T[1],Be=me+Xe*_,rt=We;for(let Ye=0;Ye<p.inChannels;++Ye){let at=W[Be+Ye*P];for(let ht=0;ht<p.outChannels;++ht)K[we+ht*z]+=at*q[rt+ht];rt+=p.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,K)}var qG={kernelName:Ta,backendName:"cpu",kernelFunc:s1};function jG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=s;xe([r,a],"conv2dBackpropFilter");let d=N.convertConv2DDataFormat(u),p=N.computeConv2DInfo(r.shape,l,i,1,o,c,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,b=p.dataFormat==="channelsLast",y=new Vt(p.filterShape,"float32"),v=p.padInfo.left,x=p.padInfo.top,k=n.data.get(r.dataId).values,T=n.data.get(a.dataId).values,C=new Vt(r.shape,r.dtype,k),R=new Vt(a.shape,a.dtype,T);for(let _=0;_<m;++_){let P=Math.max(0,Math.ceil((x-_)/h)),D=Math.min(p.outHeight,(p.inHeight+x-_)/h);for(let F=0;F<g;++F){let $=Math.max(0,Math.ceil((v-F)/f)),z=Math.min(p.outWidth,(p.inWidth+v-F)/f);for(let W=0;W<p.inChannels;++W)for(let q=0;q<p.outChannels;++q){let K=0;for(let j=0;j<p.batchSize;++j)for(let Q=P;Q<D;++Q){let J=_+Q*h-x;for(let ne=$;ne<z;++ne){let se=F+ne*f-v;b?K+=C.get(j,J,se,W)*R.get(j,Q,ne,q):K+=C.get(j,W,J,se)*R.get(j,q,Q,ne)}}y.set(K,_,F,W,q)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var KG={kernelName:Xm,backendName:"cpu",kernelFunc:jG};function XG(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=s;xe([r,a],"conv2dBackpropInput");let d=w.computeStrides(a.shape),p=w.computeStrides(r.shape),h=N.convertConv2DDataFormat(c),f=N.computeConv2DInfo(i,a.shape,o,1,u,l,!1,h),m=new Vt(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,y=n.data.get(a.dataId).values,[v,x,k]=d,{batchSize:T,filterHeight:C,filterWidth:R,inChannels:_,inHeight:P,inWidth:D,outChannels:F,outHeight:$,outWidth:z,strideHeight:W,strideWidth:q}=f;h=f.dataFormat;let K=C-1-f.padInfo.top,j=R-1-f.padInfo.left,Q=h==="channelsLast",J=m.strides[0],ne=Q?m.strides[1]:m.strides[2],se=Q?m.strides[2]:1,te=Q?1:m.strides[1],ie=p[0],ee=Q?p[1]:p[2],ce=Q?p[2]:1,me=Q?1:p[1];for(let Ie=0;Ie<T;++Ie)for(let we=0;we<_;++we)for(let Te=0;Te<P;++Te){let Fe=Te-K,Xe=Math.max(0,Math.ceil(Fe/W)),We=Math.min($,(C+Fe)/W);for(let Be=0;Be<D;++Be){let rt=Be-j,Ye=Math.max(0,Math.ceil(rt/q)),at=Math.min(z,(R+rt)/q),ht=0;for(let Qe=Xe;Qe<We;++Qe){let Sn=Qe*W-Fe;for(let Ht=Ye;Ht<at;++Ht){let Hn=Ht*q-rt,hn=ie*Ie+ee*Qe+ce*Ht,Cn=v*(C-1-Sn)+x*(R-1-Hn)+k*we;for(let Rn=0;Rn<F;++Rn){let qn=b[hn+me*Rn],Dn=y[Cn+Rn];ht+=qn*Dn}}}let pn=J*Ie+ne*Te+se*Be+te*we;g[pn]=ht}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var YG={kernelName:$a,backendName:"cpu",kernelFunc:XG};function QG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s;xe([r,a],"conv3d");let c=N.computeConv3DInfo(r.shape,a.shape,i,u,o),{filterDepth:l,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=c,b=g.front,y=g.left,v=g.top,x=new Vt(c.outShape,r.dtype),k=n.data.get(r.dataId).values,T=n.data.get(a.dataId).values,C=x.values,R=w.computeStrides(r.shape),_=w.computeStrides(a.shape);for(let P=0;P<c.batchSize;++P){let D=P*R[0],F=P*x.strides[0];for(let $=0;$<c.outDepth;++$){let z=F+$*x.strides[1],W=$*c.strideDepth-b;for(let q=0;q<l;++q){let K=W+q*h;if(K<0||K>=c.inDepth)continue;let j=q*_[0],Q=D+K*R[1];for(let J=0;J<c.outHeight;++J){let ne=z+J*x.strides[2],se=J*c.strideHeight-v;for(let te=0;te<d;++te){let ie=se+te*f;if(ie<0||ie>=c.inHeight)continue;let ee=j+te*_[1],ce=Q+ie*R[2];for(let me=0;me<c.outWidth;++me){let Ie=ne+me*c.outChannels,we=me*c.strideWidth-y;for(let Te=0;Te<p;++Te){let Fe=we+Te*m;if(Fe<0||Fe>=c.inWidth)continue;let Xe=ee+Te*_[2],We=ce+Fe*c.inChannels,Be=Xe;for(let rt=0;rt<c.inChannels;++rt){let Ye=k[We+rt];for(let at=0;at<c.outChannels;++at)C[Ie+at]+=Ye*T[Be+at];Be+=c.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var ZG={kernelName:Bd,backendName:"cpu",kernelFunc:QG};function JG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s;xe([r,a],"conv3dBackpropFilterV2");let c=w.computeStrides(r.shape),l=w.computeStrides(a.shape),d=N.computeConv3DInfo(r.shape,u,i,1,o),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,y=new Vt(d.filterShape,"float32"),v=y.values,[x,k,T,C]=y.strides,R=n.data.get(a.dataId).values,[_,P,D,F]=l,$=n.data.get(r.dataId).values,[z,W,q,K]=c,j=d.padInfo.front,Q=d.padInfo.left,J=d.padInfo.top;for(let ne=0;ne<m;++ne){let se=Math.max(0,Math.ceil((j-ne)/p)),te=Math.min(d.outDepth,(d.inDepth+j-ne)/p),ie=ne*x;for(let ee=0;ee<g;++ee){let ce=Math.max(0,Math.ceil((J-ee)/h)),me=Math.min(d.outHeight,(d.inHeight+J-ee)/h),Ie=ee*k+ie;for(let we=0;we<b;++we){let Te=Math.max(0,Math.ceil((Q-we)/f)),Fe=Math.min(d.outWidth,(d.inWidth+Q-we)/f),Xe=we*T+Ie;for(let We=0;We<d.inChannels;++We){let Be=We*C+Xe;for(let rt=0;rt<d.outChannels;++rt){let Ye=0;for(let at=0;at<d.batchSize;++at){let ht=at*z,pn=at*_;for(let Qe=se;Qe<te;++Qe){let Ht=(ne+Qe*p-j)*W+ht,Hn=Qe*P+pn;for(let hn=ce;hn<me;++hn){let Rn=(ee+hn*h-J)*q+Ht,qn=hn*D+Hn;for(let Dn=Te;Dn<Fe;++Dn){let Zs=(we+Dn*f-Q)*K+Rn,Qt=Dn*F+qn;Ye+=$[Zs+We]*R[Qt+rt]}}}}v[Be+rt]=Ye}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var eH={kernelName:Ym,backendName:"cpu",kernelFunc:JG};function tH(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s;xe([r],"conv3dBackpropInputV2");let c=w.computeStrides(r.shape),l=w.computeStrides(a.shape),d=N.computeConv3DInfo(u,a.shape,o,1,i),p=new Vt(d.inShape,"float32"),h=p.values,[f,m,g,b]=p.strides,y=n.data.get(r.dataId).values,[v,x,k,T]=c,C=n.data.get(a.dataId).values,[R,_,P,D]=l,{batchSize:F,filterDepth:$,filterHeight:z,filterWidth:W,inChannels:q,inDepth:K,inHeight:j,inWidth:Q,outChannels:J,outDepth:ne,outHeight:se,outWidth:te,strideDepth:ie,strideHeight:ee,strideWidth:ce}=d,me=$-1-d.padInfo.front,Ie=z-1-d.padInfo.top,we=W-1-d.padInfo.left;for(let Te=0;Te<F;++Te)for(let Fe=0;Fe<q;++Fe)for(let Xe=0;Xe<K;++Xe){let We=Xe-me,Be=Math.max(0,Math.ceil(We/ie)),rt=Math.min(ne,($+We)/ie);for(let Ye=0;Ye<j;++Ye){let at=Ye-Ie,ht=Math.max(0,Math.ceil(at/ee)),pn=Math.min(se,(z+at)/ee);for(let Qe=0;Qe<Q;++Qe){let Sn=Qe-we,Ht=Math.max(0,Math.ceil(Sn/ce)),Hn=Math.min(te,(W+Sn)/ce),hn=0;for(let Cn=Be;Cn<rt;++Cn){let Rn=Cn*ie-We;for(let qn=ht;qn<pn;++qn){let Dn=qn*ee-at;for(let fn=Ht;fn<Hn;++fn){let Zs=fn*ce-Sn,Qt=v*Te+x*Cn+k*qn+T*fn,Js=R*($-1-Rn)+_*(z-1-Dn)+P*(W-1-Zs)+D*Fe;for(let Fn=0;Fn<J;++Fn){let lu=y[Qt+Fn],cu=C[Js+Fn];hn+=lu*cu}}}}h[f*Te+m*Xe+g*Ye+b*Qe+Fe]=hn}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var nH={kernelName:Qm,backendName:"cpu",kernelFunc:tH},sH=st(Aa,e=>Math.cos(e)),rH={kernelName:Aa,backendName:"cpu",kernelFunc:sH},aH=st(Ea,e=>Math.cosh(e)),iH={kernelName:Ea,backendName:"cpu",kernelFunc:aH};function oH(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=s,[l,d,p,h]=r.shape,f=a.shape[0],[m,g]=o,b=_e([f,m,g,h],"float32"),y=n.data.get(a.dataId).values,v=n.data.get(i.dataId).values,x=n.data.get(r.dataId).values,k=w.computeStrides(r.shape),T=w.computeStrides(b.shape);for(let C=0;C<f;C++){let R=C*4,_=y[R],P=y[R+1],D=y[R+2],F=y[R+3],$=v[C];if($>=l)continue;let z=m>1?(D-_)*(d-1)/(m-1):0,W=g>1?(F-P)*(p-1)/(g-1):0;for(let q=0;q<m;q++){let K=m>1?_*(d-1)+q*z:.5*(_+D)*(d-1);if(K<0||K>d-1){for(let j=0;j<g;j++)for(let Q=0;Q<h;Q++){let J=Q+j*T[2]+q*T[1]+C*T[0];b.values[J]=c}continue}if(u==="bilinear"){let j=Math.floor(K),Q=Math.ceil(K),J=K-j;for(let ne=0;ne<g;ne++){let se=g>1?P*(p-1)+ne*W:.5*(P+F)*(p-1);if(se<0||se>p-1){for(let ce=0;ce<h;ce++){let me=ce+ne*T[2]+q*T[1]+C*T[0];b.values[me]=c}continue}let te=Math.floor(se),ie=Math.ceil(se),ee=se-te;for(let ce=0;ce<h;ce++){let me=ce+te*k[2]+j*k[1]+$*k[0],Ie=x[me];me=ce+ie*k[2]+j*k[1]+$*k[0];let we=x[me];me=ce+te*k[2]+Q*k[1]+$*k[0];let Te=x[me];me=ce+ie*k[2]+Q*k[1]+$*k[0];let Fe=x[me],Xe=Ie+(we-Ie)*ee,We=Te+(Fe-Te)*ee;me=ce+ne*T[2]+q*T[1]+C*T[0],b.values[me]=Xe+(We-Xe)*J}}}else for(let j=0;j<g;++j){let Q=g>1?P*(p-1)+j*W:.5*(P+F)*(p-1);if(Q<0||Q>p-1){for(let se=0;se<h;se++){let te=se+j*T[2]+q*T[1]+C*T[0];b.values[te]=c}continue}let J=Math.round(Q),ne=Math.round(K);for(let se=0;se<h;se++){let te=se+J*k[2]+ne*k[1]+$*k[0],ie=se+j*T[2]+q*T[1]+C*T[0];b.values[ie]=x[te]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var uH={kernelName:oo,backendName:"cpu",kernelFunc:oH};function lH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;xe(r,"cumsum");let u=N.getAxesPermutation([a],r.shape.length),c=r;u!=null&&(c=Wn({inputs:{x:r},backend:n,attrs:{perm:u}}));let l=N.getInnerMostAxes(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);let d=vn(c.dtype,"int32"),p=w.makeZerosTypedArray(w.sizeFromShape(c.shape),d),h=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(b,y)=>b+f-y-1:(b,y)=>b+y;for(let b=0;b<h.length;b+=f)for(let y=0;y<f;y++){let v=m(b,y);if(y===0)p[v]=i?0:h[v];else{let x=m(b,y-1);p[v]=i?h[x]+p[x]:h[v]+p[x]}}let g=n.makeTensorInfo(c.shape,d,p);if(u!=null){let b=N.getUndoAxesPermutation(u),y=Wn({inputs:{x:g},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),y}return g}var cH={kernelName:io,backendName:"cpu",kernelFunc:lH};function dH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(r.shape.length===1){let u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,l=Ly(u,c,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}else if(r.shape.length===2){let u=n.bufferSync(r),c=n.bufferSync(a),l=hS(u,c,i,o);return n.makeTensorInfo(l.shape,a.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var pH={kernelName:Zm,backendName:"cpu",kernelFunc:dH};function hH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=r.shape[0],u=r.shape[1],c=r.shape[2],l=r.shape[3],d=u*a,p=c*a,h=l/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*d*p*h),g=0;for(let b=0;b<o;++b)for(let y=0;y<d;++y){let v=Math.floor(y/a),x=y%a;for(let k=0;k<p;++k){let T=Math.floor(k/a),C=k%a,R=(x*a+C)*h;for(let _=0;_<h;++_){let D=_+R+l*(T+c*(v+u*b));m[g++]=f[D]}}}return n.makeTensorInfo([o,d,p,h],r.dtype,m)}var fH={kernelName:uo,backendName:"cpu",kernelFunc:hH};function r1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=s;xe([r,a],"depthwiseConv2DNative");let l=w.computeStrides(r.shape),d=w.computeStrides(a.shape),p=u;p==null&&(p=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let h=N.computeConv2DInfo(r.shape,a.shape,i,p,o,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=h,v=y.left,x=y.top,k=h.outChannels/h.inChannels,T=new Vt(h.outShape,r.dtype),C=n.data.get(r.dataId).values,R=n.data.get(a.dataId).values,_=T.values;for(let P=0;P<h.batchSize;++P){let D=P*l[0],F=P*T.strides[0];for(let $=0;$<h.outHeight;++$){let z=F+$*T.strides[1],W=$*h.strideHeight-x;for(let q=0;q<f;++q){let K=W+q*g;if(K<0||K>=h.inHeight)continue;let j=q*d[0],Q=D+K*l[1];for(let J=0;J<h.outWidth;++J){let ne=z+J*T.strides[2],se=J*h.strideWidth-v;for(let te=0;te<m;++te){let ie=se+te*b;if(ie<0||ie>=h.inWidth)continue;let ee=j+te*d[1],ce=Q+ie*h.inChannels,me=ne,Ie=ee;for(let we=0;we<h.inChannels;++we){let Te=C[ce+we];for(let Fe=0;Fe<k;++Fe)_[me+Fe]+=Te*R[Ie+Fe];me+=k,Ie+=k}}}}}}return n.makeTensorInfo(T.shape,T.dtype,T.values)}var mH={kernelName:_a,backendName:"cpu",kernelFunc:r1};function gH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=s;xe([r,a],"depthwiseConv2dNativeBackpropFilter");let d=N.computeConv2DInfo(r.shape,l,i,o,u,c,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new Vt(d.filterShape,"float32"),b=d.padInfo.left,y=d.padInfo.top,v=d.outChannels/d.inChannels,x=n.data.get(r.dataId).values,k=new Vt(r.shape,r.dtype,x),T=n.data.get(a.dataId).values,C=new Vt(a.shape,a.dtype,T);for(let R=0;R<f;++R){let _=Math.max(0,Math.ceil((y-R)/p)),P=Math.min(d.outHeight,(d.inHeight+y-R)/p);for(let D=0;D<m;++D){let F=Math.max(0,Math.ceil((b-D)/h)),$=Math.min(d.outWidth,(d.inWidth+b-D)/h);for(let z=0;z<d.outChannels;++z){let W=Math.trunc(z/v),q=z%v,K=0;for(let j=0;j<d.batchSize;++j)for(let Q=_;Q<P;++Q){let J=R+Q*p-y;for(let ne=F;ne<$;++ne){let se=D+ne*h-b;K+=k.get(j,J,se,W)*C.get(j,Q,ne,z)}}g.set(K,R,D,W,q)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var bH={kernelName:Jm,backendName:"cpu",kernelFunc:gH};function yH(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=s;xe([r,a],"depthwiseConv2DNativeBackpropInput");let d=w.computeStrides(r.shape),p=w.computeStrides(a.shape),h=N.computeConv2DInfo(l,a.shape,i,o,u,c,!0),f=new Vt(h.inShape,"float32"),m=f.values,[g,b,y]=f.strides,v=n.data.get(r.dataId).values,[x,k,T]=d,C=n.data.get(a.dataId).values,[R,_,P]=p,{batchSize:D,filterHeight:F,filterWidth:$,inChannels:z,inHeight:W,inWidth:q,outChannels:K,outHeight:j,outWidth:Q,strideHeight:J,strideWidth:ne}=h,se=F-1-h.padInfo.top,te=$-1-h.padInfo.left,ie=K/z;for(let ee=0;ee<D;++ee)for(let ce=0;ce<z;++ce)for(let me=0;me<W;++me){let Ie=me-se,we=Math.max(0,Math.ceil(Ie/J)),Te=Math.min(j,(F+Ie)/J);for(let Fe=0;Fe<q;++Fe){let Xe=Fe-te,We=Math.max(0,Math.ceil(Xe/ne)),Be=Math.min(Q,($+Xe)/ne),rt=0;for(let Ye=we;Ye<Te;++Ye){let at=Ye*J-Ie;for(let ht=We;ht<Be;++ht){let pn=ht*ne-Xe,Qe=x*ee+k*Ye+T*ht,Sn=R*(F-1-at)+_*($-1-pn)+P*ce;for(let Ht=0;Ht<ie;++Ht){let Hn=ce*ie+Ht,hn=v[Qe+Hn],Cn=C[Sn+Ht];rt+=hn*Cn}}}m[g*ee+b*me+y*Fe+ce]=rt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var vH={kernelName:eg,backendName:"cpu",kernelFunc:yH};function xH(e){let{inputs:t,backend:n}=e,{x:s}=t,r=w.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,i=_e([r,r],s.dtype),o=i.values;for(let c=0;c<a.length;c++)o[c*r+c]=a[c];let u=[...s.shape,...s.shape];return n.makeTensorInfo(u,i.dtype,i.values)}var wH={kernelName:tg,backendName:"cpu",kernelFunc:xH},kH={kernelName:Vd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,u=t,c=u.data.get(s.dataId).values,l=s.shape.length,d=u.data.get(r.dataId).values,p=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:v,strideHeight:x,strideWidth:k,filterHeight:T,filterWidth:C,dilationHeight:R,dilationWidth:_,outShape:P}=N.computeDilation2DInfo(s.shape,r.shape,a,i,"NHWC",o),D=w.sizeFromShape(P),F=P.length,$=w.getArrayFromDType(s.dtype,D);for(let W=0;W<h;++W)for(let q=0;q<b;++q){let K=q*x-v.top;for(let j=0;j<y;++j){let Q=j*k-v.left;for(let J=0;J<g;++J){let ne=Number.MIN_SAFE_INTEGER;for(let te=0;te<T;++te){let ie=K+te*R;if(ie>=0&&ie<f)for(let ee=0;ee<C;++ee){let ce=Q+ee*_;if(ce>=0&&ce<m){let me=w.locToIndex([W,ie,ce,J],l,w.computeStrides(s.shape)),Ie=w.locToIndex([te,ee,J],p,w.computeStrides(r.shape)),we=c[me]+d[Ie];we>ne&&(ne=we)}}}let se=w.locToIndex([W,q,j,J],F,w.computeStrides(P));$[se]=ne}}}return{dataId:u.write(w.toTypedArray($,s.dtype),P,s.dtype),shape:P,dtype:s.dtype}}},IH={kernelName:zf,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=w.toNestedArray(s.shape,c.data.get(s.dataId).values),d=w.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:T,dilationHeight:C,dilationWidth:R,outShape:_}=N.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);w.assert(a.rank===_.length,()=>`Error in ${zf}, dy must have the same rank as output ${_.length}, but got ${a.rank}`);let P=w.toNestedArray(_,c.data.get(a.dataId).values),D=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let $=0;$<p;++$)for(let z=0;z<g;++z){let W=z*v-y.top;for(let q=0;q<b;++q){let K=q*x-y.left;for(let j=0;j<m;++j){let Q=Number.MIN_SAFE_INTEGER,J=0,ne=0;for(let se=0;se<k;++se){let te=W+se*C;if(te>=0&&te<h)for(let ie=0;ie<T;++ie){let ee=K+ie*R;if(ee>=0&&ee<f){let ce=l[$][te][ee][j]+d[se][ie][j];ce>Q&&(Q=ce,J=se,ne=ie)}}}D[J][ne][j]+=P[$][z][q][j]}}}return{dataId:c.write(w.toTypedArray(D,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},SH={kernelName:Pf,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=w.toNestedArray(s.shape,c.data.get(s.dataId).values),d=w.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:T,dilationHeight:C,dilationWidth:R,outShape:_}=N.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);w.assert(a.rank===_.length,()=>`Error in ${Pf}, dy must have the same rank as output ${_.length}, but got ${a.rank}`);let P=w.toNestedArray(_,c.data.get(a.dataId).values),D=w.makeZerosNestedTypedArray(s.shape,s.dtype);for(let $=0;$<p;++$)for(let z=0;z<g;++z){let W=z*v-y.top;for(let q=0;q<b;++q){let K=q*x-y.left;for(let j=0;j<m;++j){let Q=Number.MIN_SAFE_INTEGER,J=W<0?0:W,ne=K<0?0:K;for(let se=0;se<k;++se){let te=W+se*C;if(te>=0&&te<h)for(let ie=0;ie<T;++ie){let ee=K+ie*R;if(ee>=0&&ee<f){let ce=l[$][te][ee][j]+d[se][ie][j];ce>Q&&(Q=ce,J=te,ne=ee)}}}D[$][J][ne][j]+=P[$][z][q][j]}}}return{dataId:c.write(w.toTypedArray(D,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function Kl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;xe(r,"sum");let o;r.dtype==="bool"?o=Ir({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):o=Ds({inputs:{x:r},backend:n});let u=o.shape.length,c=w.parseAxisParam(a,o.shape),l=N.getAxesPermutation(c,u),d=c,p=o;l!=null&&(p=Wn({inputs:{x:o},backend:n,attrs:{perm:l}}),d=N.getInnerMostAxes(d.length,u)),N.assertAxesAreInnerMostDims("sum",d,p.shape.length);let[h,f]=N.computeOutAndReduceShapes(p.shape,d),m=N.upcastType(p.dtype,"int32"),g=Sd(n,h,m),b=w.sizeFromShape(f),y=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let x=0;x<y.length;++x){let k=x*b,T=0;for(let C=0;C<b;++C)T+=v[k+C];y[x]=T}if(i){let x=N.expandShapeToKeepDim(g.shape,c),k=g;g=bt({inputs:{x:g},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(k)}return n.disposeIntermediateTensorInfo(o),l!=null&&n.disposeIntermediateTensorInfo(p),g}var CH={kernelName:ii,backendName:"cpu",kernelFunc:Kl};function NH(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(i.length,u,a);let{path:c,steps:l}=N.getEinsumComputePath(o,u),d=l.length,p=null,h=i.length,f=[];for(let m=0;m<d;++m){for(let g of l[m]){let{permutationIndices:b,expandDims:y}=N.getEinsumPermutation(h,u[g]),v;N.isIdentityPermutation(b)?v=a[g]:(v=Wn({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=bt({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),p===null?p=v:(p=Pp({inputs:{a:v,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Kl({inputs:{x:p},backend:n,attrs:{axis:c[m]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var TH={kernelName:Wd,backendName:"cpu",kernelFunc:NH};function $H(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;xe([s,r],"eluGrad");let a=new Float32Array(w.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let u=0;u<i.length;++u){let c=i[u];c>=1?a[u]=o[u]:a[u]=o[u]*(c+1)}return n.makeTensorInfo(r.shape,"float32",a)}var AH={kernelName:ng,backendName:"cpu",kernelFunc:$H},EH=N.ERF_P,_H=N.ERF_A1,RH=N.ERF_A2,DH=N.ERF_A3,FH=N.ERF_A4,OH=N.ERF_A5,PH=st(pl,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+EH*n);return t*(1-((((OH*s+FH)*s+DH)*s+RH)*s+_H)*s*Math.exp(-n*n))}),zH={kernelName:pl,backendName:"cpu",kernelFunc:PH};function Nd(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice(),u=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),bt({inputs:{x:r},backend:n,attrs:{shape:o}})}var MH={kernelName:co,backendName:"cpu",kernelFunc:Nd},LH=At((e,t)=>e/t),Ky=Gt(Ra,LH),Sm={kernelName:Ra,backendName:"cpu",kernelFunc:Ky};function a1(e,t,n){let s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[r,a],l=w.sizeFromShape(c),d=w.getTypedArrayFromDType("float32",l),p=w.getTypedArrayFromDType("float32",l);for(let g=0;g<r;g++){let b=ma({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,a]}}),y=ma({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,a]}}),v=En({inputs:{real:b,imag:y},backend:n}),{real:x,imag:k}=BH(v,t,n),T=N.mergeRealAndImagArrays(x,k);for(let C=0;C<a;C++){let R=N.getComplexWithIndex(T,C);d[g*a+C]=R.real,p[g*a+C]=R.imag}n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(v)}let h=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",p),m=En({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function BH(e,t,n){let s=w.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(VH(s)){let o=Cm(a,i,s,t,n),u=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(u,"float32",o.real),l=n.makeTensorInfo(u,"float32",o.imag),d=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),p=Ds({inputs:{x:d},backend:n}),h=Sm.kernelFunc({inputs:{a:c,b:d},backend:n}),f=Sm.kernelFunc({inputs:{a:l,b:p},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=N.mergeRealAndImagArrays(a,i),u=WH(o,s,t);return N.splitRealAndImagArrays(u)}}function VH(e){return(e&e-1)===0}function Cm(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=N.mergeRealAndImagArrays(e,t),i=n/2,o=N.complexWithEvenIndex(a),u=o.real,c=o.imag,l=[u.length],d=r.makeTensorInfo(l,"float32",u),p=r.makeTensorInfo(l,"float32",c),h=En({inputs:{real:d,imag:p},backend:r}),f=N.complexWithOddIndex(a),m=f.real,g=f.imag,b=[m.length],y=r.makeTensorInfo(b,"float32",m),v=r.makeTensorInfo(b,"float32",g),x=En({inputs:{real:y,imag:v},backend:r}),k=Cm(u,c,i,s,r),T=k.real,C=k.imag,R=[T.length],_=r.makeTensorInfo(R,"float32",T),P=r.makeTensorInfo(R,"float32",C),D=En({inputs:{real:_,imag:P},backend:r}),F=Cm(m,g,i,s,r),$=F.real,z=F.imag,W=[$.length],q=r.makeTensorInfo(W,"float32",$),K=r.makeTensorInfo(W,"float32",z),j=En({inputs:{real:q,imag:K},backend:r}),Q=N.exponents(n,s),J=[Q.real.length],ne=r.makeTensorInfo(J,"float32",Q.real),se=r.makeTensorInfo(J,"float32",Q.imag),te=En({inputs:{real:ne,imag:se},backend:r}),ie=Pp({inputs:{a:te,b:j},backend:r}),ee=jl({inputs:{a:D,b:ie},backend:r}),ce=Hy({inputs:{a:D,b:ie},backend:r}),me=fa({inputs:{input:ee},backend:r}),Ie=fa({inputs:{input:ce},backend:r}),we=Zi({inputs:{input:ee},backend:r}),Te=Zi({inputs:{input:ce},backend:r}),Fe=Ji({inputs:[me,Ie],backend:r,attrs:{axis:0}}),Xe=Ji({inputs:[we,Te],backend:r,attrs:{axis:0}}),We=r.data.get(Fe.dataId).values,Be=r.data.get(Xe.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(Te),r.disposeIntermediateTensorInfo(Fe),r.disposeIntermediateTensorInfo(Xe),{real:We,imag:Be}}function WH(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,i=0;for(let o=0;o<t;o++){let u=N.exponent(r*o,t,n),c=N.getComplexWithIndex(e,o);a+=c.real*u.real-c.imag*u.imag,i+=c.real*u.imag+c.imag*u.real}n&&(a/=t,i/=t),N.assignToTypedArray(s,a,i,r)}return s}function UH(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=r/a,o=bt({inputs:{x:s},backend:n,attrs:{shape:[i,a]}}),u=a1(o,!1,n),c=bt({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}var GH={kernelName:sg,backendName:"cpu",kernelFunc:UH};function Xy(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||w.inferDtype(r),o=w.getArrayFromDType(i,w.sizeFromShape(s));return qH(o,r,i),t.makeTensorInfo(s,i,o)}var HH={kernelName:hl,backendName:"cpu",kernelFunc:Xy};function qH(e,t,n){e.fill(t)}var jH={kernelName:ho,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[i,o,u,c]=s.shape,l=r.data.get(s.dataId).values;for(let p=0;p<i;p++){let h=p*u*o*c;for(let f=0;f<o;f++){let m=f*(u*c);for(let g=0;g<u;g++){let b=g*c;for(let y=0;y<c;y++){let v=Math.round(u-g-1),x=h+m+b+y,k=l[x];if(v>=0&&v<u){let T=v*c,C=h+m+T+y;k=l[C]}a[x]=k}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},KH=At((e,t)=>Math.floor(e/t)),XH=Gt(Pa,KH,null,"int32"),YH={kernelName:Pa,backendName:"cpu",kernelFunc:XH};function QH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=s1({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}});if(i){let g=m;m=jl({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=qy(n,m,h,o,f),n.disposeIntermediateTensorInfo(g)}return m}var ZH={kernelName:ra,backendName:"cpu",kernelFunc:QH};function JH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=r1({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}});if(i){let g=m;m=jl({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=qy(n,m,h,o,f),n.disposeIntermediateTensorInfo(g)}return m}var e6={kernelName:aa,backendName:"cpu",kernelFunc:JH};function t6(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=w.sizeFromShape(s.shape),i=r.shape,o=i[i.length-1],[u,c,l,d]=N.prepareAndValidate(s,r);if(c===0)return n.makeTensorInfo(u,s.dtype,[]);let p=n.data.get(r.dataId).values,h=n.bufferSync(s),f=wS(p,h,s.dtype,c,o,l,d,s.shape,a);return n.makeTensorInfo(u,s.dtype,f.values)}var n6={kernelName:mo,backendName:"cpu",kernelFunc:t6};function s6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;xe([r,a],"gatherV2");let u=w.parseAxisParam(i,r.shape)[0],c=n.data.get(a.dataId).values,l=r.shape[u];for(let x=0;x<c.length;++x){let k=c[x];w.assert(k<=l-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${l-1}]`)}let d=o;o==null&&(d=0);let p=w.sizeFromShape(a.shape),h=N.segment_util.collectGatherOpShapeInfo(r,a,u,d),f=bt({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=bt({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],b=n.bufferSync(m),y=n.bufferSync(f),v=kS(y,b,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,v.dtype,v.values)}var r6={kernelName:fo,backendName:"cpu",kernelFunc:s6};function a6(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=r/a,o=bt({inputs:{x:s},backend:n,attrs:{shape:[i,a]}}),u=a1(o,!0,n),c=bt({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}var i6={kernelName:rg,backendName:"cpu",kernelFunc:a6},o6=st(fl,e=>Number.isFinite(e)?1:0,"bool"),u6={kernelName:fl,backendName:"cpu",kernelFunc:o6},l6=st(ml,e=>Math.abs(e)===1/0?1:0,"bool"),c6={kernelName:ml,backendName:"cpu",kernelFunc:l6},d6=st(gl,e=>Number.isNaN(e)?1:0,"bool"),p6={kernelName:gl,backendName:"cpu",kernelFunc:d6};function h6(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=TS(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}var f6={kernelName:ag,backendName:"cpu",kernelFunc:h6},m6=st(bl,e=>Math.log1p(e)),g6={kernelName:bl,backendName:"cpu",kernelFunc:m6},b6=At((e,t)=>e&&t),y6=Gt(vo,b6,null,"bool"),v6={kernelName:vo,backendName:"cpu",kernelFunc:y6},x6=st(yl,e=>e?0:1,"bool"),w6={kernelName:yl,backendName:"cpu",kernelFunc:x6},k6=At((e,t)=>e||t),I6=Gt(Gd,k6,null,"bool"),S6={kernelName:Gd,backendName:"cpu",kernelFunc:I6};function C6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s;xe(r,"LRN");let c=r.shape[3],l=c-1,d=n.data.get(r.dataId).values,p=w.sizeFromShape(r.shape),h=new Float32Array(p);function f(m){let g=m%c,b=m-g+Math.max(0,g-a),y=m-g+Math.min(g+a,l),v=0;for(;b<=y;b++){let x=d[b];v+=x*x}return v}for(let m=0;m<p;m++){let g=f(m),b=d[m]*Math.pow(i+o*g,-u);h[m]=b}return n.makeTensorInfo(r.shape,r.dtype,h)}var N6={kernelName:Hd,backendName:"cpu",kernelFunc:C6};function T6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=s;xe(i,"LRNGrad");let d=w.sizeFromShape(i.shape),p=i.shape[3],h=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),b=d;for(let y=0;y<b;y++){let v=y%p,x=y-v+Math.max(0,v-o),k=y-v+Math.min(p,v+o+1),T=0;for(let C=x;C<k;C++)T+=Math.pow(f[C],2);T=c*T+u;for(let C=x;C<k;C++){let R=-2*c*l*f[C]*m[y]/T;y===C&&(R+=Math.pow(T,-l)),R*=h[y],g[C]+=R}}return n.makeTensorInfo(i.shape,r.dtype,g)}var $6={kernelName:ig,backendName:"cpu",kernelFunc:T6};function i1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n,u=r.shape,c=u.length,l=w.parseAxisParam(a,u),d=l,p=N.getAxesPermutation(d,c),h=o.data.get(r.dataId).values;if(p!=null){let x=new Array(c);for(let k=0;k<x.length;k++)x[k]=u[p[k]];h=Wy(h,u,r.dtype,p,x),d=N.getInnerMostAxes(d.length,c),u=x}xe(r,"max"),N.assertAxesAreInnerMostDims("max",d,c);let[f,m]=N.computeOutAndReduceShapes(u,d),g=w.sizeFromShape(m),b=AS(h,g,f,r.dtype),y=o.write(b,f,r.dtype),v=f;return i&&(v=N.expandShapeToKeepDim(f,l)),{dataId:y,shape:v,dtype:r.dtype}}var A6={kernelName:Wa,backendName:"cpu",kernelFunc:i1};function E6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;xe(r,"maxPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,c=1;w.assert(N.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let l=N.computePool2DInfo(r.shape,a,i,c,o,u),d;if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))d=Ds({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),f=jy(p,r.shape,r.dtype,h,l,"max");d=n.makeTensorInfo(l.outShape,r.dtype,f.values)}return d}var _6={kernelName:Ga,backendName:"cpu",kernelFunc:E6};function R6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=s;xe(r,"maxPool3d");let l=N.computePool3DInfo(r.shape,a,i,1,o,u,c),d=n.data.get(r.dataId).values,p=n1(d,r.shape,r.dtype,w.computeStrides(r.shape),l,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var D6={kernelName:qd,backendName:"cpu",kernelFunc:R6};function F6(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=s;xe([r,a],"maxPool3DGrad");let l=N.computePool3DInfo(a.shape,i,o,1,u,c),d=n.bufferSync(a),p=IG(d,l),h=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,b=l.dilationHeight,y=l.dilationWidth,v=l.effectiveFilterDepth,x=l.effectiveFilterHeight,k=l.effectiveFilterWidth,T=v-1-l.padInfo.front,C=k-1-l.padInfo.left,R=x-1-l.padInfo.top,_=_e(a.shape,"float32"),P=n.bufferSync(r);for(let D=0;D<l.batchSize;++D)for(let F=0;F<l.inChannels;++F)for(let $=0;$<l.inDepth;++$)for(let z=0;z<l.inHeight;++z)for(let W=0;W<l.inWidth;++W){let q=$-T,K=z-R,j=W-C,Q=0;for(let J=0;J<v;J+=g){let ne=(q+J)/h;if(!(ne<0||ne>=l.outDepth||Math.floor(ne)!==ne))for(let se=0;se<x;se+=b){let te=(K+se)/f;if(!(te<0||te>=l.outHeight||Math.floor(te)!==te))for(let ie=0;ie<k;ie+=y){let ee=(j+ie)/m;if(ee<0||ee>=l.outWidth||Math.floor(ee)!==ee)continue;let ce=v*x*k-1-p.get(D,ne,te,ee,F),me=J*x*k+se*k+ie,Ie=ce===me?1:0;if(Ie===0)continue;Q+=P.get(D,ne,te,ee,F)*Ie}}}_.set(Q,D,$,z,W,F)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}var O6={kernelName:ug,backendName:"cpu",kernelFunc:F6};function P6(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;xe([a,i],"maxPoolGrad");let{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s,p=N.computePool2DInfo(o.shape,u,c,1,l,d),h=n.data.get(o.dataId).values,f=_e(p.outShape,o.dtype,t1(h,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,b=p.dilationHeight,y=p.dilationWidth,v=p.effectiveFilterHeight,x=p.effectiveFilterWidth,k=x-1-p.padInfo.left,T=v-1-p.padInfo.top,C=_e(o.shape,"float32"),R=n.data.get(r.dataId).values,_=_e(r.shape,"float32",R);for(let P=0;P<p.batchSize;++P)for(let D=0;D<p.inChannels;++D)for(let F=0;F<p.inHeight;++F)for(let $=0;$<p.inWidth;++$){let z=F-T,W=$-k,q=0;for(let K=0;K<v;K+=b){let j=(z+K)/m;if(!(j<0||j>=p.outHeight||Math.floor(j)!==j))for(let Q=0;Q<x;Q+=y){let J=(W+Q)/g;if(J<0||J>=p.outWidth||Math.floor(J)!==J)continue;let ne=v*x-1-f.get(P,j,J,D),se=K*x+Q,te=ne===se?1:0;if(te===0)continue;q+=_.get(P,j,J,D)*te}}C.set(q,P,F,$,D)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var z6={kernelName:og,backendName:"cpu",kernelFunc:P6};function M6(e,t,n,s,r){let a=w.computeStrides(t),i=jy(e,t,n,a,r,"max"),o=t1(e,t,n,r,!0,s);return[i.values,o.values]}var L6={kernelName:lg,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;xe(s,"MaxPoolWithArgmax");let c=u.data.get(s.dataId).values,l=N.computePool2DInfo(s.shape,r,a,[1,1],i),[d,p]=M6(c,s.shape,s.dtype,o,l),h=u.write(d,l.outShape,s.dtype),f=u.write(p,l.outShape,s.dtype);return[{dataId:h,shape:l.outShape,dtype:s.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function B6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=w.parseAxisParam(a,r.shape),c=N.computeOutAndReduceShapes(r.shape,o)[1],l=w.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(p);let h=Ir({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(h);let f=Ky({inputs:{a:h,b:p},backend:n});d.push(f);let m=Kl({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:i}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var V6={kernelName:Ha,backendName:"cpu",kernelFunc:B6};function W6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;xe(r,"min");let o=w.parseAxisParam(a,r.shape),u=o,c=N.getAxesPermutation(u,r.shape.length),l=r;c!=null&&(l=Wn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,r.shape.length)),N.assertAxesAreInnerMostDims("min",u,l.shape.length);let[d,p]=N.computeOutAndReduceShapes(l.shape,u),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];(Number.isNaN(k)||k<v)&&(v=k)}f[b]=v}c!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,f);if(i){let b=N.expandShapeToKeepDim(d,o),y=bt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var U6={kernelName:qa,backendName:"cpu",kernelFunc:W6};function G6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;xe(r,"mirrorPad");let o=a.map((v,x)=>v[0]+r.shape[x]+v[1]),u=a.map(v=>v[0]),c=a.map((v,x)=>v[0]+r.shape[x]),l=i==="reflect"?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,h=w.computeStrides(r.shape),f=w.sizeFromShape(o),m=o.length,g=w.computeStrides(o),b=w.getTypedArrayFromDType(r.dtype,f);for(let v=0;v<f;v++){let x=w.indexToLoc(v,m,g);for(let T=0;T<m;T++)x[T]<u[T]?x[T]=u[T]*2-x[T]-l:x[T]>=c[T]&&(x[T]=(c[T]-1)*2-x[T]+l);x=x.map((T,C)=>T-u[C]);let k=w.locToIndex(x,p,h);b[v]=d[k]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}var H6={kernelName:Ka,backendName:"cpu",kernelFunc:G6},q6=At((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),j6=Gt(vl,q6),K6={kernelName:vl,backendName:"cpu",kernelFunc:j6},X6=va(Dd());function o1(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length,o=a;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let u=w.parseAxisParam([o],r.shape),c=i1({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=N.expandShapeToKeepDim(c.shape,u),d=bt({inputs:{x:c},backend:n,attrs:{shape:l}}),p=Hy({inputs:{a:r,b:d},backend:n}),h=yS({inputs:{x:p},backend:n}),f=Kl({inputs:{x:h},backend:n,attrs:{axis:u,keepDims:!1}}),m=bt({inputs:{x:f},backend:n,attrs:{shape:l}}),g=Ky({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var Y6={kernelName:oi,backendName:"cpu",kernelFunc:o1};function Q6(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;xe(r,"multinomial");let u=o?r:o1({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],d=n.data.get(u.dataId).values,p=[c,a],h=w.makeZerosTypedArray(w.sizeFromShape(p),"int32");for(let f=0;f<c;++f){let m=f*l,g=new Float32Array(l-1);g[0]=d[m];for(let v=1;v<g.length;++v)g[v]=g[v-1]+d[m+v];let b=X6.alea(i.toString()),y=f*a;for(let v=0;v<a;++v){let x=b();h[y+v]=g.length;for(let k=0;k<g.length;k++)if(x<g[k]){h[y+v]=k;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",h)}var Z6={kernelName:cg,backendName:"cpu",kernelFunc:Q6},J6=ys.nonMaxSuppressionV3Impl;function eq(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s;xe(r,"NonMaxSuppression");let c=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,{selectedIndices:d}=J6(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var tq={kernelName:ko,backendName:"cpu",kernelFunc:eq},nq=ys.nonMaxSuppressionV4Impl;function sq(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=s;xe(r,"NonMaxSuppressionPadded");let l=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:h}=nq(l,d,i,o,u,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var rq={kernelName:xl,backendName:"cpu",kernelFunc:sq},aq=ys.nonMaxSuppressionV5Impl;function iq(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=s;xe(r,"NonMaxSuppressionWithScore");let l=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,p=i,h=o,f=u,m=c,{selectedIndices:g,selectedScores:b}=aq(l,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var oq={kernelName:Io,backendName:"cpu",kernelFunc:iq};function uq(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;xe(r,"oneHot");let u=w.sizeFromShape(r.shape),c=new Float32Array(u*a);c.fill(o);let l=n.data.get(r.dataId).values;for(let d=0;d<u;++d)l[d]>=0&&l[d]<a&&(c[d*a+l[d]]=i);return n.makeTensorInfo([...r.shape,a],"int32",c)}var lq={kernelName:Co,backendName:"cpu",kernelFunc:uq};function Td(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=fa({inputs:{input:s},backend:n}),a=Td({inputs:{x:r},backend:n}),i=Zi({inputs:{input:s},backend:n}),o=Td({inputs:{x:i},backend:n}),u=En({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return Xy({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var cq={kernelName:Wo,backendName:"cpu",kernelFunc:Td};function u1(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=fa({inputs:{input:s},backend:n}),a=u1({inputs:{x:r},backend:n}),i=Zi({inputs:{input:s},backend:n}),o=Td({inputs:{x:i},backend:n}),u=En({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return Xy({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var dq={kernelName:So,backendName:"cpu",kernelFunc:u1};function l1(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Nd({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(l=>{w.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let d=Nd({inputs:{input:l},backend:n,attrs:{dim:r}});return o.push(d),d}),c=Ji({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(l=>n.disposeIntermediateTensorInfo(l)),c}var pq={kernelName:No,backendName:"cpu",kernelFunc:l1};function hq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;xe(r,"pad");let o=a.map((y,v)=>y[0]+r.shape[v]+y[1]),u=a.map(y=>y[0]),c=n.data.get(r.dataId).values,l=w.sizeFromShape(r.shape),d=r.shape.length,p=w.computeStrides(r.shape),h=w.sizeFromShape(o),f=o.length,m=w.computeStrides(o),g=w.getTypedArrayFromDType(r.dtype,h);i!==0&&g.fill(i);for(let y=0;y<l;y++){let x=w.indexToLoc(y,d,p).map((T,C)=>T+u[C]),k=w.locToIndex(x,f,m);g[k]=c[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}var c1={kernelName:Ya,backendName:"cpu",kernelFunc:hq},fq=At((e,t)=>Math.pow(e,t)),mq=Gt(Qa,fq),gq={kernelName:Qa,backendName:"cpu",kernelFunc:mq};function bq(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=Uy(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}var yq={kernelName:wl,backendName:"cpu",kernelFunc:bq},vq=st(kl,e=>1/e),xq={kernelName:kl,backendName:"cpu",kernelFunc:vq};function wq(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;xe(r,"resizeBilinear");let u=w.computeStrides(r.shape),[c,l]=o,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(w.sizeFromShape([d,c,l,f])),b=[a&&c>1?p-1:p,a&&l>1?h-1:h],y=[a&&c>1?c-1:c,a&&l>1?l-1:l],v=0,x=b[0]/y[0],k=b[1]/y[1];for(let T=0;T<d;T++)for(let C=0;C<c;C++){let R;i?R=x*(C+.5)-.5:R=x*C;let _=Math.max(0,Math.floor(R)),P=R-_,D=Math.min(p-1,Math.ceil(R)),F=T*u[0]+_*u[1],$=T*u[0]+D*u[1];for(let z=0;z<l;z++){let W;i?W=k*(z+.5)-.5:W=k*z;let q=Math.max(0,Math.floor(W)),K=W-q,j=Math.min(h-1,Math.ceil(W)),Q=F+q*u[2],J=$+q*u[2],ne=F+j*u[2],se=$+j*u[2];for(let te=0;te<f;te++){let ie=m[Q+te],ee=m[J+te],ce=m[ne+te],me=m[se+te],Ie=ie+(ce-ie)*K,we=ee+(me-ee)*K,Te=Ie+(we-Ie)*P;g[v++]=Te}}}return n.makeTensorInfo([d,c,l,f],"float32",g)}var kq={kernelName:ei,backendName:"cpu",kernelFunc:wq};function Iq(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;xe([a,r],"resizeBilinearGrad");let o=w.computeStrides(r.shape),[u,c,l,d]=r.shape,[,p,h]=a.shape,f=new Float32Array(u*c*l*d),m=[i&&p>1?c-1:c,i&&h>1?l-1:l],g=[i&&p>1?p-1:p,i&&h>1?h-1:h],b=m[0]/g[0],y=m[1]/g[1],v=n.data.get(a.dataId).values,x=0;for(let k=0;k<u;k++){let T=k*o[0];for(let C=0;C<p;C++){let R=C*b,_=Math.floor(R),P=Math.min(Math.ceil(R),c-1),D=T+_*o[1],F=T+P*o[1],$=R-_,z=1-$;for(let W=0;W<h;W++){let q=W*y,K=Math.floor(q),j=Math.min(Math.ceil(q),l-1),Q=q-K,J=1-Q,ne=D+K*o[2],se=D+j*o[2],te=F+K*o[2],ie=F+j*o[2],ee=z*J,ce=z*Q,me=$*J,Ie=$*Q;for(let we=0;we<d;we++){let Te=v[x++];f[ne+we]+=Te*ee,f[se+we]+=Te*ce,f[te+we]+=Te*me,f[ie+we]+=Te*Ie}}}}return n.makeTensorInfo([u,l,c,d],"float32",f)}var Sq={kernelName:pg,backendName:"cpu",kernelFunc:Iq};function Cq(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;xe(r,"resizeNearestNeighbor");let u=w.computeStrides(r.shape),[c,l]=o,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*c*l*f),b=[a&&c>1?p-1:p,a&&l>1?h-1:h],y=[a&&c>1?c-1:c,a&&l>1?l-1:l],v=b[0]/y[0],x=b[1]/y[1],k=0;for(let T=0;T<d;T++){let C=T*u[0];for(let R=0;R<c;R++){let _=i?v*(R+.5):v*R,P=Math.min(p-1,a?Math.round(_):Math.floor(_));i&&(P=Math.max(0,P));let D=C+P*u[1];for(let F=0;F<l;F++){let $=i?x*(F+.5):x*F,z=Math.min(h-1,a?Math.round($):Math.floor($));i&&(z=Math.max(0,z));let W=D+z*u[2];for(let q=0;q<f;q++){let K=m[W+q];g[k++]=K}}}}return n.makeTensorInfo([d,c,l,f],r.dtype,g)}var Nq={kernelName:Il,backendName:"cpu",kernelFunc:Cq};function Tq(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;xe([a,r],"resizeNearestNeighborGrad");let o=w.computeStrides(r.shape),u=w.computeStrides(a.shape),[c,l,d,p]=r.shape,[,h,f]=a.shape,m=new Float32Array(c*l*d*p),g=n.data.get(a.dataId).values,b=[i&&h>1?l-1:l,i&&f>1?d-1:d],y=[i&&h>1?h-1:h,i&&f>1?f-1:f],v=b[0]/y[0],x=b[1]/y[1],k=1/v,T=1/x,C=Math.ceil(k)*2+2,R=Math.ceil(T)*2+2;for(let _=0;_<c;_++){let P=_*o[0];for(let D=0;D<l;D++){let F=P+D*o[1],$=Math.floor(D*k),z=Math.floor($-C/2);for(let W=0;W<d;W++){let q=F+W*o[2],K=Math.floor(W*T),j=Math.floor(K-R/2);for(let Q=0;Q<p;Q++){let J=0;for(let ne=0;ne<C;ne++){let se=ne+z;if(se<0||se>=h)continue;let te=P+se*u[1],ie=se*v,ee=Math.min(l-1,i?Math.round(ie):Math.floor(ie));if(D===ee)for(let ce=0;ce<R;ce++){let me=ce+j;if(me<0||me>=f)continue;let Ie=te+me*u[2],we=me*x,Te=Math.min(d-1,i?Math.round(we):Math.floor(we));W===Te&&(J+=g[Ie+Q])}}m[q+Q]=J}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var $q={kernelName:dg,backendName:"cpu",kernelFunc:Tq};function Aq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;xe(r,"reverse");let i=r.shape.length,o=w.parseAxisParam(a,r.shape);if(i===0)return Ds({inputs:{x:r},backend:n});let u=new Vt(r.shape,r.dtype),c=n.bufferSync(r);for(let l=0;l<u.size;l++){let d=u.indexToLoc(l),p=d.slice();o.forEach(h=>p[h]=r.shape[h]-1-p[h]),u.set(c.get(...p),...d)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}var Eq={kernelName:Ao,backendName:"cpu",kernelFunc:Aq},_q={kernelName:Uo,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[c,l,d,p]=s.shape,[h,f]=N.getImageCenter(i,l,d),m=255,g=Math.sin(r),b=Math.cos(r),y=o.data.get(s.dataId).values;for(let x=0;x<c;x++){let k=x*d*l*p;for(let T=0;T<l;T++){let C=T*(d*p);for(let R=0;R<d;R++){let _=R*p;for(let P=0;P<p;P++){let D=[c,T,R,P],F=D[2],$=D[1],z=(F-h)*b-($-f)*g,W=(F-h)*g+($-f)*b;z=Math.round(z+h),W=Math.round(W+f);let q=a;if(typeof a!="number"&&(P===3?q=m:q=a[P]),z>=0&&z<d&&W>=0&&W<l){let j=W*(d*p),Q=z*p,J=k+j+Q+P;q=y[J]}let K=k+C+_+P;u[K]=q}}}}return{dataId:o.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Rq=st(Eo,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),Dq={kernelName:Eo,backendName:"cpu",kernelFunc:Rq};function d1(e,t,n,s,r,a,i,o,u,c){let l=[s/r,r],d=e.values,p=t.values;if(s===0)return _e(n,t.dtype);let h=_e(l,t.dtype);h.values.fill(u);for(let f=0;f<a;f++){let m=[],g=0;for(let b=0;b<i;b++){let y=d[f*i+b];m.push(y),g+=y*o[b]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let b=0;b<r;b++)c?h.values[g*r+b]+=p[f*r+b]:h.values[g*r+b]=t.rank===0?p[0]:p[f*r+b]}return h}function Fq(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=N.calculateShapes(a,r,i),p=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=d1(h,f,i,d,c,u,o,l,0,p);return n.makeTensorInfo(i,m.dtype,m.values)}var Oq={kernelName:_o,backendName:"cpu",kernelFunc:Fq};function Pq(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;xe([s,r,a],"select");let i=s.shape.length,o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,l=vn(r.dtype,a.dtype),d=w.makeZerosTypedArray(w.sizeFromShape(r.shape),l),p=0,h=i===0||i>1||r.shape.length===1?1:w.sizeFromShape(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<h;m++)o[f]===1?d[p++]=u[f]:d[p++]=c[f];return n.makeTensorInfo(r.shape,l,d)}var zq={kernelName:Ro,backendName:"cpu",kernelFunc:Pq},Mq=N.SELU_SCALEALPHA,Lq=N.SELU_SCALE,Bq=st(Sl,e=>e>=0?Lq*e:Mq*(Math.exp(e)-1)),Vq={kernelName:Sl,backendName:"cpu",kernelFunc:Bq},Wq=st(Cl,e=>e<0?-1:e>0?1:0),Uq={kernelName:Cl,backendName:"cpu",kernelFunc:Wq},Gq=st(si,e=>Math.sin(e)),Hq={kernelName:si,backendName:"cpu",kernelFunc:Gq},qq=st(Fo,e=>Math.sinh(e)),jq={kernelName:Fo,backendName:"cpu",kernelFunc:qq},Kq=11920928955078125e-23,Rx=Math.log(Kq)+2,Xq=st(Nl,e=>{let t=e>-Rx,n=e<Rx,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),Yq={kernelName:Nl,backendName:"cpu",kernelFunc:Xq};function Qq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;xe([r],"spaceToBatchND");let o=w.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let T=1+a.length;T<r.shape.length;++T)u.push([0,0]);let c=c1.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),l=N.getReshaped(c.shape,a,o,!1),d=N.getPermuted(l.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,o,!1),m=bt({inputs:{x:c},backend:n,attrs:{shape:l}}),y=Wn({inputs:{x:m},backend:n,attrs:{perm:d}}),k=bt({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),k}var Zq={kernelName:Oo,backendName:"cpu",kernelFunc:Qq};function Jq(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[d,p,h,f,m]=zS(o,s.shape,s.dtype,u,r.dtype,c,l);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var ej={kernelName:Kd,backendName:"cpu",kernelFunc:Jq};function tj(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,u=Array.from(n.data.get(a.dataId).values),[c,l,d]=MS(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(l,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var nj={kernelName:Tl,backendName:"cpu",kernelFunc:tj};function sj(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[c,l]=Gy(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(l,s.dtype,c)}var rj={kernelName:Xd,backendName:"cpu",kernelFunc:sj};function aj(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[c,l]=Gy(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(l,s.dtype,c)}var ij={kernelName:Yd,backendName:"cpu",kernelFunc:aj};function oj(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=N.calculateShapes(a,r,o),h=!1,f=n.bufferSync(r),m=n.bufferSync(a),g=n.data.get(i.dataId).values[0],b=d1(f,m,o,p,l,c,u,d,g,h);return n.makeTensorInfo(o,b.dtype,b.values)}var uj={kernelName:Qd,backendName:"cpu",kernelFunc:oj};function lj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=N.prepareSplitSize(r,a,o),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(d=>{let p=[...l];p[o]=d;let h=ma({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[o]+=d,h})}var cj={kernelName:Po,backendName:"cpu",kernelFunc:lj},dj={kernelName:$l,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;xe(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let o=0;o<r.length;++o){let u=r[o];a[o]=u*u}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},pj=st(pi,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),hj={kernelName:pi,backendName:"cpu",kernelFunc:pj};function fj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=s;xe(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=kt.sliceInfo(r.shape,a,i,o,u,c,l,d,p),k;if(m)k=bt({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let T=kt.computeOutShape(y,v,x),C=ma({inputs:{x:r},backend:n,attrs:{begin:y,size:T}});k=bt({inputs:{x:C},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(C)}else{let T=n.bufferSync(r),C=BS(h,T,x,y);k=n.makeTensorInfo(f,C.dtype,C.values)}return k}var mj={kernelName:zo,backendName:"cpu",kernelFunc:fj};function gj(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:d}=t,p=n.data.get(l.dataId).values,h=n.data.get(d.dataId).values,[f,m]=VS(p,h,r,a,i,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var bj={kernelName:Zd,backendName:"cpu",kernelFunc:gj};function yj(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[c,l,d]=WS(o,u,r),p=l.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var vj={kernelName:hg,backendName:"cpu",kernelFunc:yj};function xj(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(a.dataId).values,o=US(i,r);return n.makeTensorInfo(a.shape,"int32",o)}var wj={kernelName:fg,backendName:"cpu",kernelFunc:xj},kj=st(Mo,e=>Math.tan(e)),Ij={kernelName:Mo,backendName:"cpu",kernelFunc:kj},Sj=st(ci,e=>Math.tanh(e)),Cj={kernelName:ci,backendName:"cpu",kernelFunc:Sj};function Nj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;xe(r,"tile");let i=HS(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var Tj={kernelName:Tr,backendName:"cpu",kernelFunc:Nj};function $j(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;xe(r,"topk");let o=n.data.get(r.dataId).values,[u,c]=jS(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var Aj={kernelName:Lo,backendName:"cpu",kernelFunc:$j};function Ej(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=n,[l,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[l,f,m,h],b=w.computeStrides(r.shape),y=b[0],v=b[1],x=b[2],k=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(g));k.fill(u);let T=s.data.get(r.dataId).values,C=s.data.get(a.dataId).values;for(let _=0;_<l;++_){let P=a.shape[0]===1?C:C.subarray(_*8,_*8+8);for(let D=0;D<f;++D)for(let F=0;F<m;++F)for(let $=0;$<h;++$){let z,W=P[6]*F+P[7]*D+1;if(W===0)continue;let q=(P[0]*F+P[1]*D+P[2])/W,K=(P[3]*F+P[4]*D+P[5])/W,j=Dx(q,p,o),Q=Dx(K,d,o);switch(i){case"nearest":z=Pj(T,d,p,y,v,x,_,Q,j,$,u);break;case"bilinear":z=zj(T,d,p,y,v,x,_,Q,j,$,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let J=_*y+D*v+F*x+$;k[J]=z}return s.makeTensorInfo(g,r.dtype,k)}return{dataId:s.write(k,g,r.dtype),shape:r.shape,dtype:r.dtype}}var _j={kernelName:Bo,backendName:"cpu",kernelFunc:Ej};function Dx(e,t,n){switch(n){case"reflect":return Rj(e,t);case"wrap":return Dj(e,t);case"nearest":return Oj(e,t);case"constant":default:return Fj(e,t)}}function Rj(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return w.clamp(0,n,t-1)}function Dj(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return w.clamp(0,n,t-1)}function Fj(e,t){return e}function Oj(e,t){return w.clamp(0,e,t-1)}function _u(e,t,n,s,r,a,i,o,u,c,l){let d=i*s+o*r+u*a+c;return 0<=o&&o<t&&0<=u&&u<n?e[d]:l}function Pj(e,t,n,s,r,a,i,o,u,c,l){let d=Math.round(o),p=Math.round(u);return _u(e,t,n,s,r,a,i,d,p,c,l)}function zj(e,t,n,s,r,a,i,o,u,c,l){let d=Math.floor(o),p=Math.floor(u),h=d+1,f=p+1,m=(f-u)*_u(e,t,n,s,r,a,i,d,p,c,l)+(u-p)*_u(e,t,n,s,r,a,i,d,f,c,l),g=(f-u)*_u(e,t,n,s,r,a,i,h,p,c,l)+(u-p)*_u(e,t,n,s,r,a,i,h,f,c,l);return(h-o)*m+(o-d)*g}function Mj(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;xe(a,"unique");let i=s.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:c}=KS(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([c.length],"int32",c)]}var Lj={kernelName:mg,backendName:"cpu",kernelFunc:Mj};function Bj(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r.shape.length,o=r.shape[a],u=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==a&&(u[c++]=r.shape[h]);let l=new Array(i).fill(0),d=r.shape.slice();d[a]=1;let p=new Array(o);for(let h=0;h<p.length;h++){l[a]=h;let f=ma({inputs:{x:r},backend:n,attrs:{begin:l,size:d}});p[h]=bt({inputs:{x:f},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(f)}return p}var Vj={kernelName:Vo,backendName:"cpu",kernelFunc:Bj};function Wj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;xe(r,"unsortedSegmentSum");let o=r.shape.length,u=a.shape.length,c=[],l=[],d=o-u,p=a;for(let f=0;f<d;++f){let m=Nd({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=m,l.push(m)}for(let f=0;f<i;++f){let m=w.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),b=gS({inputs:{a:g,b:p},backend:n}),y=Ir({inputs:{x:b},backend:n,attrs:{dtype:"float32"}}),v=Pp({inputs:{a:y,b:r},backend:n}),x=Kl({inputs:{x:v},backend:n,attrs:{axis:0,keepDims:!1}});c.push(x),l.push(g),l.push(b),l.push(y),l.push(v),l.push(x)}let h=l1({inputs:c,backend:n,attrs:{axis:0}});return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var Uj={kernelName:Jd,backendName:"cpu",kernelFunc:Wj},Gj=[QU,GW,JU,tG,YW,sG,aG,oG,lG,dG,hG,mG,bG,xG,kG,CG,TG,AG,_G,XU,DG,OG,zG,LG,KW,ZW,VG,HW,UG,HG,qG,KG,YG,ZG,eH,nH,rH,iH,uH,cH,pH,fH,mH,bH,vH,wH,kH,IH,SH,TH,WU,AH,JW,zH,eU,MH,nU,GH,HH,jH,rU,YH,ZH,e6,n6,r6,iU,uU,qW,i6,GG,u6,c6,p6,UU,cU,pU,f6,fU,g6,v6,w6,S6,N6,$6,A6,gU,_6,D6,O6,z6,L6,V6,U6,yU,H6,K6,Z6,xU,kU,tq,rq,oq,SU,lq,dq,pq,c1,gq,HU,TU,yq,jW,Sm,xq,qU,jU,KU,kq,Sq,Nq,$q,Eq,_q,Dq,AU,Oq,zq,Vq,_U,Uq,Hq,jq,RU,Y6,Yq,Zq,ej,nj,rj,ij,uj,cj,OU,dj,zU,hj,mj,bj,vj,wj,VU,CH,Ij,Cj,Tj,Aj,_j,CU,Lj,Vj,Uj,cq];for(let e of Gj)Al(e);var Hj={};Ae(Hj,{assertNotComplex:()=>Jo,bindCanvasToFramebuffer:()=>r5,bindColorTextureToFramebuffer:()=>Yc,bindTextureToProgramUniformSampler:()=>N1,bindTextureUnit:()=>I1,bindVertexBufferToProgramAttribute:()=>Nm,callAndCheck:()=>fe,canBeRepresented:()=>p1,createFragmentShader:()=>m1,createFramebuffer:()=>k1,createProgram:()=>g1,createStaticIndexBuffer:()=>v1,createStaticVertexBuffer:()=>y1,createTexture:()=>x1,createVertexShader:()=>f1,getBatchDim:()=>ga,getExtensionOrThrow:()=>Ru,getFramebufferErrorMessage:()=>T1,getMaxTexturesInShader:()=>_1,getNumChannels:()=>n5,getProgramUniformLocation:()=>C1,getProgramUniformLocationOrThrow:()=>S1,getRowsCols:()=>ba,getShapeAs3D:()=>Qc,getTextureShapeFromLogicalShape:()=>A1,getWebGLDisjointQueryTimerVersion:()=>R1,getWebGLErrorMessage:()=>h1,getWebGLMaxTextureSize:()=>E1,hasExtension:()=>Ln,isCapableOfRenderingToFloatTexture:()=>D1,isDownloadFloatTextureEnabled:()=>F1,isReshapeFree:()=>Ju,isWebGLFenceEnabled:()=>O1,isWebGLVersionEnabled:()=>$m,linkProgram:()=>b1,resetMaxTextureSize:()=>a5,resetMaxTexturesInShader:()=>i5,unbindColorTextureFromFramebuffer:()=>Tm,unbindTextureUnit:()=>s5,validateFramebuffer:()=>Du,validateProgram:()=>Xc,validateTextureSize:()=>w1});var Kr={},Df={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function qj(e,t){Kr[e]=t}function bs(e,t){if(!(e in Kr)||t!=null){let s=Kj(e,t);if(s!==null)Kr[e]=s;else return console.log("Could not get context for WebGL version",e),null}let n=Kr[e];return n==null||n.isContextLost()?(delete Kr[e],bs(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Kr[e])}function jj(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Kj(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?jj(e):t;return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Kr[e]},!1),e===1?n.getContext("webgl",Df)||n.getContext("experimental-webgl",Df):n.getContext("webgl2",Df)}function Xl(e,t){return[t,e]}function Xj(e,t){return e*t}function Vc(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function Zo(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Yj(e,t){let[n,s]=Zo(e,t);return n*s*4}function Yy(e,t){let n=e,s,r,a,i,o,u,c,l,d,p;return X().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,l=1,d=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,c=4,l=4,d=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:p}}function fe(e,t){let n=t();return X().getBool("DEBUG")&&Qj(e),n}function Qj(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+h1(e,t))}var Zj=596e-10,Jj=65504;function p1(e){return!!(X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||Zj<Math.abs(e)&&Math.abs(e)<Jj)}function h1(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Ru(e,t){return Ys(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function f1(e,t){let n=Ys(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(fe(e,()=>e.shaderSource(n,t)),fe(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function m1(e,t){let n=Ys(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(fe(e,()=>e.shaderSource(n,t)),fe(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw t5(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var e5=/ERROR: [0-9]+:([0-9]+):/g;function t5(e,t){let n=e5.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,i=r.map((d,p)=>w.rightPad((p+1).toString(),a)+d),o=0;for(let d=0;d<i.length;d++)o=Math.max(i[d].length,o);let u=i.slice(0,s-1),c=i.slice(s-1,s),l=i.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function g1(e){return Ys(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function b1(e,t){if(fe(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Xc(e,t){if(fe(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function y1(e,t){let n=Ys(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),fe(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function v1(e,t){let n=Ys(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),fe(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function n5(){return X().getNumber("WEBGL_VERSION")===2?1:4}function x1(e){return Ys(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function w1(e,t){let n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function k1(e){return Ys(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Nm(e,t,n,s,r,a,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),fe(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i)),fe(e,()=>e.enableVertexAttribArray(o)),!0)}function I1(e,t,n){$1(e,n),fe(e,()=>e.activeTexture(e.TEXTURE0+n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function s5(e,t){$1(e,t),fe(e,()=>e.activeTexture(e.TEXTURE0+t)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function S1(e,t,n){return Ys(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function C1(e,t,n){return e.getUniformLocation(t,n)}function N1(e,t,n,s){fe(e,()=>I1(e,t,s)),fe(e,()=>e.uniform1i(n,s))}function r5(e){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),fe(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Yc(e,t,n){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Tm(e,t){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Du(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+T1(e,t))}function T1(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Ys(e,t,n){let s=fe(e,()=>t());if(s==null)throw new Error(n);return s}function $1(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function ga(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function ba(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Qc(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[ga(e),...ba(e)]),t}function A1(e,t=!1){let n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?w.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let s=w.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=ga(e),a=2,i=2;return e.length&&([a,i]=ba(e)),s=r*(a/2)*(i/2),w.sizeToSquarishShape(s).map(o=>o*2)}return w.sizeToSquarishShape(s)}function Wc(e){return e%2===0}function Ju(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||Wc(n)&&Wc(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Wc(e[0])&&Wc(t[0])}var Zc,Jc;function E1(e){if(Zc==null){let t=bs(e);Zc=t.getParameter(t.MAX_TEXTURE_SIZE)}return Zc}function a5(){Zc=null}function i5(){Jc=null}function _1(e){if(Jc==null){let t=bs(e);Jc=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Jc)}function R1(e){if(e===0)return 0;let t,n=bs(e);return Ln(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Ln(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Ln(e,t){return e.getExtension(t)!=null}function $m(e){try{if(bs(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function D1(e){if(e===0)return!1;let t=bs(e);if(e===1){if(!Ln(t,"OES_texture_float"))return!1}else if(!Ln(t,"EXT_color_buffer_float"))return!1;return Am(t)}function F1(e){if(e===0)return!1;let t=bs(e);if(e===1){if(!Ln(t,"OES_texture_float")||!Ln(t,"WEBGL_color_buffer_float"))return!1}else{if(Ln(t,"EXT_color_buffer_float"))return Am(t);let s="EXT_color_buffer_half_float";if(Ln(t,s)){let r=t.getExtension(s);return o5(t,r)}return!1}return Am(t)}function Am(e){let t=Yy(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),i}function o5(e,t){let n=Yy(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(i),o}function O1(e){return e!==2?!1:bs(e).fenceSync!=null}function Jo(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Ne=X();Ne.registerFlag("HAS_WEBGL",()=>Ne.getNumber("WEBGL_VERSION")>0);Ne.registerFlag("WEBGL_VERSION",()=>$m(2)?2:$m(1)?1:0);Ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ne.get("WEBGL_VERSION")===2);Ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ne.registerFlag("WEBGL_PACK",()=>Ne.getBool("HAS_WEBGL"));Ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_CLIP",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_REDUCE",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_CONV_IM2COL",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>E1(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>_1(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Ne.getNumber("WEBGL_VERSION");return e===0?0:R1(e)});Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!np.isMobile());Ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>D1(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ne.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>F1(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>O1(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>np.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function ln(){let e,t,n,s,r,a,i,o,u,c;return X().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function bi(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let i=`int ${e[a]} = ${n} / ${r}`,o=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${i}; ${o};`}).join("")}function zp(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let i=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,o=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${i}; ${o};`}).join("")}function u5(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function l5(e,t,n="index"){let s=e.map((a,i)=>i),r=u5(s,t);return r.map((a,i)=>{let o=`int ${e[i]} = ${n} / ${r[i]}`,u=i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${r[i]}`:`index -= ${e[i]} * ${r[i]}`;return`${o}; ${u};`}).join("")}function Qy(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Zy(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var P1=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:z1}=N;function c5(e,t,n){let s=[];if(e.forEach(h=>{let f=w.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Jy(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>d5(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=ln(),u=f5(o),c,l,d=b5(o);return t.isPacked?(c=p5(t.logicalShape,i,n.enableShapeUniforms),l=g5(o)):(c=h5(t.logicalShape,i,n.enableShapeUniforms),l=m5(o)),n.packedInputs&&(d+=w5),[d,u,l,r,c,a,n.userCode].join(`
`)}function eu(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return D5(e,t);case 1:return O5(e,t);case 2:return z5(e,t);case 3:return L5(e,t);case 4:return V5(e,t);case 5:return W5(e);case 6:return U5(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function M1(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return R5(e);case 1:return F5(e,t);case 2:return P5(e,t);case 3:return M5(e,t);default:return B5(e,t)}}function d5(e,t,n=!1,s){let r="";n?r+=M1(e,s):r+=eu(e,s);let a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(n?r+=G5(e,t):r+=H5(e,t)),r}function p5(e,t,n){switch(e.length){case 0:return L1();case 1:return k5(e,t,n);case 2:return E5(e,t,n);case 3:return S5(e,t,n);default:return N5(e,t,n)}}function h5(e,t,n){switch(e.length){case 0:return L1();case 1:return I5(e,t,n);case 2:return _5(e,t,n);case 3:return C5(e,t,n);case 4:return T5(e,t,n);case 5:return $5(e,t);case 6:return A5(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function f5(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function m5(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function g5(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function b5(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${y5}
    ${v5}
    ${x5}
  `}var y5=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,v5=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,x5=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,w5=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function L1(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function k5(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function I5(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function S5(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function C5(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${zp(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=bi(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function N5(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),i=a,o="",u="b, r, c";for(let c=2;c<e.length-1;c++)i*=e[e.length-c-1],o=`
      int b${c} = index / ${i};
      index -= b${c} * ${i};
    `+o,u=`b${c}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${u});
    }
  `}function T5(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${zp(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=bi(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function $5(e,t){let n=bi(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function A5(e,t){let n=bi(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function E5(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function _5(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function yi(e){return`offset${e}`}function R5(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=ln();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function D5(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=yi(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,u]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${o}, ${u}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function F5(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=ln();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function O5(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${tu(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],i=r[1];if(i===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=yi(n);return i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function P5(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=ln();if(a!=null&&w.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;let c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function z5(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&w.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let p=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:i,keptDims:o}=w.squeezeShape(n),u=i;if(u.length<n.length){let p=nu(e,u),h=["row","col"];return`
      ${eu(p,t)}
      float ${r}(int row, int col) {
        return ${r}(${su(h,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${tu(e)}
      }
    `;let c=a[0],l=a[1],d=yi(s);return l===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${s}, uv);
  }
`}function M5(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let p=n.slice(1),h=[1,2],f=nu(e,p),m=["b","row","col"];return`
        ${M1(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${su(m,h)});
        }
      `}let o=ln();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `;let u=i[0],c=i[1],l=Math.ceil(n[2]/2),d=l*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${d}, ${l}, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `}function L5(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=w.squeezeShape(n),c=o;if(c.length<n.length){let m=nu(e,c),g=["row","col","depth"];return`
        ${eu(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${su(g,u)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${i}, 1)));
        ${tu(e)}
      }
    `;let l=e.shapeInfo.texShape,d=l[0],p=l[1],h=e.shapeInfo.flatOffset;if(p===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(p===i&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=yi(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${i} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${s}, uv);
      }
  `}function B5(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=ln();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=u[0],l=u[1],d=Math.ceil(a[i-1]/2),p=d*Math.ceil(a[i-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<i-1;m++)h=`int b${m}, `+h,p*=a[i-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${r.texture2D}(${n}, uv);
    }
  `}function V5(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:c}=w.squeezeShape(n);if(u.length<n.length){let y=nu(e,u),v=["row","col","depth","depth2"];return`
      ${eu(y,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${su(v,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${a}, 1)));
        ${tu(e)}
      }
    `;let l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===o&&l==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&l==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;let b=yi(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}function W5(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:c}=w.squeezeShape(t);if(u.length<t.length){let m=nu(e,u),g=["row","col","depth","depth2","depth3"];return`
      ${eu(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${su(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${a}, ${r})) +
          depth3;
        ${tu(e)}
      }
    `;let l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===o&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=yi(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function U5(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=w.squeezeShape(t);if(r.length<t.length){let g=nu(e,r),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${eu(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${su(b,a)});
      }
    `}let i=t[5],o=t[4]*i,u=t[3]*o,c=t[2]*u,l=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${tu(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===l&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===i&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=yi(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function tu(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function G5(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=z1(e.shapeInfo.logicalShape,t.logicalShape),u=ut(i),c=i-a,l,d=["x","y","z","w","u","v"];a===0?l="":i<2&&o.length>=1?l="coords = 0;":l=o.map(y=>`coords.${d[y+c]} = 0;`).join(`
`);let p="";i<2&&a>0?p="coords":p=e.shapeInfo.logicalShape.map((y,v)=>`coords.${d[v+c]}`).join(", ");let h="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,b=w.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!b)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)i===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(o.length){let y=a-2,v=a-1;o.indexOf(y)>-1&&o.indexOf(v)>-1?h="return vec4(outputValue.x);":o.indexOf(y)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(v)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${s}(${p});
      ${h}
    }
  `}function H5(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=ut(u),l=z1(e.shapeInfo.logicalShape,t.logicalShape),d=u-o,p,h=["x","y","z","w","u","v"];o===0?p="":u<2&&l.length>=1?p="coords = 0;":p=l.map(m=>`coords.${h[m+d]} = 0;`).join(`
`);let f="";return u<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${p}
      return get${s}(${f});
    }
  `}function ut(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Jy(e,t,n){let{newShape:s,keptDims:r}=w.squeezeShape(t),a=t.length,i=e&&a===3&&t[0]===1,o=i?t.slice(1):s,u=!e&&a>1&&!w.arraysEqual(t,n)&&s.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:r}}function nu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function su(e,t){return t.map(n=>e[n]).join(", ")}function q5(e,t,n,s){let r=n.map((x,k)=>{let T={logicalShape:x.shape,texShape:x.isUniform?null:x.texData.texShape,isUniform:x.isUniform,isPacked:x.isUniform?!1:x.texData.isPacked,flatOffset:null};return x.texData!=null&&x.texData.slice!=null&&x.texData.slice.flatOffset>0&&(T.flatOffset=x.texData.slice.flatOffset),{name:t.variableNames[k],shapeInfo:T}}),a=r.map(x=>x.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=c5(r,i,t),u=m1(e.gl,o),c=e.createProgram(u),l=null,d=e.getUniformLocation(c,"NAN",!1);X().getNumber("WEBGL_VERSION")===1&&(l=e.getUniformLocation(c,"INFINITY",!1));let p=!1,h={},f={},m={};for(let x=0;x<t.variableNames.length;x++){let k=t.variableNames[x];h[k]=e.getUniformLocation(c,k,p),h[`offset${k}`]=e.getUniformLocation(c,`offset${k}`,p),t.enableShapeUniforms&&(f[`${k}Shape`]=e.getUniformLocation(c,`${k}Shape`,p),m[`${k}TexShape`]=e.getUniformLocation(c,`${k}TexShape`,p))}let g,b,y;t.enableShapeUniforms&&(g=e.getUniformLocation(c,"outShape",p),y=e.getUniformLocation(c,"outShapeStrides",p),b=e.getUniformLocation(c,"outTexShape",p));let v=[];return t.customUniforms&&t.customUniforms.forEach((x,k)=>{v[k]=e.getUniformLocation(c,x.name,p)}),{program:t,fragmentShader:u,source:o,webGLProgram:c,uniformLocations:h,customUniformLocations:v,inShapeInfos:a,outShapeInfo:i,infLoc:l,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:y,outTexShapeLocation:b}}function Fx(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],i=a.shape;if(!w.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(n.isUniform&&a.isUniform)return;let o=n.texShape,u=a.isUniform?null:a.texData.texShape;if(!w.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}function j5(e,t,n,s,r){t.program.enableShapeUniforms||(Fx(t.inShapeInfos,n),Fx([t.outShapeInfo],[s]));let a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),X().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((u,c)=>{let l=t.program.variableNames[c],d=t.uniformLocations[l],p=t.uniformLocations[`offset${l}`],h=t.inShapesLocations[`${l}Shape`],f=t.inTexShapesLocations[`${l}TexShape`];if(h){let{uniformShape:m}=Jy(t.program.packedInputs,u.shape,u.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),d!=null){if(u.isUniform){if(w.sizeFromShape(u.shape)<2)e.gl.uniform1f(d,u.uniformValues[0]);else{let m=u.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}u.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture.texture,d,c)}});let o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let u=w.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((u,c)=>{let l=t.customUniformLocations[c],d=r[c];if(u.type==="float")e.gl.uniform1fv(l,d);else if(u.type==="vec2")e.gl.uniform2fv(l,d);else if(u.type==="vec3")e.gl.uniform3fv(l,d);else if(u.type==="vec4")e.gl.uniform4fv(l,d);else if(u.type==="int")e.gl.uniform1iv(l,d);else if(u.type==="ivec2")e.gl.uniform2iv(l,d);else if(u.type==="ivec3")e.gl.uniform3iv(l,d);else if(u.type==="ivec4")e.gl.uniform4iv(l,d);else throw Error(`uniform type ${u.type} is not supported yet.`)}),e.executeProgram()}function K5(e,t,n){let s="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:d}=Jy(e.packedInputs,i.shape,u),p="",h="",f="";if(l.length===1&&e.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];p=`${k[0]>1}_${k[1]>1}`}else if(l.length===2&&!e.packedInputs)h=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!e.packedInputs){let k=w.computeStrides(l);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let m=i.shape.length,g=l.length===2&&w.arraysEqual(i.shape,u),b=w.sizeFromShape(i.shape)===1,y=N.getBroadcastDims(i.shape,n.shape),v=!e.packedInputs&&m===n.shape.length&&w.arraysEqual(u,n.texData.texShape),x=e.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${m}_${v}_${c?d:""}_${l.length}_${b}_${y}_${g}_${p}_${h}_${f}_${x}_${o}`}else{let u=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${u}_${o}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${X().getNumber("WEBGL_VERSION")}`,a}function In(e){return X().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var X5=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=ln();this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?zp(["r","c","d"],e):bi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},Y5=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=ln();this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?zp(["r","c","d"],e):bi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},Q5=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=ln();this.outputShape=e,this.userCode=`
      ${P1}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},Z5=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=ln();this.outputShape=e,this.userCode=`
      ${P1}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},J5=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=ln();this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Zy():Qy(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},eK=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=ln();this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let o=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Zy():Qy(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},tK={};Ae(tK,{bindVertexProgramAttributeStreams:()=>K1,createBufferFromOutputTexture:()=>Q1,createFloat16MatrixTexture:()=>G1,createFloat16PackedMatrixTexture:()=>j1,createFloat32MatrixTexture:()=>U1,createIndexBuffer:()=>W1,createPackedMatrixTexture:()=>q1,createUnsignedBytesMatrixTexture:()=>H1,createVertexBuffer:()=>V1,createVertexShader:()=>B1,downloadByteEncodedFloatMatrixFromOutputTexture:()=>J1,downloadFloat32MatrixFromBuffer:()=>Z1,downloadMatrixFromPackedOutputTexture:()=>tC,downloadPackedMatrixFromBuffer:()=>eC,getInternalFormatForFloat16MatrixTexture:()=>tv,getInternalFormatForFloat16PackedMatrixTexture:()=>rv,getInternalFormatForFloat32MatrixTexture:()=>ev,getInternalFormatForPackedMatrixTexture:()=>sv,getInternalFormatForUnsignedBytesMatrixTexture:()=>nv,uploadDenseMatrixToTexture:()=>X1,uploadPixelDataToTexture:()=>Y1});function B1(e){let t=ln(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return f1(e,n)}function V1(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return y1(e,t)}function W1(e){let t=new Uint16Array([0,1,2,2,1,3]);return v1(e,t)}function Yl(e,t,n,s,r,a){w1(t,n);let i=x1(e),o=e.TEXTURE_2D;return fe(e,()=>e.bindTexture(o,i)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),X().getNumber("WEBGL_VERSION")===1?fe(e,()=>e.texImage2D(o,0,s,t,n,0,r,a,null)):fe(e,()=>e.texStorage2D(o,1,s,t,n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function ev(e){return e.internalFormatFloat}function U1(e,t,n,s){let[r,a]=Xl(t,n);return Yl(e,r,a,ev(s),s.textureFormatFloat,e.FLOAT)}function tv(e){return e.internalFormatHalfFloat}function G1(e,t,n,s){let[r,a]=Xl(t,n);return Yl(e,r,a,tv(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function nv(e){return e.downloadTextureFormat}function H1(e,t,n,s){let[r,a]=Xl(t,n);return Yl(e,r,a,nv(s),e.RGBA,e.UNSIGNED_BYTE)}function sv(e){return e.internalFormatPackedFloat}function q1(e,t,n,s){let[r,a]=Zo(t,n);return Yl(e,r,a,sv(s),e.RGBA,e.FLOAT)}function rv(e){return e.internalFormatPackedHalfFloat}function j1(e,t,n,s){let[r,a]=Zo(t,n);return Yl(e,r,a,rv(s),e.RGBA,s.textureTypeHalfFloat)}function K1(e,t,n){return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Nm(e,t,"clipSpacePos",n,3,20,0)&&Nm(e,t,"uv",n,2,20,12)}function X1(e,t,n,s,r,a){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,u;r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(r),X().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,o,i)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Y1(e,t,n){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?X().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):X().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Q1(e,t,n,s){let r=e.createBuffer();fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let o=4*4*t*n;return fe(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ)),fe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function Z1(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function J1(e,t,n,s){let[r,a]=Xl(t,n),i=4,o=new Uint8Array(Xj(t*n,i));return fe(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function eC(e,t,n,s,r,a,i,o){let u=e,c=new Float32Array(Yj(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function tC(e,t,n){let s=new Float32Array(t*n*4);return fe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var Ff=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=X().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,qj(t,e)):this.gl=bs(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(X().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Ru(this.gl,r),Ln(this.gl,a))this.textureHalfFloatExtension=Ru(this.gl,a);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ln(this.gl,s))this.colorBufferHalfFloatExtension=Ru(this.gl,s);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ln(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Ln(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=V1(this.gl),this.indexBuffer=W1(this.gl),this.framebuffer=k1(this.gl),this.textureConfig=Yy(this.gl,this.textureHalfFloatExtension)}get debug(){return X().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;fe(e,()=>e.finish()),fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.deleteFramebuffer(this.framebuffer)),fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),fe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),U1(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),G1(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),H1(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Y1(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),X1(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),j1(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),q1(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Tm(this.gl,this.framebuffer),this.outputTexture=null),fe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>J1(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return eC(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Z1(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=Q1(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(X().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>tC(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=B1(t));let n=g1(t);return fe(t,()=>t.attachShader(n,this.vertexShader)),fe(t,()=>t.attachShader(n,e)),b1(t,n),this.debug&&Xc(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=K1(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&fe(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Xc(this.gl,this.program),fe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?S1(this.gl,e,t):C1(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),fe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),N1(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=Zo(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Xc(this.gl,this.program),Du(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),fe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Ru(this.gl,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=nK(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Yc(this.gl,e,this.framebuffer),this.debug&&Du(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Yc(this.gl,this.outputTexture,this.framebuffer),this.debug&&Du(this.gl)):Tm(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;Yc(s,e,this.framebuffer),this.debug&&Du(s),this.outputTexture=e,fe(s,()=>s.viewport(0,0,t,n)),fe(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),fe(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function nK(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:sK,bincountImpl:nC,bincountReduceImpl:rK,ceilImpl:aK,concatImpl:iK,equalImpl:oK,expImpl:uK,expm1Impl:lK,floorImpl:cK,gatherNdImpl:dK,gatherV2Impl:pK,greaterImpl:hK,greaterEqualImpl:fK,lessImpl:mK,lessEqualImpl:gK,linSpaceImpl:bK,logImpl:yK,maxImpl:vK,maximumImpl:xK,minimumImpl:wK,multiplyImpl:kK,negImpl:IK,notEqualImpl:SK,prodImpl:CK,rangeImpl:NK,rsqrtImpl:TK,sigmoidImpl:$K,simpleAbsImpl:sC,sliceImpl:AK,sparseFillEmptyRowsImpl:EK,sparseReshapeImpl:_K,sparseSegmentReductionImpl:rC,sqrtImpl:RK,stridedSliceImpl:DK,stringNGramsImpl:FK,stringSplitImpl:OK,stringToHashBucketFastImpl:PK,subImpl:zK,tileImpl:MK,topKImpl:LK,transposeImpl:av,uniqueImpl:BK}=zy;function aC(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function sn(e,t){return t===1?[e]:aC(e,t)}function VK(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var WK=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=In(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=sn("rc",this.rank),n=ut(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},iC=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2===1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${UK(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Zy():Qy(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function UK(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?l5(["r","c","d"],"inputShape"):bi(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var GK=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=Px(t,n),r=zx(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=Ox(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let o=this.freeTextures[r].shift();return this.usedTextures[r].push(o),o}let i;return s===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=Px(n,s),a=zx(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let i=Ox(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=X().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function HK(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Ox(e,t,n,s,r){let a=qK(t,s),i;if(r){let[u,c]=Zo(e[0],e[1]);i=u*c}else{let[u,c]=Xl(e[0],e[1]);i=u*c}let o=HK(n,a);return i*o}function qK(e,t){switch(e){case 3:return sv(t);case 4:return rv(t);case 1:return ev(t);case 0:return tv(t);case 2:return nv(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function jK(e){return X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}function Px(e,t){if(e===1)return 3;if(e===0||e==null)return jK(t);if(e===3||e===2)return 2;throw new Error(`Unknown logical texture type ${e}`)}function zx(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Gs=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},as="if (isnan(x)) return x;",KK="return x;",Mx="return abs(x);",XK="return (x >= 0.0) ? x : (exp(x) - 1.0);",YK=as+`
  return (x < 0.0) ? 0.0 : x;
`,QK=as+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Di="return x;",ZK="return 1.0 / (1.0 + exp(-1.0 * x));",JK="return x;",eX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,tX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nX=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,sX="return 1.0 / (1.0 + exp(-1.0 * x));",Qr=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},rX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length);let t=e.length,n=sn("rc",t),s=ut(t),r=VK(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},aX=ys.whereImpl,iX=1e-7,oX=1e-4,Uc={};function uX(e){return e in Uc||(Uc[e]={}),Uc[e]}var lX=X().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),cX=600;function dX(){return X().global.screen==null?1024:X().global.screen.height*X().global.screen.width*window.devicePixelRatio*cX/1024/1024}var oC=class extends tl{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!X().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Ff)t=e;else{let n=bs(X().getNumber("WEBGL_VERSION"),e);t=new Ff(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=bs(X().getNumber("WEBGL_VERSION"));t=new Ff(n),this.binaryCache=uX(X().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new GK(this.gpgpu),this.numMBBeforeWarning=dX(),this.texData=new Fd(this,ks())}nextDataId(){return oC.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((X().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||X().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:1,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(X().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:1,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(a!=null){let d;o?d=new Qr(i,Di):d=new Gs(i,Di);let p=this.runWebGLProgram(d,[{dataId:e,shape:i,dtype:s}],s),h=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let u=this.activeTimers!=null,c;u&&(c=w.now());let l;if(s==="complex64"){let d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);l=N.mergeRealAndImagArrays(d,p)}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=w.now()-c),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(r!=null){let h;o?h=new Qr(s,Di):h=new Gs(s,Di);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(X().getBool("DEBUG")&&!X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&X().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(a!=="complex64"&&X().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let h=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(h.texture.texture,...Vc(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let l;if(a==="complex64"){let h=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),f=h[0],m=h[1];l=N.mergeRealAndImagArrays(f,m)}else if(u==null)l=this.getValuesFromTexture(e);else{let h=w.sizeFromShape(s);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,h)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){let h=this.gpgpu.gl;fe(h,()=>h.deleteBuffer(u))}let d=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ks().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){let n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:u}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;o?p=new Qr(r,Di):p=new Gs(r,Di);let h=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:i}],i),f=this.readToGPU(h,t);return this.disposeIntermediateTensorInfo(h),f}if(u==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let c=this.decode(e,t.customTexShape),l=ks().makeTensorFromDataId(c.dataId,c.shape,c.dtype),d=this.texData.get(c.dataId);return{tensorRef:l,...d.texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!p1(n))throw X().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=w.sizeFromShape(t);if(X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),p=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Vc(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),h}let a=X().getBool("WEBGL_PACK")&&s===!0,i=a?Qc(t):t,o=a?new Z5(i):new Q5(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),a=w.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(r);i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=lX){return X().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&w.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return aX(e.shape,t)}packedUnaryOp(e,t,n){let s=new Qr(e.shape,t),r=this.compileAndRun(s,[e],n);return ks().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=sC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(X().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Mx,e.dtype);let t=new Gs(e.shape,Mx),n=this.compileAndRun(t,[e]);return ks().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:s}=this.makeTensorInfo(e,t,n);return ks().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){let t=new rX(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new WK(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[ga(e.shape),...ba(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[ga(t),...ba(t)],a=new iC(r,n),i=!0,o=[n],u=this.runWebGLProgram(a,[s],e.dtype,o,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(t!=null){let d=w.sizeFromShape(r),p=t[0]*t[1]*4;w.assert(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Qc(r),o;s?o=new Y5(i):o=new X5(i);let u=!0,c=[t!=null?t:Vc(i)],l=this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,c,u,t);return{dtype:a,shape:r,dataId:l.dataId}}runWebGLProgram(e,t,n,s,r=!1,a){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===0){let g=a!=null?a:Vc(e.outputShape);o.texShape=g.map(b=>b*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),w.sizeFromShape(i.shape)===0)return o.values=w.getTypedArrayFromDType(i.dtype,0),i;let u=[],c=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(g.dataId);if(b.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=X().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!b.isPacked!=!!e.packedInputs)g=b.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),b=this.texData.get(g.dataId);else if(b.isPacked&&!Ju(b.shape,g.shape)){let y=g,v=g.shape;g.shape=b.shape,g=this.packedReshape(g,v),u.push(g),b=this.texData.get(g.dataId),y.shape=v}return{shape:g.shape,texData:b,isUniform:!1}});this.uploadToGPU(i.dataId);let l={shape:i.shape,texData:o,isUniform:!1},d=K5(e,c,l),p=this.getAndSaveBinary(d,()=>q5(this.gpgpu,e,c,l)),h=this.activeTimers!=null,f;h&&(f=this.startTimer()),j5(this.gpgpu,p,c,l,s),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=X().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!X().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&r===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(X().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=H(()=>{if(!X().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=X().getBool("DEBUG");X().set("DEBUG",!1);let t=this.abs(Ce(1e-8)).dataSync()[0];if(X().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?iX:oX}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(a!=null)return;let u=this.activeTimers!=null,c;u&&(c=w.now());let l=t.texShape;if(l==null&&(l=A1(n,o),t.texShape=l),r!=null){let d=Qc(n),p,h=l[1],f=l[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(o||!m)&&([h,f]=Zo(l[0],l[1])),o?p=new eK(d,m):p=new J5(d,m);let g=m?[f,h]:l,b=this.makeTensorInfo(g,s),y=this.texData.get(b.dataId);m?y.usage=2:y.usage=1,y.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),h,f,r);let v=[[f,h]],x=!0,k=this.runWebGLProgram(p,[b],s,v,x),T=this.texData.get(k.dataId);t.texture=T.texture,t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,this.disposeIntermediateTensorInfo(b),this.texData.delete(k.dataId),t.values=null,u&&(this.uploadWaitMs+=w.now()-c)}else{let d=this.acquireTexture(l,i,s,o);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=pX(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}},uC=oC;uC.nextDataId=0;function pX(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var epe="0.0.0";function hX(){X().set("WEBGL_FORCE_F16_TEXTURES",!0)}np.isBrowser()&&sp("webgl",()=>new uC,2);var tpe={forceHalfFloat:hX},lC=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,eo=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=In(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Mp=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,Ql=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=In(r);let a="";if(s)if(r===0||w.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${ut(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let o=sn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${o[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${o[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${o[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${o[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function _n(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var fX={kernelName:La,backendName:"webgl",kernelFunc:_n};function Fr(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=_n({inputs:{x:s},backend:n}),u=_n({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}var mX={kernelName:Md,backendName:"webgl",kernelFunc:Fr},cC="return (a < 0.) ? b * a : a;",dC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function gX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",w.createScalarValue(a,"float32")),o=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ql(dC,r.shape,i.shape):new eo(cC,r.shape,i.shape),u=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),u}var bX={kernelName:Ba,backendName:"webgl",kernelFunc:gX},pC="return (a < 0.) ? b * a : a;",hC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function yX(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ql(hC,s.shape,r.shape):new eo(pC,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var vX={kernelName:Za,backendName:"webgl",kernelFunc:yX},ru="if (isnan(x)) return x;",xX=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,wX=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ke({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:i}=r,o=a,u=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let d=o.texData.get(i.dataId),p=n(d.values,u);return o.makeTensorInfo(i.shape,u,p)}let c=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,l;return c?l=new Qr(i.shape,t):l=new Gs(i.shape,e),o.runWebGLProgram(l,[i],u)}}function Kt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{let{a:u,b:c}=i,l=o;if(s&&u.dtype==="complex64"){let f=l.texData.get(u.dataId),m=l.texData.get(c.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(v=>{let[x,k]=v,T={dataId:x.dataId,dtype:x.dtype,shape:u.shape},C={dataId:k.dataId,dtype:k.dtype,shape:c.shape},R=new eo(e,u.shape,c.shape);return l.runWebGLProgram(R,[T,C],vn(x.dtype,k.dtype))}),y=Fr({inputs:{real:g,imag:b},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(b),y}let d=a||vn(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&r!=null){let f=l.texData.get(u.dataId).values,m=l.texData.get(c.dataId).values,g=u.dtype==="string"?N.fromUint8ToStringArray(f):f,b=u.dtype==="string"?N.fromUint8ToStringArray(m):m,[y,v]=r(u.shape,c.shape,g,b,d),x=l.makeTensorInfo(v,d),k=l.texData.get(x.dataId);return k.values=y,x}let p=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return p?h=new Ql(t,u.shape,c.shape,n):h=new eo(e,u.shape,c.shape),l.runWebGLProgram(h,[u,c],d)}}function Lp(e,t=!1){if(e==="linear")return t?JK:KK;if(e==="relu")return t?tX:YK;if(e==="elu")return t?eX:XK;if(e==="relu6")return t?nX:QK;if(e==="prelu")return t?hC:pC;if(e==="leakyrelu")return t?dC:cC;if(e==="sigmoid")return t?sX:ZK;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var fC=class{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=In(this.outputShape.length);let c=s?e[1]:e[2],l=Math.ceil(c/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${l}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${l}; i++) {
          int batchA = ${y};
          int batchB = ${v};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${g}

        setOutput(result);
      }
    `}},Lx={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Bx=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},Vx="return a * b;";function iv(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=N.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let o=n.texData.get(s.dataId),u=n.texData.get(r.dataId),c=new Bx(Lx.REAL,s.shape,r.shape),l=new Bx(Lx.IMAG,s.shape,r.shape),d=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:s.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=Fr({inputs:{real:p,imag:h},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let o=n.texData.get(s.dataId),u=n.texData.get(r.dataId),[c,l]=kK(s.shape,r.shape,o.values,u.values,a),d=n.makeTensorInfo(l,a),p=n.texData.get(d.dataId);return p.values=c,d}let i;return X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Ql(Vx,s.shape,r.shape):i=new eo(Vx,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}var kX={kernelName:Xa,backendName:"webgl",kernelFunc:iv};function IX(e,t,n){let s=[ga(e.shape),...ba(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[ga(t),...ba(t)],i=new iC(a,s),o=!0,u=[s],c=n.runWebGLProgram(i,[r],e.dtype,u,o);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function he(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=w.sizeFromShape(r.shape),u=w.inferFromImplicitShape(a,o),c=w.sizeFromShape(u);w.assert(o===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let l=i.texData.get(r.dataId);return l.isPacked&&!Ju(r.shape,u)&&!(l.texture!==null&&Ju(l.shape,u))?IX(r,u,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}var SX={kernelName:$o,backendName:"webgl",kernelFunc:he},Wx=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i=Math.floor(n/4)*4,o=n%4,u="sumValue += dot(values, ones);";if(t!=null){let l=1/t;u=`sumValue += dot(values * ${w.isInt(l)?l.toPrecision(2):l}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}},CX=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let c=Math.floor(n/4)*4,l=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${l===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${l===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${l===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function NX(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=N.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function vi(e,t,n,s){let r=NX(e.shape),a=e;for(let i=0;i<r.length;i++){let{inSize:o,windowSize:u,outSize:c}=r[i],l,d;n==="mean"?l=i===0?new Wx({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},o):new Wx({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c}):l=new CX({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},n),d=a,a=s.runWebGLProgram(l,[a],t),d.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(d)}return a}var TX=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=ut(this.rank),r=$X(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function $X(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var AX=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=ut(this.rank),r=aC("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=r[c];let i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${o}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${o}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function Bp(e,t,n){let s=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AX(e.shape,t):new TX(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function EX(e,t,n,s){let r=t,a=e.shape.length,i=w.parseAxisParam(r,e.shape),o=i,u=N.getAxesPermutation(o,a),c=u!=null,l=e;c&&(l=Bp(e,u,s),o=N.getInnerMostAxes(o.length,a)),N.assertAxesAreInnerMostDims("sum",o,a);let[d,p]=N.computeOutAndReduceShapes(l.shape,o),h=d;n&&(h=N.expandShapeToKeepDim(d,i));let f=w.sizeFromShape(p),g=w.sizeFromShape(e.shape)/f,b=he({inputs:{x:l},attrs:{shape:[g,f]},backend:s}),y=tp(e.dtype),v=vi(b,y,"sum",s),x=he({inputs:{x:v},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),c&&s.disposeIntermediateTensorInfo(l),x}function Vp(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return EX(r,a,i,n)}var _X={kernelName:ii,backendName:"webgl",kernelFunc:Vp};function an(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let l=0;l<u.length;l++)u[l]=r.shape[a[l]];let c;if(i.shouldExecuteOnCPU([r])){let d=i.texData.get(r.dataId).values,p=av(d,r.shape,r.dtype,a,u);c=i.makeTensorInfo(u,r.dtype);let h=i.texData.get(c.dataId);h.values=p}else c=Bp(r,a,i);return c}var RX={kernelName:di,backendName:"webgl",kernelFunc:an},mC=1e3;function $d({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let c=e.shape.length,l=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[l-1]:t.shape[l-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),x=Go.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[b,d,h]:[b,h,d],T=s?[y,f,p]:[y,p,f],C=he({inputs:{x:e},backend:r,attrs:{shape:k}}),R=he({inputs:{x:t},backend:r,attrs:{shape:T}}),_=[C,R],P=Math.max(b,y),D=n?C.shape[1]:C.shape[2],F=a!=null,$=i!=null,z=u==="leakyrelu",W=u!=null?Lp(u,!0):null,q=F||$||z||W!=null,K;if((h===1||f===1)&&D>mC&&q===!1){let Q=C,J=R;n&&(Q=an({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),_.push(Q)),s&&(J=an({inputs:{x:R},backend:r,attrs:{perm:[0,2,1]}}),_.push(J));let ne=f!==1,se=f===1,te=Q;ne&&(te=he({inputs:{x:Q},backend:r,attrs:{shape:[P,D,1]}}),_.push(te));let ie=f===1?2:1,ee=J;se&&(ee=he({inputs:{x:J},backend:r,attrs:{shape:[P,1,D]}}),_.push(ee));let ce=iv({inputs:{a:te,b:ee},backend:r});K=Vp({inputs:{x:ce},backend:r,attrs:{axis:ie,keepDims:!0}}),_.push(ce)}else{let Q=vn(e.dtype,t.dtype),J=new fC(k,T,[P,h,f],n,s,F,W,$,z),ne=[C,R];if(a!=null&&ne.push(a),$&&ne.push(i),z){let se=r.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));ne.push(se),_.push(se)}K=r.runWebGLProgram(J,ne,Q)}let j=he({inputs:{x:K},backend:r,attrs:{shape:x}});_.push(K);for(let Q of _)r.disposeIntermediateTensorInfo(Q);return j}function DX(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s;return $d({a:r,b:a,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}var FX={kernelName:sa,backendName:"webgl",kernelFunc:DX},Ux="return abs(x);";function OX(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),i=sC(a.values);return n.makeTensorInfo(s.shape,s.dtype,i)}let r;return X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Qr(s.shape,Ux):r=new Gs(s.shape,Ux),n.runWebGLProgram(r,[s],s.dtype)}var PX={kernelName:so,backendName:"webgl",kernelFunc:OX},zX=as+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,MX=Ke({opSnippet:zX}),LX={kernelName:nl,backendName:"webgl",kernelFunc:MX},BX=as+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,VX=Ke({opSnippet:BX}),WX={kernelName:sl,backendName:"webgl",kernelFunc:VX},Gx="return a + b;",UX=Kt({opSnippet:Gx,packedOpSnippet:Gx,supportsComplex:!0,cpuKernelImpl:sK}),GX={kernelName:Cr,backendName:"webgl",kernelFunc:UX},HX=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},qX=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function ed(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return _n({inputs:{x:s[0]},backend:n});if(s.length>X().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(s.length/2),c=ed({inputs:s.slice(0,u),backend:n}),l=ed({inputs:s.slice(u),backend:n});return ed({inputs:[c,l],backend:n})}let r=s.map(u=>u.dtype).reduce((u,c)=>vn(u,c)),a=s.map(u=>u.shape),o=X().getBool("WEBGL_PACK")?new qX(s[0].shape,a):new HX(s[0].shape,a);return n.runWebGLProgram(o,s,r)}var jX={kernelName:wa,backendName:"webgl",kernelFunc:ed};function KX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),c=u,l=N.getAxesPermutation(c,o),d=r;l!=null&&(d=an({inputs:{x:r},backend:n,attrs:{perm:l}}),c=N.getInnerMostAxes(c.length,o)),N.assertAxesAreInnerMostDims("all",c,o);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(h),m=he({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=vi(m,m.dtype,"all",n),b;if(i){let y=N.expandShapeToKeepDim(p,u);b=he({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),b}var XX={kernelName:rl,backendName:"webgl",kernelFunc:KX};function YX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),c=u,l=N.getAxesPermutation(c,o),d=r;l!=null&&(d=an({inputs:{x:r},backend:n,attrs:{perm:l}}),c=N.getInnerMostAxes(c.length,o)),N.assertAxesAreInnerMostDims("any",c,o);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(h),m=he({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=vi(m,m.dtype,"any",n),b;if(i){let y=N.expandShapeToKeepDim(p,u);b=he({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),b}var QX={kernelName:al,backendName:"webgl",kernelFunc:YX},ZX=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},JX=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,u=ut(o),c=sn("coords",o),l,d;if(a===1){d=o+1;let C=ut(d);l=`
        ${C} sourceLocR = ${C}(${c.join()}, 0);
        ++${c[o-1]};
        ${C} sourceLocG = ${C}(${c.join()}, 0);
        ++${c[o-2]};
        ${C} sourceLocA = ${C}(${c.join()}, 0);
        --${c[o-1]};
        ${C} sourceLocB = ${C}(${c.join()}, 0);
        --${c[o-2]};`}else d=o,l=`
        ${u} sourceLocR = coords;
        ++${c[o-1]};
        ${u} sourceLocG = coords;
        ++${c[o-2]};
        ${u} sourceLocA = coords;
        --${c[o-1]};
        ${u} sourceLocB = coords;
        --${c[o-2]};`;let p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(C=>"int "+C),m=sn("sourceLocR",d-1).concat("inIdx.r"),g=sn("sourceLocG",d-1).concat("inIdx.g"),b=sn("sourceLocB",d-1).concat("inIdx.b"),y=sn("sourceLocA",d-1).concat("inIdx.a"),v=n==="max"?"greaterThan":"lessThan",x=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,T=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};
        ${l}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${x}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function gC(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let i=N.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},u=new ZX(o,n,s==null),c=[t];s!=null&&c.push(s);let l=e.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;let d=gC(e,t,n,l);return e.disposeIntermediateTensorInfo(l),d}function bC(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],i=N.computeOptimalWindowSize(a),o=new JX(r,i,n,s==null),u=s==null?[t]:[t,s],c=e.runWebGLProgram(o,u,"int32");if(c.shape.length===t.shape.length){let l=bC(e,t,n,c);return e.disposeIntermediateTensorInfo(c),l}return c}function yC(e,t,n,s){let r=[n];if(N.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!X().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,u=t;o&&(u=e.unpackTensor(t),a.push(u));let[c,l]=N.computeOutAndReduceShapes(u.shape,r),d=w.sizeFromShape(l),p=he({inputs:{x:u},backend:e,attrs:{shape:[-1,d]}});a.push(p);let h=gC(e,p,s);a.push(h);let f=he({inputs:{x:h},backend:e,attrs:{shape:c}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return bC(e,t,s)}function e8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=N.getAxesPermutation(i,r.shape.length),u=r,c=[];o!=null&&(u=an({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),N.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let l=yC(n,u,i[0],"max");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),l}var t8={kernelName:ka,backendName:"webgl",kernelFunc:e8};function n8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=N.getAxesPermutation(i,r.shape.length),u=r,c=[];o!=null&&(u=an({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),N.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let l=yC(n,u,i[0],"min");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),l}var s8={kernelName:il,backendName:"webgl",kernelFunc:n8},r8=as+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,a8=Ke({opSnippet:r8}),i8={kernelName:ol,backendName:"webgl",kernelFunc:a8},o8=as+"return log(x + sqrt(x * x + 1.0));",u8=Ke({opSnippet:o8}),l8={kernelName:ul,backendName:"webgl",kernelFunc:u8},c8=as+`
  return atan(x);
`,d8=Ke({opSnippet:c8}),p8={kernelName:ll,backendName:"webgl",kernelFunc:d8},h8=xX+`
  return atan(a, b);
`,f8=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+wX+`
  return result;
`,m8=Kt({opSnippet:h8,packedOpSnippet:f8}),g8={kernelName:dl,backendName:"webgl",kernelFunc:m8},b8=as+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,y8=Ke({opSnippet:b8}),v8={kernelName:cl,backendName:"webgl",kernelFunc:y8},el=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(f||(b="-1.0 / 1e-20"),n){let C=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${l};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let y="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let x=Math.floor(a/4)*4,k=a%4,T=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${l};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${x};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${v});
      }
    `}},ov=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let y=t==="avg",v="0.0";if(y||(v="-1.0 / 1e-20"),n){let _=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${u});
        const ivec3 pads = ivec3(${m}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${l}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${_} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let T=Math.floor(a/4)*4,C=a%4,R=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${u});
      const ivec3 pads = ivec3(${m}, ${g}, ${b});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${T};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${R}
            }
          }
          setOutput(${k});
        }
      }
    `}};function x8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Jo(r,"avgPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,c=1;w.assert(N.eitherStridesOrDilationsAreOne(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let l=N.computePool2DInfo(r.shape,a,i,c,o,u);if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))return _n({inputs:{x:r},backend:n});let d=new el(l,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var w8={kernelName:Ia,backendName:"webgl",kernelFunc:x8};function k8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=s,l=[1,1,1],d=N.computePool3DInfo(r.shape,a,i,l,o,u,c),p=new ov(d,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var I8={kernelName:zd,backendName:"webgl",kernelFunc:k8},S8=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${l});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},C8=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function N8(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=s,d=[1,1,1],p=N.computePool3DInfo(i.shape,o,u,d,c,l),h=new C8(p);return n.runWebGLProgram(h,[r],i.dtype)}var T8={kernelName:qm,backendName:"webgl",kernelFunc:N8};function $8(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;Jo([r,a],"avgPoolGrad");let{filterSize:o,strides:u,pad:c}=s,l=N.computePool2DInfo(i.shape,o,u,1,c),d=new S8(l);return n.runWebGLProgram(d,[r],i.dtype)}var A8={kernelName:Hm,backendName:"webgl",kernelFunc:$8};function E8(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return $d({a:r,b:a,transposeA:i,transposeB:o,backend:n})}var _8={kernelName:Sa,backendName:"webgl",kernelFunc:E8},R8=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let i="0.0";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},D8=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},F8=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:i,scale:o}=e;w.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);let c=[s,r,a],l=null;i!=null&&(l=i.shape,c.push(i));let d=null;o!=null&&(d=o.shape,c.push(o));let p=X().getBool("WEBGL_PACK_NORMALIZATION")?new D8(s.shape,r.shape,a.shape,l,d,u):new R8(s.shape,r.shape,a.shape,l,d,u);return t.runWebGLProgram(p,c,c[0].dtype)},O8={kernelName:za,backendName:"webgl",kernelFunc:F8},P8=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ut(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=z8(this.rank),s,r=e.map((a,i)=>`sourceLoc.${Em[i]} = start[${i}] + coords.${Em[i]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},Em=["x","y","z","w","u","v"];function z8(e){if(e===1)return"sourceLoc";if(e<=6)return Em.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var M8=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ut(this.rank),n=sn("coords",this.rank),s=sn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,l)=>`start[${l}]`).join()});`:e.map((c,l)=>`${s[l]} = ${n[l]} + start[${l}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function L8(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=kt.computeFlatOffset(t,w.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),a}function au(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,u]=kt.parseSliceParams(r,a,i);if(kt.assertParamsValid(r,o,u),w.sizeFromShape(u)===0)return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.texData.get(r.dataId),p=AK(d.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,p)}let{isPacked:c}=n.texData.get(r.dataId),l=kt.isSliceContinous(r.shape,o,u);if(c||!l){let d=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new M8(u):new P8(u),p=[o];return n.runWebGLProgram(d,[r],r.dtype,p)}return n.uploadToGPU(r.dataId),L8(r,o,u,n)}var B8={kernelName:Do,backendName:"webgl",kernelFunc:au},V8=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=a.reduce((y,v)=>y*v),u=N.getReshaped(r.shape,a,o),c=N.getPermuted(u.length,a.length),l=N.getReshapedPermuted(r.shape,a,o),d=N.getSliceBeginCoords(i,a.length),p=N.getSliceSize(l,i,a.length),h=[],f=he({inputs:{x:r},backend:n,attrs:{shape:u}}),m=an({inputs:{x:f},backend:n,attrs:{perm:c}}),g=he({inputs:{x:m},backend:n,attrs:{shape:l}}),b=au({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(y=>n.disposeIntermediateTensorInfo(y)),b},W8={kernelName:ro,backendName:"webgl",kernelFunc:V8};function U8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),u=n.readSync(a.dataId),c=nC(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,c)}var G8={kernelName:jm,backendName:"webgl",kernelFunc:U8};function H8(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=N.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var q8={kernelName:Km,backendName:"webgl",kernelFunc:H8},j8="return float(a != b);",vC=Kt({opSnippet:j8,cpuKernelImpl:SK,dtype:"bool"}),K8={kernelName:wo,backendName:"webgl",kernelFunc:vC};function Zl(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return _n({inputs:{x:r.complexTensorInfos.real},backend:n})}var X8={kernelName:jd,backendName:"webgl",kernelFunc:Zl},Y8="return float(int(x));";function Q8(e,t){let n=new Gs(e.shape,Y8),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function _m(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return _n({inputs:{x:r},backend:n});let i=Tt(r.shape),o=_m({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Fr({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),u}if(r.dtype==="complex64"){let i=Zl({inputs:{input:r},backend:n}),o=_m({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=_n({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32")return Q8(r,n);if(a==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),u=vC({inputs:{a:r,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Z8={kernelName:Ca,backendName:"webgl",kernelFunc:_m},Hx="return ceil(x);",J8=Ke({opSnippet:Hx,packedOpSnippet:Hx,cpuKernelImpl:aK}),e7={kernelName:Na,backendName:"webgl",kernelFunc:J8},t7=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},n7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function s7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o;X().getBool("WEBGL_PACK_CLIP")?o=new n7(r.shape):o=new t7(r.shape);let u=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,u)}var r7={kernelName:Nr,backendName:"webgl",kernelFunc:s7},a7=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function qx(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function i7(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new a7(s.shape),i=[qx(s,r.complexTensorInfos.real),qx(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}var o7={kernelName:Ld,backendName:"webgl",kernelFunc:i7},u7=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},l7=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=ut(s),a=sn("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let u=i[t],c=i.slice(-2),l=i.join(),d=`if (${u} < ${o[0]}) {
        return getChannel(
            getT0(${l}), vec2(${c.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];d+=`
        if (${u} < ${o[f]}  && ${u} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${Gc(i,u,m)}),
            vec2(${Gc(c,u,m)}));
        }`}let p=o.length,h=o[o.length-1];d+=`
        return getChannel(
          getT${p}(${Gc(i,u,h)}),
          vec2(${Gc(c,u,h)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function Gc(e,t,n){let s=e.indexOf(t);return e.map((a,i)=>i===s?`${a} - ${n}`:a).join()}function Wp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return _n({inputs:{x:r.complexTensorInfos.imag},backend:n})}var c7={kernelName:Ud,backendName:"webgl",kernelFunc:Wp};function Bi(e,t,n){let s=e[0].dtype;if(s==="complex64"){let l=e.map(m=>Zl({inputs:{input:m},backend:n})),d=e.map(m=>Wp({inputs:{input:m},backend:n})),p=Bi(l,t,n),h=Bi(d,t,n),f=Fr({inputs:{real:p,imag:h},backend:n});return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let l=e.map(b=>{let y=w.sizeFromShape(b.shape.slice(t));return he({inputs:{x:b},backend:n,attrs:{shape:[-1,y]}})}),d=l.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),p=N.computeOutShape(l.map(b=>b.shape),1),h=l[0].shape[0]===1,f=iK(d,p,s,h),m=N.computeOutShape(e.map(b=>b.shape),t),g=n.makeTensorInfo(m,s,f);return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),g}if(e.length>X().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(e.length/2),d=Bi(e.slice(0,l),t,n),p=Bi(e.slice(l),t,n),h=Bi([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}if(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let l=new l7(e.map(d=>d.shape),t);return n.runWebGLProgram(l,e,s)}let{tensors2D:a,outShape:i}=d7(e,t,n),o=new u7(a.map(l=>l.shape)),u=n.runWebGLProgram(o,a,s);a.forEach(l=>n.disposeIntermediateTensorInfo(l));let c=he({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),c}function d7(e,t,n){let s=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>he({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function xC(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=N.computeOutShape(t.map(c=>c.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(c=>w.sizeFromShape(c.shape)>0);if(o.length===1)return _n({inputs:{x:o[0]},backend:n});let u=o.map(c=>c.shape);return N.assertParamsConsistent(u,a),Bi(o,a,n)}var p7={kernelName:ao,backendName:"webgl",kernelFunc:xC},wC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,b=m?2:3,y=m?3:1,v="",x="";n&&(s?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:v=`
          float activation(float x) {
            ${n}
          }
        `,x="result = activation(result);");let k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${o}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${l};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${x}
        setOutput(result);
      }
    `}},h7=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${l}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},f7=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length);let{dataFormat:n}=t,s=ln(),r=n==="channelsLast",a=r?0:1,i=r?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,u="";for(let c=0;c<=1;c++)for(let l=0;l<=1;l++)u+=`
          blockIndex = rc.y + ${l};
          pos = rc.x + ${c};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+l}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+l}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${s.output} = result;
      }
    `}};function kC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=e.shape,c=s.texData.get(e.dataId),l=n.inChannels,d=u[0]*u[1]*u[2],p=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,b=[];if(!((d===1||p===1)&&l>mC)&&c.isPacked&&h&&c.texture!=null&&u[2]%2!==0&&w.arraysEqual(c.shape.slice(-3),u.slice(-3))){let x=u[0]*u[1]*(u[2]+1),k={dataId:e.dataId,shape:[1,x,n.inChannels],dtype:e.dtype},T=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,w.assert(Ju(c.shape,k.shape),()=>`packed reshape ${c.shape} to ${k.shape} isn't free`);let C=he({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(C);let R=$d({a:k,b:C,backend:s,transposeA:f,transposeB:m,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),_=s.texData.get(R.dataId);w.assert(_.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=T,_.shape=n.outShape,g=_n({inputs:{x:R},backend:s}),g.shape=n.outShape,b.push(R)}else{let x=h?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],k=he({inputs:{x:e},backend:s,attrs:{shape:[1,x,n.inChannels]}}),T=he({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),C=$d({a:k,b:T,transposeA:f,transposeB:m,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});g=he({inputs:{x:C},backend:s,attrs:{shape:n.outShape}}),b.push(k),b.push(T),b.push(C)}for(let x of b)s.disposeIntermediateTensorInfo(x);return g}function IC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:p,dataFormat:h}=n,f=h==="channelsLast",m=u*c*l,g=p*d,b=[m,g],y=!0,v=!1,x=[],k=he({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),T=he({inputs:{x:t},backend:s,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});x.push(k),x.push(T);let C=new f7(b,n),R=[k.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],_=s.runWebGLProgram(C,[k],"float32",R),P=he({inputs:{x:_},backend:s,attrs:{shape:[1,b[0],b[1]]}});x.push(_),x.push(P);let D=r!=null,F=a!=null,$=o==="leakyrelu",z=o?Lp(o,!0):null,W=new fC(P.shape,T.shape,[1,g,n.outChannels],y,v,D,z,F,$),q=[P,T];if(r&&q.push(r),F&&q.push(a),$){let J=s.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));q.push(J),x.push(J)}let K=s.runWebGLProgram(W,q,"float32"),j=f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],Q=he({inputs:{x:K},backend:s,attrs:{shape:j}});x.push(K);for(let J of x)s.disposeIntermediateTensorInfo(J);return Q}function m7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=s,d=N.convertConv2DDataFormat(u),p=N.computeConv2DInfo(r.shape,a.shape,i,c,o,l,!1,d),h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=kC({x:r,filter:a,convInfo:p,backend:n});else if(X().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=IC({x:r,filter:a,convInfo:p,backend:n});else{let m=new wC(p);h=n.runWebGLProgram(m,[r,a],"float32")}let f=he({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}var g7={kernelName:Ta,backendName:"webgl",kernelFunc:m7},b7=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},y7=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,c=a?2:3,l=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${l}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},v7=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},x7=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function w7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=s,d=N.convertConv2DDataFormat(u),p=N.computeConv2DInfo(r.shape,l,i,1,o,c,!1,d),h=new b7(p);return n.runWebGLProgram(h,[r,a],"float32")}var k7={kernelName:Xm,backendName:"webgl",kernelFunc:w7};function I7(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=s,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(i,a.shape,o,1,u,l,!1,d),h=new y7(p);return n.runWebGLProgram(h,[r,a],"float32")}var S7={kernelName:$a,backendName:"webgl",kernelFunc:I7};function C7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,c=N.computeConv3DInfo(r.shape,a.shape,i,u,o),l=new h7(c);return n.runWebGLProgram(l,[r,a],"float32")}var N7={kernelName:Bd,backendName:"webgl",kernelFunc:C7};function T7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s,c=N.computeConv3DInfo(r.shape,u,i,1,o),l=new v7(c);return n.runWebGLProgram(l,[r,a],"float32")}var $7={kernelName:Ym,backendName:"webgl",kernelFunc:T7};function A7(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s,c=N.computeConv3DInfo(u,a.shape,o,1,i),l=new x7(c);return n.runWebGLProgram(l,[r,a],"float32")}var E7={kernelName:Qm,backendName:"webgl",kernelFunc:A7},_7=ru+`
  return cos(x);
`,R7=Ke({opSnippet:_7}),D7={kernelName:Aa,backendName:"webgl",kernelFunc:R7},F7=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,O7=Ke({opSnippet:F7}),P7={kernelName:Ea,backendName:"webgl",kernelFunc:O7},z7=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,i,o,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];let p=s==="bilinear"?1:0,[h,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,b]=l>1?[`${(i-1)/(l-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,v,x]=d>1?[`${(o-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${v};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${x};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},M7=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=s,l=new z7(r.shape,a.shape,o,u,c);return n.runWebGLProgram(l,[r,a,i],"float32")},L7={kernelName:oo,backendName:"webgl",kernelFunc:M7},jx=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let s=e.length,r=t?"0.0":`getX(${Kx(s,"coords")})`,a=e[e.length-1],i="",o="";t?(i=n?`end != ${a-1}`:"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ut(s)} coords = getOutputCoords();
        int end = ${Xx(s,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${o};
          ${Xx(s,"coords")} = idx;
          val += getX(${Kx(s,"coords")});
        }
        setOutput(val);
      }
    `}};function Kx(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Xx(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function B7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,u=r.shape.length,c=N.getAxesPermutation([a],u),l=r;c!=null&&(l=an({inputs:{x:r},backend:n,attrs:{perm:c}}));let d=N.getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);let p=l.shape[d],h=_n({inputs:{x:l},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new jx(l.shape,!1,o),g=[[f]],b=h;h=n.runWebGLProgram(m,[h],h.dtype,g),n.disposeIntermediateTensorInfo(b)}if(i){let f=new jx(l.shape,i,o),m=h;h=n.runWebGLProgram(f,[h],h.dtype),n.disposeIntermediateTensorInfo(m)}if(c!=null){let f=N.getUndoAxesPermutation(c),m=an({inputs:{x:h},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),m}return h}var V7={kernelName:io,backendName:"webgl",kernelFunc:B7};function W7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(r.shape.length===1){let u=n.readSync(r.dataId),c=n.readSync(a.dataId),l=nC(u,c,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}else if(r.shape.length===2){let u=n.bufferSync(r),c=n.bufferSync(a),l=rK(u,c,i,o);return n.makeTensorInfo(l.shape,a.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var U7={kernelName:Zm,backendName:"webgl",kernelFunc:W7},G7=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function H7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],c=i==="NHWC"?r.shape[2]:r.shape[3],l=i==="NHWC"?r.shape[3]:r.shape[1],d=u*a,p=c*a,h=l/(a*a),f=i==="NHWC"?[o,d,p,h]:[o,h,d,p],m=new G7(f,a,i);return n.runWebGLProgram(m,[r],r.dtype)}var q7={kernelName:uo,backendName:"webgl",kernelFunc:H7},SC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=In(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,u="",c="";n&&(s?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${l}
        ${c}
        setOutput(result);
      }
    `}},CC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=In(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,d=l,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<l;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let b=g*2;if(p+=`
          xC = xCCorner + ${b*u};
          `,o===1){if(b<l&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<l)){let y=i%2===0?w.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                      xTexelC${b} = getX(batch, xR, xCOffset, d1);
                      xTexelC${b}Ready = 1;
                    }
                    `),p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                  `):y===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<l&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<l&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<l&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<l&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<l&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function j7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=s,l=u;l==null&&(l=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(i,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let d=N.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!0),p;X().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?p=new CC(d):p=new SC(d);let h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",h)}var K7={kernelName:_a,backendName:"webgl",kernelFunc:j7},X7=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Y7=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Q7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=s,d=N.computeConv2DInfo(r.shape,l,i,o,u,c,!0),p=new X7(d);return n.runWebGLProgram(p,[r,a],"float32")}var Z7={kernelName:Jm,backendName:"webgl",kernelFunc:Q7};function J7(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=s,d=N.computeConv2DInfo(l,a.shape,i,o,u,c,!0),p=new Y7(d);return n.runWebGLProgram(p,[r,a],"float32")}var eY={kernelName:eg,backendName:"webgl",kernelFunc:J7},tY=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function nY(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=w.sizeFromShape(s.shape),i=he({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new tY(a),u=n.runWebGLProgram(o,[i],i.dtype),c=he({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}var sY={kernelName:tg,backendName:"webgl",kernelFunc:nY},rY=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${l}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function aY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,c=N.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u),l,d=new rY(c);l=n.runWebGLProgram(d,[r,a],"float32");let p=he({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),p}var iY={kernelName:Vd,backendName:"webgl",kernelFunc:aY};function oY(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(i.length,u,a);let{path:c,steps:l}=N.getEinsumComputePath(o,u),d=l.length,p=null,h=i.length,f=[];for(let m=0;m<d;++m){for(let g of l[m]){let{permutationIndices:b,expandDims:y}=N.getEinsumPermutation(h,u[g]),v;N.isIdentityPermutation(b)?v=a[g]:(v=an({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=he({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),p===null?p=v:(p=iv({inputs:{a:v,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Vp({inputs:{x:p},backend:n,attrs:{axis:c[m]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var uY={kernelName:Wd,backendName:"webgl",kernelFunc:oY},lY="return (x >= 0.0) ? x : (exp(x) - 1.0);",cY=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,dY=Ke({opSnippet:lY,packedOpSnippet:cY}),pY={kernelName:Da,backendName:"webgl",kernelFunc:dY},hY="return (b >= 1.0) ? a : a * (b + 1.0);",fY=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,mY=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ql(fY,s.shape,r.shape):new eo(hY,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},gY={kernelName:ng,backendName:"webgl",kernelFunc:mY},bY=`
  return vec4(equal(a, b));
`,yY="return float(a == b);",vY=Kt({opSnippet:yY,packedOpSnippet:bY,dtype:"bool",cpuKernelImpl:oK}),xY={kernelName:lo,backendName:"webgl",kernelFunc:vY},wY=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,kY=Ke({opSnippet:wY}),IY={kernelName:pl,backendName:"webgl",kernelFunc:kY},SY=ru+`
  return exp(x);
`,CY=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,NC=Ke({opSnippet:SY,packedOpSnippet:CY,cpuKernelImpl:uK,dtype:"float32"}),NY={kernelName:Fa,backendName:"webgl",kernelFunc:NC};function Rm(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice(),u=r;return r<0&&(w.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),o.splice(u,0,1),he({inputs:{x:a},backend:s,attrs:{shape:o}})}var TY={kernelName:co,backendName:"webgl",kernelFunc:Rm},Yx="return exp(x) - 1.0;",$Y=Ke({opSnippet:Yx,packedOpSnippet:Yx,cpuKernelImpl:lK}),AY={kernelName:po,backendName:"webgl",kernelFunc:$Y},Qx=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function TC(e,t,n){let s=n.texData.get(e.dataId),r=w.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],i=r/a,o=he({inputs:{x:e},backend:n,attrs:{shape:[i,a]}}),u=o.shape,c=new Qx("real",u,t),l=new Qx("imag",u,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=Fr({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let m=he({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}function EY(e){let{inputs:t,backend:n}=e,{input:s}=t;return TC(s,!1,n)}var _Y={kernelName:sg,backendName:"webgl",kernelFunc:EY},RY=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Jl(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let i=w.getArrayFromDType(a,w.sizeFromShape(s));return i.fill(r),t.makeTensorInfo(s,a,i)}else{let i=new RY(s,r),o=[[r]];return t.runWebGLProgram(i,[],a,o)}}var DY={kernelName:hl,backendName:"webgl",kernelFunc:Jl},FY=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},OY={kernelName:ho,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new FY(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},Zx="return floor(x);",PY=Ke({opSnippet:Zx,packedOpSnippet:Zx,cpuKernelImpl:cK}),zY={kernelName:Oa,backendName:"webgl",kernelFunc:PY},MY=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,LY=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,BY=Kt({opSnippet:MY,packedOpSnippet:LY,dtype:"int32"}),VY={kernelName:Pa,backendName:"webgl",kernelFunc:BY},WY=class{constructor(e){this.variableNames=["A"];let t=ln(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},UY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=ln(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},GY={kernelName:ad,backendName:"webgl",kernelFunc:HY},Fi;function HY(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[u,c]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=[c,u],d=[c,u,a];(o||i)&&(Fi==null&&(Fi=document.createElement("canvas").getContext("2d")),Fi.canvas.width=u,Fi.canvas.height=c,Fi.drawImage(r,0,0,u,c),r=Fi.canvas);let p=n.makeTensorInfo(l,"int32");n.texData.get(p.dataId).usage=2,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);let h=X().getBool("WEBGL_PACK")?new UY(d):new WY(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}function qY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=N.convertConv2DDataFormat(l),g=N.computeConv2DInfo(r.shape,a.shape,u,d,c,p,!1,m),b,y=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=kC({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else if(X().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)b=IC({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else{let x=i!=null,k=o!=null,T=h==="leakyrelu",C=h?Lp(h,!1):null,R=new wC(g,x,C,k,T),_=[r,a];if(i&&_.push(i),o&&_.push(o),T){let P=n.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));_.push(P),y.push(P)}b=n.runWebGLProgram(R,_,"float32")}let v=he({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var jY={kernelName:ra,backendName:"webgl",kernelFunc:qY};function KY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=s,f=[],m=l;m==null&&(m=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);let g=N.computeConv2DInfo(r.shape,a.shape,u,m,c,d,!0),b=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=p?Lp(p,b):null,v=[r,a],x=i!=null,k=o!=null,T=p==="leakyrelu";if(x&&v.push(i),k&&v.push(o),T){let P=n.makeTensorInfo([],"float32",w.createScalarValue(h,"float32"));v.push(P),f.push(P)}let C;b?C=new CC(g,x,y,k,T):C=new SC(g,x,y,k,T);let R=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],_=n.runWebGLProgram(C,v,"float32",R);return f.forEach(P=>n.disposeIntermediateTensorInfo(P)),_}var XY={kernelName:aa,backendName:"webgl",kernelFunc:KY},YY=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=ut(t.length),r=ut(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function QY(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=w.sizeFromShape(s.shape),[u,c,l,d]=N.prepareAndValidate(s,r),p=he({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),h=he({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/l,l]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let b=n.readSync(r.dataId),y=n.bufferSync(s),v=dK(b,y,s.dtype,c,i,l,d,s.shape,o);return n.makeTensorInfo(u,s.dtype,v.values)}let f=new YY(i,d,[c,l]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=he({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var ZY={kernelName:mo,backendName:"webgl",kernelFunc:QY},JY=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ut(this.rank),s=e9(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}};function e9(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}function $C(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0];if(X().get("DEBUG")){let y=n.readSync(a.dataId),v=r.shape[u];for(let x=0;x<y.length;++x){let k=y[x];w.assert(k<=v-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${v-1}]`)}}let c=N.segment_util.collectGatherOpShapeInfo(r,a,u,o),l=w.sizeFromShape(a.shape),d=[],p=he({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=he({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(p),d.push(h);let f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let y=n.bufferSync(h),v=n.bufferSync(p),x=pK(v,y,f);return d.forEach(k=>n.disposeIntermediateTensorInfo(k)),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}let m=new JY(p.shape,f),g=n.runWebGLProgram(m,[p,h],p.dtype);d.push(g);let b=he({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(y=>n.disposeIntermediateTensorInfo(y)),b}var t9={kernelName:fo,backendName:"webgl",kernelFunc:$C},n9="return float(a > b);",s9=`
  return vec4(greaterThan(a, b));
`,r9=Kt({opSnippet:n9,packedOpSnippet:s9,cpuKernelImpl:hK,dtype:"bool"}),a9={kernelName:go,backendName:"webgl",kernelFunc:r9},i9="return float(a >= b);",o9=`
  return vec4(greaterThanEqual(a, b));
`,u9=Kt({opSnippet:i9,packedOpSnippet:o9,dtype:"bool",cpuKernelImpl:fK}),l9={kernelName:Ma,backendName:"webgl",kernelFunc:u9};function c9(e){let{inputs:t,backend:n}=e,{input:s}=t;return TC(s,!0,n)}var d9={kernelName:rg,backendName:"webgl",kernelFunc:c9},p9="return float(!isnan(x) && !isinf(x));",h9=Ke({opSnippet:p9,dtype:"bool"}),f9={kernelName:fl,backendName:"webgl",kernelFunc:h9},m9="return float(isinf(x));",g9=Ke({opSnippet:m9,dtype:"bool"}),b9={kernelName:ml,backendName:"webgl",kernelFunc:g9},y9="return float(isnan(x));",v9=Ke({opSnippet:y9,dtype:"bool"}),x9={kernelName:gl,backendName:"webgl",kernelFunc:v9},w9="return float(a < b);",k9=`
  return vec4(lessThan(a, b));
`,I9=Kt({opSnippet:w9,packedOpSnippet:k9,cpuKernelImpl:mK,dtype:"bool"}),S9={kernelName:bo,backendName:"webgl",kernelFunc:I9},C9="return float(a <= b);",N9=`
  return vec4(lessThanEqual(a, b));
`,T9=Kt({opSnippet:C9,packedOpSnippet:N9,cpuKernelImpl:gK,dtype:"bool"}),$9={kernelName:yo,backendName:"webgl",kernelFunc:T9};function A9(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=bK(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}var E9={kernelName:ag,backendName:"webgl",kernelFunc:A9},_9=ru+`
  return x < 0.0 ? 0./0. : log(x);
`,R9=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,D9=Ke({opSnippet:_9,packedOpSnippet:R9,cpuKernelImpl:yK}),F9={kernelName:Va,backendName:"webgl",kernelFunc:D9},O9=ru+`
  return log(1.0 + x);
`,P9=Ke({opSnippet:O9}),z9={kernelName:bl,backendName:"webgl",kernelFunc:P9},M9="return float(a >= 1.0 && b >= 1.0);",L9=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,B9=Kt({opSnippet:M9,packedOpSnippet:L9,dtype:"bool"}),V9={kernelName:vo,backendName:"webgl",kernelFunc:B9},W9="return float(!(x >= 1.0));",U9=Ke({opSnippet:W9}),G9={kernelName:yl,backendName:"webgl",kernelFunc:U9},H9="return float(a >= 1.0 || b >= 1.0);",q9=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,j9=Kt({opSnippet:H9,packedOpSnippet:q9,dtype:"bool"}),K9={kernelName:Gd,backendName:"webgl",kernelFunc:j9},X9=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${n}) + float(${s}) * sum`;r===.5?o=`inversesqrt(${u})`:r===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},Y9=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${n}) + float(${s}) * sum`;r===.5?o=`inversesqrt(${u})`:r===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},Q9=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s,c=X().getBool("WEBGL_PACK_NORMALIZATION")?new Y9(r.shape,a,i,o,u):new X9(r.shape,a,i,o,u);return n.runWebGLProgram(c,[r],r.dtype)},Z9={kernelName:Hd,backendName:"webgl",kernelFunc:Q9},J9=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},eQ=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=s,d=new J9(r.shape,o,u,c,l);return n.runWebGLProgram(d,[r,a,i],r.dtype)},tQ={kernelName:ig,backendName:"webgl",kernelFunc:eQ};function nQ(e,t,n,s){let r=w.sizeFromShape(t),i=w.sizeFromShape(e.shape)/r,o=he({inputs:{x:e},attrs:{shape:[i,r]},backend:s}),u=vi(o,e.dtype,"max",s),c=he({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(u),c}function AC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),c=u,l=N.getAxesPermutation(c,o),d=l!=null,p=n.shouldExecuteOnCPU([r]),h=r;if(d){if(p){let v=n.texData.get(h.dataId).values,x=new Array(o);for(let C=0;C<x.length;C++)x[C]=r.shape[l[C]];let k=av(v,r.shape,r.dtype,l,x);h=n.makeTensorInfo(x,r.dtype);let T=n.texData.get(h.dataId);T.values=k}else h=Bp(r,l,n);c=N.getInnerMostAxes(c.length,o)}N.assertAxesAreInnerMostDims("max",c,o);let[f,m]=N.computeOutAndReduceShapes(h.shape,c),g=f;i&&(g=N.expandShapeToKeepDim(f,u));let b;if(p){let v=n.texData.get(h.dataId).values,x=vK(v,w.sizeFromShape(m),g,r.dtype);b=n.makeTensorInfo(g,r.dtype);let k=n.texData.get(b.dataId);k.values=x}else b=nQ(h,m,g,n);return d&&n.disposeIntermediateTensorInfo(h),b}var sQ={kernelName:Wa,backendName:"webgl",kernelFunc:AC},rQ=lC+`
  return max(a, b);
`,aQ=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Mp+`
  return result;
`,iQ=Kt({opSnippet:rQ,packedOpSnippet:aQ,cpuKernelImpl:xK}),oQ={kernelName:Ua,backendName:"webgl",kernelFunc:iQ};function uQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Jo(r,"maxPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,c=1;w.assert(N.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let l=N.computePool2DInfo(r.shape,a,i,c,o,u);if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))return _n({inputs:{x:r},backend:n});let d=new el(l,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var lQ={kernelName:Ga,backendName:"webgl",kernelFunc:uQ};function cQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:c}=s,l=[1,1,1],d=N.computePool3DInfo(r.shape,a,i,l,o,c,u),p=new ov(d,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var dQ={kernelName:qd,backendName:"webgl",kernelFunc:cQ},pQ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,u=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},hQ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=o-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,h=o*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function fQ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=s,d=[1,1,1],p=N.computePool3DInfo(i.shape,o,u,d,c,l),h=new ov(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new hQ(p),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}var mQ={kernelName:ug,backendName:"webgl",kernelFunc:fQ};function gQ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;Jo([a,i],"maxPoolGrad");let{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s,p=N.computePool2DInfo(o.shape,u,c,1,l,d),h=!0,f=new el(p,"max",h),m=n.runWebGLProgram(f,[o],o.dtype),g=new pQ(p),b=n.runWebGLProgram(g,[r,m],o.dtype);return n.disposeIntermediateTensorInfo(m),b}var bQ={kernelName:og,backendName:"webgl",kernelFunc:gQ};function yQ(e,t,n,s){let r=new el(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new el(n,"max",!0,!0,t);let i=s.runWebGLProgram(r,[e],"float32");return[a,i]}var vQ={kernelName:lg,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;w.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let c=[1,1];w.assert(N.eitherStridesOrDilationsAreOne(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let l=N.computePool2DInfo(s.shape,r,a,c,i),[d,p]=yQ(s,o,l,u);return[d,p]}};function xQ(e,t,n,s){let r=w.sizeFromShape(t),i=w.sizeFromShape(e.shape)/r,o=he({inputs:{x:e},attrs:{shape:[i,r]},backend:s}),u=vi(o,"float32","mean",s),c=he({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(u),c}var wQ={kernelName:Ha,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,u=w.parseAxisParam(a,s.shape),c=u,l=N.getAxesPermutation(c,o),d=l!=null,p=i.shouldExecuteOnCPU([s]),h=[],f=s;if(d){if(p){let x=i.texData.get(f.dataId).values,k=new Array(o);for(let R=0;R<k.length;R++)k[R]=s.shape[l[R]];let T=av(x,s.shape,s.dtype,l,k);f=i.makeTensorInfo(k,s.dtype);let C=i.texData.get(f.dataId);C.values=T}else f=Bp(s,l,i);h.push(f),c=N.getInnerMostAxes(c.length,o)}N.assertAxesAreInnerMostDims("sum",c,o);let[m,g]=N.computeOutAndReduceShapes(f.shape,c),b=m;r&&(b=N.expandShapeToKeepDim(m,u));let y=xQ(f,g,b,i);for(let v of h)i.disposeIntermediateTensorInfo(v);return y}};function kQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),c=u,l=N.getAxesPermutation(c,o),d=r;l!=null&&(d=an({inputs:{x:r},backend:n,attrs:{perm:l}}),c=N.getInnerMostAxes(c.length,r.shape.length)),N.assertAxesAreInnerMostDims("min",c,o);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(h),m=he({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=vi(m,m.dtype,"min",n),b;if(i){let y=N.expandShapeToKeepDim(p,u);b=he({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),b}var IQ={kernelName:qa,backendName:"webgl",kernelFunc:kQ},SQ=lC+`
  return min(a, b);
`,CQ=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Mp+`
  return result;
`,NQ=Kt({opSnippet:SQ,packedOpSnippet:CQ,cpuKernelImpl:wK}),TQ={kernelName:ja,backendName:"webgl",kernelFunc:NQ},$Q=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,l)=>c[0]+e[l]+c[1]);let s=e.length,r=ut(s),a=t.map(c=>c[0]).join(","),i=t.map((c,l)=>c[0]+e[l]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},AQ=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=ut(s),a=t.map(h=>h[0]).join(","),i=t.map((h,f)=>h[0]+e[f]).join(","),o=sn("rc",s),u=sn("source",s),c=`${o[s-1]} < ${this.outputShape[s-1]}`,l=s===1?"source":`vec2(${u.slice(-2).join()})`,d=n==="reflect"?0:1,p="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${o[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${o[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
        rc = outputLoc;
        ${o[s-2]} += 1;
        if(${o[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${u.join()}), ${l});
          ${o[s-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${u.join()}), ${l});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},EQ=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,i=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AQ(s.shape,r,a):new $Q(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)},_Q={kernelName:Ka,backendName:"webgl",kernelFunc:EQ},RQ=`if (b == 0.0) return NAN;
  return mod(a, b);`,DQ=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Mp+`
  return result;
`,FQ=Kt({opSnippet:RQ,packedOpSnippet:DQ}),OQ={kernelName:vl,backendName:"webgl",kernelFunc:FQ},PQ=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},zQ=`
if (a == b) {
  return 1.0;
};
return a / b;`,MQ=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,EC=Kt({opSnippet:zQ,packedOpSnippet:MQ,checkOutOfBounds:!0}),LQ={kernelName:Ra,backendName:"webgl",kernelFunc:EC},Jx="return a - b;",_C=Kt({opSnippet:Jx,packedOpSnippet:Jx,supportsComplex:!0,cpuKernelImpl:zK}),BQ={kernelName:li,backendName:"webgl",kernelFunc:_C};function RC(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=w.parseAxisParam([a],r.shape),o=AC({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=N.expandShapeToKeepDim(o.shape,i),c=he({inputs:{x:o},backend:n,attrs:{shape:u}}),l=_C({inputs:{a:r,b:c},backend:n}),d=NC({inputs:{x:l},backend:n}),p=Vp({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),h=he({inputs:{x:p},backend:n,attrs:{shape:u}}),f=EC({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var VQ={kernelName:oi,backendName:"webgl",kernelFunc:RC};function WQ(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,u=o?r:RC({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new PQ(c,l,a),p=[[i]],h=n.runWebGLProgram(d,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),h}var UQ={kernelName:cg,backendName:"webgl",kernelFunc:WQ},GQ=as+`
  return -x;
`,HQ=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function qQ(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[i,o]=IK(a.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}let r;return X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Qr(s.shape,HQ):r=new Gs(s.shape,GQ),n.runWebGLProgram(r,[s],s.dtype)}var jQ={kernelName:xo,backendName:"webgl",kernelFunc:qQ},KQ=ys.nonMaxSuppressionV3Impl;function XQ(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s,c=n.readSync(r.dataId),l=n.readSync(a.dataId),{selectedIndices:d}=KQ(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var YQ={kernelName:ko,backendName:"webgl",kernelFunc:XQ},QQ=ys.nonMaxSuppressionV4Impl;function ZQ(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=s,l=n.readSync(r.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:h}=QQ(l,d,i,o,u,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var JQ={kernelName:xl,backendName:"webgl",kernelFunc:ZQ},eZ=ys.nonMaxSuppressionV5Impl;function tZ(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=s,l=n.readSync(r.dataId),d=n.readSync(a.dataId),p=i,h=o,f=u,m=c,{selectedIndices:g,selectedScores:b}=eZ(l,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var nZ={kernelName:Io,backendName:"webgl",kernelFunc:tZ},sZ=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},rZ=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,u=w.sizeFromShape(r.shape),c=new sZ(u,a,i,o),l=he({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[l],r.dtype);n.disposeIntermediateTensorInfo(l);let p=[...r.shape,a],h=he({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),h},aZ={kernelName:Co,backendName:"webgl",kernelFunc:rZ};function Ad(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Zl({inputs:{input:s},backend:n}),a=Ad({inputs:{x:r},backend:n}),i=Wp({inputs:{input:s},backend:n}),o=Ad({inputs:{x:i},backend:n}),u=Fr({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return Jl({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var iZ={kernelName:Wo,backendName:"webgl",kernelFunc:Ad};function DC(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Zl({inputs:{input:s},backend:n}),a=DC({inputs:{x:r},backend:n}),i=Wp({inputs:{input:s},backend:n}),o=Ad({inputs:{x:i},backend:n}),u=Fr({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return Jl({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var oZ={kernelName:So,backendName:"webgl",kernelFunc:DC};function uZ(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Rm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(l=>{w.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let d=Rm({inputs:{input:l},backend:n,attrs:{dim:r}});return o.push(d),d}),c=xC({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(l=>n.disposeIntermediateTensorInfo(l)),c}var lZ={kernelName:No,backendName:"webgl",kernelFunc:uZ},cZ=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let s=e.length,r=ut(s),a=t.map(u=>u[0]).join(","),i=t.map((u,c)=>u[0]+e[c]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},dZ=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=ut(s),a=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=sn("rc",s),u=sn("source",s),c=`${o[s-1]} < ${this.outputShape[s-1]}`,l=s===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${o[s-2]} += 1;
       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${o[s-1]} += 1;
         if(${c}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${d[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${u.join()}), ${l});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},FC=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(w.sizeFromShape(r.shape)===0){let c=a.map((l,d)=>l[0]+r.shape[d]+l[1]);return Jl({backend:n,attrs:{shape:c,value:i,dtype:r.dtype}})}let o=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dZ(r.shape,a,i):new cZ(r.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[r],r.dtype,u)},pZ={kernelName:Ya,backendName:"webgl",kernelFunc:FC},hZ=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,fZ=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Mp+`
  return result;
`,mZ=Kt({opSnippet:hZ,packedOpSnippet:fZ}),gZ={kernelName:Qa,backendName:"webgl",kernelFunc:mZ};function bZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=[],c=w.parseAxisParam(a,r.shape),l=c,d=N.getAxesPermutation(l,o),p=r;d!=null&&(p=an({inputs:{x:r},backend:n,attrs:{perm:d}}),l=N.getInnerMostAxes(l.length,o),u.push(p)),N.assertAxesAreInnerMostDims("prod",l,o);let h;if(n.shouldExecuteOnCPU([p])){let f=n.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:b}=CK(p.shape,p.dtype,f,l);h=n.makeTensorInfo(g,b,m)}else{let[f,m]=N.computeOutAndReduceShapes(p.shape,l),g=w.sizeFromShape(m),b=he({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),y=tp(r.dtype),v=vi(b,y,"prod",n);h=he({inputs:{x:v},backend:n,attrs:{shape:f}}),u.push(b),u.push(v)}if(i){u.push(h);let f=N.expandShapeToKeepDim(h.shape,c);h=he({inputs:{x:h},backend:n,attrs:{shape:f}})}return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var yZ={kernelName:To,backendName:"webgl",kernelFunc:bZ},OC=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=NK(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},vZ={kernelName:wl,backendName:"webgl",kernelFunc:OC},xZ="return 1.0 / x;",wZ=Ke({opSnippet:xZ}),kZ={kernelName:kl,backendName:"webgl",kernelFunc:wZ},IZ=as+`
  return (x < 0.0) ? 0.0 : x;
`,SZ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CZ=Ke({opSnippet:IZ,packedOpSnippet:SZ}),NZ={kernelName:Ja,backendName:"webgl",kernelFunc:CZ},TZ=as+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,$Z=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,AZ=Ke({opSnippet:TZ,packedOpSnippet:$Z}),EZ={kernelName:ti,backendName:"webgl",kernelFunc:AZ},_Z=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let c=[s&&t>1?i-1:i,s&&n>1?o-1:o],l=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/l[0]},
          ${c[1]/l[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},RZ=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let c=[s&&t>1?i-1:i,s&&n>1?o-1:o],l=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/l[0]},
          ${c[1]/l[1]},
          ${c[1]/l[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function DZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,c]=o,l=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new RZ(r.shape,u,c,a,i):new _Z(r.shape,u,c,a,i);return n.runWebGLProgram(l,[r],"float32")}var FZ={kernelName:ei,backendName:"webgl",kernelFunc:DZ},OZ=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,p=1/l,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${l});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function PZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new OZ(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}var zZ={kernelName:pg,backendName:"webgl",kernelFunc:PZ},MZ=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let c=[s&&t>1?i-1:i,s&&n>1?o-1:o],l=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/l[0]},
          ${c[1]/l[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},LZ=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let c=[s&&t>1?i-1:i,s&&n>1?o-1:o],l=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/l[0]},
          ${c[1]/l[1]},
          ${c[1]/l[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function BZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,c]=o,l=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new LZ(r.shape,u,c,a,i):new MZ(r.shape,u,c,a,i);return n.runWebGLProgram(l,[r],r.dtype)}var VZ={kernelName:Il,backendName:"webgl",kernelFunc:BZ},WZ=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,p=1/l,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${l});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function UZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new WZ(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}var GZ={kernelName:dg,backendName:"webgl",kernelFunc:UZ},HZ=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,o)=>s(o)).join(","),a=ut(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},qZ=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=sn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ut(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(s.slice())};
          if(${r}){
            result.g = ${u(s.slice())};
          }
          if(${a}) {
            result.b = ${c(s.slice())};
            if(${r}) {
              result.a = ${l(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(h){return d(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",d(h)}function c(h){return h[n-2]="("+h[n-2]+" + 1)",d(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",d(h)}function d(h){let f=e.map((b,y)=>p(y,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function jZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=w.parseAxisParam(a,r.shape);if(i===0)return _n({inputs:{x:r},backend:n});let u=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qZ(r.shape,o):new HZ(r.shape,o);return n.runWebGLProgram(u,[r],r.dtype)}var KZ={kernelName:Ao,backendName:"webgl",kernelFunc:jZ},XZ=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},YZ={kernelName:Uo,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new XZ(s.shape,a),[c,l]=N.getImageCenter(i,s.shape[1],s.shape[2]),d=[[c,l,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(u,[s],s.dtype,d)}},QZ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,ZZ=Ke({opSnippet:QZ}),JZ={kernelName:Eo,backendName:"webgl",kernelFunc:ZZ},eJ="return inversesqrt(x);",tJ=Ke({opSnippet:eJ,cpuKernelImpl:TK}),nJ={kernelName:ni,backendName:"webgl",kernelFunc:tJ},PC=class{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let o=ut(r.length),u=ut(a.length),c="";n===1?c="i":n===2&&(c="i, j");let l=`getIndices(${c})`,d="";s===1?d="i":s===2&&(d="i, coords[1]");let p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${l});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function sJ(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=N.calculateShapes(a,r,i),p=[d/c,c];if(d===0)return n.makeTensorInfo(i,r.dtype);let h=he({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=he({inputs:{x:a},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new PC(u,o,h.shape.length,f.shape.length,l,p),b=n.runWebGLProgram(g,[f,h,m],f.dtype),y=he({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}var rJ={kernelName:_o,backendName:"webgl",kernelFunc:sJ},aJ=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],u=[];for(let c=0;c<t.length;c++)u.push(`${i[c]}`),c<e&&o.push(`${i[c]}`);s=o.join(),r=u.join()}let a=ut(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function iJ(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new aJ(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],vn(r.dtype,a.dtype))}var oJ={kernelName:Ro,backendName:"webgl",kernelFunc:iJ},uJ=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,lJ=Ke({opSnippet:uJ}),cJ={kernelName:Sl,backendName:"webgl",kernelFunc:lJ},dJ=ru+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,pJ=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hJ=Ke({opSnippet:dJ,packedOpSnippet:pJ,cpuKernelImpl:$K}),fJ={kernelName:ri,backendName:"webgl",kernelFunc:hJ},mJ=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,gJ=Ke({opSnippet:mJ}),bJ={kernelName:Cl,backendName:"webgl",kernelFunc:gJ},yJ=ru+`
  return sin(x);
`,vJ=Ke({opSnippet:yJ}),xJ={kernelName:si,backendName:"webgl",kernelFunc:vJ},wJ=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,kJ=Ke({opSnippet:wJ}),IJ={kernelName:Fo,backendName:"webgl",kernelFunc:kJ},SJ=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,CJ=Ke({opSnippet:SJ}),NJ={kernelName:Nl,backendName:"webgl",kernelFunc:CJ},TJ=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=a.reduce((b,y)=>b*y),u=[[0,0]];u.push(...i);for(let b=1+a.length;b<r.shape.length;++b)u.push([0,0]);let c=[],l=FC({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),d=N.getReshaped(l.shape,a,o,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(l.shape,a,o,!1),f=he({inputs:{x:l},backend:n,attrs:{shape:d}}),m=an({inputs:{x:f},backend:n,attrs:{perm:p}}),g=he({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(l),c.push(f),c.push(m),c.forEach(b=>n.disposeIntermediateTensorInfo(b)),g},$J={kernelName:Oo,backendName:"webgl",kernelFunc:TJ};function AJ(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(s.dataId),u=n.readSync(r.dataId),c=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[d,p,h,f,m]=EK(o,s.shape,s.dtype,u,r.dtype,c,l);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var EJ={kernelName:Kd,backendName:"webgl",kernelFunc:AJ};function _J(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),u=Array.from(n.readSync(a.dataId)),[c,l,d]=_K(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(l,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var RJ={kernelName:Tl,backendName:"webgl",kernelFunc:_J};function DJ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[c,l]=rC(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(l,s.dtype,c)}var FJ={kernelName:Xd,backendName:"webgl",kernelFunc:DJ};function OJ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[c,l]=rC(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(l,s.dtype,c)}var PJ={kernelName:Yd,backendName:"webgl",kernelFunc:OJ};function zJ(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:c,strides:l,outputSize:d}=N.calculateShapes(a,r,o),p=!1,h=new PC(c,u,r.shape.length,a.shape.length,l,[d,1],p),f=n.runWebGLProgram(h,[a,r,i],a.dtype),m=he({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}var MJ={kernelName:Qd,backendName:"webgl",kernelFunc:zJ};function LJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=N.prepareSplitSize(r,a,o),c=r.shape.length,l=new Array(c).fill(0),d=r.shape.slice();return u.map(p=>{let h=[...d];h[o]=p;let f=au({inputs:{x:r},backend:n,attrs:{begin:l,size:h}});return l[o]+=p,f})}var BJ={kernelName:Po,backendName:"webgl",kernelFunc:LJ},ew="return sqrt(x);",VJ=Ke({opSnippet:ew,packedOpSnippet:ew,cpuKernelImpl:RK}),WJ={kernelName:ai,backendName:"webgl",kernelFunc:VJ},UJ="return x * x;",GJ=Ke({opSnippet:UJ}),HJ={kernelName:$l,backendName:"webgl",kernelFunc:GJ},tw="return (a - b) * (a - b);",qJ=Kt({opSnippet:tw,packedOpSnippet:tw}),jJ={kernelName:ui,backendName:"webgl",kernelFunc:qJ};function KJ({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=as+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Gs(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var XJ={kernelName:pi,backendName:"webgl",kernelFunc:KJ},YJ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=ut(n.length),a=ut(n.length),i="";if(s===1)i="coords * strides + begin";else{let o=0;i=n.map((u,c)=>(o++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${o-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function QJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=kt.sliceInfo(r.shape,a,i,o,u,c,l,d,p),k;if(m)k=he({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=kt.computeOutShape(y,v,x),R=au({inputs:{x:r},backend:n,attrs:{begin:y,size:C}});k=he({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(R)}else if(n.shouldExecuteOnCPU([r])){let R=n.readSync(r.dataId),_=_e(r.shape,r.dtype,R),P=DK(h,_,x,y);k=n.makeTensorInfo(f,r.dtype,P.values)}else{let R=new YJ(y,x,h);k=n.runWebGLProgram(R,[r],r.dtype)}let T=he({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),T}var ZJ={kernelName:zo,backendName:"webgl",kernelFunc:QJ};function JJ(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:d}=t,p=n.readSync(l.dataId),h=n.readSync(d.dataId),[f,m]=FK(p,h,r,a,i,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var eee={kernelName:Zd,backendName:"webgl",kernelFunc:JJ};function tee(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[c,l,d]=OK(o,u,r),p=l.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var nee={kernelName:hg,backendName:"webgl",kernelFunc:tee};function see(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(a.dataId),o=PK(i,r);return n.makeTensorInfo(a.shape,"int32",o)}var ree={kernelName:fg,backendName:"webgl",kernelFunc:see},aee="return tan(x);",iee=Ke({opSnippet:aee}),oee={kernelName:Mo,backendName:"webgl",kernelFunc:iee},uee=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,lee=Ke({opSnippet:uee}),cee={kernelName:ci,backendName:"webgl",kernelFunc:lee},dee=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=ut(this.rank),r=pee(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function pee(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function zC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let u=n.readSync(r.dataId),c=r.dtype==="string"?u.map(p=>w.decodeString(p)):u,l=_e(r.shape,r.dtype,c),d=MK(l,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let i=new dee(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}var hee={kernelName:Tr,backendName:"webgl",kernelFunc:zC},fee=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},mee=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Ur(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function nw(e){let t=1;for(;t<e;)t*=2;return t}function gee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=X().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=X().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,l=c[c.length-1];if(n.shouldExecuteOnCPU([r])||l<o||a>u){let P=n.readSync(r.dataId),[D,F]=LK(P,c,r.dtype,a,i);return[n.makeTensorInfo(D.shape,D.dtype,D.values),n.makeTensorInfo(F.shape,F.dtype,F.values)]}if(a===0)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(l===1)return[r,Jl({attrs:{shape:c,dtype:"int32",value:0},backend:n})];let d=n.texData.get(r.dataId),p=d!==null&&d.isPacked,h=p?n.unpackTensor(r):r,m=w.sizeFromShape(c)/l,g=he({inputs:{x:h},attrs:{shape:[m,l]},backend:n});p&&Ur(n,h);let b=nw(a),y=nw(l),v=null,x=()=>v===null?[g,g]:[g,v],k=(P,D,F)=>{let $=x(),z=new fee(F),q=[[l],[v===null?1:0],[Number.NEGATIVE_INFINITY],[P],[D]],K=v;v=n.runWebGLProgram(z,$,"int32",q),Ur(n,K)};for(let P=1;P<b;P*=2){let D=P*2;for(let F=P;F>=1;F/=2)k(D,F,[m,y])}for(let P=y;P>b;P/=2){let D=x(),F=new mee([m,P/2]),z=[[l],[v===null?1:0],[b]],W=v;v=n.runWebGLProgram(F,D,"int32",z),Ur(n,W);let q=b/2,K=q*2;for(let j=q;j>=1;j/=2)k(K,j,v.shape)}let T=v;v=au({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,a]}}),Ur(n,T);let C=$C({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});Ur(n,g);let R=c.slice(0,-1);R.push(a),T=v,v=he({inputs:{x:v},attrs:{shape:R},backend:n}),Ur(n,T);let _=C;return C=he({inputs:{x:C},attrs:{shape:R},backend:n}),Ur(n,_),[C,v]}var bee={kernelName:Lo,backendName:"webgl",kernelFunc:gee},yee=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let i=n==="nearest"?1:2,o;switch(s){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function vee(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=s,[l,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[l,f,m,h],b=new yee(d,p,i,o,u,g);return n.runWebGLProgram(b,[r,a],"float32")}var xee={kernelName:Bo,backendName:"webgl",kernelFunc:vee};function wee(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Jo(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=s.readSync(a.dataId),{outputValues:o,outputShape:u,indices:c}=BK(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([c.length],"int32",c)]}var kee={kernelName:mg,backendName:"webgl",kernelFunc:wee};function Iee(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r,o=i.shape.length,u=r.shape[a],c=new Array(o-1),l=0;for(let m=0;m<o;m++)m!==a&&(c[l++]=i.shape[m]);let d=[],p=new Array(o).fill(0),h=i.shape.slice();h[a]=1;let f=new Array(u);for(let m=0;m<f.length;m++){p[a]=m;let g=au({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),b=he({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=b,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var See={kernelName:Vo,backendName:"webgl",kernelFunc:Iee},Cee=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];let o="0.0",u="sumValue",c=Math.floor(n/4)*4,l=n%4,d=`
        sumValue += dot(values, segFilter);
    `,p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${l===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function Nee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,u=[],c=0,l=N.getAxesPermutation([c],o),d=r;l!=null&&(d=an({inputs:{x:r},backend:n,attrs:{perm:l}}),u.push(d),c=N.getInnerMostAxes(1,o)[0]);let p=N.segment_util.computeOutShape(d.shape,c,i),h=w.sizeFromShape([d.shape[c]]),f=he({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});u.push(f);let m=tp(r.dtype),g=(x,k,T,C,R)=>{let _=x.shape[0],P=x.shape[1],D=N.segment_util.segOpComputeOptimalWindowSize(P,R),F={windowSize:D,inSize:P,batchSize:_,numSegments:R},$=new Cee(F,k),z=n.compileAndRun($,[x,T],C);if(u.push(z),z.shape[1]===R)return z;let W=OC({backend:n,attrs:{start:0,stop:R,step:1,dtype:"float32"}}),q=zC({inputs:{x:W},backend:n,attrs:{reps:[P/D]}});return u.push(W),u.push(q),g(z,k,q,C,R)},b=g(f,"unsortedSegmentSum",a,m,i),y=he({inputs:{x:b},backend:n,attrs:{shape:p}}),v=y;if(l!=null){u.push(y);let x=N.getUndoAxesPermutation(l);v=an({inputs:{x:v},backend:n,attrs:{perm:x}})}return u.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var Tee={kernelName:Jd,backendName:"webgl",kernelFunc:Nee},$ee=[FX,PX,LX,WX,GX,jX,XX,QX,t8,s8,i8,l8,p8,g8,v8,w8,I8,T8,A8,_8,O8,W8,G8,q8,Z8,e7,r7,mX,o7,p7,g7,k7,S7,N7,$7,E7,D7,P7,L7,V7,U7,q7,K7,Z7,eY,sY,iY,uY,pY,gY,xY,IY,NY,TY,AY,_Y,DY,OY,zY,VY,GY,jY,XY,ZY,t9,a9,l9,fX,d9,c7,f9,b9,x9,bX,S9,$9,E9,F9,z9,V9,G9,K9,Z9,tQ,sQ,oQ,lQ,dQ,mQ,bQ,vQ,wQ,IQ,TQ,_Q,OQ,UQ,kX,jQ,YQ,JQ,nZ,K8,aZ,oZ,lZ,pZ,gZ,vX,yZ,vZ,X8,LQ,kZ,NZ,EZ,SX,FZ,zZ,VZ,GZ,KZ,YZ,JZ,nJ,rJ,oJ,cJ,fJ,bJ,xJ,IJ,B8,VQ,NJ,$J,EJ,RJ,FJ,PJ,MJ,BJ,WJ,HJ,jJ,XJ,ZJ,eee,nee,ree,BQ,_X,oee,cee,hee,bee,xee,RX,kee,See,Tee,iZ];for(let e of $ee)Al(e);var Os=X();Os.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Os.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Os.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Os.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Os.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Os.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Os.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Os.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Os.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Os.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function Aee(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function Wt(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function td(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function uv(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function Or(){return`
  ${uv()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Le(){return`
    ${Or()}
      let index = getGlobalIndex();
`}function Eee(e,t,n,s=!1){let r=[];if(r.push(`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),s===!0)return r.push(`
      struct Matrix0 {
        numbers: array<${td(t.dtype,n.isVec4)}>;
      };
      struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      @group(0) @binding(0) var<storage, write> result : Matrix0;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[sw,r.join(`
`),rw(t.shape),n.getUserCode()].join(`
`);let a="struct Uniforms { NAN : f32; ";n.variableNames.forEach((d,p)=>{a+=`${d.charAt(0).toLowerCase()+d.slice(1)}Shape : ${Wt(e[p].shape.length)}; `}),a+=`outShape : ${Wt(t.shape.length)} ; `;let i=t.shape.length-1;a+=`
       outShapeStrides: ${Wt(i)}; `,n.size&&(a+="size : i32; "),n.uniforms&&(a+=n.uniforms),a+="};",r.push(a),n.atomic?r.push(`
    struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    @group(0) @binding(0) var<storage, read_write> result : Matrix0;
  `):r.push(`
    struct Matrix0 {
        numbers: array<${td(t.dtype,n.isVec4)}>;
    };

    @group(0) @binding(0) var<storage, write> result : Matrix0;
  `),n.variableNames.forEach((d,p)=>{r.push(`
    struct Matrix${1+p} {
      numbers: array<${td(e[p].dtype,n.isVec4)}>;
    };
    @group(0) @binding(${1+p}) var<storage, read> ${d} : Matrix${1+p};
    `)}),a!==""&&r.push(`
    @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms : Uniforms;
    `);let[o,u]=Pee(t.shape,n.dispatchLayout),c=[sw,r.join(`
`),rw(t.shape),o,_ee(t.shape.length)];if(n.atomic||c.push(Ree(t.shape,t.dtype,n.isVec4)),u===t.shape.length){let d=e.map(p=>Dee(p,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);c.push(d)}return c.push(n.getUserCode()),c.join(`
`)}var sw=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }
  fn isNanCustomVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isNanCustom(val[0]), isNanCustom(val[1]), isNanCustom(val[2]), isNanCustom(val[3]));
  }
`;function _ee(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function Ree(e,t,n){let s=e.length,r=td(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${r}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${r}(value);
    }`,s>=2){let i=["d0","d1","d2","d3"].slice(0,s),o=Wt(s);n?a+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}function Dee(e,t,n,s){let r=Fee(e,n);return e.shape.length<=t.length&&(r+=Oee(e,t,n,s)),r}function Fee(e,t){let n=e.name,s=e.shape.length,r=Wt(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3"].slice(0,s),o=i.map(l=>`${l} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}.numbers[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}.numbers[0]);
      }
    `;let u=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,c=`${s}D`;return s===0&&(c="1D"),t?`
      fn ${a}(${o}) -> vec4<f32> {
        return vec4<f32>(${n}.numbers[getIndexFromCoords${c}(${r}(${i.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${a}(${o}) -> f32 {
      return f32(${n}.numbers[getIndexFromCoords${c}(${r}(${i.join(",")}),
        ${u})]);
    }
   `}function Oee(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),i="get"+a+"ByOutput",o=e.shape.length,u=t.length,c=Wt(u);if(w.arraysEqual(e.shape,t)&&s)return n?`
        fn ${i}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[globalIndex]);
        }

        fn ${i}Coords(coords : ${c}) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${i}Index(globalIndex : i32) -> f32 {
        return f32(${r}.numbers[globalIndex]);
      }

      fn ${i}Coords(coords : ${c}) -> f32 {
        return f32(${r}.numbers[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let l=N.getBroadcastDims(e.shape,t),d=u-o,p="";if(o===0)return n?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${i}Coords(coords : ${c}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${i}Index(globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${i}Coords(coords : ${c}) -> f32{
        return get${a}();
      }
    `;u<2&&l.length>=1?p="coords = 0;":p=l.map(g=>`coords[${g+d}] = 0;`).join(`
`);let h="";if(u<2&&o>0)h="coords";else if(u>1){let g=Wt(o),b=e.shape.map((y,v)=>`coords[${v+d}]`).join(", ");h=`${g}(${b})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;return n?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${p}
        return ${r}.numbers[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }

      fn ${i}Coords(coordsIn : ${c}) -> vec4<f32> {
        var coords = coordsIn;
        ${p}
        return ${r}.numbers[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }
    `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${p}
      return f32(${r}.numbers[getIndexFromCoords${m}(${h}, ${f})]);
    }

    fn ${i}Coords(coordsIn : ${c}) -> f32 {
      var coords = coordsIn;
      ${p}
      return f32(${r}.numbers[getIndexFromCoords${m}(${h}, ${f})]);
    }
  `}function Pee(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords() -> ${Wt(a)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,a];let i="",o=[n,s,r],u=0;for(let p=0;p<o.length;p++){let h=o[p];if(h.length!==0)if(u+=h.length,h.length===1)i+=`let d${h[0]} = i32(globalId[${p}]);`;else{let f=Aee(h,"uniforms.outShape");i+=`var index${p} = i32(globalId[${p}]);`;for(let m=0;m<f.length;m++)i+=`let d${h[m]} = index${p} / ${f[m]};`,m===f.length-1?i+=`let d${h[m+1]} = index${p} - d${h[m]} * ${f[m]};`:i+=`index${p} = index${p} - d${h[m]} * ${f[m]};`}}let c=[];for(let p=0;p<u;p++)c.push(`d${p}`);let l=Wt(u),d=`fn getOutputCoords() -> ${l} {
    ${i}
  `;return c.length===0?d+=`return ${l}(0); }`:d+=`return ${l}(${c.join(",")}); }`,[d,u]}function rw(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=w.computeStrides(e),s=Wt(t),r=[];for(let i=0;i<t;i++)r.push(`d${i}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a="var index2 = index;"+n.map((i,o)=>{let u=`let ${r[o]} = index2 / uniforms.outShapeStrides[${o}]`,c=o===n.length-1?`let ${r[o+1]} = index2 - ${r[o]} * uniforms.outShapeStrides[${o}]`:`index2 = index2 - ${r[o]} * uniforms.outShapeStrides[${o}]`;return`${u}; ${c};`}).join("");return`
    fn getCoordsFromIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var MC={};Ae(MC,{ArrayBufferToTypedArray:()=>BC,GPUBytesPerElement:()=>Dm,computeDispatch:()=>$e,computeWorkGroupSizeForConv2d:()=>lv,computeWorkGroupSizeForMatMul:()=>LC,computeWorkPerThreadForConv2d:()=>cv,flatDispatchLayout:()=>ze,isWebGPUSupported:()=>dv,tilesFitEvenlyIntoShape:()=>js});var Oi=65535,ta=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function js(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]===0)}function $e(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,i]=[Math.ceil(ta(e.x.map(u=>t[u]))/(n[0]*s[0])),e.y?Math.ceil(ta(e.y.map(u=>t[u]))/(n[1]*s[1])):1,e.z?Math.ceil(ta(e.z.map(u=>t[u]))/(n[2]*s[2])):1];if(r<=Oi&&a<=Oi&&i<=Oi)return[r,a,i];w.assert(r>Oi&&e.y===void 0&&e.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let o=Math.ceil(Math.sqrt(r));return o>Oi?(o=Math.ceil(Math.cbrt(r)),w.assert(o<=Oi,()=>"Total dispatch size exceeds WebGPU maximum."),[o,o,o]):[o,o,1]}function lv(e,t){let n=ta(e.x.map(r=>t[r])),s=ta(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function LC(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function cv(e,t){let n=ta(e.x.map(r=>t[r])),s=ta(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function ze(e){return{x:e.map((t,n)=>n)}}function Dm(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function BC(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function dv(){return(typeof window!="undefined"||typeof WorkerGlobalScope!="undefined")&&!!navigator.gpu}var zee="return a + b;",Mee="return areal * breal - aimag * bimag;",Lee="return areal * bimag + aimag * breal;",Bee="return a / b;",Vee="return a * b;",Wee="return (a - b) * (a - b);",Uee="return a - b;",Gee="return f32(a == b);",Hee="return vec4<f32>(a == b);",qee="return f32(a > b);",jee="return vec4<f32>(a > b);",Kee="return f32(a >= b);",Xee="return vec4<f32>(a >= b);",Yee="return f32(a < b);",Qee="return vec4<f32>(a < b);",Zee="return f32(a <= b);",Jee="return vec4<f32>(a <= b);",ete="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",tte=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,nte=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,VC=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,ste=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,rte=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,ate="return f32(a != b);",ite="return vec4<f32>(a != b);",ote=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,ute=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${VC}
  return resultTemp;
  `,lte="if (a < 0.0) { return b * a; }  return a;",cte=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function aw(e,t){let n=t?VC:nte;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isNanCustomVec4(a) | isNanCustomVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function ec(e,t){switch(e){case 0:return Vee;case 1:return zee;case 2:return Uee;case 3:return Bee;case 4:return t?Hee:Gee;case 5:return t?jee:qee;case 6:return t?Xee:Kee;case 7:return t?Qee:Yee;case 8:return t?Jee:Zee;case 9:return t?tte:ete;case 10:return t?ite:ate;case 11:return Wee;case 12:return t?rte:ste;case 14:return t?cte:lte;case 15:return aw("max",t);case 16:return aw("min",t);case 13:return t?ute:ote;case 17:return Mee;case 18:return Lee;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var dte="return abs(a);",pte="return ceil(a);",hte="return cos(a);",fte=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,mte="return exp(a) - 1.0;",gte="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",bte=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,yte="return exp(a);",vte="return floor(a);",xte="return a;",wte=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,kte="return f32(!(a >= 1.0));",Ite="return -a;",Ste="return (a < 0.0) ? b * a : a;",Cte="if (a < 0.0) { return uniforms.alpha * a; } return a;",Nte="if(a < 0.0) { return 0.0; } return a;",Tte="return clamp(a, 0.0, 6.0);",$te="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Ate=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNanCustomVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Ete="return 1.0/sqrt(a);",_te="return 1.0 / (1.0 + exp(-1.0 * a));",Rte="return sin(a);",Dte=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Fte="return sqrt(a);",Ote="return a * a;",Pte=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,zte="return f32(i32((a)));";function Vi(e,t){switch(e){case 0:return dte;case 2:return hte;case 3:return fte;case 1:return pte;case 4:return t?bte:gte;case 5:return yte;case 6:return mte;case 7:return vte;case 8:return xte;case 9:return wte;case 10:return kte;case 11:return Ite;case 12:return Ste;case 15:return Cte;case 13:return t?Ate:Nte;case 14:return t?$te:Tte;case 16:return Ete;case 19:return _te;case 17:return Rte;case 18:return Dte;case 20:return Fte;case 21:return Ote;case 22:return Pte;case 23:return zte;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function Qs(e,t=!1){if(e===null)return null;if(e==="linear")return Vi(8);if(e==="relu")return Vi(13,t);if(e==="elu")return Vi(4,t);if(e==="relu6")return Vi(14,t);if(e==="prelu")return ec(14,t);if(e==="sigmoid")return Vi(19);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function WC(e,t,n,s){return w.assert(s%4===0&&e[0]===4,()=>"tileInner must be divisible by 4. And ColPerThread must be 4"),`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${s/e[0]}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${s}>;

  let RowPerThread = ${e[1]};
  let ColPerThread = ${e[0]};
  let TileInner = ${s};

  ${Or()}

    let tileRow = ${t===1?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var Mte=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let i=s!=null,o=a!=null;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=i,this.activation=r,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=[this.tileAOuter,this.tileInner],r=[this.tileInner,this.tileBOuter];return[js(s,this.aShape.slice(1)),js(r,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let i=Qs(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${i}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${i}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${WC(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};function pv(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${Or()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function Lte(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Or()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var UC=class{constructor(e,t,n,s=!1,r=!1,a=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=s?e[1]:e[2];this.workGroupSize=LC(t[1],u,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=a!=null,l=o!=null;c&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=i,this.hasPreluActivationWeights=l;let d=this.outputShape[2],p=this.transposeB?[this.outputShape[0],d,u]:[this.outputShape[0],u,d];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${s}_${r}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),w.assert(s%this.workGroupSize[0]===0&&s%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[js(r,this.aShape.slice(1)),js(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let i=Qs(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?pv([this.workPerThread,this.workPerThread,1],this.workGroupSize):Lte(this.workGroupSize)}
    `}};function Bte(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Or()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var Vte=class{constructor(e,t=!1,n=!1,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize);let i=s!=null,o=a!=null;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=i,this.activation=r,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",s="";if(this.activation){let i=Qs(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${Bte()}
    `}};function Wte(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${Or()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var Ute=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],w.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let i=s!=null;i&&this.variableNames.push("bias");let o=a!=null;o&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=r,this.hasPreluActivationWeights=o,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let i=Qs(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${i}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${i}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${Wte(this.workGroupSize)}
    `}};function Oe(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),i=w.inferFromImplicitShape(r,a),o=w.sizeFromShape(i);return w.assert(a===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}var Gte={kernelName:$o,backendName:"webgpu",kernelFunc:Oe};function hv({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let c=e.shape.length,l=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[l-1]:t.shape[l-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),x=Go.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[b,d,h]:[b,h,d],T=s?[y,f,p]:[y,p,f],C=Oe({inputs:{x:e},backend:r,attrs:{shape:k}}),R=Oe({inputs:{x:t},backend:r,attrs:{shape:T}}),_=[C,R],P=Math.max(b,y),D=d%4===0&&f%4===0&&!n&&!s&&f>=32,F;h*f<=32?F=new Vte([P,h,f],n,s,a,u,i):!n&&!s&&(h<=16&&(f<=512||p>=2*f)||f<=16&&(h<=512||d>=2*h))?F=new Ute(k,T,[P,h,f],a,u,i):D?F=new Mte(k,[P,h,f],X().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,u,i):F=new UC(k,[P,h,f],X().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,s,a,u,i);let $=[C,R];a&&$.push(a),i&&$.push(i);let z=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[d]}],W=r.runWebGPUProgram(F,$,e.dtype,z),q=Oe({inputs:{x:W},backend:r,attrs:{shape:x}});_.push(W);for(let K of _)r.disposeData(K.dataId);return q}function Hte(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s;return hv({a:r,b:a,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}var qte={kernelName:sa,backendName:"webgpu",kernelFunc:Hte},iw=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${ec(this.op,!1)}
      }

      ${Le()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},jte=class{constructor(e,t,n,s){this.variableNames=["A","B"],this.size=!0;let r=256;this.workGroupSize=[r,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ze(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${ec(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Le()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},Kte=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${ec(this.op,this.isVec4)}
      }
      ${Le()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}},GC=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${ec(this.op,!1)}
      }
      ${Le()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function ow(e,t,n){if(w.arraysEqual(t,n)&&w.sizeFromShape(t)%4===0)return new Kte(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new jte(e,t,n,a):new GC(e,t,n)}function ns(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Xte={kernelName:La,backendName:"webgpu",kernelFunc:ns};function iu(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.tensorMap.get(a.dataId),o=ns({inputs:{x:s},backend:n}),u=ns({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}var Yte={kernelName:Md,backendName:"webgpu",kernelFunc:iu},tc=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Vi(this.op,!1)}
      }
      ${Le()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function Xt({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,i=r,o=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let c=i.tensorMap.get(a.dataId),l=t(c.values,o);return i.makeTensorInfo(a.shape,o,l)}let u=new tc(a.shape,e);return i.runWebGPUProgram(u,[a],o)}}function cn({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;if(n&&i.dtype==="complex64"){let d=u.tensorMap.get(i.dataId),p=u.tensorMap.get(o.dataId),h,f;if(e!==0)[h,f]=[[d.complexTensorInfos.real,p.complexTensorInfos.real],[d.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(g=>{let[b,y]=g,v={dataId:b.dataId,dtype:b.dtype,shape:i.shape},x={dataId:y.dataId,dtype:y.dtype,shape:o.shape},k=ow(e,i.shape,o.shape);return u.runWebGPUProgram(k,[v,x],vn(b.dtype,y.dtype))});else{let g=new iw(17,i.shape,o.shape),b=new iw(18,i.shape,o.shape),y=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:i.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape}];h=u.runWebGPUProgram(g,y,"float32"),f=u.runWebGPUProgram(b,y,"float32")}let m=iu({inputs:{real:h,imag:f},backend:u});return u.disposeData(h.dataId),u.disposeData(f.dataId),m}let c=s||vn(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||u.shouldExecuteOnCPU([i,o]))&&t!=null){let d=u.tensorMap.get(i.dataId).values,p=u.tensorMap.get(o.dataId).values,h=i.dtype==="string"?N.fromUint8ToStringArray(d):d,f=i.dtype==="string"?N.fromUint8ToStringArray(p):p,[m,g]=t(i.shape,o.shape,h,f,c);return u.makeTensorInfo(g,c,m)}let l=ow(e,i.shape,o.shape);return u.runWebGPUProgram(l,[i,o],c)}}var{addImpl:Qte,ceilImpl:Zte,concatImpl:Jte,equalImpl:ene,expImpl:tne,expm1Impl:nne,floorImpl:sne,gatherNdImpl:rne,gatherV2Impl:ane,greaterEqualImpl:ine,greaterImpl:one,lessEqualImpl:une,lessImpl:lne,logImpl:cne,maxImpl:dne,maximumImpl:pne,minimumImpl:hne,multiplyImpl:fne,negImpl:mne,notEqualImpl:gne,prodImpl:bne,rangeImpl:yne,rsqrtImpl:vne,simpleAbsImpl:xne,sliceImpl:wne,stridedSliceImpl:kne,stringNGramsImpl:Ine,subImpl:Sne,tileImpl:Cne,topKImpl:Nne,transposeImpl:Tne,uniqueImpl:npe}=zy,$ne=Xt({opType:0,cpuKernelImpl:xne}),Ane={kernelName:so,backendName:"webgpu",kernelFunc:$ne},Ene=cn({opSnippet:1,cpuKernelImpl:Qte,supportsComplex:!0}),_ne={kernelName:Cr,backendName:"webgpu",kernelFunc:Ene},Rne=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Le()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Dne(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return ns({inputs:{x:s[0]},backend:n});let r=s.map(o=>o.dtype).reduce((o,u)=>vn(o,u)),a=s.map(o=>o.shape),i=new Rne(a);return n.runWebGPUProgram(i,s,r)}var Fne={kernelName:wa,backendName:"webgpu",kernelFunc:Dne},HC=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32; infinityValue : f32;",this.size=!0;let s=[t];N.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=N.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(r,a)=>this.outputShape.length===1?r:`${r}[${a}]`,n=r=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${r}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Le()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);
          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},One=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${uv()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},Pne=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Wt(this.outputShape.length),t=zne(this.newDim);return`
      ${Le()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A.numbers[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function zne(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC[${s}]`;return n.join()}function xi(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let l=0;l<u.length;l++)u[l]=r.shape[a[l]];if(n.shouldExecuteOnCPU([r])){let d=i.tensorMap.get(r.dataId).values,p=Tne(d,r.shape,r.dtype,a,u);return n.makeTensorInfo(u,r.dtype,p)}if(r.shape.length===2&&w.arraysEqual(a,[1,0])){let l=new One(r.shape,a);return i.runWebGPUProgram(l,[r],r.dtype)}let c=new Pne(r.shape,a);return i.runWebGPUProgram(c,[r],r.dtype)}var Mne={kernelName:di,backendName:"webgpu",kernelFunc:xi};function Lne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=N.getAxesPermutation(i,r.shape.length),u=r,c=[];o!=null&&(u=xi({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),N.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let l=new HC(u.shape,i[0],"max"),d=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(l,[u],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var Bne={kernelName:ka,backendName:"webgpu",kernelFunc:Lne};function Vne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=N.getAxesPermutation(i,r.shape.length),u=r,c=[];o!=null&&(u=xi({inputs:{x:r},backend:n,attrs:{perm:o}}),c.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),N.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let l=new HC(u.shape,i[0],"min"),d=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(l,[u],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var Wne={kernelName:il,backendName:"webgpu",kernelFunc:Vne},qC=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Le()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},jC=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Le()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Une(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,c=1,l=N.computePool2DInfo(r.shape,a,i,c,o,u);if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))return ns({inputs:{x:r},backend:n});let d,p=[{type:"int32",data:[l.strideHeight,l.strideWidth]}];return l.filterHeight===1&&l.filterWidth===1?d=new jC(l):(d=new qC(l,"avg"),p.push({type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]})),n.runWebGPUProgram(d,[r],r.dtype,p)}var Gne={kernelName:Ia,backendName:"webgpu",kernelFunc:Une};function Hne(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return hv({a:r,b:a,transposeA:i,transposeB:o,backend:n})}var qne={kernelName:Sa,backendName:"webgpu",kernelFunc:Hne},jne=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Wt(e.length)}; `,this.shaderKey="slice"}getUserCode(){let e=Wt(this.rank),t=Kne(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${Fm[a]} = uniforms.start[${a}] + coords.${Fm[a]};`),`
      ${Le()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},Fm=["x","y","z","w","u","v"];function Kne(e){if(e===1)return"sourceLoc";if(e<=6)return Fm.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function ou(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,u]=kt.parseSliceParams(r,a,i);if(kt.assertParamsValid(r,o,u),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.tensorMap.get(r.dataId),p=wne(d.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,p)}if(w.sizeFromShape(u)===0)return n.makeTensorInfo(u,r.dtype,[]);let c=new jne(o,u),l=[{type:"int32",data:o}];return n.runWebGPUProgram(c,[r],r.dtype,l)}var Xne={kernelName:Do,backendName:"webgpu",kernelFunc:ou},Yne=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=a.reduce((y,v)=>y*v),u=N.getReshaped(r.shape,a,o),c=N.getPermuted(u.length,a.length),l=N.getReshapedPermuted(r.shape,a,o),d=N.getSliceBeginCoords(i,a.length),p=N.getSliceSize(l,i,a.length),h=[],f=Oe({inputs:{x:r},backend:n,attrs:{shape:u}}),m=xi({inputs:{x:f},backend:n,attrs:{perm:c}}),g=Oe({inputs:{x:m},backend:n,attrs:{shape:l}}),b=ou({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(y=>n.disposeData(y.dataId)),b},Qne={kernelName:ro,backendName:"webgpu",kernelFunc:Yne},KC=cn({opSnippet:10,dtype:"bool",cpuKernelImpl:gne}),Zne={kernelName:wo,backendName:"webgpu",kernelFunc:KC};function nc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return ns({inputs:{x:r.complexTensorInfos.real},backend:n})}var Jne={kernelName:jd,backendName:"webgpu",kernelFunc:nc};function ese(e,t){let n=new tc(e.shape,23),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Om(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return ns({inputs:{x:r},backend:n});let i=Tt(r.shape),o=Om({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=iu({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeData(o.dataId),u}if(r.dtype==="complex64"){let i=nc({inputs:{input:r},backend:n}),o=Om({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeData(i.dataId),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=ns({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32")return ese(r,n);if(a==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),u=KC({inputs:{a:r,b:i},backend:n});return n.disposeData(i.dataId),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var tse={kernelName:Ca,backendName:"webgpu",kernelFunc:Om},nse=Xt({opType:1,cpuKernelImpl:Zte}),sse={kernelName:Na,backendName:"webgpu",kernelFunc:nse},rse=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Le()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},ase=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Le()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isNanCustom(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function ise(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o,u=[{type:"float32",data:[a]},{type:"float32",data:[i]}];return w.sizeFromShape(r.shape)%4===0?o=new rse(r.shape):o=new ase(r.shape),n.runWebGPUProgram(o,[r],r.dtype,u)}var ose={kernelName:Nr,backendName:"webgpu",kernelFunc:ise},use=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32;`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Le()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Up(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return ns({inputs:{x:r.complexTensorInfos.imag},backend:n})}var lse={kernelName:Ud,backendName:"webgpu",kernelFunc:Up};function Pm(e,t,n){let s=e[0].dtype;if(s==="complex64"){let h=e.map(y=>nc({inputs:{input:y},backend:n})),f=e.map(y=>Up({inputs:{input:y},backend:n})),m=Pm(h,t,n),g=Pm(f,t,n),b=iu({inputs:{real:m,imag:g},backend:n});return h.forEach(y=>n.disposeData(y.dataId)),f.forEach(y=>n.disposeData(y.dataId)),n.disposeData(m.dataId),n.disposeData(g.dataId),b}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let h=e.map(x=>{let k=w.sizeFromShape(x.shape.slice(t));return Oe({inputs:{x},backend:n,attrs:{shape:[-1,k]}})}),f=h.map(x=>({vals:n.readSync(x.dataId),shape:x.shape})),m=N.computeOutShape(h.map(x=>x.shape),1),g=h[0].shape[0]===1,b=Jte(f,m,s,g),y=N.computeOutShape(e.map(x=>x.shape),t),v=n.makeTensorInfo(y,s,b);return h.forEach(x=>n.disposeData(x.dataId)),v}let{tensors2D:a,outShape:i}=cse(e,t,n),o=a.map(h=>h.shape),u=new use(o),c=[],l=new Array(o.length-1);if(l.length>0){l[0]=o[0][1],c.push({type:"int32",data:[l[0]]});for(let h=1;h<l.length;h++)l[h]=l[h-1]+o[h][1],c.push({type:"int32",data:[l[h]]})}let d=n.runWebGPUProgram(u,a,a[0].dtype,c);a.forEach(h=>n.disposeData(h.dataId));let p=Oe({inputs:{x:d},backend:n,attrs:{shape:i}});return n.disposeData(d.dataId),p}function cse(e,t,n){let s=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>Oe({inputs:{x:a},backend:n,attrs:{shape:[w.sizeFromShape(a.shape.slice(0,t)),w.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function XC(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=N.computeOutShape(t.map(c=>c.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(c=>w.sizeFromShape(c.shape)>0);if(o.length===1)return ns({inputs:{x:o[0]},backend:n});let u=o.map(c=>c.shape);return N.assertParamsConsistent(u,a),Pm(o,a,n)}var dse={kernelName:ao,backendName:"webgpu",kernelFunc:XC},pse=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Le()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}},hse=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`,this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.outputShape[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.hasLeakyreluAlpha=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=this.outputShape[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],s=this.outputShape[3],r=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[js(e,[n,r]),js(t,[r,s])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let e=WC(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),s=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,r=this.fitA?`${s}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${s}
         }
         return vec4<f32>(0.0);
        `,a=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,i="",o="";if(this.activation){let l=Qs(this.activation,this.isVec4);if(this.hasPreluActivationWeights)i=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${l}
        }`;else{if(this.hasLeakyreluAlpha)throw i=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${l}
        }`,new Error("Leakyrelu is not supported.");i=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${l}
        }`}o="value = activation(value, outCoord);"}let u=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${i}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${r}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${a}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${u}
            ${o}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}},fse=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=lv(this.dispatchLayout,this.outputShape),this.elementsPerThread=cv(this.dispatchLayout,this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;w.assert(n%this.workGroupSize[0]===0&&n%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],o=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[js(s,[a,o]),js(r,[o,i])]}getUserCode(){let e=pv(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,s=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,r="",a="";if(this.activation){let u=Qs(this.activation,!1);this.hasPreluActivationWeights?r=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${u}
                }`:r=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${u}
                  }
                `,a="value = activation(value, outCoord);"}let i=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${r}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${s}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${i}
      ${a}
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},mse=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=Qs(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Or()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function gse({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=e.shape,c=n.dataFormat==="channelsLast",l=!1,d=!1,p=n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",h,f;if(p){let b=n.inHeight*n.inWidth*n.inChannels;h=Oe({inputs:{x:e},backend:s,attrs:{shape:[1,n.batchSize,b]}}),f=Oe({inputs:{x:t},backend:s,attrs:{shape:[1,b,n.outChannels]}})}else{let b=c?u[0]*u[1]*u[2]:u[0]*u[2]*u[3];h=Oe({inputs:{x:e},backend:s,attrs:{shape:[1,b,n.inChannels]}}),f=Oe({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}})}let m=hv({a:h,b:f,transposeA:l,transposeB:d,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),g=Oe({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});return s.disposeData(h.dataId),s.disposeData(f.dataId),s.disposeData(m.dataId),g}function bse({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:u,filterHeight:c,inChannels:l,strideWidth:d,strideHeight:p,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:b,dataFormat:y}=n,v=y==="channelsLast",x=u*c*l,k=m*f,T=[k,x],C=!1,R=!1,_=[],P=Oe({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),D=Oe({inputs:{x:t},backend:s,attrs:{shape:[1,x,-1]}});_.push(P),_.push(D);let F=new pse(T,v),$=[{type:"int32",data:[h.left,h.top]},{type:"int32",data:[d,p]},{type:"int32",data:[g,b]},{type:"int32",data:[f]},{type:"int32",data:[l*u]},{type:"int32",data:[l]}],z=s.runWebGPUProgram(F,[P],P.dtype,$),W=Oe({inputs:{x:z},backend:s,attrs:{shape:[1,T[0],T[1]]}});_.push(z),_.push(W);let q=[1,T[0],T[1]],K=new UC(q,[1,k,n.outChannels],X().get("WEBGPU_MATMUL_WORK_PER_THREAD"),C,R,r,o,a),j=q[1],Q=q[2],J=n.outChannels,ne=[{type:"int32",data:[j]},{type:"int32",data:[J]},{type:"int32",data:[Q]}],se=[W,D];r&&se.push(r),a&&se.push(a);let te=s.runWebGPUProgram(K,se,W.dtype,ne),ie=v?[1,m,f,n.outChannels]:[1,n.outChannels,m,f],ee=Oe({inputs:{x:te},backend:s,attrs:{shape:ie}});_.push(te);for(let ce of _)s.disposeData(ce.dataId);return ee}function YC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=r!=null,c=a!=null,l;if(n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID"||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID"))return gse({x:e,filter:t,convInfo:n,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});if(X().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&e.shape[0]===1)return bse({x:e,filter:t,convInfo:n,backend:s,bias:r,preluActivationWeights:a,leakyreluAlpha:i,activation:o});let p=X().getBool("WEBGPU_USE_NAIVE_CONV2D"),h=(n.inChannels%4===0||n.inChannels===3&&n.padInfo.type==="VALID")&&n.outChannels%4===0&&n.outChannels>=32,f=[n.padInfo.top,n.padInfo.left],m=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(p)l=new mse(n,u,o,c);else{h?l=new hse(n,u,o,c):l=new fse(n,u,o,c);let b=n.outShape[1]*n.outShape[2],y=n.outShape[3],v=n.filterHeight*n.filterWidth*n.inShape[3];m.push({type:"int32",data:[b]},{type:"int32",data:[y]},{type:"int32",data:[v]})}let g=[e,t];return u&&g.push(r),c&&g.push(a),s.runWebGPUProgram(l,g,e.dtype,m)}function yse(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=n,d=N.convertConv2DDataFormat(u),p=N.computeConv2DInfo(r.shape,a.shape,i,c,o,l,!1,d);return YC({x:r,filter:a,convInfo:p,backend:s})}var vse={kernelName:Ta,backendName:"webgpu",kernelFunc:yse},xse=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=lv(this.dispatchLayout,this.outputShape),this.elementsPerThread=cv(this.dispatchLayout,this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${pv(this.elementsPerThread,this.workGroupSize)}
  `}},wse=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Le()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function kse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=s,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(i,a.shape,o,1,u,l,!1,d),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}],f;if(X().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new wse(p);else{f=new xse(p);let m=p.inShape[1]*p.inShape[2],g=p.inShape[3],b=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var Ise={kernelName:$a,backendName:"webgpu",kernelFunc:kse},Sse=Xt({opType:2}),Cse={kernelName:Aa,backendName:"webgpu",kernelFunc:Sse},Nse=Xt({opType:3}),Tse={kernelName:Ea,backendName:"webgpu",kernelFunc:Nse},$se=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Le()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${i};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},Ase=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=s,l=new $se(r.shape[3],a.shape,o,u),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(l,[r,a,i],"float32",d)},Ese={kernelName:oo,backendName:"webgpu",kernelFunc:Ase},_se=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Le()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Rse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],c=i==="NHWC"?r.shape[2]:r.shape[3],l=i==="NHWC"?r.shape[3]:r.shape[1],d=u*a,p=c*a,h=l/(a*a),f=i==="NHWC"?[o,d,p,h]:[o,h,d,p],m=[{type:"int32",data:[a]}],g=new _se(f,i);return n.runWebGPUProgram(g,[r],r.dtype,m)}var Dse={kernelName:uo,backendName:"webgpu",kernelFunc:Rse},QC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=Qs(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${uv()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},ZC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      inDims : vec2<i32>; filterHeight : i32; filterWidth : i32;
      channelMul : i32;`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=Qs(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${r}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Or()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Fse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=s,l=u;l==null&&(l=[1,1]);let d=N.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!0),p=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}],h;return d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4===0?h=new QC(d):(h=new ZC(d),p.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.outChannels/d.inChannels]})),n.runWebGPUProgram(h,[r,a],r.dtype,p)}var Ose={kernelName:_a,backendName:"webgpu",kernelFunc:Fse},JC=cn({opSnippet:0,cpuKernelImpl:fne,supportsComplex:!0}),Pse={kernelName:Xa,backendName:"webgpu",kernelFunc:JC},zse=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=N.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isNanCustom(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Le()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x.numbers[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function sc(e,t,n,s,r){let a=e.shape.length,i=[],o=w.parseAxisParam(t,e.shape),u=o,c=N.getAxesPermutation(u,a),l=e;c!=null&&(l=xi({inputs:{x:e},attrs:{perm:c},backend:r}),u=N.getInnerMostAxes(u.length,a),i.push(l)),N.assertAxesAreInnerMostDims(s,u,a);let[d,p]=N.computeOutAndReduceShapes(l.shape,u),h=d;n&&(h=N.expandShapeToKeepDim(d,o));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([l])){let m=r.tensorMap.get(l.dataId).values;switch(s){case"max":let g=dne(m,w.sizeFromShape(p),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:b,outShape:y,outDtype:v}=bne(l.shape,l.dtype,m,u);f=r.makeTensorInfo(y,v,b);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=w.sizeFromShape(p),b=w.sizeFromShape(l.shape)/m,y={windowSize:m,inSize:m,batchSize:b,outSize:1},v=s==="mean"?"float32":tp(e.dtype),x=[{type:"int32",data:[m]}],k=new zse(y,s),T=r.runWebGPUProgram(k,[l],v,x);i.push(T),f=Oe({inputs:{x:T},attrs:{shape:h},backend:r})}return i.forEach(m=>r.disposeData(m.dataId)),f}function fv(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return sc(r,a,i,"sum",n)}var Mse={kernelName:ii,backendName:"webgpu",kernelFunc:fv};function Lse(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(i.length,u,a);let{path:c,steps:l}=N.getEinsumComputePath(o,u),d=l.length,p=null,h=i.length,f=[];for(let m=0;m<d;++m){for(let g of l[m]){let{permutationIndices:b,expandDims:y}=N.getEinsumPermutation(h,u[g]),v;N.isIdentityPermutation(b)?v=a[g]:(v=xi({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=Oe({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),p===null?p=v:(p=JC({inputs:{a:v,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=fv({inputs:{x:p},backend:n,attrs:{axis:c[m]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeData(m.dataId);return p}var Bse={kernelName:Wd,backendName:"webgpu",kernelFunc:Lse},Vse=Xt({opType:4}),Wse={kernelName:Da,backendName:"webgpu",kernelFunc:Vse},Use=cn({opSnippet:4,dtype:"bool",cpuKernelImpl:ene}),Gse={kernelName:lo,backendName:"webgpu",kernelFunc:Use},e2=Xt({opType:5,cpuKernelImpl:tne,dtype:"float32"}),Hse={kernelName:Fa,backendName:"webgpu",kernelFunc:e2};function zm(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice(),u=r;return r<0&&(w.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),o.splice(u,0,1),Oe({inputs:{x:a},backend:s,attrs:{shape:o}})}var qse={kernelName:co,backendName:"webgpu",kernelFunc:zm},jse=Xt({opType:6,cpuKernelImpl:nne}),Kse={kernelName:po,backendName:"webgpu",kernelFunc:jse},Xse=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Le()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function uu(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let i=w.getArrayFromDType(a,w.sizeFromShape(s));return i.fill(r),t.makeTensorInfo(s,a,i)}else{let i=new Xse(s),o=[{type:"float32",data:[r]}];return t.runWebGPUProgram(i,[],a,o)}}var Yse={kernelName:hl,backendName:"webgpu",kernelFunc:uu},Qse=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Le()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},Zse={kernelName:ho,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Qse(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},Jse=Xt({opType:7,cpuKernelImpl:sne}),ere={kernelName:Oa,backendName:"webgpu",kernelFunc:Jse},tre=cn({opSnippet:12,dtype:"int32"}),nre={kernelName:Pa,backendName:"webgpu",kernelFunc:tre},sre=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((i,o)=>({binding:o,resource:i}))})},t2=(e,t,n,s,r,a=!1)=>{let i={dtype:r.dtype,shape:r.shape},o=Eee(s,i,t,a),u=e.createShaderModule({code:o,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:u,entryPoint:"main"},label:t.constructor.name})};function n2(e,t,n,s="",r=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(i=>i.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r}function uw(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:i}=s,o=w.sizeFromShape(r),u=w.computeStrides(r),c=n.makeTensorInfo(r,"int32"),l=n.getFromPixelsProgram(a?"import":"copyExternal");l.updateOutputShape(r);let d=[c.shape],p=[c.dtype,a?"import":"copyExternal"],h=n2(l,d,p),f=l.getLayout(n.device),m=n.getAndSavePipeline(h,()=>t2(n.device,l,f.pipelineLayout,[],c,!0));l.setPipeline(m),a||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:l.makeInputTexture(n.device,r[1],r[0])},[r[1],r[0]]);let g=n.tensorMap.get(c.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let b=[o,i,...u,...l.dispatch];l.setUniform(n.device,b);let y;if(a){let v={source:t};y=n.device.importExternalTexture(v)}else y=l.inputTexture.createView();return n.runFromPixelsProgram(l,g.bufferInfo.buffer,f,y,c.dataId),c}var rre={kernelName:ad,backendName:"webgpu",kernelFunc:are},Pi;function are(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,u=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,c=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[l,d]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[d,l,a];if(X().getBool("WEBGPU_USE_IMPORT")&&i)return uw({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!0});if((i||o)&&(Pi==null&&(Pi=document.createElement("canvas").getContext("2d")),Pi.canvas.width=l,Pi.canvas.height=d,Pi.drawImage(r,0,0,l,d),r=Pi.canvas),c||u||i||o)return uw({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!1});let h=r.data,f=h;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let b=h.length,y=0;for(let v=0;v<b;v++)v%4<a&&(f[y++]=h[v])}let m=n.makeTensorInfo(p,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}var ire=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Le()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},ore={kernelName:za,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:i,variance:o}=e,{varianceEpsilon:u}=t,c=n,l=[s,i,o],d=null;a!=null&&(d=a.shape,l.push(a));let p=null;r!=null&&(p=r.shape,l.push(r));let h=new ire(s.shape,i.shape,o.shape,d,p),f=[{type:"float32",data:[u]}];return c.runWebGPUProgram(h,l,s.dtype,f)}};function ure(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=N.convertConv2DDataFormat(l),g=N.computeConv2DInfo(r.shape,a.shape,u,d,c,p,!1,m);return YC({x:r,filter:a,convInfo:g,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:h})}var lre={kernelName:ra,backendName:"webgpu",kernelFunc:ure};function cre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:p}=s,h=l;h==null&&(h=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let f=N.computeConv2DInfo(r.shape,a.shape,u,h,c,d,!0),m=[r,a],g=i!=null,b=o!=null;g&&m.push(i),b&&m.push(o);let y=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}],v;return f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4===0?v=new QC(f,g,p,b):(v=new ZC(f,g,p,b),y.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.outChannels/f.inChannels]})),n.runWebGPUProgram(v,m,"float32",y)}var dre={kernelName:aa,backendName:"webgpu",kernelFunc:cre},pre=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${Wt(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Le()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function hre(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=w.sizeFromShape(s.shape),[u,c,l,d]=N.prepareAndValidate(s,r),p=Oe({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),h=Oe({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/l,l]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),v=n.bufferSync(s),x=rne(y,v,s.dtype,c,i,l,d,s.shape,o);return n.makeTensorInfo(u,s.dtype,x.values)}let f=new pre(i,[c,l]),m=[{type:"int32",data:[i]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[h,p],h.dtype,m),b=Oe({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),b}var fre={kernelName:mo,backendName:"webgpu",kernelFunc:hre},mre=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=gre(this.aShape,"i32");return`
      ${Le()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function gre(e,t="int"){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push(`${t}(getIndices(resRC.x, resRC.z))`):s.push(`${n[r]}`);return s.join()}function s2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0],c=N.segment_util.collectGatherOpShapeInfo(r,a,u,o),l=w.sizeFromShape(a.shape),d=[],p=Oe({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=Oe({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(p),d.push(h);let f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let v=n.tensorMap.get(h.dataId).values,x=_e(h.shape,h.dtype,v),T=n.tensorMap.get(p.dataId).values,C=_e(p.shape,p.dtype,T),R=ane(C,x,f);return d.forEach(_=>n.disposeData(_.dataId)),n.makeTensorInfo(c.outputShape,R.dtype,R.values)}let m=new mre(p.shape,f),g=n.runWebGPUProgram(m,[p,h],p.dtype);d.push(g);let b=Oe({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(y=>n.disposeData(y.dataId)),b}var bre={kernelName:fo,backendName:"webgpu",kernelFunc:s2},yre=cn({opSnippet:5,cpuKernelImpl:one,dtype:"bool"}),vre={kernelName:go,backendName:"webgpu",kernelFunc:yre},xre=cn({opSnippet:6,dtype:"bool",cpuKernelImpl:ine}),wre={kernelName:Ma,backendName:"webgpu",kernelFunc:xre};function kre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=[{type:"float32",data:[a]}],o=new tc(r.shape,15);return o.uniforms="alpha : f32;",n.runWebGPUProgram(o,[r],"float32",i)}var Ire={kernelName:Ba,backendName:"webgpu",kernelFunc:kre},Sre=cn({opSnippet:7,dtype:"bool",cpuKernelImpl:lne}),Cre={kernelName:bo,backendName:"webgpu",kernelFunc:Sre},Nre=cn({opSnippet:8,dtype:"bool",cpuKernelImpl:une}),Tre={kernelName:yo,backendName:"webgpu",kernelFunc:Nre},$re=Xt({opType:9,cpuKernelImpl:cne}),Are={kernelName:Va,backendName:"webgpu",kernelFunc:$re},Ere=cn({opSnippet:9,dtype:"bool"}),_re={kernelName:vo,backendName:"webgpu",kernelFunc:Ere},Rre=Xt({opType:10}),Dre={kernelName:yl,backendName:"webgpu",kernelFunc:Rre};function r2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s;return sc(r,a,i,"max",n)}var Fre={kernelName:Wa,backendName:"webgpu",kernelFunc:r2},Ore=cn({opSnippet:15,cpuKernelImpl:pne}),Pre={kernelName:Ua,backendName:"webgpu",kernelFunc:Ore};function zre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,c=1,l=N.computePool2DInfo(r.shape,a,i,c,o,u),d,p=[];if(l.filterHeight===1&&l.filterWidth===1){if(w.arraysEqual(l.inShape,l.outShape))return ns({inputs:{x:r},backend:n});d=new jC(l),p.push({type:"int32",data:[l.strideHeight,l.strideWidth]})}else d=new qC(l,"max"),p.push({type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]});return n.runWebGPUProgram(d,[r],r.dtype,p)}var Mre={kernelName:Ga,backendName:"webgpu",kernelFunc:zre};function Lre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:i}=s;return sc(r,i,a,"mean",n)}var Bre={kernelName:Ha,backendName:"webgpu",kernelFunc:Lre};function Vre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return sc(r,a,i,"min",n)}var Wre={kernelName:qa,backendName:"webgpu",kernelFunc:Vre},Ure=cn({opSnippet:16,cpuKernelImpl:hne}),Gre={kernelName:ja,backendName:"webgpu",kernelFunc:Ure},Hre=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),n=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=Wt(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Le()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}},qre={kernelName:Ka,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,i=n,o=r.map(l=>({type:"int32",data:[l[0],l[1]]})),u=new Hre(s.shape,r,a);return i.runWebGPUProgram(u,[s],s.dtype,o)}};function jre(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[i,o]=mne(a.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}let r=new tc(s.shape,11);return n.runWebGPUProgram(r,[s],s.dtype)}var Kre={kernelName:xo,backendName:"webgpu",kernelFunc:jre};function Xre(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s,c=n.readSync(r.dataId),l=n.readSync(a.dataId),{selectedIndices:d}=ys.nonMaxSuppressionV3Impl(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Yre={kernelName:ko,backendName:"webgpu",kernelFunc:Xre};function Qre(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=s,l=n.readSync(r.dataId),d=n.readSync(a.dataId),p=i,h=o,f=u,m=c,{selectedIndices:g,selectedScores:b}=ys.nonMaxSuppressionV5Impl(l,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var Zre={kernelName:Io,backendName:"webgpu",kernelFunc:Qre};function Ed(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=nc({inputs:{input:s},backend:n}),a=Ed({inputs:{x:r},backend:n}),i=Up({inputs:{input:s},backend:n}),o=Ed({inputs:{x:i},backend:n}),u=iu({inputs:{real:a,imag:o},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),u}else return uu({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Jre={kernelName:Wo,backendName:"webgpu",kernelFunc:Ed};function a2(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=nc({inputs:{input:s},backend:n}),a=a2({inputs:{x:r},backend:n}),i=Up({inputs:{input:s},backend:n}),o=Ed({inputs:{x:i},backend:n}),u=iu({inputs:{real:a,imag:o},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),u}else return uu({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var eae={kernelName:So,backendName:"webgpu",kernelFunc:a2};function tae(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return zm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(l=>{w.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let d=zm({inputs:{input:l},backend:n,attrs:{dim:r}});return o.push(d),d}),c=XC({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(l=>n.disposeData(l.dataId)),c}var nae={kernelName:No,backendName:"webgpu",kernelFunc:tae},sae=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Wt(e),n=this.xShape.map((l,d)=>`uniforms.pad${d}[0]`).join(","),s=this.xShape.map((l,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,i=e>1?"any(outC < start)":"outC < start",o=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Le()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${o}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${u}));
          }
        }
      }
    `}},i2=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(a.every(c=>w.arraysEqual(c,[0,0])))return ns({inputs:{x:r},backend:n});if(w.sizeFromShape(r.shape)===0){let c=a.map((l,d)=>l[0]+r.shape[d]+l[1]);return uu({backend:n,attrs:{shape:c,value:i,dtype:r.dtype}})}let o=[{type:"float32",data:[i]}];a.map(c=>o.push({type:"int32",data:[c[0],c[1]]}));let u=new sae(r.shape,a);return n.runWebGPUProgram(u,[r],r.dtype,o)},rae={kernelName:Ya,backendName:"webgpu",kernelFunc:i2},aae=cn({opSnippet:13}),iae={kernelName:Qa,backendName:"webgpu",kernelFunc:aae};function oae(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new GC(14,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var uae={kernelName:Za,backendName:"webgpu",kernelFunc:oae};function lae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return sc(r,a,i,"prod",n)}var cae={kernelName:To,backendName:"webgpu",kernelFunc:lae},dae=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=yne(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},pae={kernelName:wl,backendName:"webgpu",kernelFunc:dae},o2=cn({opSnippet:3}),hae={kernelName:Ra,backendName:"webgpu",kernelFunc:o2},fae=Xt({opType:13}),mae={kernelName:Ja,backendName:"webgpu",kernelFunc:fae},gae=Xt({opType:14}),bae={kernelName:ti,backendName:"webgpu",kernelFunc:gae},yae=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Le()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function vae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:i,halfPixelCenters:o}=s,[u,c]=i,l=a&&u>1?1:0,d=a&&c>1?1:0,h=[{type:"float32",data:[l,d]},{type:"float32",data:[o?.5:0]}],f=new yae(r.shape,u,c);return n.runWebGPUProgram(f,[r],"float32",h)}var xae={kernelName:ei,backendName:"webgpu",kernelFunc:vae},wae=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Le()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function kae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,c]=o,l=a&&u>1?1:0,d=a&&c>1?1:0,h=[{type:"float32",data:[l,d]},{type:"float32",data:[a?.5:0]}],f=new wae(r.shape,u,c,i);return n.runWebGPUProgram(f,[r],r.dtype,h)}var Iae={kernelName:Il,backendName:"webgpu",kernelFunc:kae},Sae=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Le()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},Cae={kernelName:Uo,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new Sae(s.shape,a),[c,l]=N.getImageCenter(i,s.shape[1],s.shape[2]),d=[{type:"float32",data:[c]},{type:"float32",data:[l]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a}),o.runWebGPUProgram(u,[s],s.dtype,d)}},Nae=Xt({opType:16,cpuKernelImpl:vne}),Tae={kernelName:ni,backendName:"webgpu",kernelFunc:Nae},$ae=class{constructor(e,t,n,s,r,a,i){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=i,this.dispatchLayout=ze(e),this.dispatch=$e(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${i}`;let o=Wt(r.length);this.uniforms=`sliceDim : i32; strides: ${o}; size: i32;`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="",a="";this.updatesRank===1?(s="coords[0]",r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(s="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${s})`,o=this.type==="int32"?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${Le()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${i};
          let flatIndex = getOutputIndexFromCoords(${r});

         ${o}
        }
      }`}};function Aae(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=N.calculateShapes(a,r,i),p=[d/c,c];if(d===0)return n.makeTensorInfo(i,r.dtype);let h=Oe({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=Oe({inputs:{x:a},backend:n,attrs:{shape:[u,c]}}),m=f.dtype,g=uu({backend:n,attrs:{shape:p,value:0,dtype:m}}),b=w.sizeFromShape(f.shape),y=[{type:"int32",data:[o]},{type:"int32",data:l},{type:"int32",data:[b]}],v=new $ae(f.shape,o,h.shape.length,f.shape.length,l,p,m),x=n.runWebGPUProgram(v,[f,h],m,y,g),k=Oe({inputs:{x},backend:n,attrs:{shape:i}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(x.dataId),k}var Eae={kernelName:_o,backendName:"webgpu",kernelFunc:Aae},_ae=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${s[i]}`),i<this.cRank&&r.push(`${s[i]}`);e=r.join(),t=a.join()}return`
      ${Le()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function Rae(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new _ae(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(i,[s,r,a],vn(r.dtype,a.dtype))}var Dae={kernelName:Ro,backendName:"webgpu",kernelFunc:Rae},Fae=Xt({opType:19}),Oae={kernelName:ri,backendName:"webgpu",kernelFunc:Fae},Pae=Xt({opType:17}),zae={kernelName:si,backendName:"webgpu",kernelFunc:Pae},Mae=Xt({opType:18}),Lae={kernelName:Fo,backendName:"webgpu",kernelFunc:Mae},u2=cn({opSnippet:2,cpuKernelImpl:Sne,supportsComplex:!0}),Bae={kernelName:li,backendName:"webgpu",kernelFunc:u2};function Vae(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=w.parseAxisParam([a],r.shape),o=r2({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=N.expandShapeToKeepDim(o.shape,i),c=Oe({inputs:{x:o},backend:n,attrs:{shape:u}}),l=u2({inputs:{a:r,b:c},backend:n}),d=e2({inputs:{x:l},backend:n}),p=fv({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),h=Oe({inputs:{x:p},backend:n,attrs:{shape:u}}),f=o2({inputs:{a:d,b:h},backend:n});return n.disposeData(o.dataId),n.disposeData(c.dataId),n.disposeData(l.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(h.dataId),f}var Wae={kernelName:oi,backendName:"webgpu",kernelFunc:Vae},Uae=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=a.reduce((b,y)=>b*y),u=[[0,0]];u.push(...i);for(let b=1+a.length;b<r.shape.length;++b)u.push([0,0]);let c=[],l=i2({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),d=N.getReshaped(l.shape,a,o,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(l.shape,a,o,!1),f=Oe({inputs:{x:l},backend:n,attrs:{shape:d}}),m=xi({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Oe({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(l),c.push(f),c.push(m),c.forEach(b=>n.disposeData(b.dataId)),g},Gae={kernelName:Oo,backendName:"webgpu",kernelFunc:Uae},Hae=class{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=a,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let o=t>1;this.shaderKey=`scatter_${n}_${s}_${o}`;let u=Wt(r.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${u};`;let c="";n===1?c="i":n===2&&(c="i, j"),this.indicesSnippet=`getIndices(${c})`;let l="";s===1?l="i":s===2&&(l="i, coords[1]"),this.updatesSnippet=`getUpdates(${l})`,this.strideString=o?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Le()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function qae(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:c,strides:l,outputSize:d}=N.calculateShapes(a,r,o),p=!1,h=[{type:"int32",data:[c]},{type:"int32",data:[u]},{type:"int32",data:l}],f=new Hae(c,u,r.shape.length,a.shape.length,l,[d,1],p),m=n.runWebGPUProgram(f,[a,r,i],a.dtype,h),g=Oe({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),g}var jae={kernelName:Qd,backendName:"webgpu",kernelFunc:qae};function Kae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=N.prepareSplitSize(r,a,o),c=r.shape.length,l=new Array(c).fill(0),d=r.shape.slice();return u.map(p=>{let h=[...d];h[o]=p;let f=ou({inputs:{x:r},backend:n,attrs:{begin:l,size:h}});return l[o]+=p,f})}var Xae={kernelName:Po,backendName:"webgpu",kernelFunc:Kae},Yae=Xt({opType:20}),Qae={kernelName:ai,backendName:"webgpu",kernelFunc:Yae},Zae={kernelName:$l,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new tc(n.shape,21);return s.runWebGPUProgram(r,[n],n.dtype)}},Jae=cn({opSnippet:11}),eie={kernelName:ui,backendName:"webgpu",kernelFunc:Jae},tie=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Wt(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Le()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function nie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=kt.sliceInfo(r.shape,a,i,o,u,c,l,d,p),k;if(m)k=Oe({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let T=kt.computeOutShape(y,v,x),C=ou({inputs:{x:r},backend:n,attrs:{begin:y,size:T}});k=Oe({inputs:{x:C},backend:n,attrs:{shape:f}}),n.disposeData(C.dataId)}else if(n.shouldExecuteOnCPU([r])){let C=n.readSync(r.dataId),R=_e(r.shape,r.dtype,C),_=kne(h,R,x,y);k=n.makeTensorInfo(f,r.dtype,_.values)}else{let C=new tie(h),R=[{type:"int32",data:y},{type:"int32",data:x}],_=n.runWebGPUProgram(C,[r],r.dtype,R);k=Oe({inputs:{x:_},backend:n,attrs:{shape:f}}),n.disposeData(_.dataId)}return k}var sie={kernelName:zo,backendName:"webgpu",kernelFunc:nie};function rie(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:d}=t,p=n.readSync(l.dataId),h=n.readSync(d.dataId),[f,m]=Ine(p,h,r,a,i,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var aie={kernelName:Zd,backendName:"webgpu",kernelFunc:rie},iie=Xt({opType:22}),oie={kernelName:ci,backendName:"webgpu",kernelFunc:iie},uie=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=lie(this.rank,"uniforms.");return`
      ${Le()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function lie(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function cie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let u=n.readSync(r.dataId),c=r.dtype==="string"?u.map(p=>w.decodeString(p)):u,l=_e(r.shape,r.dtype,c),d=Cne(l,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let i=new uie(r.shape,a);return n.runWebGPUProgram(i,[r],r.dtype)}var die={kernelName:Tr,backendName:"webgpu",kernelFunc:cie},pie=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap"}getUserCode(){return`
        ${Le()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},hie=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return`
        ${Le()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function zi(e,t){t!==null&&e.disposeData(t.dataId)}function lw(e){let t=1;for(;t<e;)t*=2;return t}function fie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=r.shape,u=o[o.length-1];if(n.shouldExecuteOnCPU([r])){let k=n.readSync(r.dataId),[T,C]=Nne(k,o,r.dtype,a,i);return[n.makeTensorInfo(T.shape,T.dtype,T.values),n.makeTensorInfo(C.shape,C.dtype,C.values)]}if(a===0)return o[o.length-1]=0,[n.makeTensorInfo(o,r.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(u===1)return[r,uu({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let l=w.sizeFromShape(o)/u,d=Oe({inputs:{x:r},attrs:{shape:[l,u]},backend:n}),p=lw(a),h=lw(u),f=null,m=()=>f===null?[d,d]:[d,f],g=(k,T,C)=>{let R=m(),_=new pie(C),D=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[T]}],F=f;f=n.runWebGPUProgram(_,R,"int32",D),zi(n,F)};for(let k=1;k<p;k*=2){let T=k*2;for(let C=k;C>=1;C/=2)g(T,C,[l,h])}for(let k=h;k>p;k/=2){let T=m(),C=new hie([l,k/2]),_=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[p]}],P=f;f=n.runWebGPUProgram(C,T,"int32",_),zi(n,P);let D=p/2,F=D*2;for(let $=D;$>=1;$/=2)g(F,$,f.shape)}let b=f;f=ou({inputs:{x:f},backend:n,attrs:{begin:0,size:[l,a]}}),zi(n,b);let y=s2({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});zi(n,d);let v=o.slice(0,-1);v.push(a),b=f,f=Oe({inputs:{x:f},attrs:{shape:v},backend:n}),zi(n,b);let x=y;return y=Oe({inputs:{x:y},attrs:{shape:v},backend:n}),zi(n,x),[y,f]}var mie={kernelName:Lo,backendName:"webgpu",kernelFunc:fie},gie=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Le()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function bie(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=s,[l,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[l,f,m,h],b=new gie(g),y=i==="nearest"?1:2,v;switch(o){case"constant":v=1;break;case"reflect":v=2;break;case"wrap":v=3;break;case"nearest":v=4;break;default:v=1;break}let x=[{type:"int32",data:[y]},{type:"int32",data:[v]},{type:"float32",data:[u]}];return n.runWebGPUProgram(b,[r,a],"float32",x)}var yie={kernelName:Bo,backendName:"webgpu",kernelFunc:bie};function vie(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r,o=i.shape.length,u=r.shape[a],c=new Array(o-1),l=0;for(let m=0;m<o;m++)m!==a&&(c[l++]=i.shape[m]);let d=[],p=new Array(o).fill(0),h=i.shape.slice();h[a]=1;let f=new Array(u);for(let m=0;m<f.length;m++){p[a]=m;let g=ou({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),b=Oe({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=b,d.push(g)}return d.forEach(m=>n.disposeData(m.dataId)),f}var xie={kernelName:Vo,backendName:"webgpu",kernelFunc:vie},wie=[qte,Ane,_ne,Fne,Bne,Wne,Gne,qne,Qne,tse,sse,ose,Yte,dse,vse,Ise,Cse,Tse,Ese,Dse,Ose,Bse,Wse,Gse,Hse,qse,Kse,Yse,Zse,rre,ere,nre,ore,lre,dre,fre,bre,vre,wre,Xte,lse,Ire,Cre,Tre,Are,_re,Dre,Fre,Pre,Mre,Bre,Wre,Gre,qre,Pse,Kre,Yre,Zre,Zne,eae,nae,rae,iae,uae,cae,pae,Jne,hae,mae,bae,Gte,xae,Iae,Cae,Tae,Eae,Dae,Oae,zae,Lae,Xne,sie,aie,Wae,Gae,jae,Xae,Qae,Zae,eie,Bae,Mse,oie,die,mie,yie,Mne,xie,Jre];for(let e of wie)Al(e);var kie=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let s=cw(e,t);if(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(s).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(s).shift();return this.usedBuffers.get(s).push(a),a}this.numBytesAllocated+=e;let r=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(s).push(r),r}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let s=cw(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},s=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function cw(e,t){return`${e}_${t}`}var l2=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){w.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=ze(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Le()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,s)=>n===this.lastUniformData[s])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},Iie=class extends l2{constructor(){super(...arguments);this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},Sie=X().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),c2=class extends tl{constructor(e,t=!1){super();if(this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!dv())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new kie(this.device),this.tensorMap=new Fd(this,ks()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),X().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return c2.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=w.sizeFromShape(t)*Dm(n);return this.tensorMap.set(s,{dtype:n,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=w.sizeFromShape(n)*Dm(s);this.tensorMap.set(e,{dtype:s,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new l2),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new Iie),this.fromPixelImportProgram;default:w.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),X().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],i=r[1];s=N.mergeRealAndImagArrays(a,i)}else{let r=await this.getBufferData(t);s=BC(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=w.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(r);return i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),s=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(s).set(t.values):new Float32Array(s).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let r={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(r)}}makeUniforms(e){let t=0,n=[];e.forEach(a=>{a.data.length===0&&(a.data=[1]);let i;switch(a.data.length){case 1:i=4;break;case 2:i=8;break;case 3:i=16;break;case 4:i=16;break;default:w.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}t=Math.ceil(t/i)*i,n.push(t),t+=a.data.length*4});let s=new ArrayBuffer(t);e.forEach((a,i)=>{let o=n[i];a.type==="int32"?new Int32Array(s,o,a.data.length).set(a.data):a.type==="uint32"?new Uint32Array(s,o,a.data.length).set(a.data):new Float32Array(s,o,a.data.length).set(a.data)});let r=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(r,0,s,0,t),{offset:0,size:t,buffer:r}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),w.sizeFromShape(r.shape)===0){let C=this.tensorMap.get(r.dataId);return C.values=w.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}let a=[{type:"float32",data:[NaN]}],i=t.concat(r).map(C=>C.shape),o="int32";i.map(C=>{a.push({type:o,data:C})});let u=w.computeStrides(r.shape);if(a.push({type:o,data:u}),e.size){let C=w.sizeFromShape(e.outputShape);a.push({type:o,data:[e.isVec4?C/4:C]})}s&&(a=[...a,...s]);let c=this.makeUniforms(a),l=t.map((C,R)=>{if(C.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(C.dataId),{dtype:this.tensorMap.get(C.dataId).dtype,shape:C.shape,name:e.variableNames[R]}}),d=l.map(C=>C.dtype).concat(r.dtype),p=l.map(C=>N.getBroadcastDims(C.shape,r.shape)),h=l.map(C=>w.arraysEqual(C.shape,r.shape)).join("_"),f=p.map(C=>C.join("_")).join(";"),m=n2(e,i,d,f,h),{bindGroupLayout:g,pipelineLayout:b}=this.getCachedOrCreateLayout(e.variableNames.length),y=this.getAndSavePipeline(m,()=>t2(this.device,e,b,l,r)),v=this.activeTimers!=null,x=sre(this.device,g,t.map(C=>this.tensorToBinding(C)),this.tensorToBinding(r),c);this.ensureCommandEncoderReady();let k=this.getComputePass();v&&this.supportTimeQuery&&k.writeTimestamp(this.querySet,0),k.setPipeline(y),k.setBindGroup(0,x),k.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),v&&this.supportTimeQuery&&k.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(C=>{this.commandQueueOwnedIds.add(C.dataId)}),this.commandQueueOwnedIds.add(r.dataId);let T={byteSize:c.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:c.buffer};return this.uniformDisposalQueue.push(T),X().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),v&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}runFromPixelsProgram(e,t,n,s,r){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:s},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let i=this.getComputePass(),o=this.activeTimers!=null;o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,0),i.setPipeline(e.pipeline),i.setBindGroup(0,a),i.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(r),this.submitQueue(),o&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=Sie){return X().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&w.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},mv=c2;mv.nextDataId=0;var Cie={};Ae(Cie,{WebGPUBackend:()=>mv,webgpu_util:()=>MC});dv()&&sp("webgpu",async()=>{X().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:X().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},s=t.features.has("timestamp-query");s?n={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let r=await t.requestDevice(n);return new mv(r,s)},3);var Nt=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(Nt||{}),Gp=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(Gp||{}),d2;function Nie(e){d2=e.wasm.cwrap(sa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Tie(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s,p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(i!=null){let R=n.dataIdMap.get(i.dataId);if(R.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${R.shape.length}.`);f=R.id}let m=o==null?0:n.dataIdMap.get(o.dataId).id,g=Gp[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let b=u?r.shape[2]:r.shape[1],y=c?a.shape[1]:a.shape[2],v=Go.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),x=n.makeOutput([...v,b,y],r.dtype),k=n.dataIdMap.get(x.dataId).id,T=new Uint8Array(new Int32Array(r.shape).buffer),C=new Uint8Array(new Int32Array(a.shape).buffer);return d2(p,T,r.shape.length,h,C,a.shape.length,u,c,g,f,m,d||0,k),x}var $ie={kernelName:sa,backendName:"wasm",setupFunc:Nie,kernelFunc:Tie};function Yt(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:i,inputs:{x:o}}=a,u=i.dataIdMap.get(o.dataId).id,c=i.makeOutput(o.shape,t||o.dtype),l=i.dataIdMap.get(c.dataId).id;return w.sizeFromShape(c.shape)===0||n(u,Nt[o.dtype],l),c}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var Aie=Yt(so);function dn(e,t,n){let s;function r(i){s=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(i){let{backend:o,inputs:u}=i,{a:c,b:l}=u,d=o.dataIdMap.get(c.dataId).id,p=o.dataIdMap.get(l.dataId).id,h=n!=null?n:c.dtype,f=N.assertAndGetBroadcastShape(c.shape,l.shape),m=o.makeOutput(f,h);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(c.shape).buffer),b=new Uint8Array(new Int32Array(l.shape).buffer),y=o.dataIdMap.get(m.dataId).id;return(()=>s(d,g,c.shape.length,p,b,l.shape.length,Nt[c.dtype],y))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var Eie=!0,_ie=dn(Cr,Eie),p2;function Rie(e){p2=e.wasm.cwrap(wa,null,["array","number","number","number"])}function Die(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(s.shape)===0)return s;let r=t.map(o=>n.dataIdMap.get(o.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(s.dataId).id;return p2(a,r.length,Nt[s.dtype],i),s}var Fie={kernelName:wa,backendName:"wasm",setupFunc:Rie,kernelFunc:Die};function Hp(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var Oie={kernelName:La,backendName:"wasm",kernelFunc:Hp},h2;function Pie(e){h2=e.wasm.cwrap(di,null,["number","array","number","number","number","array","number"])}function to(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=Mie(t.x.shape,s.perm),i=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(i=!1);let o=zie(t.x.shape,s.perm),u={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let f=Hp({inputs:t,backend:n});return f.shape=o,f}let c=n.makeOutput(o,u.dtype),l=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(c.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(u.shape).buffer);return h2(l,h,u.shape.length,Nt[u.dtype],d,p,a.length),c}function zie(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function Mie(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let i=0;i<s.length;++i)s[i]>=r&&(a===-1||s[a]>s[i])&&(a=i);s[a]=r}return[n,s]}var Lie={kernelName:di,backendName:"wasm",kernelFunc:to,setupFunc:Pie};function Pr(e,t,n){let s=e.shape,r=e.shape.length,a=w.parseAxisParam(t,s),i=a,o=N.getAxesPermutation(i,r),u=null,c=!1;if(o!=null){let l=new Array(r);for(let h=0;h<l.length;h++)l[h]=s[o[h]];i=N.getInnerMostAxes(i.length,r),u=to({inputs:{x:e},attrs:{perm:o},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==d&&(c=!0)}return{transposed:u,originalAxes:a,axes:i,inputWasTransposed:c}}var f2;function Bie(e){f2=e.wasm.cwrap(rl,null,["number, number, number"])}function Vie(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,c=i,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Pr(i,r,t);if(h){let v=t.dataIdMap.get(l.dataId).id;c=l,u=v}let f=c.shape.length;N.assertAxesAreInnerMostDims("all",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(c.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;f2(u,b,v)}if(h&&t.disposeData(l.dataId),a){let v=N.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var Wie={kernelName:rl,backendName:"wasm",setupFunc:Bie,kernelFunc:Vie},m2;function Uie(e){m2=e.wasm.cwrap(al,null,["number, number, number"])}function Gie(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,c=i,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Pr(i,r,t);if(h){let v=t.dataIdMap.get(l.dataId).id;c=l,u=v}let f=c.shape.length;N.assertAxesAreInnerMostDims("any",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(c.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;m2(u,b,v)}if(h&&t.disposeData(l.dataId),a){let v=N.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var Hie={kernelName:al,backendName:"wasm",setupFunc:Uie,kernelFunc:Gie},g2;function qie(e){g2=e.wasm.cwrap(ka,null,["number","number","number","number","number"])}function jie(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,i=t.dataIdMap.get(a.dataId).id,o=i,u=a,{transposed:c,axes:l,inputWasTransposed:d}=Pr(a,r,t);if(d){let b=t.dataIdMap.get(c.dataId).id;b!==i&&(u=c,o=b)}let p=u.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=w.sizeFromShape(h.shape),g=u.shape[l[0]];return g2(o,Nt[u.dtype],m,g,f),d&&t.disposeData(c.dataId),h}var Kie={kernelName:ka,backendName:"wasm",kernelFunc:jie,setupFunc:qie},b2;function Xie(e){b2=e.wasm.cwrap(Ia,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Yie(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=n,l=N.computePool2DInfo(r.shape,i,o,1,u,c),d=l.filterHeight,p=l.filterWidth,h=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,b=l.strideHeight,y=l.strideWidth,v=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let x=s.makeOutput(l.outShape,"float32"),k=s.dataIdMap.get(x.dataId).id;return b2(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,b,y,v,k),x}var Qie={kernelName:Ia,backendName:"wasm",setupFunc:Xie,kernelFunc:Yie};function yn(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),i=w.inferFromImplicitShape(r,a);return w.assert(a===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}var Zie={kernelName:$o,backendName:"wasm",kernelFunc:yn},y2;function Jie(e){y2=e.wasm.cwrap(Sa,null,["number","array","number","number","array","number","number","number","number"])}function eoe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=r.shape.length,c=a.shape.length,l=i?r.shape[u-2]:r.shape[u-1],d=o?a.shape[c-1]:a.shape[c-2],p=i?r.shape[u-1]:r.shape[u-2],h=o?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),v=Go.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);w.assert(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,l,p]:[g,p,l],k=o?[b,h,d]:[b,d,h],T=yn({inputs:{x:r},backend:n,attrs:{shape:x}}),C=yn({inputs:{x:a},backend:n,attrs:{shape:k}}),R=n.dataIdMap.get(T.dataId).id,_=n.dataIdMap.get(C.dataId).id,P=i?T.shape[2]:T.shape[1],D=o?C.shape[1]:C.shape[2],F=Math.max(g,b),$=n.makeOutput([F,P,D],T.dtype),z=n.dataIdMap.get($.dataId).id,W=new Uint8Array(new Int32Array(T.shape).buffer),q=new Uint8Array(new Int32Array(C.shape).buffer);return y2(R,W,T.shape.length,_,q,C.shape.length,i,o,z),n.disposeData(T.dataId),n.disposeData(C.dataId),$.shape=v,$}var toe={kernelName:Sa,backendName:"wasm",setupFunc:Jie,kernelFunc:eoe};function ya(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,i]=kt.parseSliceParams(t,n,s),o=kt.isSliceContinous(t.shape,a,i),u=r.readSync(t.dataId),c=r.makeOutput(i,t.dtype),l=w.computeStrides(t.shape),d=r.dataIdMap.get(c.dataId);if(o){let f=kt.computeFlatOffset(a,l);return t.dtype==="string"?d.stringBytes=u.slice(f,f+w.sizeFromShape(i)):r.typedArrayFromHeap(c).set(u.subarray(f,f+w.sizeFromShape(i))),c}if(t.dtype==="string"){let f=Cd(u,a,i,t.shape,t.dtype);return d.stringBytes=f,c}let p=r.typedArrayFromHeap(c),h=t.shape.length;if(h===2)noe(u,l[0],p,a,i);else if(h===3)soe(u,l[0],l[1],p,a,i);else if(h===4)roe(u,l[0],l[1],l[2],p,a,i);else{let f=Cd(u,a,i,t.shape,t.dtype);p.set(f)}return c}function noe(e,t,n,s,r){let a=0,i=s[0],o=s[1],u=i+r[0];for(let c=i;c<u;c++){let l=c*t+o;n.set(e.subarray(l,l+r[1]),a),a+=r[1]}}function soe(e,t,n,s,r,a){let i=0,o=r[0],u=r[1],c=r[2],l=o+a[0],d=u+a[1];for(let p=o;p<l;p++)for(let h=u;h<d;h++){let f=p*t+h*n+c;s.set(e.subarray(f,f+a[2]),i),i+=a[2]}}function roe(e,t,n,s,r,a,i){let o=0,u=a[0],c=a[1],l=a[2],d=u+i[0],p=c+i[1],h=l+i[2],f=a[3];for(let m=u;m<d;m++)for(let g=c;g<p;g++)for(let b=l;b<h;b++){let y=m*t+g*n+b*s+f;r.set(e.subarray(y,y+i[3]),o),o+=i[3]}}var aoe={kernelName:Do,backendName:"wasm",kernelFunc:ya};function ioe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s,o=a.reduce((b,y)=>b*y),u=N.getReshaped(r.shape,a,o),c=N.getPermuted(u.length,a.length),l=N.getReshapedPermuted(r.shape,a,o),d=N.getSliceBeginCoords(i,a.length),p=N.getSliceSize(l,i,a.length),h=yn({inputs:{x:r},backend:n,attrs:{shape:u}}),f=to({inputs:{x:h},backend:n,attrs:{perm:c}}),m=yn({inputs:{x:f},backend:n,attrs:{shape:l}}),g=ya({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var ooe={kernelName:ro,backendName:"wasm",kernelFunc:ioe};function rc(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var uoe={kernelName:Ca,backendName:"wasm",kernelFunc:rc},loe=Yt(Na),v2;function coe(e){v2=e.wasm.cwrap(Nr,null,["number","number","number","number"])}function doe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o=n.dataIdMap.get(r.dataId).id,u=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(u.dataId).id;return v2(o,a,i,c),u}var poe={kernelName:Nr,backendName:"wasm",setupFunc:coe,kernelFunc:doe};function x2(e){let{inputs:t,backend:n}=e,s=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=N.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>w.sizeFromShape(h.shape)>0);if(a.length===1)return Hp({inputs:{x:a[0]},backend:n});let i=n.makeOutput(r,t[0].dtype);if(w.sizeFromShape(r)===0)return i;let o=a.map(h=>h.shape);if(N.assertParamsConsistent(o,s),a[0].dtype==="string"){let h=a.map(v=>{let x=w.sizeFromShape(v.shape.slice(s));return yn({inputs:{x:v},backend:n,attrs:{shape:[-1,x]}})}),f=h.map(v=>({vals:n.readSync(v.dataId),shape:v.shape}));r=N.computeOutShape(h.map(v=>v.shape),1);let m=h[0].shape[0]===1,g=By(f,r,t[0].dtype,m),b=N.computeOutShape(a.map(v=>v.shape),s);i.shape=b;let y=n.dataIdMap.get(i.dataId);return y.stringBytes=N.fromStringArrayToUint8(g),h.forEach(v=>n.disposeData(v.dataId)),i}let u=w.sizeFromShape(a[0].shape.slice(0,s)),c=0,l=a.map(h=>{let f=w.sizeFromShape(h.shape.slice(s));return c+=f,f}),d=a.map(h=>n.typedArrayFromHeap(h)),p=n.typedArrayFromHeap(i);for(let h=0;h<u;h++){let f=h*c;for(let m=0;m<d.length;m++){let g=l[m],b=h*g,y=d[m].subarray(b,b+g);p.set(y,f),f+=g}}return i}var hoe={kernelName:ao,backendName:"wasm",kernelFunc:x2},w2;function foe(e){w2=e.wasm.cwrap(Ta,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function moe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,i=s.dataIdMap.get(r.dataId).id,o=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:c,pad:l,dimRoundingMode:d,dataFormat:p}=n,h=N.convertConv2DDataFormat(p),f=N.computeConv2DInfo(r.shape,a.shape,u,c,l,d,!1,h),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,y=f.padInfo.right,v=f.padInfo.bottom,x=f.padInfo.left,k=f.dilationHeight,T=f.dilationWidth,C=f.strideHeight,R=f.strideWidth,_=f.inChannels,P=f.outChannels,D=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let F=s.makeOutput(f.outShape,"float32"),$=s.dataIdMap.get(F.dataId).id;return w2(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,b,y,v,x,D,k,T,C,R,_,P,$),F}var goe={kernelName:Ta,backendName:"wasm",setupFunc:foe,kernelFunc:moe},k2;function boe(e){k2=e.wasm.cwrap($a,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yoe(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,inputShape:l}=s,d=1,p=N.convertConv2DDataFormat(u),h=N.computeConv2DInfo(l,a.shape,i,d,o,c,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:y,inWidth:v,outChannels:x,outHeight:k,outWidth:T,strideHeight:C,strideWidth:R}=h,_=m-1-h.padInfo.top,P=g-1-h.padInfo.left,D=h.dataFormat==="channelsLast",F=w.computeStrides(h.inShape),$=w.computeStrides(r.shape),[z,W,q]=w.computeStrides(a.shape),K=F[0],j=D?F[1]:F[2],Q=D?F[2]:1,J=D?1:F[1],ne=$[0],se=D?$[1]:$[2],te=D?$[2]:1,ie=D?1:$[1],ee=t.makeOutput(h.inShape,"float32"),ce=t.dataIdMap.get(ee.dataId).id,me=t.dataIdMap.get(r.dataId).id,Ie=t.dataIdMap.get(a.dataId).id;return k2(me,Ie,f,m,g,y,v,b,k,T,x,C,R,_,P,z,W,q,K,j,Q,J,ne,se,te,ie,ce),ee}var voe={kernelName:$a,backendName:"wasm",setupFunc:boe,kernelFunc:yoe},xoe=Yt(Aa),woe=Yt(Ea),I2=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(I2||{}),S2;function koe(e){S2=e.wasm.cwrap(oo,null,["number","number","number","number","array","number","number","number","number","number"])}function Ioe(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:i}=s,{image:o,boxes:u,boxInd:c}=n,l=u.shape[0],[d,p]=i,h=[l,d,p,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=rc({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,b=t.dataIdMap.get(u.dataId).id,y=t.dataIdMap.get(c.dataId).id,v=t.makeOutput(h,"float32"),x=t.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(o.shape).buffer);return S2(g,b,y,l,k,d,p,I2[r],a,x),m!=null&&t.disposeData(m.dataId),v}var Soe={kernelName:oo,backendName:"wasm",setupFunc:koe,kernelFunc:Ioe},C2;function Coe(e){C2=e.wasm.cwrap(io,null,["number","number","number","number","number","number"])}function Noe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,u=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let c=N.getAxesPermutation([a],u),l=r;c!==null&&(l=to({inputs:{x:r},attrs:{perm:c},backend:n}));let d=N.getInnerMostAxes(1,u)[0];N.assertAxesAreInnerMostDims("cumsum",[d],u);let p=n.makeOutput(l.shape,l.dtype),h=l.shape[d],f=n.dataIdMap.get(l.dataId).id,m=n.dataIdMap.get(p.dataId).id;C2(f,i?1:0,o?1:0,h,m,Nt[r.dtype]);let g=p;if(c!==null){let b=N.getUndoAxesPermutation(c);g=to({inputs:{x:p},attrs:{perm:b},backend:n}),n.disposeData(l.dataId),n.disposeData(p.dataId)}return g}var Toe={kernelName:io,backendName:"wasm",setupFunc:Coe,kernelFunc:Noe},N2;function $oe(e){N2=e.wasm.cwrap(uo,null,["number","number","number","array","number","array","array","number","number"])}function Aoe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],c=i==="NHWC"?r.shape[2]:r.shape[3],l=i==="NHWC"?r.shape[3]:r.shape[1],d=u*a,p=c*a,h=l/(a*a),f=i==="NHWC"?[o,d,p,h]:[o,h,d,p],m=t.makeOutput(f,"float32"),b=t.dataIdMap.get(r.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),v=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),k=t.dataIdMap.get(m.dataId).id;return N2(b,a,i==="NHWC"?1:0,y,r.shape.length-1,v,x,f.length,k),m}var Eoe={kernelName:uo,backendName:"wasm",setupFunc:$oe,kernelFunc:Aoe},T2;function _oe(e){T2=e.wasm.cwrap(_a,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Roe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,i=s.dataIdMap.get(r.dataId).id,o=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:c,pad:l,dimRoundingMode:d}=n,p=c==null?[1,1]:c,h=N.computeConv2DInfo(r.shape,a.shape,u,p,l,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,b=h.padInfo.right,y=h.padInfo.bottom,v=h.padInfo.left,x=h.dilationHeight,k=h.dilationWidth,T=h.strideHeight,C=h.strideWidth,R=h.inChannels,_=h.outChannels,P=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let D=s.makeOutput(h.outShape,"float32"),F=s.dataIdMap.get(D.dataId).id;return T2(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,b,y,v,P,x,k,T,C,R,_,F),D}var Doe={kernelName:_a,backendName:"wasm",setupFunc:_oe,kernelFunc:Roe},Foe=Yt(Da),Ooe=!1,Poe=dn(lo,Ooe,"bool"),zoe=Yt(Fa,"float32");function Mm(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,i=r.shape.length,o=r.shape.slice(),u=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),yn({inputs:{x:r},backend:s,attrs:{shape:o}})}var Moe={kernelName:co,backendName:"wasm",kernelFunc:Mm};function $2(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var Loe={kernelName:hl,backendName:"wasm",kernelFunc:$2},A2;function Boe(e){A2=e.wasm.cwrap(ho,null,["number","number","number","number","number","number"])}function Voe(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,u,c,l]=s.shape;return A2(a,o,u,c,l,i),r}var Woe={kernelName:ho,backendName:"wasm",kernelFunc:Voe,setupFunc:Boe},Uoe=Yt(Oa),Goe=!1,Hoe=dn(Pa,Goe),E2;function qoe(e){E2=e.wasm.cwrap(za,null,["number","number","number","number","number","number","number"])}function joe(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:i,variance:o,offset:u,scale:c}=n,l=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,h=u!=null?t.dataIdMap.get(u.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return E2(l,d,p,h,f,r,g),m}var Koe={kernelName:za,backendName:"wasm",setupFunc:qoe,kernelFunc:joe},_2;function Xoe(e){_2=e.wasm.cwrap(ra,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Yoe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:l,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(r.shape,a.shape,u,l,c,p),g=Gp[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let b=s.dataIdMap.get(r.dataId).id,y=s.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(i!=null){let te=s.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${te.shape}) does not match the number of output channels (${v})`);x=te.id}let k=m.filterHeight,T=m.filterWidth,C=m.padInfo.top,R=m.padInfo.right,_=m.padInfo.bottom,P=m.padInfo.left,D=m.dilationHeight,F=m.dilationWidth,$=m.strideHeight,z=m.strideWidth,W=m.inChannels,q=m.padInfo.type==="SAME"?1:0,K=m.batchSize,j=m.inHeight,Q=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let J=s.makeOutput(m.outShape,"float32"),ne=s.dataIdMap.get(J.dataId).id,se=o==null?0:s.dataIdMap.get(o.dataId).id;return _2(b,K,j,Q,y,k,T,x,C,R,_,P,q,D,F,$,z,W,v,g,se,f||0,ne),J}var Qoe={kernelName:ra,backendName:"wasm",setupFunc:Xoe,kernelFunc:Yoe},R2;function Zoe(e){R2=e.wasm.cwrap(aa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Joe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:l,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(r.shape,a.shape,u,l,c,p,!0),g=Gp[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=s.dataIdMap.get(r.dataId).id,y=s.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(i!=null){let te=s.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${te.shape}) does not match the number of output channels (${v})`);x=te.id}let k=m.filterHeight,T=m.filterWidth,C=m.padInfo.top,R=m.padInfo.right,_=m.padInfo.bottom,P=m.padInfo.left,D=m.dilationHeight,F=m.dilationWidth,$=m.strideHeight,z=m.strideWidth,W=m.inChannels,q=m.padInfo.type==="SAME"?1:0,K=m.batchSize,j=m.inHeight,Q=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let J=s.makeOutput(m.outShape,"float32"),ne=s.dataIdMap.get(J.dataId).id,se=o==null?0:s.dataIdMap.get(o.dataId).id;return R2(b,K,j,Q,y,k,T,x,C,R,_,P,q,D,F,$,z,W,v,g,se,f||0,ne),J}var eue={kernelName:aa,backendName:"wasm",setupFunc:Zoe,kernelFunc:Joe},D2;function tue(e){D2=e.wasm.cwrap(mo,null,["number","number","number","number","number","number","array","number"])}function nue(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,i,o,u]=ek.prepareAndValidate(s,r),c=t.makeOutput(a,s.dtype);if(i===0)return c;let l=r.shape,d=l[l.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),b=t.dataIdMap.get(c.dataId).id;return D2(h,Nt[s.dtype],m,i,d,o,g,b),c}var sue={kernelName:mo,backendName:"wasm",setupFunc:tue,kernelFunc:nue},F2;function rue(e){F2=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function aue(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0],c=t.readSync(a.dataId),l=r.shape[u];for(let _=0;_<c.length;++_){let P=c[_];w.assert(P<=l-1&&P>=0,()=>`GatherV2: the index value ${P} is not in [0, ${l-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(r,a,u,o),p=yn({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=w.sizeFromShape(a.shape),f=yn({inputs:{x:a},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(w.sizeFromShape(r.shape)===0)return g;let b=p.shape.length-1,v=t.dataIdMap.get(p.dataId).id,k=t.dataIdMap.get(f.dataId).id,T=t.dataIdMap.get(g.dataId).id,C=new Uint8Array(new Int32Array(w.computeStrides(p.shape)).buffer),R=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return F2(v,Nt[r.dtype],C,b,k,d.batchSize,R,T),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var iue={kernelName:fo,backendName:"wasm",setupFunc:rue,kernelFunc:aue},oue=!1,uue=dn(go,oue,"bool"),lue=!1,cue=dn(Ma,lue,"bool"),O2;function due(e){O2=e.wasm.cwrap(Ba,null,["number","number","number","number"])}function pue(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let i=s.dataIdMap.get(a.dataId).id;O2(r,Nt[t.dtype],n,i)}return a}var hue={kernelName:Ba,backendName:"wasm",setupFunc:due,kernelFunc:pue},fue=!1,mue=dn(bo,fue,"bool"),gue=!1,bue=dn(yo,gue,"bool"),yue=Yt(Va),vue=!1,xue=dn(vo,vue,"bool"),P2;function wue(e){P2=e.wasm.cwrap(Wa,null,["number","number","number","number"])}function kue(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,c=i,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Pr(i,r,t);if(h){let v=t.dataIdMap.get(l.dataId).id;c=l,u=v}let f=c.shape.length;N.assertAxesAreInnerMostDims("max",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(c.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;P2(u,Nt[i.dtype],b,v)}if(h&&t.disposeData(l.dataId),a){let v=N.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var Iue={kernelName:Wa,backendName:"wasm",setupFunc:wue,kernelFunc:kue},Sue=!1,Cue=dn(Ua,Sue),z2;function Nue(e){z2=e.wasm.cwrap(Ga,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Tue(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;w.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=n,l=N.computePool2DInfo(r.shape,i,o,1,u,c),d=l.filterHeight,p=l.filterWidth,h=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,b=l.dilationHeight,y=l.dilationWidth,v=l.strideHeight,x=l.strideWidth,k=l.inChannels,T=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let C=s.makeOutput(l.outShape,"float32"),R=s.dataIdMap.get(C.dataId).id;return z2(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,b,y,v,x,k,T,R),C}var $ue={kernelName:Ga,backendName:"wasm",setupFunc:Nue,kernelFunc:Tue},M2;function Aue(e){M2=e.wasm.cwrap(Ha,null,["number, number, number"])}function Eue(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,c=i,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Pr(i,r,t),f=d;if(h){let x=t.dataIdMap.get(l.dataId).id;x!==o&&(c=l,u=x,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("mean",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),b=w.sizeFromShape(g),y=c;c.dtype!=="float32"&&(y=rc({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(y.dataId).id);let v=t.makeOutput(m,"float32");if(w.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(v.dataId).id;M2(u,b,x)}if(h&&t.disposeData(l.dataId),a){let x=N.expandShapeToKeepDim(v.shape,p);v.shape=x}return c.dtype!=="float32"&&t.disposeData(y.dataId),v}var _ue={kernelName:Ha,backendName:"wasm",setupFunc:Aue,kernelFunc:Eue},L2;function Rue(e){L2=e.wasm.cwrap(qa,null,["number","number","number","number"])}function Due(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,c=i,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Pr(i,r,t);if(h){let v=t.dataIdMap.get(l.dataId).id;v!==o&&(c=l,u=v)}let f=c.shape.length;N.assertAxesAreInnerMostDims("min",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;L2(u,Nt[i.dtype],b,v)}if(h&&t.disposeData(l.dataId),a){let v=N.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var Fue={kernelName:qa,backendName:"wasm",setupFunc:Rue,kernelFunc:Due},Oue=!1,Pue=dn(ja,Oue),B2=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(B2||{}),V2;function zue(e){V2=e.wasm.cwrap(Ka,null,["number","array","number","number","array","array","number","number"])}function Mue(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),l=s.map(f=>f[0]),d=s.map(f=>f[1]),p=new Uint8Array(new Int32Array(l).buffer),h=new Uint8Array(new Int32Array(d).buffer);return V2(i,c,t.shape.length,Nt[t.dtype],p,h,B2[r],u),o}var Lue={kernelName:Ka,backendName:"wasm",kernelFunc:Mue,setupFunc:zue},Bue=!0,Vue=dn(Xa,Bue),Wue=Yt(xo);function gv(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:i}}var W2;function Uue(e){W2=e.wasm.cwrap(ko,"number",["number","number","number","number","number"])}function Gue(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i}=s,{boxes:o,scores:u}=n,c=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(u.dataId).id,d=W2(c,l,a,r,i),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=gv(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}var Hue={kernelName:ko,backendName:"wasm",setupFunc:Uue,kernelFunc:Gue},U2;function que(e){U2=e.wasm.cwrap(xl,"number",["number","number","number","number","number","bool"])}function jue(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i,padToMaxOutputSize:o}=s,{boxes:u,scores:c}=n,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=U2(l,d,a,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=gv(t,p);t.wasm._free(m);let b=t.makeOutput([f],"int32",h),y=t.makeOutput([],"int32",g);return[b,y]}var Kue={kernelName:xl,backendName:"wasm",setupFunc:que,kernelFunc:jue},G2;function Xue(e){G2=e.wasm.cwrap(Io,"number",["number","number","number","number","number","number"])}function Yue(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i,softNmsSigma:o}=s,{boxes:u,scores:c}=n,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=G2(l,d,a,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=gv(t,p);t.wasm._free(g);let b=t.makeOutput([f],"int32",h),y=t.makeOutput([f],"float32",m);return[b,y]}var Que={kernelName:Io,backendName:"wasm",setupFunc:Xue,kernelFunc:Yue},Zue=!1,Jue=dn(wo,Zue,"bool"),H2;function ele(e){H2=e.wasm.cwrap(Co,null,["number","number","number","number","number"])}function tle(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,u=n.makeOutput([...r.shape,a],"int32"),c=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(r.dataId).id;return H2(d,a,i,o,c),u}var nle={kernelName:Co,backendName:"wasm",setupFunc:ele,kernelFunc:tle};function sle(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var rle={kernelName:So,backendName:"wasm",kernelFunc:sle};function ale(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Mm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(l=>{w.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let d=Mm({inputs:{input:l},backend:n,attrs:{dim:r}});return o.push(d),d}),c=x2({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(l=>n.disposeData(l.dataId)),c}var ile={kernelName:No,backendName:"wasm",kernelFunc:ale},q2;function ole(e){q2=e.wasm.cwrap(Ya,null,["number","array","number","number","array","array","number","number"])}function ule(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(w.sizeFromShape(t.shape)===0)return $2({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),d=s.map(m=>m[0]),p=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return q2(i,l,t.shape.length,Nt[t.dtype],h,f,r,c),o}var j2={kernelName:Ya,backendName:"wasm",kernelFunc:ule,setupFunc:ole},lle=!1,cle=dn(Qa,lle),K2;function dle(e){K2=e.wasm.cwrap(Za,null,["number","number","number"])}function ple(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,o=a,u=s,c=u;u.dtype!=="float32"&&(c=rc({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(c.dataId).id);let l=n.makeOutput(s.shape,"float32"),d=n.dataIdMap.get(l.dataId).id;return K2(o,i,d),u.dtype!=="float32"&&n.disposeData(c.dataId),l}var hle={kernelName:Za,backendName:"wasm",setupFunc:dle,kernelFunc:ple},X2;function fle(e){X2=e.wasm.cwrap(To,null,["number","number","number","number"])}function mle(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,c=i,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Pr(i,r,t),f=d;if(h){let v=t.dataIdMap.get(l.dataId).id;v!==o&&(c=l,u=v,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("prod",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),b=w.sizeFromShape(g),y=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;X2(u,b,Nt[y.dtype],v)}if(h&&t.disposeData(l.dataId),a){let v=N.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var gle={kernelName:To,backendName:"wasm",setupFunc:fle,kernelFunc:mle},ble=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=Uy(s,r,a,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u},yle={kernelName:wl,backendName:"wasm",kernelFunc:ble},vle=!0,xle=dn(Ra,vle),wle=Yt(Ja),kle=Yt(ti),Y2;function Ile(e){Y2=e.wasm.cwrap(ei,null,["number","number","number","number","number","number","number","number","number","number"])}function Sle(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,c]=o,[l,d,p,h]=r.shape,f=[l,u,c,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=rc({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let b=m.id,y=t.makeOutput(f,"float32");if(w.sizeFromShape(r.shape)===0)return y;let v=t.dataIdMap.get(y.dataId).id;return Y2(b,l,d,p,h,u,c,a?1:0,i?1:0,v),g!=null&&t.disposeData(g.dataId),y}var Cle={kernelName:ei,backendName:"wasm",setupFunc:Ile,kernelFunc:Sle},Q2;function Nle(e){Q2=e.wasm.cwrap(Ao,null,["number","array","number","array","number","number"])}function Tle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=w.parseAxisParam(a,r.shape);if(r.shape.length===0)return Hp({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(i).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);Q2(u,l,i.length,d,r.shape.length,c);let p=yn({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),p}var $le={kernelName:Ao,backendName:"wasm",kernelFunc:Tle,setupFunc:Nle},Z2;function Ale(e){Z2=e.wasm.cwrap(Uo,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Ele(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:i,center:o}=s,u=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(u.dataId).id,[d,p,h,f]=r.shape,[m,g]=N.getImageCenter(o,p,h),b=i===0,y=255,v=typeof i=="number"?[i,i,i,b?0:y]:[...i,y],x=new Uint8Array(new Int32Array(v).buffer);return Z2(c,d,p,h,f,a,m,g,x,v.length,l),u}var _le={kernelName:Uo,backendName:"wasm",kernelFunc:Ele,setupFunc:Ale},Rle=Yt(Eo),Dle=Yt(ni),J2;function Fle(e){J2=e.wasm.cwrap(_o,null,["number","number","number","number","number","number","array","number","number"])}function Ole(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:i}=s,o=t.makeOutput(i,a.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=nk.calculateShapes(a,r,i),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(d).buffer),y=t.dataIdMap.get(o.dataId).id;return J2(f,g,Nt[a.dtype],u,c,l,b,p,y),o}var Ple={kernelName:_o,backendName:"wasm",setupFunc:Fle,kernelFunc:Ole},eN;function zle(e){eN=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Mle(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(a.dataId).id,c=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(c.dataId).id,d=s.shape.length,p=r.shape.length,h=d===0||d>1||p===1?1:w.sizeFromShape(r.shape.slice(1));return eN(i,o,u,h,l),c}var Lle={kernelName:Ro,backendName:"wasm",kernelFunc:Mle,setupFunc:zle},tN;function Ble(e){tN=e.wasm.cwrap(ri,null,["number","number"])}function Vle(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return w.sizeFromShape(r.shape)===0||tN(s,a),r}var Wle={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Ble,kernelFunc:Vle},Ule=Yt(si),nN;function Gle(e){nN=e.wasm.cwrap(oi,null,["number","number","number","number"])}function Hle(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(a.dataId).id,o=n.shape[s],u=w.sizeFromShape(n.shape)/o;return w.sizeFromShape(a.shape)===0||nN(r,i,o,u),a}var qle={kernelName:oi,backendName:"wasm",setupFunc:Gle,kernelFunc:Hle};function jle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s,o=w.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let T=1+a.length;T<r.shape.length;++T)u.push([0,0]);let c=j2.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),l=N.getReshaped(c.shape,a,o,!1),d=N.getPermuted(l.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,o,!1),m=yn({inputs:{x:c},backend:n,attrs:{shape:l}}),y=to({inputs:{x:m},backend:n,attrs:{perm:d}}),k=yn({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(y.dataId),k}var Kle={kernelName:Oo,backendName:"wasm",kernelFunc:jle},sN;function Xle(e){sN=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Yle(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=n,o=s.shape[0],u=s.shape[1],c=t.readSync(a.dataId)[0],l=[o+c,u],d=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(l,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(l.slice(0,1),r.dtype),b=t.dataIdMap.get(g.dataId).id,y=t.makeOutput([c],"bool"),v=t.dataIdMap.get(y.dataId).id,x=t.makeOutput([o],s.dtype),k=t.dataIdMap.get(x.dataId).id,T=t.makeOutput([4],"int32"),C=t.dataIdMap.get(T.dataId).id,R=sN(d,p,Nt[r.dtype],o,c,u,h,m,b,v,k,C),_=t.readSync(T.dataId),P;switch(_[0]){case 1:{P=N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(_[1]);break}case 2:{P=N.getSparseFillEmptyRowsNegativeIndexErrorMessage(_[1],_[2]);break}case 3:P=N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(_[1],_[2],_[3]);break;default:P=""}if(t.disposeData(T.dataId),P)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(x.dataId),new Error(P);let D=f,F=g;return R!==l[0]&&(D=ya({inputs:{x:f},attrs:{begin:0,size:[R,u]},backend:t}),F=ya({inputs:{x:g},attrs:{begin:0,size:R},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[D,F,y,x]}var Qle={kernelName:Kd,backendName:"wasm",setupFunc:Xle,kernelFunc:Yle},rN;function Zle(e){rN=e.wasm.cwrap(Tl,null,["number","number","number","number","number","number","number"])}function Jle(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=t.dataIdMap.get(s.dataId).id,o=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(a.dataId).id,c=s.shape[0],l=w.sizeFromShape(a.shape),d=t.makeOutput([c,l],s.dtype),p=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([l],a.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;rN(i,o,u,c,p,f,g);let b=t.readSync(m.dataId),y;switch(b[0]){case 0:{y=N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{y=N.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:y=N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let v=Array.from(t.readSync(r.dataId)),x=Array.from(t.readSync(h.dataId));y=N.getSparseReshapeInputOutputMultipleErrorMessage(v,x);break}case 4:{let v=Array.from(t.readSync(r.dataId)),x=Array.from(t.readSync(h.dataId));y=N.getSparseReshapeInputOutputMismatchErrorMessage(v,x);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(d.dataId),t.disposeData(h.dataId),new Error(y);return[d,h]}var ece={kernelName:Tl,backendName:"wasm",setupFunc:Zle,kernelFunc:Jle},aN;function iN(e){aN=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function oN(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:i}=s,o=a.shape[0],u=n.readSync(i.dataId,o-1,o)[0],l=o>0?u+1:0;if(l<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=r.shape.slice();d[0]=l;let p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(i.dataId).id,m=n.makeOutput(d,r.dtype),g=n.dataIdMap.get(m.dataId).id,b=n.makeOutput([4],"int32"),y=n.dataIdMap.get(b.dataId).id;aN(p,Nt[r.dtype],r.shape[0],h,f,g,y,t,0);let v=n.readSync(b.dataId),x;switch(v[0]){case 0:{x=N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(v[1],v[2]);break;case 3:x=N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(v[1],v[2],v[3]);break;default:x=""}if(n.disposeData(b.dataId),x)throw n.disposeData(m.dataId),new Error(x);return m}function tce(e){return oN(e,!0)}var nce={kernelName:Xd,backendName:"wasm",setupFunc:iN,kernelFunc:tce};function sce(e){return oN(e,!1)}var rce={kernelName:Yd,backendName:"wasm",setupFunc:iN,kernelFunc:sce};function ace(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=n,o=w.parseAxisParam(i,r.shape)[0],u=N.prepareSplitSize(r,a,o),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(d=>{let p=[...l];p[o]=d;let h=ya({inputs:{x:r},attrs:{begin:c,size:p},backend:s});return c[o]+=d,h})}var ice={kernelName:Po,backendName:"wasm",kernelFunc:ace},oce=Yt(ai),uce=Yt($l),lce=!0,cce=dn(ui,lce),uN;function dce(e){uN=e.wasm.cwrap(pi,null,["number","number","number","number"])}function pce(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,i=t.dataIdMap.get(a.dataId).id,o=t.makeOutput(a.shape,a.dtype),u=t.dataIdMap.get(o.dataId).id;return uN(i,r,Nt[a.dtype],u),o}var hce={kernelName:pi,backendName:"wasm",setupFunc:dce,kernelFunc:pce},lN;function fce(e){lN=e.wasm.cwrap(zo,null,["number","array","number","array","array","array","array","array","number","number"])}function mce(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=kt.sliceInfo(r.shape,a,i,o,u,c,l,d,p),k;if(m)k=yn({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let T=kt.computeOutShape(y,v,x),C=ya({inputs:{x:r},backend:t,attrs:{begin:y,size:T}});k=yn({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}else{let T=t.makeOutput(h,"float32"),C=t.dataIdMap.get(r.dataId).id,R=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),_=new Uint8Array(new Int32Array(y).buffer),P=new Uint8Array(new Int32Array(v).buffer),D=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(h).buffer),$=new Uint8Array(new Int32Array(w.computeStrides(h)).buffer),z=t.dataIdMap.get(T.dataId).id;lN(C,R,r.shape.length,_,P,D,F,$,h.length,z),k=yn({inputs:{x:T},backend:t,attrs:{shape:f}}),t.disposeData(T.dataId)}return k}var gce={kernelName:zo,backendName:"wasm",setupFunc:fce,kernelFunc:mce},bce=!0,yce=dn(li,bce),cN;function vce(e){cN=e.wasm.cwrap(ii,null,["number","number","number","number"])}function xce(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,c=i,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Pr(i,r,t),f=d;if(h){let v=t.dataIdMap.get(l.dataId).id;v!==o&&(c=l,u=v,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("sum",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),b=w.sizeFromShape(g),y=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;cN(u,b,Nt[y.dtype],v)}if(h&&t.disposeData(l.dataId),a){let v=N.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var wce={kernelName:ii,backendName:"wasm",setupFunc:vce,kernelFunc:xce},kce=Yt(Mo),Ice=Yt(ci),dN;function Sce(e){dN=e.wasm.cwrap(Tr,null,["number","array","number","array","number","number"])}function Cce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:i}=s,o=new Array(r.shape.length);for(let p=0;p<o.length;p++)o[p]=r.shape[p]*i[p];let u=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(o).buffer),l=n.makeOutput(o,r.dtype),d=n.dataIdMap.get(l.dataId).id;return dN(a,u,r.shape.length,c,o.length,Nt[l.dtype],d),l}var Nce={kernelName:Tr,backendName:"wasm",setupFunc:Sce,kernelFunc:Cce},pN;function Tce(e){pN=e.wasm.cwrap(Lo,null,["number","array","number","number","number","bool","number","number"])}var $ce=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,i=t.dataIdMap.get(s.dataId).id,o=new Uint8Array(new Int32Array(s.shape).buffer),u=s.shape.slice();u[u.length-1]=r;let c=t.makeOutput(u,s.dtype),l=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(u,"int32"),p=t.dataIdMap.get(d.dataId).id;return pN(i,o,s.shape.length,Nt[s.dtype],r,a,l,p),[c,d]},Ace={kernelName:Lo,backendName:"wasm",setupFunc:Tce,kernelFunc:$ce},hN;function Ece(e){hN=e.wasm.cwrap(Bo,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function _ce(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=s,[l,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[l,f,m,h],b=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),y=t.makeOutput(g,r.dtype),v=t.dataIdMap.get(y.dataId).id,k=t.dataIdMap.get(r.dataId).id,C=t.dataIdMap.get(a.dataId).id,R=i==="nearest"?1:2,_;switch(o){case"constant":_=1;break;case"reflect":_=2;break;case"wrap":_=3;break;case"nearest":_=4;break;default:_=1;break}return hN(k,C,a.shape[0]>1,l,f,m,h,p,d,b,r.shape.length-1,R,_,u,v),y}var Rce={kernelName:Bo,backendName:"wasm",setupFunc:Ece,kernelFunc:_ce};function Dce(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r.shape[a],o=r.shape.length,u=new Array(o-1),c=0;for(let h=0;h<o;h++)h!==a&&(u[c++]=r.shape[h]);let l=new Array(i),d=new Array(o).fill(0),p=r.shape.slice();p[a]=1;for(let h=0;h<l.length;h++)d[a]=h,l[h]=ya({inputs:{x:r},attrs:{begin:d,size:p},backend:n});return l.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:u}))}var Fce={kernelName:Vo,backendName:"wasm",kernelFunc:Dce};function Oce(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var Pce={kernelName:Wo,backendName:"wasm",kernelFunc:Oce},zce=[$ie,Aie,_ie,Fie,Wie,Hie,Kie,Qie,toe,ooe,uoe,loe,poe,hoe,goe,voe,xoe,woe,Soe,Toe,Eoe,Doe,Foe,Poe,zoe,Moe,Loe,Woe,Uoe,Hoe,Koe,Qoe,eue,sue,iue,uue,cue,Oie,hue,mue,bue,yue,xue,Iue,Cue,$ue,_ue,Fue,Pue,Lue,Vue,Wue,Hue,Kue,Que,Jue,nle,rle,ile,j2,cle,hle,gle,yle,xle,wle,kle,Zie,Cle,$le,_le,Rle,Dle,Ple,Lle,Wle,Ule,aoe,qle,Kle,Qle,ece,nce,rce,ice,oce,uce,cce,hce,gce,yce,wce,kce,Ice,Nce,Ace,Rce,Lie,Fce,Pce];for(let e of zce)Al(e);var Lm=X();Lm.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));Lm.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Lm.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var dw=va(ET()),Mce='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',Lce=va(_T()),Bce=class extends tl{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(fN),Bm=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Fd(this,ks())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let i=w.sizeFromShape(n),o=i*w.bytesPerElement(s),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:i}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||w.sizeFromShape(a);let o=w.bytesPerElement(r),u=this.wasm.HEAPU8.slice(s+t*o,s+n*o);return Uce(u.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Vce(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function pw(e,t,n){if(_d!=null)return _d;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),Mu!=null&&Mu[s]!=null?Mu[s]:n+s}async function Wce(){let[e,t]=await Promise.all([X().getAsync("WASM_HAS_SIMD_SUPPORT"),X().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(o,u)=>{if(o.endsWith(".worker.js")){let c=Mce,l=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(l)}return o.endsWith(".wasm")?pw(e,t,Fu!=null?Fu:u):u+o},bv&&(r.instantiateWasm=Vce(pw(e,t,Fu!=null?Fu:"")));let a=!1;r.onAbort=()=>{if(a||Lu)return;Lu=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let i;t&&e&&_d==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+dw.default.toString()],{type:"text/javascript"}),i=(0,dw.default)(r)):i=(0,Lce.default)(r),i.then(o=>{a=!0,Lu=!1;let u=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",u,["number"]),dispose:o.cwrap("dispose",u,[])},n({wasm:o})})})}function Uce(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Gce=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],_d=null,Fu=null,Mu={},Lu=!1,bv=!1;function spe(e,t=!1){if(gk("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Lu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");_d=e,bv=t}function rpe(e,t=!1){if(Lu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Fu=e;else{Mu=e;let n=Gce.filter(s=>Mu[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}bv=t}var fN=-1,Bm=-1;function ape(e){fN=e}function ipe(){if(Bm===-1)throw new Error("WASM backend not initialized.");return Bm}var ope="0.0.0",Hce=2;sp("wasm",async()=>{let{wasm:e}=await Wce();return new Bce(e)},Hce);var ir="3.13.0-20220214",upe={tfjs:ir,"tfjs-core":ir,"tfjs-data":ir,"tfjs-layers":ir,"tfjs-converter":ir,"tfjs-backend-cpu":ir,"tfjs-backend-webgl":ir,"tfjs-backend-wasm":ir};export{so as Abs,nl as Acos,sl as Acosh,Jg as AdadeltaOptimizer,eb as AdagradOptimizer,tb as AdamOptimizer,nb as AdamaxOptimizer,Cr as Add,wa as AddN,rl as All,al as Any,ka as ArgMax,il as ArgMin,ol as Asin,ul as Asinh,ll as Atan,dl as Atan2,cl as Atanh,Ia as AvgPool,zd as AvgPool3D,qm as AvgPool3DGrad,Hm as AvgPoolGrad,Bce as BackendWasm,Sa as BatchMatMul,ro as BatchToSpaceND,jm as Bincount,Km as BroadcastArgs,t$ as BroadcastTo,X4 as Callback,oL as CallbackList,Ca as Cast,Na as Ceil,Nr as ClipByValue,Md as Complex,Ld as ComplexAbs,ao as Concat,Ta as Conv2D,Xm as Conv2DBackpropFilter,$a as Conv2DBackpropInput,Bd as Conv3D,Ym as Conv3DBackpropFilterV2,Qm as Conv3DBackpropInputV2,Aa as Cos,Ea as Cosh,oo as CropAndResize,io as Cumsum,cL as CustomCallback,Fd as DataStorage,Zm as DenseBincount,uo as DepthToSpace,_a as DepthwiseConv2dNative,Jm as DepthwiseConv2dNativeBackpropFilter,eg as DepthwiseConv2dNativeBackpropInput,tg as Diag,Vd as Dilation2D,zf as Dilation2DBackpropFilter,Pf as Dilation2DBackpropInput,Cw as ENV,Y4 as EarlyStopping,Wd as Einsum,Da as Elu,ng as EluGrad,XT as Environment,lo as Equal,pl as Erf,Fa as Exp,co as ExpandDims,po as Expm1,sg as FFT,hl as Fill,ho as FlipLeftRight,Oa as Floor,Pa as FloorDiv,ad as FromPixels,za as FusedBatchNorm,ra as FusedConv2D,aa as FusedDepthwiseConv2D,Ff as GPGPUContext,mo as GatherNd,fo as GatherV2,tW as GraphModel,go as Greater,Ma as GreaterEqual,lL as History,rg as IFFT,La as Identity,Ud as Imag,Rt as InputSpec,fl as IsFinite,ml as IsInf,gl as IsNan,tl as KernelBackend,Hd as LRN,ig as LRNGrad,eL as LayerVariable,mr as LayersModel,Ba as LeakyRelu,bo as Less,yo as LessEqual,ag as LinSpace,Va as Log,bl as Log1p,n$ as LogSoftmax,vo as LogicalAnd,yl as LogicalNot,Gd as LogicalOr,cS as MathBackendCPU,uC as MathBackendWebGL,Wa as Max,Ga as MaxPool,qd as MaxPool3D,ug as MaxPool3DGrad,og as MaxPoolGrad,lg as MaxPoolWithArgmax,Ua as Maximum,Ha as Mean,qa as Min,ja as Minimum,Ka as MirrorPad,vl as Mod,sb as MomentumOptimizer,cg as Multinomial,Xa as Multiply,xo as Neg,ko as NonMaxSuppressionV3,xl as NonMaxSuppressionV4,Io as NonMaxSuppressionV5,wo as NotEqual,F$ as OP_SCOPE_SUFFIX,Co as OneHot,So as OnesLike,_r as Optimizer,Wr as OptimizerConstructors,No as Pack,Ya as PadV2,qce as Pool,Qa as Pow,Za as Prelu,To as Prod,rb as RMSPropOptimizer,Rr as RNN,wl as Range,C$ as Rank,jd as Real,Ra as RealDiv,kl as Reciprocal,EF as Reduction,Ja as Relu,ti as Relu6,$o as Reshape,ei as ResizeBilinear,pg as ResizeBilinearGrad,Il as ResizeNearestNeighbor,dg as ResizeNearestNeighborGrad,Ao as Reverse,Uo as RotateWithOffset,Eo as Round,ni as Rsqrt,fp as SGDOptimizer,_o as ScatterNd,Ro as Select,Sl as Selu,$b as Sequential,ri as Sigmoid,Cl as Sign,si as Sin,Fo as Sinh,Do as Slice,oi as Softmax,Nl as Softplus,Oo as SpaceToBatchND,Kd as SparseFillEmptyRows,Tl as SparseReshape,Xd as SparseSegmentMean,Yd as SparseSegmentSum,Qd as SparseToDense,Po as SplitV,ai as Sqrt,$l as Square,ui as SquaredDifference,pi as Step,zo as StridedSlice,Zd as StringNGrams,hg as StringSplit,fg as StringToHashBucketFast,li as Sub,ii as Sum,Ns as SymbolicTensor,Mo as Tan,ci as Tanh,tt as Tensor,Vt as TensorBuffer,Tr as Tile,Lo as TopK,Bo as Transform,di as Transpose,mg as Unique,Vo as Unpack,Jd as UnsortedSegmentSum,od as Variable,Wo as ZerosLike,sa as _FusedMatMul,Mt as abs,mE as acos,bE as acosh,oe as add,vE as addN,yk as all,Zf as any,Gu as argMax,SE as argMin,NE as asin,$E as asinh,EE as atan,RE as atan2,FE as atanh,Ag as avgPool,kk as avgPool3d,uE as backend,N as backend_util,cde as basicLSTMCell,qu as batchNorm,JE as batchNorm2d,t_ as batchNorm3d,s_ as batchNorm4d,Eg as batchToSpaceND,Ik as bincount,Mde as booleanMaskAsync,i_ as broadcastArgs,jc as broadcastTo,Go as broadcast_util,Zw as browser,_e as buffer,Kde as callbacks,pe as cast,l_ as ceil,Vn as clipByValue,pr as clone,ia as complex,Dt as concat,p_ as concat1d,f_ as concat2d,g_ as concat3d,y_ as concat4d,uM as constraints,Sk as conv1d,la as conv2d,Ck as conv2dTranspose,Nk as conv3d,N_ as conv3dTranspose,Xce as copyRegisteredKernels,Rg as cos,$k as cosh,Jk as cosineWindow,Ak as cumsum,qs as customGrad,nW as data,__ as denseBincount,gk as deprecationWarn,D_ as depthToSpace,rp as depthwiseConv2d,Yde as deregisterOp,np as device_util,dde as diag,z_ as dilation2d,Jce as disableDeprecationWarnings,Ee as dispose,ede as disposeVariables,Se as div,W_ as divNoNan,pde as dot,C3 as dropout,H_ as einsum,ap as elu,Zce as enableDebugMode,Qce as enableProdMode,N3 as enclosingPowerOfTwo,ks as engine,X as env,Yn as equal,K_ as erf,Qn as exp,Pn as expandDims,Z_ as expm1,Ek as eye,Kg as fft,Fl as fill,ode as findBackend,ude as findBackendFactory,ip as floor,bk as floorDiv,hX as forceHalfFloat,pa as fused,ju as gather,k3 as gatherND,ek as gather_util,ade as getBackend,Rv as getGradient,Mf as getKernel,Lf as getKernelsForBackend,ipe as getThreadsCount,tK as gpgpu_util,mde as grad,gde as grads,Un as greater,Ho as greaterEqual,fd as ifft,Dg as imag,ls as image,Bde as inTopKAsync,gM as initializers,aB as input,An as io,qk as irfft,hde as isFinite,fde as isInf,lR as isNaN,jt as keep,ys as kernel_impls,ZM as layers,Fg as leakyRelu,_k as less,qo as lessEqual,cO as linalg,hR as linspace,Qde as loadGraphModel,qde as loadLayersModel,mR as localResponseNormalization,Zn as log,Og as log1p,vde as logSigmoid,Rk as logSoftmax,AR as logSumExp,_s as logicalAnd,Mg as logicalNot,Pk as logicalOr,xde as logicalXor,Ude as losses,Me as matMul,_A as math,$s as max,Lg as maxPool,zk as maxPool3d,zR as maxPoolWithArgmax,Er as maximum,St as mean,Qf as memory,wde as meshgrid,$4 as metrics,em as min,up as minimum,UR as mirrorPad,HR as mod,Gde as model,G4 as models,Bg as moments,Lde as movingAverage,V as mul,kde as multiRNNCell,YR as multinomial,It as neg,pO as nextFrame,Qk as norm,Ku as notEqual,cd as oneHot,Mn as ones,Jn as onesLike,B as op,Ide as outerProduct,hi as pad,Sde as pad1d,Cde as pad2d,Nde as pad3d,Tde as pad4d,$de as pool,da as pow,Wg as prelu,fA as print,Mk as prod,tde as profile,Ade as rand,Ede as randomGamma,bD as randomNormal,Pl as randomUniform,Xu as range,rde as ready,pd as real,wD as reciprocal,sp as registerBackend,jde as registerCallbackConstructor,r$ as registerGradient,Al as registerKernel,Xde as registerOp,H4 as regularizers,Ks as relu,Lk as relu6,ide as removeBackend,G as reshape,es as reverse,_de as reverse1d,Rde as reverse2d,Dde as reverse3d,Fde as reverse4d,Xg as rfft,Bk as round,Vk as rsqrt,Ce as scalar,y3 as scatterND,nk as scatter_util,Wk as selu,DD as separableConv2d,Hde as sequential,ae as serialization,sde as setBackend,lde as setPlatform,ape as setThreadsCount,spe as setWasmPath,rpe as setWasmPaths,qj as setWebGLContext,OD as setdiff1dAsync,zy as shared,Hs as sigmoid,zD as sign,Wde as signal,Uk as sin,Gk as sinh,He as slice,Hg as slice1d,Hk as slice2d,qg as slice3d,hd as slice4d,kt as slice_util,jg as softmax,Ol as softplus,Vg as spaceToBatchND,Dc as sparse,Zk as sparseToDense,Vde as spectral,Bn as split,rn as sqrt,ct as square,jk as squaredDifference,yr as squeeze,ts as stack,lp as step,n3 as stridedSlice,Sf as string,be as sub,ve as sum,tp as sumOutType,r3 as tan,Hu as tanh,ds as tensor,Jt as tensor1d,Hi as tensor2d,zA as tensor3d,Ode as tensor4d,Pde as tensor5d,zde as tensor6d,Ts as tensor_util,eE as test_util,H as tidy,us as tile,nde as time,i3 as topk,_i as train,qe as transpose,Yg as truncatedNormal,Uv as unique,Kce as unregisterGradient,jce as unregisterKernel,c3 as unsortedSegmentSum,Rs as unstack,vn as upcastType,w as util,bde as valueAndGrad,yde as valueAndGrads,p3 as variable,yR as variableGrads,upe as version,Zde as version_converter,Yce as version_core,Jde as version_cpu,DI as version_layers,ope as version_wasm,epe as version_webgl,tpe as webgl,Hj as webgl_util,Cie as webgpu,xn as where,Xk as whereAsync,Tt as zeros,je as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
