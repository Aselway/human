/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var KT=Object.create,qd=Object.defineProperty,XT=Object.getOwnPropertyDescriptor,Xw=Object.getOwnPropertyNames,YT=Object.getPrototypeOf,QT=Object.prototype.hasOwnProperty,ZT=e=>qd(e,"__esModule",{value:!0}),Mt=(e,t)=>function(){return t||(0,e[Xw(e)[0]])((t={exports:{}}).exports,t),t.exports},Ae=(e,t)=>{for(var n in t)qd(e,n,{get:t[n],enumerable:!0})},JT=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of Xw(t))!QT.call(e,r)&&(n||r!=="default")&&qd(e,r,{get:()=>t[r],enumerable:!(s=XT(t,r))||s.enumerable});return e},wa=(e,t)=>JT(ZT(qd(e!=null?KT(YT(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),e$=Mt({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(F){}function s(F,T,z){this.low=F|0,this.high=T|0,this.unsigned=!!z}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(F){return(F&&F.__isLong__)===!0}s.isLong=r;var a={},i={};function o(F,T){var z,W,j;return T?(F>>>=0,(j=0<=F&&F<256)&&(W=i[F],W)?W:(z=l(F,(F|0)<0?-1:0,!0),j&&(i[F]=z),z)):(F|=0,(j=-128<=F&&F<128)&&(W=a[F],W)?W:(z=l(F,F<0?-1:0,!1),j&&(a[F]=z),z))}s.fromInt=o;function u(F,T){if(isNaN(F))return T?x:v;if(T){if(F<0)return x;if(F>=g)return A}else{if(F<=-b)return P;if(F+1>=b)return E}return F<0?u(-F,T).neg():l(F%m|0,F/m|0,T)}s.fromNumber=u;function l(F,T,z){return new s(F,T,z)}s.fromBits=l;var c=Math.pow;function p(F,T,z){if(F.length===0)throw Error("empty string");if(F==="NaN"||F==="Infinity"||F==="+Infinity"||F==="-Infinity")return v;if(typeof T=="number"?(z=T,T=!1):T=!!T,z=z||10,z<2||36<z)throw RangeError("radix");var W;if((W=F.indexOf("-"))>0)throw Error("interior hyphen");if(W===0)return p(F.substring(1),T,z).neg();for(var j=u(c(z,8)),X=v,Y=0;Y<F.length;Y+=8){var Z=Math.min(8,F.length-Y),te=parseInt(F.substring(Y,Y+Z),z);if(Z<8){var J=u(c(z,Z));X=X.mul(J).add(u(te))}else X=X.mul(j),X=X.add(u(te))}return X.unsigned=T,X}s.fromString=p;function d(F,T){return typeof F=="number"?u(F,T):typeof F=="string"?p(F,T):l(F.low,F.high,typeof T=="boolean"?T:F.unsigned)}s.fromValue=d;var h=1<<16,f=1<<24,m=h*h,g=m*m,b=g/2,y=o(f),v=o(0);s.ZERO=v;var x=o(0,!0);s.UZERO=x;var k=o(1);s.ONE=k;var I=o(1,!0);s.UONE=I;var $=o(-1);s.NEG_ONE=$;var E=l(-1,2147483647,!1);s.MAX_VALUE=E;var A=l(-1,-1,!0);s.MAX_UNSIGNED_VALUE=A;var P=l(0,-2147483648,!1);s.MIN_VALUE=P;var R=s.prototype;R.toInt=function(){return this.unsigned?this.low>>>0:this.low},R.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},R.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(P)){var z=u(T),W=this.div(z),j=W.mul(z).sub(this);return W.toString(T)+j.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var X=u(c(T,6),this.unsigned),Y=this,Z="";;){var te=Y.div(X),J=Y.sub(te.mul(X)).toInt()>>>0,se=J.toString(T);if(Y=te,Y.isZero())return se+Z;for(;se.length<6;)se="0"+se;Z=""+se+Z}},R.getHighBits=function(){return this.high},R.getHighBitsUnsigned=function(){return this.high>>>0},R.getLowBits=function(){return this.low},R.getLowBitsUnsigned=function(){return this.low>>>0},R.getNumBitsAbs=function(){if(this.isNegative())return this.eq(P)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,z=31;z>0&&(T&1<<z)==0;z--);return this.high!=0?z+33:z+1},R.isZero=function(){return this.high===0&&this.low===0},R.eqz=R.isZero,R.isNegative=function(){return!this.unsigned&&this.high<0},R.isPositive=function(){return this.unsigned||this.high>=0},R.isOdd=function(){return(this.low&1)===1},R.isEven=function(){return(this.low&1)===0},R.equals=function(T){return r(T)||(T=d(T)),this.unsigned!==T.unsigned&&this.high>>>31===1&&T.high>>>31===1?!1:this.high===T.high&&this.low===T.low},R.eq=R.equals,R.notEquals=function(T){return!this.eq(T)},R.neq=R.notEquals,R.ne=R.notEquals,R.lessThan=function(T){return this.comp(T)<0},R.lt=R.lessThan,R.lessThanOrEqual=function(T){return this.comp(T)<=0},R.lte=R.lessThanOrEqual,R.le=R.lessThanOrEqual,R.greaterThan=function(T){return this.comp(T)>0},R.gt=R.greaterThan,R.greaterThanOrEqual=function(T){return this.comp(T)>=0},R.gte=R.greaterThanOrEqual,R.ge=R.greaterThanOrEqual,R.compare=function(T){if(r(T)||(T=d(T)),this.eq(T))return 0;var z=this.isNegative(),W=T.isNegative();return z&&!W?-1:!z&&W?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},R.comp=R.compare,R.negate=function(){return!this.unsigned&&this.eq(P)?P:this.not().add(k)},R.neg=R.negate,R.add=function(T){r(T)||(T=d(T));var z=this.high>>>16,W=this.high&65535,j=this.low>>>16,X=this.low&65535,Y=T.high>>>16,Z=T.high&65535,te=T.low>>>16,J=T.low&65535,se=0,ne=0,oe=0,ae=0;return ae+=X+J,oe+=ae>>>16,ae&=65535,oe+=j+te,ne+=oe>>>16,oe&=65535,ne+=W+Z,se+=ne>>>16,ne&=65535,se+=z+Y,se&=65535,l(oe<<16|ae,se<<16|ne,this.unsigned)},R.subtract=function(T){return r(T)||(T=d(T)),this.add(T.neg())},R.sub=R.subtract,R.multiply=function(T){if(this.isZero())return v;if(r(T)||(T=d(T)),n){var z=n.mul(this.low,this.high,T.low,T.high);return l(z,n.get_high(),this.unsigned)}if(T.isZero())return v;if(this.eq(P))return T.isOdd()?P:v;if(T.eq(P))return this.isOdd()?P:v;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(y)&&T.lt(y))return u(this.toNumber()*T.toNumber(),this.unsigned);var W=this.high>>>16,j=this.high&65535,X=this.low>>>16,Y=this.low&65535,Z=T.high>>>16,te=T.high&65535,J=T.low>>>16,se=T.low&65535,ne=0,oe=0,ae=0,de=0;return de+=Y*se,ae+=de>>>16,de&=65535,ae+=X*se,oe+=ae>>>16,ae&=65535,ae+=Y*J,oe+=ae>>>16,ae&=65535,oe+=j*se,ne+=oe>>>16,oe&=65535,oe+=X*J,ne+=oe>>>16,oe&=65535,oe+=Y*te,ne+=oe>>>16,oe&=65535,ne+=W*se+j*J+X*te+Y*Z,ne&=65535,l(ae<<16|de,ne<<16|oe,this.unsigned)},R.mul=R.multiply,R.divide=function(T){if(r(T)||(T=d(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var z=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return l(z,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?x:v;var W,j,X;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return x;if(T.gt(this.shru(1)))return I;X=x}else{if(this.eq(P)){if(T.eq(k)||T.eq($))return P;if(T.eq(P))return k;var Y=this.shr(1);return W=Y.div(T).shl(1),W.eq(v)?T.isNegative()?k:$:(j=this.sub(T.mul(W)),X=W.add(j.div(T)),X)}else if(T.eq(P))return this.unsigned?x:v;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();X=v}for(j=this;j.gte(T);){W=Math.max(1,Math.floor(j.toNumber()/T.toNumber()));for(var Z=Math.ceil(Math.log(W)/Math.LN2),te=Z<=48?1:c(2,Z-48),J=u(W),se=J.mul(T);se.isNegative()||se.gt(j);)W-=te,J=u(W,this.unsigned),se=J.mul(T);J.isZero()&&(J=k),X=X.add(J),j=j.sub(se)}return X},R.div=R.divide,R.modulo=function(T){if(r(T)||(T=d(T)),n){var z=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return l(z,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},R.mod=R.modulo,R.rem=R.modulo,R.not=function(){return l(~this.low,~this.high,this.unsigned)},R.and=function(T){return r(T)||(T=d(T)),l(this.low&T.low,this.high&T.high,this.unsigned)},R.or=function(T){return r(T)||(T=d(T)),l(this.low|T.low,this.high|T.high,this.unsigned)},R.xor=function(T){return r(T)||(T=d(T)),l(this.low^T.low,this.high^T.high,this.unsigned)},R.shiftLeft=function(T){return r(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?l(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):l(0,this.low<<T-32,this.unsigned)},R.shl=R.shiftLeft,R.shiftRight=function(T){return r(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?l(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):l(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},R.shr=R.shiftRight,R.shiftRightUnsigned=function(T){if(r(T)&&(T=T.toInt()),T&=63,T===0)return this;var z=this.high;if(T<32){var W=this.low;return l(W>>>T|z<<32-T,z>>>T,this.unsigned)}else return T===32?l(z,0,this.unsigned):l(z>>>T-32,0,this.unsigned)},R.shru=R.shiftRightUnsigned,R.shr_u=R.shiftRightUnsigned,R.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},R.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},R.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},R.toBytesLE=function(){var T=this.high,z=this.low;return[z&255,z>>>8&255,z>>>16&255,z>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},R.toBytesBE=function(){var T=this.high,z=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,z>>>24,z>>>16&255,z>>>8&255,z&255]},s.fromBytes=function(T,z,W){return W?s.fromBytesLE(T,z):s.fromBytesBE(T,z)},s.fromBytesLE=function(T,z){return new s(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,z)},s.fromBytesBE=function(T,z){return new s(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],z)}}}),t$=Mt({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),n$=Mt({"(disabled):util"(){}}),s$=Mt({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(l){var c=this,p=u();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=p(" "),c.s1=p(" "),c.s2=p(" "),c.s0-=p(l),c.s0<0&&(c.s0+=1),c.s1-=p(l),c.s1<0&&(c.s1+=1),c.s2-=p(l),c.s2<0&&(c.s2+=1),p=null}function i(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var p=new a(l),d=c&&c.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&i(d,p),h.state=function(){return i(p,{})}),h}function u(){var l=4022871197,c=function(p){p=String(p);for(var d=0;d<p.length;d++){l+=p.charCodeAt(d);var h=.02519603282416938*l;l=h>>>0,h-=l,h*=l,l=h>>>0,h-=l,l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return c}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),r$=Mt({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(u){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var d=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^d^d>>>8},u===(u|0)?l.x=u:c+=u;for(var p=0;p<c.length+64;p++)l.x^=c.charCodeAt(p)|0,l.next()}function i(u,l){return l.x=u.x,l.y=u.y,l.z=u.z,l.w=u.w,l}function o(u,l){var c=new a(u),p=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),a$=Mt({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(u){var l=this,c="";l.next=function(){var d=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(d^d<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,u===(u|0)?l.x=u:c+=u;for(var p=0;p<c.length+64;p++)l.x^=c.charCodeAt(p)|0,p==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(u,l){return l.x=u.x,l.y=u.y,l.z=u.z,l.w=u.w,l.v=u.v,l.d=u.d,l}function o(u,l){var c=new a(u),p=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),i$=Mt({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(u){var l=this;l.next=function(){var p=l.x,d=l.i,h,f,m;return h=p[d],h^=h>>>7,f=h^h<<24,h=p[d+1&7],f^=h^h>>>10,h=p[d+3&7],f^=h^h>>>3,h=p[d+4&7],f^=h^h<<7,h=p[d+7&7],h=h^h<<13,f^=h^h<<9,p[d]=f,l.i=d+1&7,f};function c(p,d){var h,f,m=[];if(d===(d|0))f=m[0]=d;else for(d=""+d,h=0;h<d.length;++h)m[h&7]=m[h&7]<<15^d.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],p.x=m,p.i=0,h=256;h>0;--h)p.next()}c(l,u)}function i(u,l){return l.x=u.x.slice(),l.i=u.i,l}function o(u,l){u==null&&(u=+new Date);var c=new a(u),p=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.x&&i(p,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),o$=Mt({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(u){var l=this;l.next=function(){var p=l.w,d=l.X,h=l.i,f,m;return l.w=p=p+1640531527|0,m=d[h+34&127],f=d[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[h]=m^f,l.i=h,m+(p^p>>>16)|0};function c(p,d){var h,f,m,g,b,y=[],v=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,v=Math.max(v,d.length)),m=0,g=-32;g<v;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(b=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(b=b+1640531527|0,h=y[g&127]^=f+b,m=h==0?m+1:0);for(m>=128&&(y[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=y[m+34&127],h=y[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,y[m]=f^h;p.w=b,p.X=y,p.i=m}c(l,u)}function i(u,l){return l.i=u.i,l.w=u.w,l.X=u.X.slice(),l}function o(u,l){u==null&&(u=+new Date);var c=new a(u),p=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.X&&i(p,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),u$=Mt({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(u){var l=this,c="";l.next=function(){var d=l.b,h=l.c,f=l.d,m=l.a;return d=d<<25^d>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-d|0,l.b=d=d<<20^d>>>12^h,l.c=h=h-f|0,l.d=f<<16^h>>>16^m,l.a=m-d|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,u===Math.floor(u)?(l.a=u/4294967296|0,l.b=u|0):c+=u;for(var p=0;p<c.length+20;p++)l.b^=c.charCodeAt(p)|0,l.next()}function i(u,l){return l.a=u.a,l.b=u.b,l.c=u.c,l.d=u.d,l}function o(u,l){var c=new a(u),p=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),l$=Mt({"(disabled):crypto"(){}}),c$=Mt({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,i=6,o=52,u="random",l=r.pow(a,i),c=r.pow(2,o),p=c*2,d=a-1,h;function f(k,I,$){var E=[];I=I==!0?{entropy:!0}:I||{};var A=y(b(I.entropy?[k,x(s)]:k==null?v():k,3),E),P=new m(E),R=function(){for(var F=P.g(i),T=l,z=0;F<c;)F=(F+z)*a,T*=a,z=P.g(1);for(;F>=p;)F/=2,T/=2,z>>>=1;return(F+z)/T};return R.int32=function(){return P.g(4)|0},R.quick=function(){return P.g(4)/4294967296},R.double=R,y(x(P.S),s),(I.pass||$||function(F,T,z,W){return W&&(W.S&&g(W,P),F.state=function(){return g(P,{})}),z?(r[u]=F,T):F})(R,A,"global"in I?I.global:this==r,I.state)}function m(k){var I,$=k.length,E=this,A=0,P=E.i=E.j=0,R=E.S=[];for($||(k=[$++]);A<a;)R[A]=A++;for(A=0;A<a;A++)R[A]=R[P=d&P+k[A%$]+(I=R[A])],R[P]=I;(E.g=function(F){for(var T,z=0,W=E.i,j=E.j,X=E.S;F--;)T=X[W=d&W+1],z=z*a+X[d&(X[W]=X[j=d&j+T])+(X[j]=T)];return E.i=W,E.j=j,z})(a)}function g(k,I){return I.i=k.i,I.j=k.j,I.S=k.S.slice(),I}function b(k,I){var $=[],E=typeof k,A;if(I&&E=="object")for(A in k)try{$.push(b(k[A],I-1))}catch(P){}return $.length?$:E=="string"?k:k+"\0"}function y(k,I){for(var $=k+"",E,A=0;A<$.length;)I[d&A]=d&(E^=I[d&A]*19)+$.charCodeAt(A++);return x(I)}function v(){try{var k;return h&&(k=h.randomBytes)?k=k(a):(k=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(k)),x(k)}catch(E){var I=n.navigator,$=I&&I.plugins;return[+new Date,n,$,n.screen,x(s)]}}function x(k){return String.fromCharCode.apply(0,k)}if(y(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=l$()}catch(k){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+u]=f})(typeof self!="undefined"?self:e,[],Math)}}),jd=Mt({"src/node_modules/seedrandom/index.js"(e,t){var n=s$(),s=r$(),r=a$(),a=i$(),i=o$(),o=u$(),u=c$();u.alea=n,u.xor128=s,u.xorwow=r,u.xorshift7=a,u.xor4096=i,u.tychei=o,t.exports=u}}),Yw=Mt({"(disabled):src/node_modules/string_decoder/index.js"(){}}),ag=Mt({"(disabled):fs"(){}}),fd=Mt({"(disabled):path"(){}}),d$=Mt({"(disabled):worker_threads"(){}}),p$=Mt({"(disabled):perf_hooks"(){}}),h$=Mt({"(disabled):os"(){}}),f$=Mt({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return Ce.buffer!=nn&&rs(Ce.buffer),oc}function i(){return Ce.buffer!=nn&&rs(Ce.buffer),uc}function o(){return Ce.buffer!=nn&&rs(Ce.buffer),mu}function u(){return Ce.buffer!=nn&&rs(Ce.buffer),lc}function l(){return Ce.buffer!=nn&&rs(Ce.buffer),cc}function c(){return Ce.buffer!=nn&&rs(Ce.buffer),dc}function p(){return Ce.buffer!=nn&&rs(Ce.buffer),pc}var d=typeof r!="undefined"?r:{},h,f;d.ready=new Promise(function(N,D){h=N,f=D});var m;typeof process!="undefined"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},d),b=[],y="./this.program",v=(N,D)=>{throw D},x=typeof window=="object",k=typeof importScripts=="function",I=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",$=d.ENVIRONMENT_IS_PTHREAD||!1,E="";function A(N){return d.locateFile?d.locateFile(N,E):E+N}var P,R,F,T;function z(N){if(N instanceof Iu)return;J("exiting due to exception: "+N)}var W,j,X;if(I){k?E=fd().dirname(E)+"/":E=__dirname+"/",X=()=>{j||(W=ag(),j=fd())},P=function(B,Q){return X(),B=j.normalize(B),W.readFileSync(B,Q?void 0:"utf8")},F=D=>{var B=P(D,!0);return B.buffer||(B=new Uint8Array(B)),B},R=(D,B,Q)=>{X(),D=j.normalize(D),W.readFile(D,function(ue,pe){ue?Q(ue):B(pe.buffer)})},process.argv.length>1&&(y=process.argv[1].replace(/\\/g,"/")),b=process.argv.slice(2),process.on("uncaughtException",function(D){if(!(D instanceof Iu))throw D}),process.on("unhandledRejection",function(D){throw D}),v=(D,B)=>{if(zr())throw process.exitCode=D,B;z(B),process.exit(D)},d.inspect=function(){return"[Emscripten Module object]"};let N;try{N=d$()}catch(D){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),D}global.Worker=N.Worker}else(x||k)&&(k?E=self.location.href:typeof document!="undefined"&&document.currentScript&&(E=document.currentScript.src),typeof s!="undefined"&&s&&(E=s),E.indexOf("blob:")!==0?E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):E="",I||(P=N=>{var D=new XMLHttpRequest;return D.open("GET",N,!1),D.send(null),D.responseText},k&&(F=N=>{var D=new XMLHttpRequest;return D.open("GET",N,!1),D.responseType="arraybuffer",D.send(null),new Uint8Array(D.response)}),R=(N,D,B)=>{var Q=new XMLHttpRequest;Q.open("GET",N,!0),Q.responseType="arraybuffer",Q.onload=()=>{if(Q.status==200||Q.status==0&&Q.response){D(Q.response);return}B()},Q.onerror=B,Q.send(null)}),T=N=>document.title=N);I&&typeof performance=="undefined"&&(global.performance=p$().performance);var Y=console.log.bind(console),Z=console.warn.bind(console);I&&(X(),Y=N=>W.writeSync(1,N+`
`),Z=N=>W.writeSync(2,N+`
`));var te=d.print||Y,J=d.printErr||Z;Object.assign(d,g),g=null,d.arguments&&(b=d.arguments),d.thisProgram&&(y=d.thisProgram),d.quit&&(v=d.quit);var se=4;function ne(N){ne.shown||(ne.shown={}),ne.shown[N]||(ne.shown[N]=1,J(N))}function oe(N,D){if(typeof WebAssembly.Function=="function"){for(var B={i:"i32",j:"i64",f:"f32",d:"f64"},Q={parameters:[],results:D[0]=="v"?[]:[B[D[0]]]},ue=1;ue<D.length;++ue)Q.parameters.push(B[D[ue]]);return new WebAssembly.Function(Q,N)}var pe=[1,0,1,96],ye=D.slice(0,1),Te=D.slice(1),bt={i:127,j:126,f:125,d:124};pe.push(Te.length);for(var ue=0;ue<Te.length;++ue)pe.push(bt[Te[ue]]);ye=="v"?pe.push(0):pe=pe.concat([1,bt[ye]]),pe[1]=pe.length-2;var us=new Uint8Array([0,97,115,109,1,0,0,0].concat(pe,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),ls=new WebAssembly.Module(us),Vc=new WebAssembly.Instance(ls,{e:{f:N}}),Cu=Vc.exports.f;return Cu}var ae=[],de;function me(){if(ae.length)return ae.pop();try{Fn.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return Fn.length-1}function ke(N,D){for(var B=N;B<N+D;B++){var Q=Ri(B);Q&&de.set(Q,B)}}var Ie=0,Ee=N=>{Ie=N},Pe=Atomics.load,Xe=Atomics.store,Je=Atomics.compareExchange,Ye;d.wasmBinary&&(Ye=d.wasmBinary);var tt=d.noExitRuntime||!0;typeof WebAssembly!="object"&&_i("no native wasm support detected");var Ce,ut,rt=!1,Jt;function Nt(N,D){N||_i(D)}function In(N){var D=d["_"+N];return D}function Et(N,D,B,Q,ue){var pe={string:function(Tn){var Li=0;if(Tn!=null&&Tn!==0){var ax=(Tn.length<<2)+1;Li=Mi(ax),Ms(Tn,Li,ax)}return Li},array:function(Tn){var Li=Mi(Tn.length);return Ls(Tn,Li),Li}};function ye(Tn){return D==="string"?tn(Tn):D==="boolean"?Boolean(Tn):Tn}var Te=In(N),bt=[],us=0;if(Q)for(var ls=0;ls<Q.length;ls++){var Vc=pe[B[ls]];Vc?(us===0&&(us=Pf()),bt[ls]=Vc(Q[ls])):bt[ls]=Q[ls]}var Cu=Te.apply(null,bt);function jT(Tn){return us!==0&&zc(us),ye(Tn)}return Cu=jT(Cu),Cu}function en(N,D,B,Q){B=B||[];var ue=B.every(function(ye){return ye==="number"}),pe=D!=="string";return pe&&ue&&!Q?In(N):function(){return Et(N,D,B,arguments,Q)}}var Cn=1;function Nn(N){var D=new TextDecoder(N);this.decode=B=>(B.buffer instanceof SharedArrayBuffer&&(B=new Uint8Array(B)),D.decode.call(D,B))}var Yt=typeof TextDecoder!="undefined"?new Nn("utf8"):void 0;function Dn(N,D,B){for(var Q=D+B,ue=D;N[ue]&&!(ue>=Q);)++ue;if(ue-D>16&&N.subarray&&Yt)return Yt.decode(N.subarray(D,ue));for(var pe="";D<ue;){var ye=N[D++];if(!(ye&128)){pe+=String.fromCharCode(ye);continue}var Te=N[D++]&63;if((ye&224)==192){pe+=String.fromCharCode((ye&31)<<6|Te);continue}var bt=N[D++]&63;if((ye&240)==224?ye=(ye&15)<<12|Te<<6|bt:ye=(ye&7)<<18|Te<<12|bt<<6|N[D++]&63,ye<65536)pe+=String.fromCharCode(ye);else{var us=ye-65536;pe+=String.fromCharCode(55296|us>>10,56320|us&1023)}}return pe}function tn(N,D){return N?Dn(i(),N,D):""}function zs(N,D,B,Q){if(!(Q>0))return 0;for(var ue=B,pe=B+Q-1,ye=0;ye<N.length;++ye){var Te=N.charCodeAt(ye);if(Te>=55296&&Te<=57343){var bt=N.charCodeAt(++ye);Te=65536+((Te&1023)<<10)|bt&1023}if(Te<=127){if(B>=pe)break;D[B++]=Te}else if(Te<=2047){if(B+1>=pe)break;D[B++]=192|Te>>6,D[B++]=128|Te&63}else if(Te<=65535){if(B+2>=pe)break;D[B++]=224|Te>>12,D[B++]=128|Te>>6&63,D[B++]=128|Te&63}else{if(B+3>=pe)break;D[B++]=240|Te>>18,D[B++]=128|Te>>12&63,D[B++]=128|Te>>6&63,D[B++]=128|Te&63}}return D[B]=0,B-ue}function Ms(N,D,B){return zs(N,i(),D,B)}function Ni(N){for(var D=0,B=0;B<N.length;++B){var Q=N.charCodeAt(B);Q>=55296&&Q<=57343&&(Q=65536+((Q&1023)<<10)|N.charCodeAt(++B)&1023),Q<=127?++D:Q<=2047?D+=2:Q<=65535?D+=3:D+=4}return D}var Zs=typeof TextDecoder!="undefined"?new Nn("utf-16le"):void 0;function Ls(N,D){a().set(N,D)}function fu(N,D,B){for(var Q=0;Q<N.length;++Q)a()[D++>>0]=N.charCodeAt(Q);B||(a()[D>>0]=0)}function Ti(N,D){return N%D>0&&(N+=D-N%D),N}var nn,oc,uc,mu,lc,cc,Lv,dc,pc;$&&(nn=d.buffer);function rs(N){nn=N,d.HEAP8=oc=new Int8Array(N),d.HEAP16=mu=new Int16Array(N),d.HEAP32=cc=new Int32Array(N),d.HEAPU8=uc=new Uint8Array(N),d.HEAPU16=lc=new Uint16Array(N),d.HEAPU32=Lv=new Uint32Array(N),d.HEAPF32=dc=new Float32Array(N),d.HEAPF64=pc=new Float64Array(N)}var hc=d.INITIAL_MEMORY||16777216;if($)Ce=d.wasmMemory,nn=d.buffer;else if(d.wasmMemory)Ce=d.wasmMemory;else if(Ce=new WebAssembly.Memory({initial:hc/65536,maximum:32768,shared:!0}),!(Ce.buffer instanceof SharedArrayBuffer))throw J("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),I&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Ce&&(nn=Ce.buffer),hc=nn.byteLength,rs(nn);var Fn,$i=[],Js=[],ih=[],fc=[],Pr=!1,oh=!1,mc=0;function zr(){return tt||mc>0}function sn(){if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Bv(d.preRun.shift());xc($i)}function gu(){Pr=!0,!$&&xc(Js)}function uh(){$||($e.terminateAllThreads(),oh=!0)}function lh(){if(!$){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;)bu(d.postRun.shift());xc(fc)}}function Bv(N){$i.unshift(N)}function Vv(N){Js.unshift(N)}function bu(N){fc.unshift(N)}var er=0,gc=null,as=null;function yu(N){er++,d.monitorRunDependencies&&d.monitorRunDependencies(er)}function Wv(N){if(er--,d.monitorRunDependencies&&d.monitorRunDependencies(er),er==0&&(gc!==null&&(clearInterval(gc),gc=null),as)){var D=as;as=null,D()}}d.preloadedImages={},d.preloadedAudios={};function _i(N){$?postMessage({cmd:"onAbort",arg:N}):d.onAbort&&d.onAbort(N),N="Aborted("+N+")",J(N),rt=!0,Jt=1,N+=". Build with -s ASSERTIONS=1 for more info.";var D=new WebAssembly.RuntimeError(N);throw f(D),D}var ch="data:application/octet-stream;base64,";function bc(N){return N.startsWith(ch)}function yc(N){return N.startsWith("file://")}var rn;rn="tfjs-backend-wasm-threaded-simd.wasm",bc(rn)||(rn=A(rn));function vc(N){try{if(N==rn&&Ye)return new Uint8Array(Ye);if(F)return F(N);throw"both async and sync fetching of the wasm failed"}catch(D){_i(D)}}function Ai(){if(!Ye&&(x||k)){if(typeof fetch=="function"&&!yc(rn))return fetch(rn,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+rn+"'";return N.arrayBuffer()}).catch(function(){return vc(rn)});if(R)return new Promise(function(N,D){R(rn,function(B){N(new Uint8Array(B))},D)})}return Promise.resolve().then(function(){return vc(rn)})}function dh(){var N={env:Rc,wasi_snapshot_preview1:Rc};function D(ye,Te){var bt=ye.exports;if(d.asm=bt,yh(d.asm.emscripten_tls_init),Fn=d.asm.__indirect_function_table,Vv(d.asm.__wasm_call_ctors),ut=Te,!$){var us=$e.unusedWorkers.length;$e.unusedWorkers.forEach(function(ls){$e.loadWasmModuleToWorker(ls,function(){--us||Wv("wasm-instantiate")})})}}$||yu("wasm-instantiate");function B(ye){D(ye.instance,ye.module)}function Q(ye){return Ai().then(function(Te){return WebAssembly.instantiate(Te,N)}).then(function(Te){return Te}).then(ye,function(Te){J("failed to asynchronously prepare wasm: "+Te),_i(Te)})}function ue(){return!Ye&&typeof WebAssembly.instantiateStreaming=="function"&&!bc(rn)&&!yc(rn)&&typeof fetch=="function"?fetch(rn,{credentials:"same-origin"}).then(function(ye){var Te=WebAssembly.instantiateStreaming(ye,N);return Te.then(B,function(bt){return J("wasm streaming compile failed: "+bt),J("falling back to ArrayBuffer instantiation"),Q(B)})}):Q(B)}if(d.instantiateWasm)try{var pe=d.instantiateWasm(N,D);return pe}catch(ye){return J("Module.instantiateWasm callback failed with error: "+ye),!1}return ue().catch(f),{}}var Uv,Gv,ph={};function xc(N){for(;N.length>0;){var D=N.shift();if(typeof D=="function"){D(d);continue}var B=D.func;typeof B=="number"?D.arg===void 0?Ri(B)():Ri(B)(D.arg):B(D.arg===void 0?null:D.arg)}}function Ei(N){var D=Pf(),B=N();return zc(D),B}function tT(N){return N}function Hv(N){var D=/\b_Z[\w\d_]+/g;return N.replace(D,function(B){var Q=B;return B===Q?B:Q+" ["+B+"]"})}function hh(N){l()[N>>2]=0;var D=$e.pthreads[N];delete $e.pthreads[N],D.worker.terminate(),Of(N),$e.runningWorkers.splice($e.runningWorkers.indexOf(D.worker),1),D.worker.pthread=void 0}function fh(N){var D=$e.pthreads[N];D.worker.postMessage({cmd:"cancel"})}function wc(N){var D=$e.pthreads[N];if(D){l()[N>>2]=0;var B=D.worker;$e.returnWorkerToPool(B)}}function kc(N){GT(N)}function mh(N){if(N instanceof Iu||N=="unwind")return Jt;v(1,N)}var $e={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){$?$e.initWorker():$e.initMainThread()},initMainThread:function(){for(var N=8,D=0;D<N;++D)$e.allocateUnusedWorker()},initWorker:function(){tt=!1},pthreads:{},setExitStatus:function(N){Jt=N},terminateAllThreads:function(){for(var N in $e.pthreads){var D=$e.pthreads[N];D&&D.worker&&$e.returnWorkerToPool(D.worker)}for(var B=0;B<$e.unusedWorkers.length;++B){var Q=$e.unusedWorkers[B];Q.terminate()}$e.unusedWorkers=[]},returnWorkerToPool:function(N){$e.runWithoutMainThreadQueuedCalls(function(){delete $e.pthreads[N.pthread.threadInfoStruct],$e.unusedWorkers.push(N),$e.runningWorkers.splice($e.runningWorkers.indexOf(N),1),Of(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){l()[rx>>2]=0;try{N()}finally{l()[rx>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in $e.tlsInitFunctions)$e.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,D){N.onmessage=B=>{var Q=B.data,ue=Q.cmd;if(N.pthread&&($e.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),Q.targetThread&&Q.targetThread!=Pc()){var pe=$e.pthreads[Q.targetThread];pe?pe.worker.postMessage(Q,Q.transferList):J('Internal error! Worker sent a message "'+ue+'" to target pthread '+Q.targetThread+", but that thread no longer exists!"),$e.currentProxiedOperationCallerThread=void 0;return}ue==="processQueuedMainThreadWork"?Jv():ue==="spawnThread"?Ic(Q):ue==="cleanupThread"?wc(Q.thread):ue==="killThread"?hh(Q.thread):ue==="cancelThread"?fh(Q.thread):ue==="loaded"?(N.loaded=!0,D&&D(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):ue==="print"?te("Thread "+Q.threadId+": "+Q.text):ue==="printErr"?J("Thread "+Q.threadId+": "+Q.text):ue==="alert"?alert("Thread "+Q.threadId+": "+Q.text):Q.target==="setimmediate"?N.postMessage(Q):ue==="onAbort"?d.onAbort&&d.onAbort(Q.arg):J("worker sent an unknown command "+ue),$e.currentProxiedOperationCallerThread=void 0},N.onerror=B=>{var Q="worker sent an error!";throw J(Q+" "+B.filename+":"+B.lineno+": "+B.message),B},I&&(N.on("message",function(B){N.onmessage({data:B})}),N.on("error",function(B){N.onerror(B)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||s,wasmMemory:Ce,wasmModule:ut})},allocateUnusedWorker:function(){var N=A("tfjs-backend-wasm-threaded-simd.worker.js");$e.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return $e.unusedWorkers.length==0&&($e.allocateUnusedWorker(),$e.loadWasmModuleToWorker($e.unusedWorkers[0])),$e.unusedWorkers.pop()}};function gh(){var N=Pc(),D=l()[N+44>>2],B=l()[N+48>>2],Q=D-B;sx(D,Q),zc(D)}d.establishStackSpace=gh;function Sc(N){if($)return Br(1,0,N);try{kc(N)}catch(D){mh(D)}}var Mr=[];function Ri(N){var D=Mr[N];return D||(N>=Mr.length&&(Mr.length=N+1),Mr[N]=D=Fn.get(N)),D}function bh(N,D){return Ri(N)(D)}d.invokeEntryPoint=bh;function qv(){var N=new Error;if(!N.stack){try{throw new Error}catch(D){N=D}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function yh(N,D,B){$e.tlsInitFunctions.push(N)}function jv(N,D){Fn.set(N,D),Mr[N]=D}var Lr;I?Lr=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:$?Lr=()=>performance.now()-d.__performance_now_clock_drift:Lr=()=>performance.now();var vh=!0;function xh(N){return l()[Zv()>>2]=N,N}function wh(N,D){var B;if(N===0)B=Date.now();else if((N===1||N===4)&&vh)B=Lr();else return xh(28),-1;return l()[D>>2]=B/1e3|0,l()[D+4>>2]=B%1e3*1e3*1e3|0,0}function kh(N,D){return wh(N,D)}function Sh(N){ex(N,!k,1,!x),$e.threadInit()}function Ih(N){$?postMessage({cmd:"cleanupThread",thread:N}):wc(N)}function Ic(N){var D=$e.getNewWorker();if(!D)return 6;$e.runningWorkers.push(D);var B=$e.pthreads[N.pthread_ptr]={worker:D,threadInfoStruct:N.pthread_ptr};D.pthread=B;var Q={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return D.runPthread=()=>{Q.time=performance.now(),D.postMessage(Q,N.transferList)},D.loaded&&(D.runPthread(),delete D.runPthread),0}function Ch(N,D,B,Q){if(typeof SharedArrayBuffer=="undefined")return J("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ue=[],pe=0;if($&&(ue.length===0||pe))return tx(687865856,N,D,B,Q);if(pe)return pe;var ye={startRoutine:B,pthread_ptr:N,arg:Q,transferList:ue};return $?(ye.cmd="spawnThread",postMessage(ye,ue),0):Ic(ye)}function Nh(){return 2097152}function Th(N,D){if(N==D)postMessage({cmd:"processQueuedMainThreadWork"});else if($)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var B=$e.pthreads[N],Q=B&&B.worker;if(!Q)return;Q.postMessage({cmd:"processThreadQueue"})}return 1}function $h(){_i("")}function _h(){I||k||ne("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Cc(){return 2147483648}function Ah(N,D,B){i().copyWithin(N,D,D+B)}function Eh(){return I?h$().cpus().length:navigator.hardwareConcurrency}function Br(N,D){var B=arguments.length-2,Q=arguments;return Ei(function(){for(var ue=B,pe=Mi(ue*8),ye=pe>>3,Te=0;Te<B;Te++){var bt=Q[2+Te];p()[ye+Te]=bt}return nx(N,ue,pe,D)})}var vu=[];function Rh(N,D,B){vu.length=D;for(var Q=B>>3,ue=0;ue<D;ue++)vu[ue]=p()[Q+ue];var pe=N<0,ye=pe?ph[-N-1]:Qh[N];return ye.apply(null,vu)}function Dh(N){try{return Ce.grow(N-nn.byteLength+65535>>>16),rs(Ce.buffer),1}catch(D){}}function Fh(N){var D=i().length;if(N=N>>>0,N<=D)return!1;var B=Cc();if(N>B)return!1;for(var Q=1;Q<=4;Q*=2){var ue=D*(1+.2/Q);ue=Math.min(ue,N+100663296);var pe=Math.min(B,Ti(Math.max(N,ue),65536)),ye=Dh(pe);if(ye)return!0}return!1}var Me={inEventHandler:0,removeAllEventListeners:function(){for(var N=Me.eventHandlers.length-1;N>=0;--N)Me._removeHandler(N);Me.eventHandlers=[],Me.deferredCalls=[]},registerRemoveEventListeners:function(){Me.removeEventListenersRegistered||(ih.push(Me.removeAllEventListeners),Me.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,D,B){function Q(ye,Te){if(ye.length!=Te.length)return!1;for(var bt in ye)if(ye[bt]!=Te[bt])return!1;return!0}for(var ue in Me.deferredCalls){var pe=Me.deferredCalls[ue];if(pe.targetFunction==N&&Q(pe.argsList,B))return}Me.deferredCalls.push({targetFunction:N,precedence:D,argsList:B}),Me.deferredCalls.sort(function(ye,Te){return ye.precedence<Te.precedence})},removeDeferredCalls:function(N){for(var D=0;D<Me.deferredCalls.length;++D)Me.deferredCalls[D].targetFunction==N&&(Me.deferredCalls.splice(D,1),--D)},canPerformEventHandlerRequests:function(){return Me.inEventHandler&&Me.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Me.canPerformEventHandlerRequests())for(var N=0;N<Me.deferredCalls.length;++N){var D=Me.deferredCalls[N];Me.deferredCalls.splice(N,1),--N,D.targetFunction.apply(null,D.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,D){for(var B=0;B<Me.eventHandlers.length;++B)Me.eventHandlers[B].target==N&&(!D||D==Me.eventHandlers[B].eventTypeString)&&Me._removeHandler(B--)},_removeHandler:function(N){var D=Me.eventHandlers[N];D.target.removeEventListener(D.eventTypeString,D.eventListenerFunc,D.useCapture),Me.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var D=function(ue){++Me.inEventHandler,Me.currentEventHandler=N,Me.runDeferredCalls(),N.handlerFunc(ue),Me.runDeferredCalls(),--Me.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=D,N.target.addEventListener(N.eventTypeString,D,N.useCapture),Me.eventHandlers.push(N),Me.registerRemoveEventListeners();else for(var B=0;B<Me.eventHandlers.length;++B)Me.eventHandlers[B].target==N.target&&Me.eventHandlers[B].eventTypeString==N.eventTypeString&&Me._removeHandler(B--)},queueEventHandlerOnThread_iiii:function(N,D,B,Q,ue){Ei(function(){var pe=Mi(12);l()[pe>>2]=B,l()[pe+4>>2]=Q,l()[pe+8>>2]=ue,Ff(N,637534208,D,Q,pe)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return $e.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Oh(N){var D=Ni(N)+1,B=Df(D);return Ms(N,B,D),B}function Ph(N,D,B,Q){Ei(function(){var ue=Mi(12),pe=0;D&&(pe=Oh(D)),l()[ue>>2]=pe,l()[ue+4>>2]=B,l()[ue+8>>2]=Q,Ff(N,657457152,0,pe,ue)})}function zh(N,D,B,Q){D=D?tn(D):"",Ph(N,D,B,Q)}function Mh(N){return N>2?tn(N):N}var Lh=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function Bh(N){N=Mh(N);var D=Lh[N]||(typeof document!="undefined"?document.querySelector(N):void 0);return D}function xu(N){return Bh(N)}function Nc(N,D,B){var Q=xu(N);if(!Q)return-4;if(Q.canvasSharedPtr&&(l()[Q.canvasSharedPtr>>2]=D,l()[Q.canvasSharedPtr+4>>2]=B),Q.offscreenCanvas||!Q.controlTransferredOffscreen){Q.offscreenCanvas&&(Q=Q.offscreenCanvas);var ue=!1;if(Q.GLctxObject&&Q.GLctxObject.GLctx){var pe=Q.GLctxObject.GLctx.getParameter(2978);ue=pe[0]===0&&pe[1]===0&&pe[2]===Q.width&&pe[3]===Q.height}Q.width=D,Q.height=B,ue&&Q.GLctxObject.GLctx.viewport(0,0,D,B)}else if(Q.canvasSharedPtr){var ye=l()[Q.canvasSharedPtr+8>>2];return zh(ye,N,D,B),1}else return-4;return 0}function Tc(N,D,B){return $?Br(2,1,N,D,B):Nc(N,D,B)}function Vh(N,D,B){var Q=xu(N);return Q?Nc(N,D,B):Tc(N,D,B)}function Wh(){throw"unwind"}function Uh(N){var D=N.getExtension("ANGLE_instanced_arrays");if(D)return N.vertexAttribDivisor=function(B,Q){D.vertexAttribDivisorANGLE(B,Q)},N.drawArraysInstanced=function(B,Q,ue,pe){D.drawArraysInstancedANGLE(B,Q,ue,pe)},N.drawElementsInstanced=function(B,Q,ue,pe,ye){D.drawElementsInstancedANGLE(B,Q,ue,pe,ye)},1}function Gh(N){var D=N.getExtension("OES_vertex_array_object");if(D)return N.createVertexArray=function(){return D.createVertexArrayOES()},N.deleteVertexArray=function(B){D.deleteVertexArrayOES(B)},N.bindVertexArray=function(B){D.bindVertexArrayOES(B)},N.isVertexArray=function(B){return D.isVertexArrayOES(B)},1}function Hh(N){var D=N.getExtension("WEBGL_draw_buffers");if(D)return N.drawBuffers=function(B,Q){D.drawBuffersWEBGL(B,Q)},1}function qh(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var gt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(D){gt.lastError||(gt.lastError=D)},getNewId:function(N){for(var D=gt.counter++,B=N.length;B<D;B++)N[B]=null;return D},getSource:function(N,D,B,Q){for(var ue="",pe=0;pe<D;++pe){var ye=Q?l()[Q+pe*4>>2]:-1;ue+=tn(l()[B+pe*4>>2],ye<0?void 0:ye)}return ue},createContext:function(N,D){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(ue,pe){var ye=N.getContextSafariWebGL2Fixed(ue,pe);return ue=="webgl"==ye instanceof WebGLRenderingContext?ye:null});var B=N.getContext("webgl",D);if(!B)return 0;var Q=gt.registerContext(B,D);return Q},registerContext:function(N,D){var B=Df(8);l()[B+4>>2]=Pc();var Q={handle:B,attributes:D,version:D.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=Q),gt.contexts[B]=Q,(typeof D.enableExtensionsByDefault=="undefined"||D.enableExtensionsByDefault)&&gt.initExtensions(Q),B},makeContextCurrent:function(N){return gt.currentContext=gt.contexts[N],d.ctx=Ec=gt.currentContext&&gt.currentContext.GLctx,!(N&&!Ec)},getContext:function(N){return gt.contexts[N]},deleteContext:function(N){gt.currentContext===gt.contexts[N]&&(gt.currentContext=null),typeof Me=="object"&&Me.removeAllHandlersOnTarget(gt.contexts[N].GLctx.canvas),gt.contexts[N]&&gt.contexts[N].GLctx.canvas&&(gt.contexts[N].GLctx.canvas.GLctxObject=void 0),Qv(gt.contexts[N].handle),gt.contexts[N]=null},initExtensions:function(N){if(N||(N=gt.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var D=N.GLctx;Uh(D),Gh(D),Hh(D),D.disjointTimerQueryExt=D.getExtension("EXT_disjoint_timer_query"),qh(D);var B=D.getSupportedExtensions()||[];B.forEach(function(Q){!Q.includes("lose_context")&&!Q.includes("debug")&&D.getExtension(Q)})}}},jh=["default","low-power","high-performance"];function Kh(N,D){var B=D>>2,Q=l()[B+6],ue={alpha:!!l()[B+0],depth:!!l()[B+1],stencil:!!l()[B+2],antialias:!!l()[B+3],premultipliedAlpha:!!l()[B+4],preserveDrawingBuffer:!!l()[B+5],powerPreference:jh[Q],failIfMajorPerformanceCaveat:!!l()[B+7],majorVersion:l()[B+8],minorVersion:l()[B+9],enableExtensionsByDefault:l()[B+10],explicitSwapControl:l()[B+11],proxyContextToMainThread:l()[B+12],renderViaOffscreenBackBuffer:l()[B+13]},pe=xu(N);if(!pe||ue.explicitSwapControl)return 0;var ye=gt.createContext(pe,ue);return ye}function Xh(N,D){return Kh(N,D)}var Di={mappings:{},buffers:[null,[],[]],printChar:function(N,D){var B=Di.buffers[N];D===0||D===10?((N===1?te:J)(Dn(B,0)),B.length=0):B.push(D)},varargs:void 0,get:function(){Di.varargs+=4;var N=l()[Di.varargs-4>>2];return N},getStr:function(N){var D=tn(N);return D},get64:function(N,D){return N}};function $c(N){return $?Br(3,1,N):0}function _c(N,D,B,Q,ue){if($)return Br(4,1,N,D,B,Q,ue)}function Ac(N,D,B,Q){if($)return Br(5,1,N,D,B,Q);for(var ue=0,pe=0;pe<B;pe++){var ye=l()[D>>2],Te=l()[D+4>>2];D+=8;for(var bt=0;bt<Te;bt++)Di.printChar(N,i()[ye+bt]);ue+=Te}return l()[Q>>2]=ue,0}function Yh(N){Ee(N)}$e.init();var Ec,Qh=[null,Sc,Tc,$c,_c,Ac],Kv=!1,Rc={__clock_gettime:kh,__emscripten_init_main_thread_js:Sh,__emscripten_thread_cleanup:Ih,__pthread_create_js:Ch,_emscripten_default_pthread_stack_size:Nh,_emscripten_notify_thread_queue:Th,abort:$h,emscripten_check_blocking_allowed:_h,emscripten_get_heap_max:Cc,emscripten_get_now:Lr,emscripten_memcpy_big:Ah,emscripten_num_logical_cores:Eh,emscripten_receive_on_main_thread_js:Rh,emscripten_resize_heap:Fh,emscripten_set_canvas_element_size:Vh,emscripten_unwind_to_js_event_loop:Wh,emscripten_webgl_create_context:Xh,exit:kc,fd_close:$c,fd_seek:_c,fd_write:Ac,memory:Ce||d.wasmMemory,setTempRet0:Yh},Xv=dh(),Zh=d.___wasm_call_ctors=function(){return(Zh=d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},Jh=d._init=function(){return(Jh=d._init=d.asm.init).apply(null,arguments)},ef=d._init_with_threads_count=function(){return(ef=d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},tf=d._get_threads_count=function(){return(tf=d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},nf=d._register_tensor=function(){return(nf=d._register_tensor=d.asm.register_tensor).apply(null,arguments)},sf=d._dispose_data=function(){return(sf=d._dispose_data=d.asm.dispose_data).apply(null,arguments)},rf=d._dispose=function(){return(rf=d._dispose=d.asm.dispose).apply(null,arguments)},af=d._Abs=function(){return(af=d._Abs=d.asm.Abs).apply(null,arguments)},of=d._Add=function(){return(of=d._Add=d.asm.Add).apply(null,arguments)},uf=d._AddN=function(){return(uf=d._AddN=d.asm.AddN).apply(null,arguments)},lf=d._All=function(){return(lf=d._All=d.asm.All).apply(null,arguments)},cf=d._Any=function(){return(cf=d._Any=d.asm.Any).apply(null,arguments)},df=d._ArgMax=function(){return(df=d._ArgMax=d.asm.ArgMax).apply(null,arguments)},pf=d._AvgPool=function(){return(pf=d._AvgPool=d.asm.AvgPool).apply(null,arguments)},hf=d._BatchMatMul=function(){return(hf=d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},ff=d._Ceil=function(){return(ff=d._Ceil=d.asm.Ceil).apply(null,arguments)},mf=d._ClipByValue=function(){return(mf=d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},gf=d._Conv2D=function(){return(gf=d._Conv2D=d.asm.Conv2D).apply(null,arguments)},bf=d._Conv2DBackpropInput=function(){return(bf=d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},yf=d._Cos=function(){return(yf=d._Cos=d.asm.Cos).apply(null,arguments)},vf=d._Cosh=function(){return(vf=d._Cosh=d.asm.Cosh).apply(null,arguments)},xf=d._CropAndResize=function(){return(xf=d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},wf=d._Cumprod=function(){return(wf=d._Cumprod=d.asm.Cumprod).apply(null,arguments)},kf=d._Cumsum=function(){return(kf=d._Cumsum=d.asm.Cumsum).apply(null,arguments)},Sf=d._DepthToSpace=function(){return(Sf=d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},If=d._DepthwiseConv2dNative=function(){return(If=d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},Cf=d._Elu=function(){return(Cf=d._Elu=d.asm.Elu).apply(null,arguments)},Nf=d._Equal=function(){return(Nf=d._Equal=d.asm.Equal).apply(null,arguments)},Tf=d._Exp=function(){return(Tf=d._Exp=d.asm.Exp).apply(null,arguments)},$f=d._FlipLeftRight=function(){return($f=d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},Dc=d._Floor=function(){return(Dc=d._Floor=d.asm.Floor).apply(null,arguments)},Fc=d._FloorDiv=function(){return(Fc=d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},wu=d._FusedBatchNorm=function(){return(wu=d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},_f=d._FusedConv2D=function(){return(_f=d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},Af=d._FusedDepthwiseConv2D=function(){return(Af=d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},Fi=d._Gather=function(){return(Fi=d._Gather=d.asm.Gather).apply(null,arguments)},ku=d._GatherNd=function(){return(ku=d._GatherNd=d.asm.GatherNd).apply(null,arguments)},Su=d._Greater=function(){return(Su=d._Greater=d.asm.Greater).apply(null,arguments)},Yv=d._GreaterEqual=function(){return(Yv=d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},Oi=d._LeakyRelu=function(){return(Oi=d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},Pi=d._Less=function(){return(Pi=d._Less=d.asm.Less).apply(null,arguments)},Ef=d._LessEqual=function(){return(Ef=d._LessEqual=d.asm.LessEqual).apply(null,arguments)},H=d._Log=function(){return(H=d._Log=d.asm.Log).apply(null,arguments)},ee=d._LogicalAnd=function(){return(ee=d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},ce=d._Max=function(){return(ce=d._Max=d.asm.Max).apply(null,arguments)},Se=d._MaxPool=function(){return(Se=d._MaxPool=d.asm.MaxPool).apply(null,arguments)},Qe=d._Maximum=function(){return(Qe=d._Maximum=d.asm.Maximum).apply(null,arguments)},Ze=d._Mean=function(){return(Ze=d._Mean=d.asm.Mean).apply(null,arguments)},Le=d._Min=function(){return(Le=d._Min=d.asm.Min).apply(null,arguments)},ze=d._Minimum=function(){return(ze=d._Minimum=d.asm.Minimum).apply(null,arguments)},Tt=d._MirrorPad=function(){return(Tt=d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},is=d._Multiply=function(){return(is=d._Multiply=d.asm.Multiply).apply(null,arguments)},os=d._Neg=function(){return(os=d._Neg=d.asm.Neg).apply(null,arguments)},zi=d._NonMaxSuppressionV3=function(){return(zi=d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},Vr=d._NonMaxSuppressionV4=function(){return(Vr=d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},Rf=d._NonMaxSuppressionV5=function(){return(Rf=d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},an=d._NotEqual=function(){return(an=d._NotEqual=d.asm.NotEqual).apply(null,arguments)},tr=d._OneHot=function(){return(tr=d._OneHot=d.asm.OneHot).apply(null,arguments)},Oc=d._PadV2=function(){return(Oc=d._PadV2=d.asm.PadV2).apply(null,arguments)},nT=d._Pow=function(){return(nT=d._Pow=d.asm.Pow).apply(null,arguments)},sT=d._Prelu=function(){return(sT=d._Prelu=d.asm.Prelu).apply(null,arguments)},rT=d._Prod=function(){return(rT=d._Prod=d.asm.Prod).apply(null,arguments)},aT=d._RealDiv=function(){return(aT=d._RealDiv=d.asm.RealDiv).apply(null,arguments)},iT=d._Relu=function(){return(iT=d._Relu=d.asm.Relu).apply(null,arguments)},oT=d._Relu6=function(){return(oT=d._Relu6=d.asm.Relu6).apply(null,arguments)},uT=d._ResizeBilinear=function(){return(uT=d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},lT=d._Reverse=function(){return(lT=d._Reverse=d.asm.Reverse).apply(null,arguments)},cT=d._RotateWithOffset=function(){return(cT=d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},dT=d._Round=function(){return(dT=d._Round=d.asm.Round).apply(null,arguments)},pT=d._Rsqrt=function(){return(pT=d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},hT=d._ScatterNd=function(){return(hT=d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},fT=d._SelectV2=function(){return(fT=d._SelectV2=d.asm.SelectV2).apply(null,arguments)},mT=d._Sigmoid=function(){return(mT=d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},gT=d._Sin=function(){return(gT=d._Sin=d.asm.Sin).apply(null,arguments)},bT=d._Softmax=function(){return(bT=d._Softmax=d.asm.Softmax).apply(null,arguments)},yT=d._SparseFillEmptyRows=function(){return(yT=d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},vT=d._SparseReshape=function(){return(vT=d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},xT=d._SparseSegmentReduction=function(){return(xT=d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},wT=d._Sqrt=function(){return(wT=d._Sqrt=d.asm.Sqrt).apply(null,arguments)},kT=d._Square=function(){return(kT=d._Square=d.asm.Square).apply(null,arguments)},ST=d._SquaredDifference=function(){return(ST=d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},IT=d._Step=function(){return(IT=d._Step=d.asm.Step).apply(null,arguments)},CT=d._StridedSlice=function(){return(CT=d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},NT=d._Sub=function(){return(NT=d._Sub=d.asm.Sub).apply(null,arguments)},TT=d._Sum=function(){return(TT=d._Sum=d.asm.Sum).apply(null,arguments)},$T=d._Tan=function(){return($T=d._Tan=d.asm.Tan).apply(null,arguments)},_T=d._Tanh=function(){return(_T=d._Tanh=d.asm.Tanh).apply(null,arguments)},AT=d._Tile=function(){return(AT=d._Tile=d.asm.Tile).apply(null,arguments)},ET=d._TopK=function(){return(ET=d._TopK=d.asm.TopK).apply(null,arguments)},RT=d._Transform=function(){return(RT=d._Transform=d.asm.Transform).apply(null,arguments)},DT=d._Transpose=function(){return(DT=d._Transpose=d.asm.Transpose).apply(null,arguments)},FT=d.__FusedMatMul=function(){return(FT=d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},Df=d._malloc=function(){return(Df=d._malloc=d.asm.malloc).apply(null,arguments)},Qv=d._free=function(){return(Qv=d._free=d.asm.free).apply(null,arguments)},OT=d._emscripten_tls_init=function(){return(OT=d._emscripten_tls_init=d.asm.emscripten_tls_init).apply(null,arguments)},Zv=d.___errno_location=function(){return(Zv=d.___errno_location=d.asm.__errno_location).apply(null,arguments)},Pc=d._pthread_self=function(){return(Pc=d._pthread_self=d.asm.pthread_self).apply(null,arguments)},Jv=d._emscripten_main_thread_process_queued_calls=function(){return(Jv=d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},PT=d.__emscripten_thread_crashed=function(){return(PT=d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},ex=d.__emscripten_thread_init=function(){return(ex=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)},zT=d._emscripten_current_thread_process_queued_calls=function(){return(zT=d._emscripten_current_thread_process_queued_calls=d.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},MT=d._emscripten_main_browser_thread_id=function(){return(MT=d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},LT=d._emscripten_sync_run_in_main_thread_2=function(){return(LT=d._emscripten_sync_run_in_main_thread_2=d.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},tx=d._emscripten_sync_run_in_main_thread_4=function(){return(tx=d._emscripten_sync_run_in_main_thread_4=d.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},nx=d._emscripten_run_in_main_runtime_thread_js=function(){return(nx=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},Ff=d._emscripten_dispatch_to_thread_=function(){return(Ff=d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},Of=d.__emscripten_thread_free_data=function(){return(Of=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},BT=d.__emscripten_thread_exit=function(){return(BT=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},VT=d._memalign=function(){return(VT=d._memalign=d.asm.memalign).apply(null,arguments)},sx=d._emscripten_stack_set_limits=function(){return(sx=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},Pf=d.stackSave=function(){return(Pf=d.stackSave=d.asm.stackSave).apply(null,arguments)},zc=d.stackRestore=function(){return(zc=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},Mi=d.stackAlloc=function(){return(Mi=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)},WT=d.dynCall_iijjiiii=function(){return(WT=d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},UT=d.dynCall_jiji=function(){return(UT=d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},rx=d.__emscripten_allow_main_runtime_queued_calls=21456;d.cwrap=en,d.keepRuntimeAlive=zr,d.PThread=$e,d.PThread=$e,d.wasmMemory=Ce,d.ExitStatus=Iu;var Mc;function Iu(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}as=function N(){Mc||zf(),Mc||(as=N)};function zf(N){if(N=N||b,er>0)return;if($){h(d),gu(),postMessage({cmd:"loaded"});return}if(sn(),er>0)return;function D(){Mc||(Mc=!0,d.calledRun=!0,!rt&&(gu(),h(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),lh()))}d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),D()},1)):D()}d.run=zf;function GT(N,D){if(Jt=N,!D&&$)throw Sc(N),"unwind";zr()||uh(),HT(N)}function HT(N){Jt=N,zr()||($e.terminateAllThreads(),d.onExit&&d.onExit(N),rt=!0),v(N,new Iu(N))}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();zf();var Lc;m&&(Lc={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!m.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!m.unhandledRejection.indexOf(N)>-1})});var Bc;if(typeof WasmBackendModule!="undefined")Bc=WasmBackendModule;else if(typeof r!="undefined")Bc=r;else throw new Error("Could not find wasm module in post.js");if(Lc){var qT=Bc._dispose;Bc._dispose=function(){qT(),Lc.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),Lc.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),m$=Mt({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},i,o;a.ready=new Promise(function(H,ee){i=H,o=ee});var u;typeof process!="undefined"&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var l=Object.assign({},a),c=[],p="./this.program",d=(H,ee)=>{throw ee},h=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function b(H){return a.locateFile?a.locateFile(H,g):g+H}var y,v,x,k;function I(H){if(H instanceof ku)return;R("exiting due to exception: "+H)}var $,E,A;m?(f?g=fd().dirname(g)+"/":g=__dirname+"/",A=()=>{E||($=ag(),E=fd())},y=function(ee,ce){return A(),ee=E.normalize(ee),$.readFileSync(ee,ce?void 0:"utf8")},x=H=>{var ee=y(H,!0);return ee.buffer||(ee=new Uint8Array(ee)),ee},v=(H,ee,ce)=>{A(),H=E.normalize(H),$.readFile(H,function(Se,Qe){Se?ce(Se):ee(Qe.buffer)})},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),c=process.argv.slice(2),process.on("uncaughtException",function(H){if(!(H instanceof ku))throw H}),process.on("unhandledRejection",function(H){throw H}),d=(H,ee)=>{if(mu())throw process.exitCode=H,ee;I(ee),process.exit(H)},a.inspect=function(){return"[Emscripten Module object]"}):(h||f)&&(f?g=self.location.href:typeof document!="undefined"&&document.currentScript&&(g=document.currentScript.src),s&&(g=s),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",y=H=>{var ee=new XMLHttpRequest;return ee.open("GET",H,!1),ee.send(null),ee.responseText},f&&(x=H=>{var ee=new XMLHttpRequest;return ee.open("GET",H,!1),ee.responseType="arraybuffer",ee.send(null),new Uint8Array(ee.response)}),v=(H,ee,ce)=>{var Se=new XMLHttpRequest;Se.open("GET",H,!0),Se.responseType="arraybuffer",Se.onload=()=>{if(Se.status==200||Se.status==0&&Se.response){ee(Se.response);return}ce()},Se.onerror=ce,Se.send(null)},k=H=>document.title=H);var P=a.print||console.log.bind(console),R=a.printErr||console.warn.bind(console);Object.assign(a,l),l=null,a.arguments&&(c=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(d=a.quit);var F=4;function T(H){T.shown||(T.shown={}),T.shown[H]||(T.shown[H]=1,R(H))}function z(H,ee){if(typeof WebAssembly.Function=="function"){for(var ce={i:"i32",j:"i64",f:"f32",d:"f64"},Se={parameters:[],results:ee[0]=="v"?[]:[ce[ee[0]]]},Qe=1;Qe<ee.length;++Qe)Se.parameters.push(ce[ee[Qe]]);return new WebAssembly.Function(Se,H)}var Ze=[1,0,1,96],Le=ee.slice(0,1),ze=ee.slice(1),Tt={i:127,j:126,f:125,d:124};Ze.push(ze.length);for(var Qe=0;Qe<ze.length;++Qe)Ze.push(Tt[ze[Qe]]);Le=="v"?Ze.push(0):Ze=Ze.concat([1,Tt[Le]]),Ze[1]=Ze.length-2;var is=new Uint8Array([0,97,115,109,1,0,0,0].concat(Ze,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),os=new WebAssembly.Module(is),zi=new WebAssembly.Instance(os,{e:{f:H}}),Vr=zi.exports.f;return Vr}var W=[],j;function X(){if(W.length)return W.pop();try{Zs.grow(1)}catch(H){throw H instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":H}return Zs.length-1}function Y(H,ee){for(var ce=H;ce<H+ee;ce++){var Se=yu(ce);Se&&j.set(Se,ce)}}var Z=0,te=H=>{Z=H},J;a.wasmBinary&&(J=a.wasmBinary);var se=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Pr("no native wasm support detected");var ne,oe=!1,ae;function de(H,ee){H||Pr(ee)}function me(H){var ee=a["_"+H];return ee}function ke(H,ee,ce,Se,Qe){var Ze={string:function(an){var tr=0;if(an!=null&&an!==0){var Oc=(an.length<<2)+1;tr=wu(Oc),tt(an,tr,Oc)}return tr},array:function(an){var tr=wu(an.length);return rt(an,tr),tr}};function Le(an){return ee==="string"?Je(an):ee==="boolean"?Boolean(an):an}var ze=me(H),Tt=[],is=0;if(Se)for(var os=0;os<Se.length;os++){var zi=Ze[ce[os]];zi?(is===0&&(is=Dc()),Tt[os]=zi(Se[os])):Tt[os]=Se[os]}var Vr=ze.apply(null,Tt);function Rf(an){return is!==0&&Fc(is),Le(an)}return Vr=Rf(Vr),Vr}function Ie(H,ee,ce,Se){ce=ce||[];var Qe=ce.every(function(Le){return Le==="number"}),Ze=ee!=="string";return Ze&&Qe&&!Se?me(H):function(){return ke(H,ee,ce,arguments,Se)}}var Ee=1,Pe=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function Xe(H,ee,ce){for(var Se=ee+ce,Qe=ee;H[Qe]&&!(Qe>=Se);)++Qe;if(Qe-ee>16&&H.subarray&&Pe)return Pe.decode(H.subarray(ee,Qe));for(var Ze="";ee<Qe;){var Le=H[ee++];if(!(Le&128)){Ze+=String.fromCharCode(Le);continue}var ze=H[ee++]&63;if((Le&224)==192){Ze+=String.fromCharCode((Le&31)<<6|ze);continue}var Tt=H[ee++]&63;if((Le&240)==224?Le=(Le&15)<<12|ze<<6|Tt:Le=(Le&7)<<18|ze<<12|Tt<<6|H[ee++]&63,Le<65536)Ze+=String.fromCharCode(Le);else{var is=Le-65536;Ze+=String.fromCharCode(55296|is>>10,56320|is&1023)}}return Ze}function Je(H,ee){return H?Xe(en,H,ee):""}function Ye(H,ee,ce,Se){if(!(Se>0))return 0;for(var Qe=ce,Ze=ce+Se-1,Le=0;Le<H.length;++Le){var ze=H.charCodeAt(Le);if(ze>=55296&&ze<=57343){var Tt=H.charCodeAt(++Le);ze=65536+((ze&1023)<<10)|Tt&1023}if(ze<=127){if(ce>=Ze)break;ee[ce++]=ze}else if(ze<=2047){if(ce+1>=Ze)break;ee[ce++]=192|ze>>6,ee[ce++]=128|ze&63}else if(ze<=65535){if(ce+2>=Ze)break;ee[ce++]=224|ze>>12,ee[ce++]=128|ze>>6&63,ee[ce++]=128|ze&63}else{if(ce+3>=Ze)break;ee[ce++]=240|ze>>18,ee[ce++]=128|ze>>12&63,ee[ce++]=128|ze>>6&63,ee[ce++]=128|ze&63}}return ee[ce]=0,ce-Qe}function tt(H,ee,ce){return Ye(H,en,ee,ce)}function Ce(H){for(var ee=0,ce=0;ce<H.length;++ce){var Se=H.charCodeAt(ce);Se>=55296&&Se<=57343&&(Se=65536+((Se&1023)<<10)|H.charCodeAt(++ce)&1023),Se<=127?++ee:Se<=2047?ee+=2:Se<=65535?ee+=3:ee+=4}return ee}var ut=typeof TextDecoder!="undefined"?new TextDecoder("utf-16le"):void 0;function rt(H,ee){Et.set(H,ee)}function Jt(H,ee,ce){for(var Se=0;Se<H.length;++Se)Et[ee++>>0]=H.charCodeAt(Se);ce||(Et[ee>>0]=0)}function Nt(H,ee){return H%ee>0&&(H+=ee-H%ee),H}var In,Et,en,Cn,Nn,Yt,Dn,tn,zs;function Ms(H){In=H,a.HEAP8=Et=new Int8Array(H),a.HEAP16=Cn=new Int16Array(H),a.HEAP32=Yt=new Int32Array(H),a.HEAPU8=en=new Uint8Array(H),a.HEAPU16=Nn=new Uint16Array(H),a.HEAPU32=Dn=new Uint32Array(H),a.HEAPF32=tn=new Float32Array(H),a.HEAPF64=zs=new Float64Array(H)}var Ni=a.INITIAL_MEMORY||16777216,Zs,Ls=[],fu=[],Ti=[],nn=!1,oc=!1,uc=0;function mu(){return se||uc>0}function lc(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)pc(a.preRun.shift());bu(Ls)}function cc(){nn=!0,bu(fu)}function Lv(){oc=!0}function dc(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)hc(a.postRun.shift());bu(Ti)}function pc(H){Ls.unshift(H)}function rs(H){fu.unshift(H)}function hc(H){Ti.unshift(H)}var Fn=0,$i=null,Js=null;function ih(H){Fn++,a.monitorRunDependencies&&a.monitorRunDependencies(Fn)}function fc(H){if(Fn--,a.monitorRunDependencies&&a.monitorRunDependencies(Fn),Fn==0&&($i!==null&&(clearInterval($i),$i=null),Js)){var ee=Js;Js=null,ee()}}a.preloadedImages={},a.preloadedAudios={};function Pr(H){a.onAbort&&a.onAbort(H),H="Aborted("+H+")",R(H),oe=!0,ae=1,H+=". Build with -s ASSERTIONS=1 for more info.";var ee=new WebAssembly.RuntimeError(H);throw o(ee),ee}var oh="data:application/octet-stream;base64,";function mc(H){return H.startsWith(oh)}function zr(H){return H.startsWith("file://")}var sn;sn="tfjs-backend-wasm.wasm",mc(sn)||(sn=b(sn));function gu(H){try{if(H==sn&&J)return new Uint8Array(J);if(x)return x(H);throw"both async and sync fetching of the wasm failed"}catch(ee){Pr(ee)}}function uh(){if(!J&&(h||f)){if(typeof fetch=="function"&&!zr(sn))return fetch(sn,{credentials:"same-origin"}).then(function(H){if(!H.ok)throw"failed to load wasm binary file at '"+sn+"'";return H.arrayBuffer()}).catch(function(){return gu(sn)});if(v)return new Promise(function(H,ee){v(sn,function(ce){H(new Uint8Array(ce))},ee)})}return Promise.resolve().then(function(){return gu(sn)})}function lh(){var H={env:Ei,wasi_snapshot_preview1:Ei};function ee(Le,ze){var Tt=Le.exports;a.asm=Tt,ne=a.asm.memory,Ms(ne.buffer),Zs=a.asm.__indirect_function_table,rs(a.asm.__wasm_call_ctors),fc("wasm-instantiate")}ih("wasm-instantiate");function ce(Le){ee(Le.instance)}function Se(Le){return uh().then(function(ze){return WebAssembly.instantiate(ze,H)}).then(function(ze){return ze}).then(Le,function(ze){R("failed to asynchronously prepare wasm: "+ze),Pr(ze)})}function Qe(){return!J&&typeof WebAssembly.instantiateStreaming=="function"&&!mc(sn)&&!zr(sn)&&typeof fetch=="function"?fetch(sn,{credentials:"same-origin"}).then(function(Le){var ze=WebAssembly.instantiateStreaming(Le,H);return ze.then(ce,function(Tt){return R("wasm streaming compile failed: "+Tt),R("falling back to ArrayBuffer instantiation"),Se(ce)})}):Se(ce)}if(a.instantiateWasm)try{var Ze=a.instantiateWasm(H,ee);return Ze}catch(Le){return R("Module.instantiateWasm callback failed with error: "+Le),!1}return Qe().catch(o),{}}var Bv,Vv;function bu(H){for(;H.length>0;){var ee=H.shift();if(typeof ee=="function"){ee(a);continue}var ce=ee.func;typeof ce=="number"?ee.arg===void 0?yu(ce)():yu(ce)(ee.arg):ce(ee.arg===void 0?null:ee.arg)}}function er(H){return H}function gc(H){var ee=/\b_Z[\w\d_]+/g;return H.replace(ee,function(ce){var Se=ce;return ce===Se?ce:Se+" ["+ce+"]"})}var as=[];function yu(H){var ee=as[H];return ee||(H>=as.length&&(as.length=H+1),as[H]=ee=Zs.get(H)),ee}function Wv(){var H=new Error;if(!H.stack){try{throw new Error}catch(ee){H=ee}if(!H.stack)return"(no stack trace available)"}return H.stack.toString()}function _i(H,ee){Zs.set(H,ee),as[H]=ee}function ch(){Pr("")}function bc(H,ee,ce){en.copyWithin(H,ee,ee+ce)}function yc(){return 2147483648}function rn(H){try{return ne.grow(H-In.byteLength+65535>>>16),Ms(ne.buffer),1}catch(ee){}}function vc(H){var ee=en.length;H=H>>>0;var ce=yc();if(H>ce)return!1;for(var Se=1;Se<=4;Se*=2){var Qe=ee*(1+.2/Se);Qe=Math.min(Qe,H+100663296);var Ze=Math.min(ce,Nt(Math.max(H,Qe),65536)),Le=rn(Ze);if(Le)return!0}return!1}var Ai={mappings:{},buffers:[null,[],[]],printChar:function(H,ee){var ce=Ai.buffers[H];ee===0||ee===10?((H===1?P:R)(Xe(ce,0)),ce.length=0):ce.push(ee)},varargs:void 0,get:function(){Ai.varargs+=4;var H=Yt[Ai.varargs-4>>2];return H},getStr:function(H){var ee=Je(H);return ee},get64:function(H,ee){return H}};function dh(H){return 0}function Uv(H,ee,ce,Se,Qe){}function Gv(H,ee,ce,Se){for(var Qe=0,Ze=0;Ze<ce;Ze++){var Le=Yt[ee>>2],ze=Yt[ee+4>>2];ee+=8;for(var Tt=0;Tt<ze;Tt++)Ai.printChar(H,en[Le+Tt]);Qe+=ze}return Yt[Se>>2]=Qe,0}function ph(H){te(H)}var xc=!1,Ei={abort:ch,emscripten_memcpy_big:bc,emscripten_resize_heap:vc,fd_close:dh,fd_seek:Uv,fd_write:Gv,setTempRet0:ph},tT=lh(),Hv=a.___wasm_call_ctors=function(){return(Hv=a.___wasm_call_ctors=a.asm.__wasm_call_ctors).apply(null,arguments)},hh=a._init=function(){return(hh=a._init=a.asm.init).apply(null,arguments)},fh=a._init_with_threads_count=function(){return(fh=a._init_with_threads_count=a.asm.init_with_threads_count).apply(null,arguments)},wc=a._get_threads_count=function(){return(wc=a._get_threads_count=a.asm.get_threads_count).apply(null,arguments)},kc=a._register_tensor=function(){return(kc=a._register_tensor=a.asm.register_tensor).apply(null,arguments)},mh=a._dispose_data=function(){return(mh=a._dispose_data=a.asm.dispose_data).apply(null,arguments)},$e=a._dispose=function(){return($e=a._dispose=a.asm.dispose).apply(null,arguments)},gh=a._Abs=function(){return(gh=a._Abs=a.asm.Abs).apply(null,arguments)},Sc=a._Add=function(){return(Sc=a._Add=a.asm.Add).apply(null,arguments)},Mr=a._AddN=function(){return(Mr=a._AddN=a.asm.AddN).apply(null,arguments)},Ri=a._All=function(){return(Ri=a._All=a.asm.All).apply(null,arguments)},bh=a._Any=function(){return(bh=a._Any=a.asm.Any).apply(null,arguments)},qv=a._ArgMax=function(){return(qv=a._ArgMax=a.asm.ArgMax).apply(null,arguments)},yh=a._AvgPool=function(){return(yh=a._AvgPool=a.asm.AvgPool).apply(null,arguments)},jv=a._BatchMatMul=function(){return(jv=a._BatchMatMul=a.asm.BatchMatMul).apply(null,arguments)},Lr=a._Ceil=function(){return(Lr=a._Ceil=a.asm.Ceil).apply(null,arguments)},vh=a._ClipByValue=function(){return(vh=a._ClipByValue=a.asm.ClipByValue).apply(null,arguments)},xh=a._Conv2D=function(){return(xh=a._Conv2D=a.asm.Conv2D).apply(null,arguments)},wh=a._Conv2DBackpropInput=function(){return(wh=a._Conv2DBackpropInput=a.asm.Conv2DBackpropInput).apply(null,arguments)},kh=a._Cos=function(){return(kh=a._Cos=a.asm.Cos).apply(null,arguments)},Sh=a._Cosh=function(){return(Sh=a._Cosh=a.asm.Cosh).apply(null,arguments)},Ih=a._CropAndResize=function(){return(Ih=a._CropAndResize=a.asm.CropAndResize).apply(null,arguments)},Ic=a._Cumprod=function(){return(Ic=a._Cumprod=a.asm.Cumprod).apply(null,arguments)},Ch=a._Cumsum=function(){return(Ch=a._Cumsum=a.asm.Cumsum).apply(null,arguments)},Nh=a._DepthToSpace=function(){return(Nh=a._DepthToSpace=a.asm.DepthToSpace).apply(null,arguments)},Th=a._DepthwiseConv2dNative=function(){return(Th=a._DepthwiseConv2dNative=a.asm.DepthwiseConv2dNative).apply(null,arguments)},$h=a._Elu=function(){return($h=a._Elu=a.asm.Elu).apply(null,arguments)},_h=a._Equal=function(){return(_h=a._Equal=a.asm.Equal).apply(null,arguments)},Cc=a._Exp=function(){return(Cc=a._Exp=a.asm.Exp).apply(null,arguments)},Ah=a._FlipLeftRight=function(){return(Ah=a._FlipLeftRight=a.asm.FlipLeftRight).apply(null,arguments)},Eh=a._Floor=function(){return(Eh=a._Floor=a.asm.Floor).apply(null,arguments)},Br=a._FloorDiv=function(){return(Br=a._FloorDiv=a.asm.FloorDiv).apply(null,arguments)},vu=a._FusedBatchNorm=function(){return(vu=a._FusedBatchNorm=a.asm.FusedBatchNorm).apply(null,arguments)},Rh=a._FusedConv2D=function(){return(Rh=a._FusedConv2D=a.asm.FusedConv2D).apply(null,arguments)},Dh=a._FusedDepthwiseConv2D=function(){return(Dh=a._FusedDepthwiseConv2D=a.asm.FusedDepthwiseConv2D).apply(null,arguments)},Fh=a._Gather=function(){return(Fh=a._Gather=a.asm.Gather).apply(null,arguments)},Me=a._GatherNd=function(){return(Me=a._GatherNd=a.asm.GatherNd).apply(null,arguments)},Oh=a._Greater=function(){return(Oh=a._Greater=a.asm.Greater).apply(null,arguments)},Ph=a._GreaterEqual=function(){return(Ph=a._GreaterEqual=a.asm.GreaterEqual).apply(null,arguments)},zh=a._LeakyRelu=function(){return(zh=a._LeakyRelu=a.asm.LeakyRelu).apply(null,arguments)},Mh=a._Less=function(){return(Mh=a._Less=a.asm.Less).apply(null,arguments)},Lh=a._LessEqual=function(){return(Lh=a._LessEqual=a.asm.LessEqual).apply(null,arguments)},Bh=a._Log=function(){return(Bh=a._Log=a.asm.Log).apply(null,arguments)},xu=a._LogicalAnd=function(){return(xu=a._LogicalAnd=a.asm.LogicalAnd).apply(null,arguments)},Nc=a._Max=function(){return(Nc=a._Max=a.asm.Max).apply(null,arguments)},Tc=a._MaxPool=function(){return(Tc=a._MaxPool=a.asm.MaxPool).apply(null,arguments)},Vh=a._Maximum=function(){return(Vh=a._Maximum=a.asm.Maximum).apply(null,arguments)},Wh=a._Mean=function(){return(Wh=a._Mean=a.asm.Mean).apply(null,arguments)},Uh=a._Min=function(){return(Uh=a._Min=a.asm.Min).apply(null,arguments)},Gh=a._Minimum=function(){return(Gh=a._Minimum=a.asm.Minimum).apply(null,arguments)},Hh=a._MirrorPad=function(){return(Hh=a._MirrorPad=a.asm.MirrorPad).apply(null,arguments)},qh=a._Multiply=function(){return(qh=a._Multiply=a.asm.Multiply).apply(null,arguments)},gt=a._Neg=function(){return(gt=a._Neg=a.asm.Neg).apply(null,arguments)},jh=a._NonMaxSuppressionV3=function(){return(jh=a._NonMaxSuppressionV3=a.asm.NonMaxSuppressionV3).apply(null,arguments)},Kh=a._NonMaxSuppressionV4=function(){return(Kh=a._NonMaxSuppressionV4=a.asm.NonMaxSuppressionV4).apply(null,arguments)},Xh=a._NonMaxSuppressionV5=function(){return(Xh=a._NonMaxSuppressionV5=a.asm.NonMaxSuppressionV5).apply(null,arguments)},Di=a._NotEqual=function(){return(Di=a._NotEqual=a.asm.NotEqual).apply(null,arguments)},$c=a._OneHot=function(){return($c=a._OneHot=a.asm.OneHot).apply(null,arguments)},_c=a._PadV2=function(){return(_c=a._PadV2=a.asm.PadV2).apply(null,arguments)},Ac=a._Pow=function(){return(Ac=a._Pow=a.asm.Pow).apply(null,arguments)},Yh=a._Prelu=function(){return(Yh=a._Prelu=a.asm.Prelu).apply(null,arguments)},Ec=a._Prod=function(){return(Ec=a._Prod=a.asm.Prod).apply(null,arguments)},Qh=a._RealDiv=function(){return(Qh=a._RealDiv=a.asm.RealDiv).apply(null,arguments)},Kv=a._Relu=function(){return(Kv=a._Relu=a.asm.Relu).apply(null,arguments)},Rc=a._Relu6=function(){return(Rc=a._Relu6=a.asm.Relu6).apply(null,arguments)},Xv=a._ResizeBilinear=function(){return(Xv=a._ResizeBilinear=a.asm.ResizeBilinear).apply(null,arguments)},Zh=a._Reverse=function(){return(Zh=a._Reverse=a.asm.Reverse).apply(null,arguments)},Jh=a._RotateWithOffset=function(){return(Jh=a._RotateWithOffset=a.asm.RotateWithOffset).apply(null,arguments)},ef=a._Round=function(){return(ef=a._Round=a.asm.Round).apply(null,arguments)},tf=a._Rsqrt=function(){return(tf=a._Rsqrt=a.asm.Rsqrt).apply(null,arguments)},nf=a._ScatterNd=function(){return(nf=a._ScatterNd=a.asm.ScatterNd).apply(null,arguments)},sf=a._SelectV2=function(){return(sf=a._SelectV2=a.asm.SelectV2).apply(null,arguments)},rf=a._Sigmoid=function(){return(rf=a._Sigmoid=a.asm.Sigmoid).apply(null,arguments)},af=a._Sin=function(){return(af=a._Sin=a.asm.Sin).apply(null,arguments)},of=a._Softmax=function(){return(of=a._Softmax=a.asm.Softmax).apply(null,arguments)},uf=a._SparseFillEmptyRows=function(){return(uf=a._SparseFillEmptyRows=a.asm.SparseFillEmptyRows).apply(null,arguments)},lf=a._SparseReshape=function(){return(lf=a._SparseReshape=a.asm.SparseReshape).apply(null,arguments)},cf=a._SparseSegmentReduction=function(){return(cf=a._SparseSegmentReduction=a.asm.SparseSegmentReduction).apply(null,arguments)},df=a._Sqrt=function(){return(df=a._Sqrt=a.asm.Sqrt).apply(null,arguments)},pf=a._Square=function(){return(pf=a._Square=a.asm.Square).apply(null,arguments)},hf=a._SquaredDifference=function(){return(hf=a._SquaredDifference=a.asm.SquaredDifference).apply(null,arguments)},ff=a._Step=function(){return(ff=a._Step=a.asm.Step).apply(null,arguments)},mf=a._StridedSlice=function(){return(mf=a._StridedSlice=a.asm.StridedSlice).apply(null,arguments)},gf=a._Sub=function(){return(gf=a._Sub=a.asm.Sub).apply(null,arguments)},bf=a._Sum=function(){return(bf=a._Sum=a.asm.Sum).apply(null,arguments)},yf=a._Tan=function(){return(yf=a._Tan=a.asm.Tan).apply(null,arguments)},vf=a._Tanh=function(){return(vf=a._Tanh=a.asm.Tanh).apply(null,arguments)},xf=a._Tile=function(){return(xf=a._Tile=a.asm.Tile).apply(null,arguments)},wf=a._TopK=function(){return(wf=a._TopK=a.asm.TopK).apply(null,arguments)},kf=a._Transform=function(){return(kf=a._Transform=a.asm.Transform).apply(null,arguments)},Sf=a._Transpose=function(){return(Sf=a._Transpose=a.asm.Transpose).apply(null,arguments)},If=a.__FusedMatMul=function(){return(If=a.__FusedMatMul=a.asm._FusedMatMul).apply(null,arguments)},Cf=a._malloc=function(){return(Cf=a._malloc=a.asm.malloc).apply(null,arguments)},Nf=a._free=function(){return(Nf=a._free=a.asm.free).apply(null,arguments)},Tf=a.___errno_location=function(){return(Tf=a.___errno_location=a.asm.__errno_location).apply(null,arguments)},$f=a._emscripten_main_thread_process_queued_calls=function(){return($f=a._emscripten_main_thread_process_queued_calls=a.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Dc=a.stackSave=function(){return(Dc=a.stackSave=a.asm.stackSave).apply(null,arguments)},Fc=a.stackRestore=function(){return(Fc=a.stackRestore=a.asm.stackRestore).apply(null,arguments)},wu=a.stackAlloc=function(){return(wu=a.stackAlloc=a.asm.stackAlloc).apply(null,arguments)},_f=a.dynCall_iijjiiii=function(){return(_f=a.dynCall_iijjiiii=a.asm.dynCall_iijjiiii).apply(null,arguments)},Af=a.dynCall_jiji=function(){return(Af=a.dynCall_jiji=a.asm.dynCall_jiji).apply(null,arguments)};a.cwrap=Ie;var Fi;function ku(H){this.name="ExitStatus",this.message="Program terminated with exit("+H+")",this.status=H}Js=function H(){Fi||Su(),Fi||(Js=H)};function Su(H){if(H=H||c,Fn>0||(lc(),Fn>0))return;function ee(){Fi||(Fi=!0,a.calledRun=!0,!oe&&(cc(),i(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),dc()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),ee()},1)):ee()}a.run=Su;function Yv(H){ae=H,mu()||(a.onExit&&a.onExit(H),oe=!0),d(H,new ku(H))}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();Su();var Oi;u&&(Oi={uncaughtException:process.listeners("uncaughtException").filter(function(H){return!u.uncaughtException.indexOf(H)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(H){return!u.unhandledRejection.indexOf(H)>-1})});var Pi;if(typeof r!="undefined")Pi=r;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Pi=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Oi){var Ef=Pi._dispose;Pi._dispose=function(){Ef(),Oi.uncaughtException.forEach(function(H){process.removeListener("uncaughtException",H)}),Oi.unhandledRejection.forEach(function(H){process.removeListener("unhandledRejection",H)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),g$=1e-7,b$=1e-4,Kd=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},rl=class{refCount(e){return On("refCount")}incRef(e){return On("incRef")}timerAvailable(){return!0}time(e){return On("time")}read(e){return On("read")}readSync(e){return On("readSync")}readToGPU(e,t){return On("readToGPU")}numDataIds(){return On("numDataIds")}disposeData(e,t){return On("disposeData")}write(e,t,n){return On("write")}move(e,t,n,s,r){return On("move")}memory(){return On("memory")}floatPrecision(){return On("floatPrecision")}epsilon(){return this.floatPrecision()===32?g$:b$}dispose(){return On("dispose")}};function On(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Qw(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,md(e,t,n)}function y$(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,md(e,n,s),md(t,n,s)}function Uu(e,t,n){return Math.max(e,Math.min(t,n))}function v$(e){return e%2===0?e:e+1}function md(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function x$(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function w$(e,t){let n=Math.random();return t*n+(1-n)*e}function k$(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function O(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function pn(e,t,n=""){O(kr(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function ka(e){O(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ra(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||Qt(e)&&!n)for(let s=0;s<e.length;++s)ra(e[s],t,n);else t.push(e);return t}function dt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function S$(e){return e.length===0}function kr(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function eo(e){return e%1===0}function I$(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function C$(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function N$(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Qw(t),t}function Lu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function T$(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,i=()=>{if(e()){s();return}a++;let o=t(a);if(n!=null&&a>=n){r();return}setTimeout(i,o)};i()})}function $$(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function ts(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),O(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),O(e.every(s=>eo(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function Zw(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:ts(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(a!=null){if(a[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(a[i]==null||a[i]>o)&&e[o]===1&&(n.push(e[o]),s.push(o)),a[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),s.push(o))}return{newShape:n,keptDims:s}}function Jw(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function ek(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function tk(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function nk(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function _$(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function Qt(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Jf(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function sk(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function ar(e){return typeof e=="string"||e instanceof String}function rk(e){return typeof e=="boolean"}function ak(e){return typeof e=="number"}function Xd(e){return Array.isArray(e)?Xd(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":ak(e)?"float32":ar(e)?"string":rk(e)?"bool":"float32"}function hr(e){return!!(e&&e.constructor&&e.call&&e.apply)}function gd(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function lo(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function ik(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let i=0;i<a;i++)r[i]=n[e+i]}else{let a=t[0],i=t.slice(1),o=i.reduce((u,l)=>u*l)*(s?2:1);for(let u=0;u<a;u++)r[u]=ik(e+u*o,i,n,s)}return r}function Xi(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return ik(0,e,t,n)}function ig(e,t){let n=Yd(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Yd(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function A$(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Xi(e,new Float32Array(n));if(t==="int32")return Xi(e,new Int32Array(n));if(t==="bool")return Xi(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function og(e){e.forEach(t=>{O(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function E$(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function R$(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function ug(e){return e&&e.then&&typeof e.then=="function"}var ix="tfjsflags",D$=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=F$,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(ug(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);ix in e&&e[ix].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=P$(s,r)})}};function F$(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(O$(t,s[0],s[1]),s.join("="))),t}function O$(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function P$(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function K(){return ok}var ok=null;function z$(e){ok=e}var Mf;function uk(){if(Mf==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");Mf=e}return Mf}function M$(){let e=uk();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function lg(e,t){let n=M$();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var co="Abs",al="Acos",il="Acosh",Sr="Add",Sa="AddN",ol="All",ul="Any",Ia="ArgMax",ll="ArgMin",cl="Asin",dl="Asinh",pl="Atan",hl="Atanh",fl="Atan2",Ca="AvgPool",cg="AvgPoolGrad",Qd="AvgPool3D",dg="AvgPool3DGrad",Na="BatchMatMul",po="BatchToSpaceND",pg="Bincount",L$="BroadcastTo",hg="BroadcastArgs",Ta="Cast",$a="Ceil",Ir="ClipByValue",Zd="Complex",Jd="ComplexAbs",ho="Concat",_a="Conv2D",fg="Conv2DBackpropFilter",Aa="Conv2DBackpropInput",ep="Conv3D",mg="Conv3DBackpropFilterV2",gg="Conv3DBackpropInputV2",Ea="Cos",Ra="Cosh",fo="Cumprod",Da="Cumsum",mo="CropAndResize",bg="DenseBincount",go="DepthToSpace",Fa="DepthwiseConv2dNative",yg="DepthwiseConv2dNativeBackpropFilter",vg="DepthwiseConv2dNativeBackpropInput",xg="Diag",tp="Dilation2D",em="Dilation2DBackpropInput",tm="Dilation2DBackpropFilter",Oa="RealDiv",np="Einsum",Pa="Elu",wg="EluGrad",ml="Erf",bo="Equal",za="Exp",yo="ExpandDims",vo="Expm1",kg="FFT",gl="Fill",xo="FlipLeftRight",Ma="Floor",La="FloorDiv",Ba="FusedBatchNorm",wo="GatherV2",ko="GatherNd",So="Greater",Va="GreaterEqual",Wa="Identity",Sg="IFFT",sp="Imag",bl="IsFinite",yl="IsInf",vl="IsNan",Ua="LeakyRelu",Io="Less",Co="LessEqual",Ig="LinSpace",Ga="Log",xl="Log1p",No="LogicalAnd",wl="LogicalNot",rp="LogicalOr",B$="LogSoftmax",tpe="LowerBound",ap="LRN",Cg="LRNGrad",Ha="Max",qa="Maximum",ja="MaxPool",Ng="MaxPoolGrad",ip="MaxPool3D",Tg="MaxPool3DGrad",$g="MaxPoolWithArgmax",Ka="Mean",Xa="Min",Ya="Minimum",Qa="MirrorPad",kl="Mod",_g="Multinomial",Za="Multiply",To="Neg",$o="NotEqual",_o="NonMaxSuppressionV3",Sl="NonMaxSuppressionV4",Ao="NonMaxSuppressionV5",Eo="OnesLike",Ro="OneHot",Do="Pack",Ja="PadV2",npe="Pool",ei="Pow",ti="Prelu",ni="Prod",Il="Range",op="Real",Cl="Reciprocal",si="Relu",Fo="Reshape",Nl="ResizeNearestNeighbor",Ag="ResizeNearestNeighborGrad",ri="ResizeBilinear",Eg="ResizeBilinearGrad",ai="Relu6",Oo="Reverse",Po="Round",ii="Rsqrt",zo="ScatterNd",Rg="SearchSorted",Mo="Select",Tl="Selu",Lo="Slice",oi="Sin",Bo="Sinh",$l="Sign",ui="Sigmoid",_l="Softplus",li="Sqrt",ci="Sum",Vo="SpaceToBatchND",Wo="SplitV",di="Softmax",up="SparseFillEmptyRows",Al="SparseReshape",lp="SparseSegmentMean",cp="SparseSegmentSum",dp="SparseToDense",pi="SquaredDifference",El="Square",Uo="StridedSlice",pp="StringNGrams",Dg="StringSplit",Fg="StringToHashBucketFast",hi="Sub",Go="Tan",fi="Tanh",Cr="Tile",Ho="TopK",qo="Transform",mi="Transpose",Og="Unique",jo="Unpack",hp="UnsortedSegmentSum",spe="UpperBound",Ko="ZerosLike",gi="Step",bd="FromPixels",Xo="RotateWithOffset",aa="_FusedMatMul",ia="FusedConv2D",oa="FusedDepthwiseConv2D";function rr(...e){K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(...e)}function V$(...e){K().getBool("IS_TEST")||K().getBool("PROD")||console.log(...e)}var to=lg("kernelRegistry",()=>new Map),Gu=lg("gradRegistry",()=>new Map);function nm(e,t){let n=Pg(e,t);return to.get(n)}function ox(e){return Gu.get(e)}function sm(e){let t=to.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function Rl(e){let{kernelName:t,backendName:n}=e,s=Pg(t,n);to.has(s)&&rr(`The kernel '${t}' for backend '${n}' is already registered`),to.set(s,e)}function W$(e){let{kernelName:t}=e;Gu.has(t)&&K().getBool("DEBUG")&&rr(`Overriding the gradient for '${t}'`),Gu.set(t,e)}function rpe(e,t){let n=Pg(e,t);if(!to.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);to.delete(n)}function ape(e){if(!Gu.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Gu.delete(e)}function ipe(e,t){sm(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});Rl(r)})}function Pg(e,t){return`${t}_${e}`}var w={};Ae(w,{arraysEqual:()=>kr,assert:()=>O,assertNonNegativeIntegerDimensions:()=>og,assertNonNull:()=>ka,assertShapesMatch:()=>pn,bytesFromStringArray:()=>sk,bytesPerElement:()=>Jf,checkConversionForErrors:()=>tk,clamp:()=>Uu,computeStrides:()=>lo,createScalarValue:()=>K$,createShuffledIndices:()=>N$,decodeString:()=>yd,distSquared:()=>k$,encodeString:()=>Fl,fetch:()=>Y$,fingerPrint64:()=>j$,flatten:()=>ra,getArrayFromDType:()=>ek,getTypedArrayFromDType:()=>Jw,hasEncodingLoss:()=>_$,hexToLong:()=>Dl,indexToLoc:()=>R$,inferDtype:()=>Xd,inferFromImplicitShape:()=>$$,isBoolean:()=>rk,isFunction:()=>hr,isInt:()=>eo,isNumber:()=>ak,isPromise:()=>ug,isScalarShape:()=>S$,isString:()=>ar,isTypedArray:()=>Qt,isValidDtype:()=>nk,locToIndex:()=>E$,makeOnesTypedArray:()=>ig,makeZerosNestedTypedArray:()=>A$,makeZerosTypedArray:()=>Yd,nearestDivisor:()=>gd,nearestLargerEven:()=>v$,now:()=>Hu,parseAxisParam:()=>ts,randUniform:()=>w$,repeatedTry:()=>T$,rightPad:()=>Lu,shuffle:()=>Qw,shuffleCombo:()=>y$,sizeFromShape:()=>dt,sizeToSquarishShape:()=>C$,squeezeShape:()=>Zw,sum:()=>x$,swap:()=>md,tanh:()=>I$,toNestedArray:()=>Xi,toTypedArray:()=>fp});var ux=wa(e$()),jr=ux.default||ux;function Dl(e){return jr.fromString(e,!0,16)}var lk=Dl("c3a5c85c97cb3127"),Hr=Dl("b492b66fbe98f273"),on=Dl("9ae16a3b2f90404f");function rm(e){return e.xor(e.shru(47))}function ck(e,t,n){let s=e.slice(t,t+n);return jr.fromBytes(Array.from(s),!0,!0)}function lt(e,t){return ck(e,t,8)}function lx(e,t){return ck(e,t,4)}function Bt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function or(e,t,n=Dl("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function U$(e,t,n,s,r,a){r=r.add(e),a=Bt(a.add(r).add(s),21);let i=r;return r=r.add(t),r=r.add(n),a=a.add(Bt(r,44)),[r.add(s),a.add(i)]}function Wc(e,t,n,s){return U$(lt(e,t),lt(e,t+8),lt(e,t+16),lt(e,t+24),n,s)}function G$(e,t=e.length){if(t>=8){let n=on.add(t*2),s=lt(e,0).add(on),r=lt(e,t-8),a=Bt(r,37).mul(n).add(s),i=Bt(s,25).add(r).mul(n);return or(a,i,n)}if(t>=4){let n=on.add(t*2),s=lx(e,0);return or(s.shl(3).add(t),lx(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),i=t+(r<<2);return rm(on.mul(a).xor(lk.mul(i))).mul(on)}return on}function H$(e,t=e.length){let n=on.add(t*2),s=lt(e,0).mul(Hr),r=lt(e,8),a=lt(e,t-8).mul(n),i=lt(e,t-16).mul(on);return or(Bt(s.add(r),43).add(Bt(a,30)).add(i),s.add(Bt(r.add(on),18)).add(a),n)}function q$(e,t=e.length){let n=on.add(t*2),s=lt(e,0).mul(on),r=lt(e,8),a=lt(e,t-8).mul(n),i=lt(e,t-16).mul(on),o=Bt(s.add(r),43).add(Bt(a,30)).add(i),u=or(o,s.add(Bt(r.add(on),18)).add(a),n),l=lt(e,16).mul(n),c=lt(e,24),p=o.add(lt(e,t-32)).mul(n),d=u.add(lt(e,t-24)).mul(n);return or(Bt(l.add(c),43).add(Bt(p,30)).add(d),l.add(Bt(c.add(s),18)).add(p),n)}function j$(e,t=e.length){let n=jr.fromNumber(81,!0);if(t<=32)return t<=16?G$(e,t):H$(e,t);if(t<=64)return q$(e,t);let s=n,r=n.mul(Hr).add(113),a=rm(r.mul(on).add(113)).mul(on),i=[jr.UZERO,jr.UZERO],o=[jr.UZERO,jr.UZERO];s=s.mul(on).add(lt(e,0));let u=0,l=(t-1>>6)*64,c=l+(t-1&63)-63;do s=Bt(s.add(r).add(i[0]).add(lt(e,u+8)),37).mul(Hr),r=Bt(r.add(i[1]).add(lt(e,u+48)),42).mul(Hr),s=s.xor(o[1]),r=r.add(i[0]).add(lt(e,u+40)),a=Bt(a.add(o[0]),33).mul(Hr),i=Wc(e,u,i[1].mul(Hr),s.add(o[0])),o=Wc(e,u+32,a.add(o[1]),r.add(lt(e,u+16))),[a,s]=[s,a],u+=64;while(u!==l);let p=Hr.add(a.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Bt(s.add(r).add(i[0]).add(lt(e,u+8)),37).mul(p),r=Bt(r.add(i[1]).add(lt(e,u+48)),42).mul(p),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(lt(e,u+40))),a=Bt(a.add(o[0]),33).mul(p),i=Wc(e,u,i[1].mul(p),s.add(o[0])),o=Wc(e,u+32,a.add(o[1]),r.add(lt(e,u+16))),[a,s]=[s,a],or(or(i[0],o[0],p).add(rm(r).mul(lk)).add(a),or(i[1],o[1],p).add(s),p)}function K$(e,t){return t==="string"?Fl(e):fp([e],t)}function X$(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function fp(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ra(e)),K().getBool("DEBUG")&&tk(e,t),X$(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Hu(){return K().platform.now()}function Y$(e,t){return K().platform.fetch(e,t)}function Fl(e,t="utf-8"){return t=t||"utf-8",K().platform.encode(e,t)}function yd(e,t="utf-8"){return t=t||"utf-8",K().platform.decode(e,t)}var Q$=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new J$)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,i=Hu();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let u of s)u.dataSync();a=Promise.resolve({kernelMs:Hu()-i})}if(K().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<s.length;u++){let l=s[u];l.data().then(c=>{Z$(c,l.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),s,a]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],r,o[2])})})}};function Z$(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var J$=class{logKernelProfile(e,t,n,s,r,a){let i=typeof s=="number"?Lu(`${s}ms`,9):s.error,o=Lu(e,25),u=t.rank,l=t.size,c=Lu(t.shape.toString(),14),p="";for(let d in r){let h=r[d];if(h!=null){let f=h.shape||t.shape,m=f.length;p+=`${d}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${u}D ${c}	%c${l}	%c${p}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function e_(e,t,n){let s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<e.length;u++){let l=e[u],c=l.inputs;for(let p in c){let d=c[p],h=!1;for(let f=0;f<t.length;f++)if(s[d.id]){l.outputs.forEach(m=>s[m.id]=!0),h=!0,r[l.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let i={};for(let u=e.length-1;u>=0;u--){let l=e[u],c=l.inputs;for(let p=0;p<l.outputs.length;p++)if(a[l.outputs[p].id]){for(let d in c)a[c[d].id]=!0,i[l.id]=!0;break}}let o=[];for(let u=0;u<e.length;u++){let l=e[u];if(r[l.id]&&i[l.id]){let c={};for(let d in l.inputs){let h=l.inputs[d];s[h.id]&&(c[d]=h)}let p=Object.assign({},l);p.inputs=c,p.outputs=l.outputs,o.push(p)}}return o}function t_(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],i=[];if(a.outputs.forEach(u=>{let l=e[u.id];l!=null?i.push(l):i.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let o=a.gradient(i);for(let u in a.inputs){if(!(u in o))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(o)}.`);let l=n(()=>o[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let c=a.inputs[u];if(!kr(l.shape,c.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${c.shape}'`);if(e[c.id]==null)e[c.id]=l;else{let p=e[c.id];e[c.id]=s(p,l),p.dispose()}}}}var cx=20,Nu=3,Lf=7;function n_(e,t,n,s){let r=lo(t),a=s_(e,t,n,r),i=t.length,o=nd(e,t,n,r,a),u=["Tensor"];return s&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(l=>"    "+l).join(`
`)),u.join(`
`)}function s_(e,t,n,s){let r=dt(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,u=n==="complex64"?Eu(e):e;if(o>1)for(let l=0;l<r/a;l++){let c=l*a;for(let p=0;p<a;p++)i[p]=Math.max(i[p],Au(u[c+p],0,n).length)}return i}function Au(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(Lf))} + ${parseFloat(e[1].toFixed(Lf))}j`:ar(e)?s=`'${e}'`:n==="bool"?s=dk(e):s=parseFloat(e.toFixed(Lf)).toString(),Lu(s,t)}function dk(e){return e===0?"false":"true"}function nd(e,t,n,s,r,a=!0){let i=n==="complex64"?2:1,o=t[0],u=t.length;if(u===0){if(n==="complex64"){let m=Eu(e);return[Au(m[0],0,n)]}return n==="bool"?[dk(e[0])]:[e[0].toString()]}if(u===1){if(o>cx){let g=Nu*i,b=Array.from(e.slice(0,g)),y=Array.from(e.slice((o-Nu)*i,o*i));return n==="complex64"&&(b=Eu(b),y=Eu(y)),["["+b.map((v,x)=>Au(v,r[x],n)).join(", ")+", ..., "+y.map((v,x)=>Au(v,r[o-Nu+x],n)).join(", ")+"]"]}let m=n==="complex64"?Eu(e):Array.from(e);return["["+m.map((g,b)=>Au(g,r[b],n)).join(", ")+"]"]}let l=t.slice(1),c=s.slice(1),p=s[0]*i,d=[];if(o>cx){for(let m=0;m<Nu;m++){let g=m*p,b=g+p;d.push(...nd(e.slice(g,b),l,n,c,r,!1))}d.push("...");for(let m=o-Nu;m<o;m++){let g=m*p,b=g+p;d.push(...nd(e.slice(g,b),l,n,c,r,m===o-1))}}else for(let m=0;m<o;m++){let g=m*p,b=g+p;d.push(...nd(e.slice(g,b),l,n,c,r,m===o-1))}let h=u===2?",":"";d[0]="["+d[0]+h;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+h;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Eu(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Wt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=dt(e),n!=null){let s=n.length;O(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ek(t,this.size),this.strides=lo(e)}set(e,...t){t.length===0&&(t=[0]),O(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return cs().makeTensor(this.values,this.shape,this.dtype)}},cs=null,qi=null,r_=null;function a_(e){cs=e}function i_(e){qi=e}function o_(e){r_=e}var et=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=dt(e),this.strides=lo(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return qi.buffer(this.shape,this.dtype,e)}bufferSync(){return qi.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Xi(this.shape,e,this.dtype==="complex64")}arraySync(){return Xi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=cs().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>yd(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),cs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=cs().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>yd(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await cs().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(cs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return qi.print(this,e)}clone(){return this.throwIfDisposed(),qi.clone(this)}toString(e=!1){let t=this.dataSync();return n_(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),qi.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),cs().makeVariable(this,e,t,n)}};Object.defineProperty(et,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function u_(){return lg("Tensor",()=>et)}u_();var vd=class extends et{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!kr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);cs().disposeTensor(this),this.dataId=e.dataId,cs().incRef(this,null)}dispose(){cs().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(vd,Symbol.hasInstance,{value:e=>e instanceof et&&e.assign!=null&&e.assign instanceof Function});var _s={};Ae(_s,{assertTypesMatch:()=>gk,getTensorsInContainer:()=>zg,isTensorInList:()=>d_,makeTypesMatch:()=>vt});var l_=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(l_||{}),pk=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(pk||{}),hk=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(hk||{}),fk=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(fk||{}),mk=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(mk||{}),c_={float32:fk,int32:pk,bool:hk,complex64:mk};function cn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return c_[e][t]}function mp(e){return cn(e,"int32")}function vt(e,t){if(e.dtype===t.dtype)return[e,t];let n=cn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function gk(e,t){O(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function d_(e,t){return t.some(n=>n.id===e.id)}function zg(e){let t=[];return bk(e,t,new Set),t}function bk(e,t,n){if(e==null)return;if(e instanceof et){t.push(e);return}if(!p_(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),bk(a,t,n))}}function p_(e){return Array.isArray(e)||typeof e=="object"}function Bf(e){return e.kernelName!=null}var dx=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},am=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new dx}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(rr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Q$(this.backendInstance),!0}setupRegisteredKernels(){sm(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){sm(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof rl)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,rr(`Initialization of backend ${e} failed`),rr(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return rr(`Initialization of backend ${e} failed`),rr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return am.nextTensorId++}nextVariableId(){return am.nextVariableId++}clone(e){let t=M.runKernel(Wa,{x:e}),n={x:e},s=a=>({x:()=>{let i="float32",o={x:a},u={dtype:i};return M.runKernel(Ta,o,u)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(nm(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(o=>{r+=o.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,u=Bf(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Bf(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=nm(h,this.backendName);O(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),i=()=>{let b=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let y=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,b,y);let v=y.map(x=>x.rank!=null?x:this.makeTensorFromTensorInfo(x));if(s){let x=this.getTensorsForGradient(h,f,v);n=this.saveTensorsForBackwardMode(x)}return v}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>h(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,m,g),g}}let{inputs:l,attrs:c}=e,p=Bf(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),s&&this.addTapeNode(u,l,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(h=>l[h]!=null?l[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=ox(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],i;s.saveAllInputs?(O(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=r.map(u=>t[u]);let o=n.filter((u,l)=>a[l]);return i.concat(o)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&ar(e[0])&&(r=e.map(o=>Fl(o)));let a=s.write(r,t,n),i=new et(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),n==="string"){let o=this.state.tensorInfo.get(a),u=sk(r);this.state.numBytes+=u-o.bytes,o.bytes=u}return i}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:s,dtype:r}=e,a=new et(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new vd(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Jf(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof vd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Jf(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=ox(e);o!=null&&(s=o.gradFunc),s!=null&&(i.gradient=u=>(u=u.map((l,c)=>{if(l==null){let p=n[c],d=Yd(p.size,p.dtype);return this.makeTensor(d,p.shape,p.dtype)}return l}),s(u.length>1?u:u[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=zg(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(O(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));O(r instanceof et,()=>"The result y returned by f() must be a tensor.");let a=e_(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[r.id]=n==null?h_(r.shape):n,t_(i,a,u=>this.tidy(u),f_);let o=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let l of u.saved)l.dispose()}),this.state.activeTape=null),{value:r,grads:o}})}customGrad(e){return O(hr(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{O(t.every(i=>i instanceof et),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((i,o)=>{s[o]=i});let r=(i,o)=>(n=e(...t,o),O(n.value instanceof et,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(hr(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,o)=>{let u=n.gradFunc(i,o),l=Array.isArray(u)?u:[u];O(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(l.every(p=>p instanceof et),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return l.forEach((p,d)=>{c[d]=()=>p}),c};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Hu(),n=await this.backend.time(e);return n.wallMs=Hu()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new dx;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},Mg=am;Mg.nextTensorId=0;Mg.nextVariableId=0;function h_(e){let t=ig(dt(e),"float32");return M.makeTensor(t,e,"float32")}function yk(){let e=uk();if(e._tfengine==null){let t=new D$(e);e._tfengine=new Mg(t)}return z$(e._tfengine.ENV),a_(()=>e._tfengine),e._tfengine}var M=yk();function f_(e,t){let n={a:e,b:t};return M.runKernel(Sr,n)}var gp={};Ae(gp,{isBrowser:()=>vk,isMobile:()=>b_,mockIsMobile:()=>g_});function m_(){return typeof navigator!="undefined"&&navigator!=null}var im;function g_(e){im=e}function b_(e){if(im!==void 0)return im;if(e||m_()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function vk(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Kn=K();Kn.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Kn.registerFlag("IS_BROWSER",()=>vk());Kn.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Kn.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Kn.registerFlag("PROD",()=>!1);Kn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Kn.getBool("DEBUG"));Kn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Kn.registerFlag("IS_TEST",()=>!1);Kn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Kn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Kn.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Rs(e,t){let n=e;if(Qt(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||Qt(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&K().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&xk(e,s,[]),s}function xk(e,t,n){if(n=n||[],!Array.isArray(e)&&!Qt(e)){O(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}O(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),O(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)xk(e[r],s,n.concat(r))}function px(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,n,s="numeric"){if(e instanceof et)return px(s,e.dtype,t,n),e;let r=Xd(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),px(s,r,t,n),e==null||!Qt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let u=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${u}'`)}let a=Rs(e,r);!Qt(e)&&!Array.isArray(e)&&(e=[e]);let o=r!=="string"?fp(e,r):ra(e,[],!0);return M.makeTensor(o,a,r)}function qu(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,i)=>_(a,`${t}[${i}]`,n,s))}var y_="__op";function L(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+y_;let r=(...a)=>{M.startScope(n);try{let i=s(...a);return ug(i)&&console.error("Cannot return a Promise inside of tidy."),M.endScope(i),i}catch(i){throw M.endScope(null),i}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function v_(e,t){let n=_(e,"real","complex"),s=_(t,"imag","complex");pn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return M.runKernel(Zd,r)}var ua=L({complex_:v_});function Nr(e,t,n,s){if(s==null&&(s=Xd(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Qt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){og(t);let r=dt(t),a=dt(n);O(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let i=0;i<n.length;++i){let o=n[i],u=i===n.length-1?o!==dt(t.slice(i)):!0;O(n[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Qt(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?fp(e,s):ra(e,[],!0),M.makeTensor(e,t,s)}function ms(e,t,n){let s=Rs(e,n);return Nr(e,t,s,n)}var om={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},xd=4;async function x_(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<r.length;++i){let o=r[i],u=Array.isArray(e)?e[i].tensor:e[o];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${u.dtype}`);let l={name:o,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let c=new Promise(async p=>{let d=await u.bytes(),h=d.reduce((g,b)=>g+b.length,0)+xd*d.length,f=new Uint8Array(h),m=0;for(let g=0;g<d.length;g++){let b=d[g],y=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(y,m),m+=xd,f.set(b,m),m+=b.length}p(f)});s.push(c)}else s.push(u.data());t!=null&&(l.group=t),n.push(l)}let a=await Promise.all(s);return{data:w_(a),specs:n}}function wk(e,t){let n={},s,r=0;for(let a of t){let i=a.name,o=a.dtype,u=a.shape,l=dt(u),c;if("quantization"in a){let p=a.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${a.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${a.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=om[p.dtype],h=e.slice(r,r+l*d),f=p.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(o==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=g*p.scale+p.min}}else if(p.dtype==="float16")s===void 0&&(s=T_()),c=s(f);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(o==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=l*d}else if(o==="string"){let p=dt(a.shape);c=[];for(let d=0;d<p;d++){let h=new Uint32Array(e.slice(r,r+xd))[0];r+=xd;let f=new Uint8Array(e.slice(r,r+h));c.push(f),r+=h}}else{let p=om[o],d=e.slice(r,r+l*p);if(o==="float32")c=new Float32Array(d);else if(o==="int32")c=new Int32Array(d);else if(o==="bool")c=new Uint8Array(d);else if(o==="complex64"){c=new Float32Array(d);let h=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let b=0;b<h.length;b++)h[b]=c[b*2],f[b]=c[b*2+1];let m=ms(h,u,"float32"),g=ms(f,u,"float32");n[i]=ua(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=l*p}o!=="complex64"&&(n[i]=ms(c,u,o))}return n}function w_(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var Lg=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function hx(e){return Lg?Buffer.byteLength(e):new Blob([e]).size}function k_(e){if(Lg)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function S_(e){if(Lg){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function Bg(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function fx(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function kk(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function Vg(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Ol(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:hx(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:hx(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function I_(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function C_(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function N_(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function T_(){let e=I_(),t=C_(),n=N_();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let i=0;i<s.length;i++){let o=s[i],u=e[n[o>>10]+(o&1023)]+t[o>>10];a[i]=u}return new Float32Array(r)}}var xt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return xt.instance==null&&(xt.instance=new xt),xt.instance}static registerSaveRouter(e){xt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){xt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return xt.getHandlers(e,"save")}static getLoadHandlers(e,t){return xt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?xt.getInstance().loadRouters:xt.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&s.push(i)}),s}},$_=e=>xt.registerSaveRouter(e),__=e=>xt.registerLoadRouter(e),A_=e=>xt.getSaveHandlers(e),E_=(e,t)=>xt.getLoadHandlers(e,t),um="tensorflowjs",lm=1,Qr="models_store",ir="model_info_store";function Sk(){if(!K().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function cm(e){let t=e.result;t.createObjectStore(Qr,{keyPath:"modelPath"}),t.createObjectStore(ir,{keyPath:"modelPath"})}var la=class{constructor(e){if(this.indexedDB=Sk(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(um,lm);r.onupgradeneeded=()=>cm(r),r.onsuccess=()=>{let a=r.result;if(t==null){let i=a.transaction(Qr,"readonly"),u=i.objectStore(Qr).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=l=>(a.close(),s(u.error)),i.oncomplete=()=>a.close()}else{let i=Ol(t),o=a.transaction(ir,"readwrite"),u=o.objectStore(ir),l=u.put({modelPath:this.modelPath,modelArtifactsInfo:i}),c;l.onsuccess=()=>{c=a.transaction(Qr,"readwrite");let d=c.objectStore(Qr).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=h=>{u=o.objectStore(ir);let f=u.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(d.error)),f.onerror=m=>(a.close(),s(d.error))}},l.onerror=p=>(a.close(),s(l.error)),o.oncomplete=()=>{c==null?a.close():c.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};la.URL_SCHEME="indexeddb://";var Ik=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(la.URL_SCHEME)?R_(e.slice(la.URL_SCHEME.length)):null;xt.registerSaveRouter(Ik);xt.registerLoadRouter(Ik);function R_(e){return new la(e)}function D_(e){return e.startsWith(la.URL_SCHEME)?e.slice(la.URL_SCHEME.length):e}var F_=class{constructor(){this.indexedDB=Sk()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(um,lm);n.onupgradeneeded=()=>cm(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(ir,"readonly"),i=r.objectStore(ir).getAll();i.onsuccess=()=>{let o={};for(let u of i.result)o[u.modelPath]=u.modelArtifactsInfo;e(o)},i.onerror=o=>(s.close(),t(i.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=D_(e),new Promise((t,n)=>{let s=this.indexedDB.open(um,lm);s.onupgradeneeded=()=>cm(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(ir,"readwrite"),i=a.objectStore(ir),o=i.get(e),u;o.onsuccess=()=>{if(o.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let l=i.delete(e),c=()=>{u=r.transaction(Qr,"readwrite");let d=u.objectStore(Qr).delete(e);d.onsuccess=()=>t(o.result.modelArtifactsInfo),d.onerror=h=>n(o.error)};l.onsuccess=c,l.onerror=p=>(c(),r.close(),n(o.error))}},o.onerror=l=>(r.close(),n(o.error)),a.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},Us="/",ji="tensorflowjs_models",Ck="info",O_="model_topology",P_="weight_specs",z_="weight_data",M_="model_metadata";function Nk(e){return{info:[ji,e,Ck].join(Us),topology:[ji,e,O_].join(Us),weightSpecs:[ji,e,P_].join(Us),weightData:[ji,e,z_].join(Us),modelMetadata:[ji,e,M_].join(Us)}}function Tk(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function L_(e){let t=e.split(Us);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Us)}function B_(e){return e.startsWith(ca.URL_SCHEME)?e.slice(ca.URL_SCHEME.length):e}var ca=class{constructor(e){if(!K().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Nk(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Ol(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,k_(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw Tk(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=S_(a),t}};ca.URL_SCHEME="localstorage://";var $k=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ca.URL_SCHEME)?V_(e.slice(ca.URL_SCHEME.length)):null;xt.registerSaveRouter($k);xt.registerLoadRouter($k);function V_(e){return new ca(e)}var W_=class{constructor(){O(K().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=ji+Us,n=Us+Ck;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=L_(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=B_(e);let t=Nk(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return Tk(t),n}},Yi="://",zn=class{constructor(){this.managers={}}static getInstance(){return zn.instance==null&&(zn.instance=new zn),zn.instance}static registerManager(e,t){O(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Yi)&&(e=e.slice(0,e.indexOf(Yi))),O(e.length>0,()=>"scheme must not be an empty string.");let n=zn.getInstance();O(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function sd(e){if(e.indexOf(Yi)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${zn.getSchemes().join(",")}`);return{scheme:e.split(Yi)[0],path:e.split(Yi)[1]}}async function _k(e,t,n=!1){O(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=xt.getLoadHandlers(e);O(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),O(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=xt.getSaveHandlers(t);O(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),O(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let i=a[0],o=sd(e).scheme,u=sd(e).path,l=o===sd(e).scheme,c=await r.load();n&&l&&await zn.getManager(o).removeModel(u);let p=await i.save(c);return n&&!l&&await zn.getManager(o).removeModel(u),p.modelArtifactsInfo}async function U_(){let e=zn.getSchemes(),t={};for(let n of e){let s=await zn.getManager(n).listModels();for(let r in s){let a=n+Yi+r;t[a]=s[r]}}return t}async function G_(e){let t=sd(e);return zn.getManager(t.scheme).removeModel(t.path)}async function H_(e,t){return _k(e,t,!1)}async function q_(e,t){return _k(e,t,!0)}var j_=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(K().get("IS_BROWSER")){K().setPlatform("browser",new j_);try{zn.registerManager(ca.URL_SCHEME,new W_)}catch(e){}try{zn.registerManager(la.URL_SCHEME,new F_)}catch(e){}}var K_={importFetch:()=>t$()},Vf,X_=class{constructor(){this.util=n$(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return K().global.fetch!=null?K().global.fetch(e,t):(Vf==null&&(Vf=K_.importFetch()),Vf(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};K().get("IS_NODE")&&!K().get("IS_BROWSER")&&K().setPlatform("node",new X_);function De(e,t="float32",n){return t=t||"float32",og(e),new Wt(e,t,n)}function Y_(e,t){let n=_(e,"x","cast");if(!nk(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return M.runKernel(Ta,s,r)}var le=L({cast_:Y_});function Q_(e){let n={x:_(e,"x","clone","string_or_numeric")};return M.runKernel(Wa,n)}var ur=L({clone_:Q_});function Z_(e,t=!1){console.log(e.toString(t))}yk();var J_={buffer:De,cast:le,clone:ur,print:Z_};i_(J_);var An={};Ae(An,{browserFiles:()=>iA,browserHTTPRequest:()=>dA,concatenateArrayBuffers:()=>Bg,copyModel:()=>H_,decodeWeights:()=>wk,encodeWeights:()=>x_,fromMemory:()=>hA,getLoadHandlers:()=>E_,getModelArtifactsForJSON:()=>Vg,getModelArtifactsInfoForJSON:()=>Ol,getSaveHandlers:()=>A_,http:()=>Ug,isHTTPScheme:()=>pm,listModels:()=>U_,loadWeights:()=>oA,moveModel:()=>q_,registerLoadRouter:()=>__,registerSaveRouter:()=>$_,removeModel:()=>G_,weightsLoaderFactory:()=>Ek,withSaveHandler:()=>fA});var eA="model",tA=".json",nA=".weights.bin";function mx(e){return new Promise(t=>setTimeout(t)).then(e)}var dm=class{constructor(e){if(!K().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(dm.URL_SCHEME)&&(e=e.slice(dm.URL_SCHEME.length)),(e==null||e.length===0)&&(e=eA),this.modelJsonFileName=e+tA,this.weightDataFileName=e+nA}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=kk(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await mx(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await mx(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ol(e)}}}},wd=dm;wd.URL_SCHEME="downloads://";var sA=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let o=Vg(r,u=>this.loadWeights(u));e(o)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,Bg(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let i=a.target.result;n(i)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>fx(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let i=fx(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},rA=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(wd.URL_SCHEME)?aA(e.slice(wd.URL_SCHEME.length)):null;xt.registerSaveRouter(rA);function aA(e="model"){return new wd(e)}function iA(e){return new sA(e)}function gx(e,t,n,s){i(e),n=n==null?0:n,s=s==null?1:s,o(n,s);let r=0,a=u=>(u.then(l=>{let c=n+ ++r/e.length*(s-n);return t(c),l}),u);function i(u){O(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function o(u,l){O(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),O(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),O(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(e.map(a))}async function Ak(e,t){t==null&&(t={});let n=t.fetchFunc==null?K().platform.fetch:t.fetchFunc,s=e.map(p=>n(p,t.requestInit,{isBinary:!0})),r=0,a=.5,o=(t.onProgress==null?await Promise.all(s):await gx(s,t.onProgress,r,a)).map(p=>p.arrayBuffer()),u=.5,l=1;return t.onProgress==null?await Promise.all(o):await gx(o,t.onProgress,u,l)}async function oA(e,t="",n,s){return Ek(i=>Ak(i,{requestInit:s}))(e,t,n)}function Ek(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},i=s!=null?s.map(()=>!1):[],o=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,y=om[b]*dt(g.shape),v=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:y})};s!=null?s.forEach((x,k)=>{x===g.name&&(v(),i[k]=!0)}):v(),o.push(g.name),m+=y})}),!i.every(h=>h)){let h=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let u=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),l=[];u.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;l.push(m)})});let c=await e(l),p={},d=0;return u.forEach(h=>{let f=t[h].paths.length,m=0;for(let x=0;x<f;x++)m+=c[d+x].byteLength;let g=new ArrayBuffer(m),b=new Uint8Array(g),y=0;for(let x=0;x<f;x++){let k=new Uint8Array(c[d+x]);b.set(k,y),y+=k.byteLength}a[h].forEach(x=>{let k=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),I=wk(k,[x.manifestEntry]);for(let $ in I)p[$]=I[$]}),d+=f}),p}}var uA="application/octet-stream",lA="application/json",Wg=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(O(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=K().platform.fetch,O(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&O(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=kk(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:lA}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:uA}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ol(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Vg(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=cA(t),r=this.weightPathPrefix||n,a=[];for(let l of e)a.push(...l.weights);let i=[],o=[];for(let l of e)for(let c of l.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(c)):i.push(r+c+s);this.weightUrlConverter&&i.push(...await Promise.all(o));let u=await Ak(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Bg(u)]}};Wg.URL_SCHEME_REGEX=/^https?:\/\//;function cA(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function pm(e){return e.match(Wg.URL_SCHEME_REGEX)!=null}var Rk=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>pm(s)):n=pm(e),n)return Ug(e,t)}return null};xt.registerSaveRouter(Rk);xt.registerLoadRouter(Rk);function Ug(e,t){return new Wg(e,t)}function dA(e,t){return Ug(e,t)}var Wf=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},pA=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function hA(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Wf(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wf({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wf({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function fA(e){return new pA(e)}var mA={};Ae(mA,{confusionMatrix:()=>xA});function gA(e,t,n=!1,s=!1){let r=_(e,"a","matMul"),a=_(t,"b","matMul");[r,a]=vt(r,a);let i={a:r,b:a},o={transposeA:n,transposeB:s};return M.runKernel(Na,i,o)}var Ve=L({matMul_:gA});function bA(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:_(e,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:s};return M.runKernel(Ro,a,i)}var kd=L({oneHot_:bA});function yA(e,t){let n=_(e,"x","transpose");if(t==null&&(t=n.shape.map((a,i)=>i).reverse()),O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{O(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let s={x:n},r={perm:t};return M.runKernel(mi,s,r)}var Ge=L({transpose_:yA});function vA(e,t,n){let s=_(e,"labels","confusionMatrix"),r=_(t,"predictions","confusionMatrix");O(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),O(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),O(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),O(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),O(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=kd(le(s,"int32"),n),i=kd(le(r,"int32"),n),o=Ge(a),u=Ve(o,i);return le(u,"int32")}var xA=L({confusionMatrix_:vA}),bi={};Ae(bi,{assertAndGetBroadcastShape:()=>it,getBroadcastDims:()=>Dk,getReductionAxes:()=>_t});function Dk(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&i===1&&s.unshift(a)}return s}function _t(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,i=t[a];(r==null||r===1&&i>1)&&n.unshift(a)}return n}function it(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let i=t[t.length-r-1];if(i==null&&(i=1),a===1)n.unshift(i);else if(i===1)n.unshift(a);else if(a!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else n.unshift(a)}return n}var Fk={};Ae(Fk,{fromPixels:()=>$A,fromPixelsAsync:()=>NA,toPixels:()=>TA});function wA(e,t,n){if(ka(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Rs(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Nr(e,t,s,n)}var Wr;function Ok(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r&&r&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(nm(bd,M.backendName)!=null){let f={pixels:e},m={numChannels:t};return M.runKernel(bd,f,m)}let[l,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],p;if(i)p=e.getContext("2d").getImageData(0,0,l,c).data;else if(s||n)p=e.data;else if(a||r||o){if(Wr==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Wr=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Wr=document.createElement("canvas").getContext("2d");Wr.canvas.width=l,Wr.canvas.height=c,Wr.drawImage(e,0,0,l,c),p=Wr.getImageData(0,0,l,c).data}let d;if(t===4)d=new Int32Array(p);else{let f=l*c;d=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)d[m*t+g]=p[m*4+g]}return wA(d,[c,l,t],"int32")}function kA(e){return e!=null&&e.data instanceof Uint8Array}function SA(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function IA(e){return e!=null&&e.width!==0&&e.height!==0}function CA(e){return SA()&&!(e instanceof ImageBitmap)&&IA(e)&&!kA(e)}async function NA(e,t=3){let n=null;if(K().getBool("WRAP_TO_IMAGEBITMAP")&&CA(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return Ok(n,t)}async function TA(e,t){let n=_(e,"img","toPixels");if(!(e instanceof et)){let l=n;n=le(l,"int32"),l.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o=n.dtype==="float32"?255:1,u=new Uint8ClampedArray(r*s*4);for(let l=0;l<s*r;++l){let c=[0,0,0,255];for(let d=0;d<a;d++){let h=i[l*a+d];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(c[0]=h*o,c[1]=h*o,c[2]=h*o):c[d]=h*o}let p=l*4;u[p+0]=Math.round(c[0]),u[p+1]=Math.round(c[1]),u[p+2]=Math.round(c[2]),u[p+3]=Math.round(c[3])}if(t!=null){t.width=r,t.height=s;let l=t.getContext("2d"),c=new ImageData(u,r,s);l.putImageData(c,0,0)}return n!==e&&n.dispose(),u}var $A=L({fromPixels_:Ok}),Pk={};Ae(Pk,{prepareAndValidate:()=>zk});function zk(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(dt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],i=1;for(let p=0;p<r.length-1;++p)i*=r[p];let o=e.shape,u=r.slice();u.pop();let l=1;for(let p=a;p<n;++p)l*=o[p],u.push(o[p]);let c=[...lo(e.shape).map(p=>p/l),1].slice(0,a);return[u,i,l,c]}var Mk={};Ae(Mk,{calculateShapes:()=>Lk,validateInput:()=>Hg,validateUpdateShape:()=>Gg});function Gg(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+s])throw new Error(a+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function Hg(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Gg(n,t,e)}function Lk(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,i=1;for(let p=r;p<a;++p)i*=n[p];let o=r<1?1:r,u=dt(t.shape)/o,l=[...lo(n.slice(0,r)),1],c=dt(n);return{sliceRank:r,numUpdates:u,sliceSize:i,strides:l,outputSize:c}}var wt={};Ae(wt,{assertParamsValid:()=>AA,computeFlatOffset:()=>OA,computeOutShape:()=>RA,getNormalizedAxes:()=>DA,isSliceContinous:()=>FA,maskToAxes:()=>EA,parseSliceParams:()=>Kk,sliceInfo:()=>PA,startForAxis:()=>qk,startIndicesWithElidedDims:()=>Uk,stopForAxis:()=>jk,stopIndicesWithElidedDims:()=>Gk,stridesForAxis:()=>Hk,stridesWithElidedDims:()=>Bk});var hm=-2,_A=-1;function AA(e,t,n){let s=e.shape.length;O(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),O(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)O(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function EA(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function RA(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Bk(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Vk(e,t,n){return n<=e?n:n-(t-1)}function Wk(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function DA(e,t,n,s,r,a,i,o,u){let l=e.length,c=new Array(l),p=new Array(l),d=new Array(l);if(t.length&&n>0){let h=t[0],f=n+1;c=Uk(i,h,f,s,e),p=Gk(o,h,f,r,e),d=Bk(a,h,f,e)}else for(let h=0;h<l;h++)c[h]=qk(i,s,a,e,h,u),p[h]=jk(o,r,a,e,h,u),d[h]=Hk(a,h,u);return{begin:c,end:p,strides:d}}function Uk(e,t,n,s,r){let a=[...r],i=Wk(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{let u=Vk(t,n,o),l=s[u];e&1<<u&&(l=0),a[o]=l}return a}function Gk(e,t,n,s,r){let a=[...r],i=Wk(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{let u=Vk(t,n,o),l=s[u];e&1<<u&&(l=Number.MAX_SAFE_INTEGER),a[o]=l}for(let o=0;o<a.length;o++){let u=r[o];a[o]<0&&(a[o]+=u),a[o]=Uu(0,a[o],r[o])}return a}function Hk(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function qk(e,t,n,s,r,a){let i=t[r],o=n[r]||1;(e&1<<r||a&1<<r||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=s[r];return i<0&&(i+=u),i=Uu(0,i,u-1),i}function jk(e,t,n,s,r,a){let i=t[r],o=n[r]||1;(e&1<<r||a&1<<r||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=s[r];return i<0&&(i+=u),o>0?i=Uu(0,i,u):i=Uu(-1,i,u-1),i}function FA(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function OA(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Kk(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(i=>{O(i!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((i,o)=>i>=0?i:(O(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-s[o])),[s,a]}function PA(e,t,n,s,r,a,i,o,u){let l;if(s==null?(l=new Array(t.length),l.fill(1)):l=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let v=0;v<p.dims;v++)c&&(1<<v&o)!==0&&p.numAddAxisAfterEllipsis++,1<<v&i&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};zA(p,d);let h=!0,f=!0,m=!0,g=[],b=[];for(let v=0;v<e.length;++v){if(d.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);let x=!!(d.shrinkAxisMask&1<<v),k=e[v];if(k===-1){g.push(x?1:-1);continue}let I=[d.beginMask&1<<v,d.endMask&1<<v],$=[d.strides[v]>0?0:-1,d.strides[v]>0?k:k-1];if(x&&d.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[v]===1;let E=!!(d.beginMask&1<<v&&d.endMask&1<<v);if(d.beginValid&&d.endValid){if(x){let F=d.begin[v]<0?k+d.begin[v]:d.begin[v];if(d.begin[v]=F,d.end[v]=d.begin[v]+1,F<0||F>=k)throw Error(`slice index ${d.begin[v]} of dimension ${v} out of bounds.`)}else d.begin[v]=bx(d.begin[v],0,d.strides[v],k,I,$),d.end[v]=bx(d.end[v],1,d.strides[v],k,I,$);let R=d.strides[v]===1&&d.begin[v]===0&&d.end[v]===k;h=h&&R,f=f&&(v===0&&d.strides[v]===1||R)}else h=h&&d.strides[v]===1&&E,f=f&&(v===0&&d.strides[v]===1||E);let A,P=!1;if(d.beginValid&&d.endValid?(A=d.end[v]-d.begin[v],P=!0):x?(A=1,P=!0):E&&k>=0&&(d.strides[v]<0?A=-k:A=k,P=!0),P){let R;A===0||A<0!=d.strides[v]<0?R=0:R=Math.trunc(A/d.strides[v])+(A%d.strides[v]!==0?1:0),g.push(R)}else g.push(-1)}for(let v=0;v<d.finalShapeGatherIndices.length;++v){let x=d.finalShapeGatherIndices[v];x>=0?b.push(g[x]):x===hm&&b.push(1)}return{finalShapeSparse:b.filter((v,x)=>d.finalShapeGatherIndices[x]!==hm),finalShape:b,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function zA(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(hm),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(_A),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function bx(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let i=e<0?s+e:e;return i<a[0]?a[0]:i>a[1]?a[1]:i}}var re={};Ae(re,{Serializable:()=>Xk,SerializationMap:()=>Kr,registerClass:()=>Tr});var Xk=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Kr=class{constructor(){this.classNameMap={}}static getMap(){return Kr.instance==null&&(Kr.instance=new Kr),Kr.instance}static register(e){Kr.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Tr(e){O(e.className!=null,()=>"Class being registered does not have the static className property defined."),O(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),O(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Kr.register(e)}var MA={};Ae(MA,{TEST_EPSILON_FLOAT16:()=>Yk,encodeStrings:()=>Qk,expectArrayBuffersEqual:()=>HA,expectArraysClose:()=>BA,expectArraysEqual:()=>WA,expectNumbersClose:()=>UA,expectPromiseToFail:()=>VA,expectValuesInRange:()=>GA,testEpsilon:()=>qg});var LA=.001,Yk=.1;function BA(e,t,n){return n==null&&(n=qg()),fm(e,t,(s,r)=>jg(s,r,n))}function qg(){return M.backend.floatPrecision()===32?LA:Yk}function fm(e,t,n){let s=!0;if((Qt(e)||Qt(t))&&(s=!1),Qt(e)&&Qt(t)&&(s=!0),s){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Rs(e),o=Rs(t);if(!kr(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let r=Qt(e)?e:ra(e),a=Qt(t)?t:ra(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let i=0;i<a.length;++i){let o=r[i],u=a[i];if(!n(o,u))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${u}.
Actual:   ${r}.
Expected: ${a}.`)}}function VA(e,t){e().then(()=>t.fail(),()=>t())}function WA(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return ar(e)||ar(e[0])||ar(t)||ar(t[0])?fm(e,n,(s,r)=>s==r):fm(e,t,(s,r)=>jg(s,r,0))}function UA(e,t,n){if(n==null&&(n=qg()),!jg(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function jg(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function GA(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function HA(e,t){let n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function Qk(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Qk(n):e[t]=Fl(n)}return e}var ope="0.0.0";function upe(){K().set("PROD",!0)}function lpe(){K().set("DEBUG",!0)}function cpe(){K().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Zk(e){K().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}o_(Zk);function dpe(){M.disposeVariables()}function ds(){return M}function mm(){return M.memory()}function ppe(e){return M.profile(e)}function q(e,t){return M.tidy(e,t)}function Re(e){zg(e).forEach(n=>n.dispose())}function qt(e){return M.keep(e)}function hpe(e){return M.time(e)}function fpe(e){return M.setBackend(e)}function mpe(){return M.ready()}function gpe(){return M.backendName}function bpe(e){M.removeBackend(e)}function ype(e){return M.findBackend(e)}function vpe(e){return M.findBackendFactory(e)}function bp(e,t,n=1){return M.registerBackend(e,t,n)}function qA(){return M.backend}function xpe(e,t){K().setPlatform(e,t)}function jA(e,t){let n=_(e,"a","add"),s=_(t,"b","add");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(Sr,r)}var ie=L({add_:jA});function KA(e,t){let n=_(e,"a","floorDiv"),s=_(t,"b","floorDiv");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(La,r)}var Jk=L({floorDiv_:KA});function XA(e,t){let n=_(e,"a","div"),s=_(t,"b","div");if([n,s]=vt(n,s),n.dtype==="int32"&&s.dtype==="int32")return Jk(n,s);let r={a:n,b:s},a={};return M.runKernel(Oa,r,a)}var xe=L({div_:XA});function YA(e,t){let n=_(e,"a","mul"),s=_(t,"b","mul");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(Za,r)}var V=L({mul_:YA});function QA(e){let t=_(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return M.runKernel(Jd,n)}else{let n={x:t};return M.runKernel(co,n)}}var Lt=L({abs_:QA});function ZA(e){let n={x:_(e,"x","acos")};return M.runKernel(al,n)}var JA=L({acos_:ZA});function eE(e){let n={x:_(e,"x","acosh")};return M.runKernel(il,n)}var tE=L({acosh_:eE});function nE(e){O(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),O(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>_(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!kr(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return M.runKernel(Sa,s)}var sE=L({addN_:nE});function rE(e,t=null,n=!1){let r={x:_(e,"x","all","bool")},a={axis:t,keepDims:n};return M.runKernel(ol,r,a)}var eS=L({all_:rE});function aE(e,t=null,n=!1){let r={x:_(e,"x","any","bool")},a={axis:t,keepDims:n};return M.runKernel(ul,r,a)}var gm=L({any_:aE});function iE(e,t=0){let s={x:_(e,"x","argMax")},r={axis:t};return M.runKernel(Ia,s,r)}var ju=L({argMax_:iE});function oE(e,t=0){let s={x:_(e,"x","argMin")},r={axis:t};return M.runKernel(ll,s,r)}var uE=L({argMin_:oE});function lE(e){let n={x:_(e,"x","asin")};return M.runKernel(cl,n)}var cE=L({asin_:lE});function dE(e){let n={x:_(e,"x","asinh")};return M.runKernel(dl,n)}var pE=L({asinh_:dE});function hE(e){let n={x:_(e,"x","atan")};return M.runKernel(pl,n)}var fE=L({atan_:hE});function mE(e,t){let n=_(e,"a","atan2"),s=_(t,"b","atan2");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(fl,r)}var gE=L({atan2_:mE});function bE(e){let n={x:_(e,"x","atanh")};return M.runKernel(hl,n)}var yE=L({atanh_:bE});function vE(e,t,n,s,r="NHWC",a){let i=e[3],o=[...t,i],u=sS(r);return Pl(e,o,n,a,s,null,null,u)}function tS(e,t,n,s,r,a,i="channelsLast"){let[o,u]=Sd(t),l;if(i==="channelsLast")l=[o,u,e[3],e[3]];else if(i==="channelsFirst")l=[o,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Pl(e,l,n,s,r,a,!1,i)}function xE(e,t,n,s,r,a,i="NDHWC"){let[o,u,l]=bm(t),c,p;if(i==="NDHWC")p="channelsLast",c=[o,u,l,e[4],e[4]];else if(i==="NCDHW")p="channelsFirst",c=[o,u,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return nS(e,c,n,s,r,!1,p,a)}function Pl(e,t,n,s,r,a,i=!1,o="channelsLast"){let[u,l,c,p]=[-1,-1,-1,-1];if(o==="channelsLast")[u,l,c,p]=e;else if(o==="channelsFirst")[u,p,l,c]=e;else throw new Error(`Unknown dataFormat ${o}`);let[d,h,,f]=t,[m,g]=Sd(n),[b,y]=Sd(s),v=Qi(d,b),x=Qi(h,y),{padInfo:k,outHeight:I,outWidth:$}=SE(r,l,c,m,g,v,x,a,o),E=i?f*p:f,A;return o==="channelsFirst"?A=[u,E,I,$]:o==="channelsLast"&&(A=[u,I,$,E]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:p,outHeight:I,outWidth:$,outChannels:E,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:y,inShape:e,outShape:A,filterShape:t}}function nS(e,t,n,s,r,a=!1,i="channelsLast",o){let[u,l,c,p,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,l,c,p,d]=e;else if(i==="channelsFirst")[u,d,l,c,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,f,m,,g]=t,[b,y,v]=bm(n),[x,k,I]=bm(s),$=Qi(h,x),E=Qi(f,k),A=Qi(m,I),{padInfo:P,outDepth:R,outHeight:F,outWidth:T}=IE(r,l,c,p,b,y,v,$,E,A,o),z=a?g*d:g,W;return i==="channelsFirst"?W=[u,z,R,F,T]:i==="channelsLast"&&(W=[u,R,F,T,z]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:p,inChannels:d,outDepth:R,outHeight:F,outWidth:T,outChannels:z,padInfo:P,strideDepth:b,strideHeight:y,strideWidth:v,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:$,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:x,dilationHeight:k,dilationWidth:I,inShape:e,outShape:W,filterShape:t}}function wE(e,t,n,s,r){s==null&&(s=Kg(e,t,n));let a=e[0],i=e[1],o=ea((a-t+2*s)/n+1,r),u=ea((i-t+2*s)/n+1,r);return[o,u]}function kE(e,t,n,s,r,a){r==null&&(r=Kg(e,t,s));let i=e[0],o=e[1],u=e[2],l=ea((i-t+2*r)/s+1,a),c=ea((o-t+2*r)/s+1,a),p=ea((u-t+2*r)/s+1,a);return[l,c,p,n]}function Kg(e,t,n,s=1){let r=Qi(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Sd(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function bm(e){return typeof e=="number"?[e,e,e]:e}function Qi(e,t){return t<=1?e:e+(e-1)*(t-1)}function SE(e,t,n,s,r,a,i,o,u){let l,c,p;if(typeof e=="number"){l={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=wE([t,n],a,s,e,o);c=h[0],p=h[1]}else if(e==="same"){c=Math.ceil(t/s),p=Math.ceil(n/r);let d=Math.max(0,(c-1)*s+a-t),h=Math.max(0,(p-1)*r+i-n),f=Math.floor(d/2),m=d-f,g=Math.floor(h/2),b=h-g;l={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(e==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),p=Math.ceil((n-i+1)/r);else if(typeof e=="object"){let d=u==="channelsLast"?e[1][0]:e[2][0],h=u==="channelsLast"?e[1][1]:e[2][1],f=u==="channelsLast"?e[2][0]:e[3][0],m=u==="channelsLast"?e[2][1]:e[3][1];l={top:d,bottom:h,left:f,right:m,type:d===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=ea((t-a+d+h)/s+1,o),p=ea((n-i+f+m)/r+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:l,outHeight:c,outWidth:p}}function IE(e,t,n,s,r,a,i,o,u,l,c){let p,d,h,f;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=kE([t,n,s,1],o,1,r,e,c);d=g[0],h=g[1],f=g[2]}else if(e==="same"){d=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/i);let m=(d-1)*r+o-t,g=(h-1)*a+u-n,b=(f-1)*i+l-s,y=Math.floor(m/2),v=m-y,x=Math.floor(g/2),k=g-x,I=Math.floor(b/2),$=b-I;p={top:x,bottom:k,left:I,right:$,front:y,back:v,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),h=Math.ceil((n-u+1)/a),f=Math.ceil((s-l+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:h,outWidth:f}}function ea(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function fr(e){let[t,n,s]=Sd(e);return t===1&&n===1&&s===1}function Ps(e,t){return fr(e)||fr(t)}function sS(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function hn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")O(eo(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{O(eo(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function CE(e,t){let s={x:_(e,"x","reshape","string_or_numeric")},r={shape:t};return M.runKernel(Fo,s,r)}var U=L({reshape_:CE});function NE(e,t,n,s,r){let a=_(e,"x","avgPool","float32"),i=1;O(Ps(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=a,u=!1;a.rank===3&&(u=!0,o=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),hn("avgPool",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},p=M.runKernel(Ca,l,c);return p=le(p,a.dtype),u?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Xg=L({avgPool_:NE});function TE(e,t,n,s,r,a="NDHWC"){let i=_(e,"x","avgPool3d","float32"),o=i,u=!1;i.rank===4&&(u=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),O(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),hn("avgPool3d",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=M.runKernel(Qd,l,c);return p=le(p,o.dtype),u?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var rS=L({avgPool3d_:TE});function $E(e,t=0){O(e.length>=1,()=>"Pass at least one tensor to concat");let n=qu(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return ur(n[0]);let s=n,r={axis:t};return M.runKernel(ho,s,r)}var Ft=L({concat_:$E});function _E(e){let n={x:_(e,"x","sigmoid","float32")};return M.runKernel(ui,n)}var Hs=L({sigmoid_:_E});function AE(e,t,n){let s=_(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return M.runKernel(Lo,r,a)}var qe=L({slice_:AE});function EE(e){let n={x:_(e,"x","tanh","float32")};return M.runKernel(fi,n)}var Ku=L({tanh_:EE});function RE(e,t,n,s,r,a){let i=_(e,"forgetBias","basicLSTMCell"),o=_(t,"lstmKernel","basicLSTMCell"),u=_(n,"lstmBias","basicLSTMCell"),l=_(s,"data","basicLSTMCell"),c=_(r,"c","basicLSTMCell"),p=_(a,"h","basicLSTMCell"),d=Ft([l,p],1),h=Ve(d,o),f=ie(h,u),m=f.shape[0],g=f.shape[1]/4,b=[m,g],y=qe(f,[0,0],b),v=qe(f,[0,g],b),x=qe(f,[0,g*2],b),k=qe(f,[0,g*3],b),I=ie(V(Hs(y),Ku(v)),V(c,Hs(ie(i,x)))),$=V(Ku(I),Hs(k));return[I,$]}var wpe=L({basicLSTMCell_:RE});function DE(e,t,n){let s=_(e,"x","batchToSpaceND"),r=t.reduce((o,u)=>o*u);O(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),O(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),O(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},i={blockShape:t,crops:n};return M.runKernel(po,a,i)}var Yg=L({batchToSpaceND_:DE});function FE(e){let t;return e.rank===0||e.rank===1?t=U(e,[1,1,1,e.size]):e.rank===2?t=U(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function OE(e,t,n,s,r,a){a==null&&(a=.001);let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;s!=null&&(c=_(s,"offset","batchNorm")),O(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(l==null||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:FE(i),scale:l,offset:c,mean:o,variance:u},h={varianceEpsilon:a},f=M.runKernel(Ba,d,h);return U(f,i.shape)}var Xu=L({batchNorm_:OE});function PE(e,t,n,s,r,a){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),O(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),O(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),O(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&O(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Xu(i,o,u,c,l,a)}var zE=L({batchNorm2d_:PE});function ME(e,t,n,s,r,a){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),O(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),O(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),O(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&O(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Xu(i,o,u,c,l,a)}var LE=L({batchNorm3d_:ME});function BE(e,t,n,s,r,a){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),O(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),O(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),O(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&O(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Xu(i,o,u,c,l,a)}var VE=L({batchNorm4d_:BE});function WE(e,t,n){let s=_(e,"x","bincount"),r=_(t,"weights","bincount");O(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},i={size:n};return M.runKernel(pg,a,i)}var aS=L({bincount_:WE});function UE(e,t){let n=_(e,"s0","broadcastArgs","int32"),s=_(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return M.runKernel(hg,r)}var GE=L({broadcastArgs_:UE});function HE(e,t){let n=_(e,"broadcastTo","x"),s=n.shape;if(t.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=U(n,l)}let r=n.shape,a=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])a[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return ur(n);let o={x:n},u={reps:a};return M.runKernel(Cr,o,u)}var rd=L({broadcastTo_:HE});function qE(e){let n={x:_(e,"x","ceil","float32")};return M.runKernel($a,n)}var jE=L({ceil_:qE});function KE(e,t,n){let s=_(e,"x","clipByValue");O(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return M.runKernel(Ir,r,a)}var Vn=L({clipByValue_:KE});function XE(e){return Ft(e,0)}var YE=L({concat1d_:XE});function QE(e,t){return Ft(e,t)}var ZE=L({concat2d_:QE});function JE(e,t){return Ft(e,t)}var eR=L({concat3d_:JE});function tR(e,t){return Ft(e,t)}var nR=L({concat4d_:tR});function sR(e,t,n,s,r="NHWC",a=[1,1],i){let o=_(e,"x","conv2d","float32"),u=_(t,"filter","conv2d","float32"),l=o,c=!1;o.rank===3&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),hn("conv2d",s,i);let p=r==="NHWC"?l.shape[3]:l.shape[1];O(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),O(Ps(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let d={x:l,filter:u},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=M.runKernel(_a,d,h);return c?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var da=L({conv2d_:sR});function rR(e,t,n,s,r="NWC",a=1,i){let o=_(e,"x","conv1d"),u=_(t,"filter","conv1d"),l=o,c=!1;o.rank===2&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1]])),O(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),O(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),hn("conv1d",s,i),O(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),O(Ps(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),O(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let p=U(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=U(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=da(d,p,[1,n],s,"NHWC",[1,a],i);return c?U(g,[g.shape[2],g.shape[3]]):U(g,[g.shape[0],g.shape[2],g.shape[3]])}var iS=L({conv1d_:rR});function aR(e,t,n,s,r,a="NHWC",i){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,l=!1;t.rank===3&&(l=!0,u=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),O(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),O(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),O(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let c=a==="NHWC"?o[3]:o[1],p=a==="NHWC"?u.shape[3]:u.shape[1];O(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),O(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),hn("conv2dDerInput",r,i);let d={dy:u,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=M.runKernel(Aa,d,h);return l?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Qg=L({conv2DBackpropInput_:aR});function iR(e,t,n,s,r,a){let i=_(e,"x","conv2dTranspose"),o=_(t,"filter","conv2dTranspose");return Qg(n,i,o,s,r,"NHWC",a)}var oS=L({conv2dTranspose_:iR});function oR(e,t,n,s,r="NDHWC",a=[1,1,1]){let i=_(e,"x","conv3d"),o=_(t,"filter","conv3d"),u=i,l=!1;i.rank===4&&(l=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),O(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),O(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),O(Ps(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),O(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let c={x:u,filter:o},p={strides:n,pad:s,dataFormat:r,dilations:a},d=M.runKernel(ep,c,p);return l?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var uS=L({conv3d_:oR});function uR(e,t,n,s,r){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,o=!1;t.rank===4&&(o=!0,i=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let u=a[4],l=i.shape[4];O(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),O(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),O(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),O(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),O(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);let c={dy:i,filter:n},p={pad:r,strides:s,inputShape:a},d=M.runKernel(gg,c,p);return o?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var lS=L({conv3DBackpropInput_:uR});function lR(e,t,n,s,r){let a=_(e,"x","conv3dTranspose"),i=_(t,"filter","conv3dTranspose");return lS(n,a,i,s,r)}var cR=L({conv3dTranspose_:lR});function dR(e){let n={x:_(e,"x","cos","float32")};return M.runKernel(Ea,n)}var Zg=L({cos_:dR});function pR(e){let n={x:_(e,"x","cosh","float32")};return M.runKernel(Ra,n)}var cS=L({cosh_:pR});function hR(e,t=0,n=!1,s=!1){let a={x:_(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:s};return M.runKernel(fo,a,i)}var ym=L({cumprod_:hR});function fR(e,t=0,n=!1,s=!1){let a={x:_(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:s};return M.runKernel(Da,a,i)}var dS=L({cumsum_:fR});function mR(e,t,n,s=!1){let r=_(e,"x","denseBincount"),a=_(t,"weights","denseBincount");O(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),O(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let i={x:r,weights:a},o={size:n,binaryOutput:s};return M.runKernel(bg,i,o)}var gR=L({denseBincount_:mR});function bR(e,t,n="NHWC"){let s=_(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],i=n==="NHWC"?s.shape[3]:s.shape[1];O(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),O(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),O(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);let o={x:s},u={blockSize:t,dataFormat:n};return M.runKernel(go,o,u)}var yR=L({depthToSpace_:bR});function vR(e,t,n,s,r="NHWC",a=[1,1],i){let o=_(e,"x","depthwiseConv2d","float32"),u=_(t,"filter","depthwiseConv2d","float32"),l=o,c=!1;o.rank===3&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),O(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),hn("depthwiseConv2d",s,i);let p={x:l,filter:u},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},h=M.runKernel(Fa,p,d);return c?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var yp=L({depthwiseConv2d_:vR});function xR(e){let n={x:_(e,"x","diag")};return M.runKernel(xg,n)}var kpe=L({diag_:xR});function wR(e,t,n,s,r=[1,1],a="NHWC"){let i=_(e,"x","dilation2d"),o=_(t,"filter","dilation2d");O(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),O(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),O(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let u=i,l=!1;i.rank===3&&(u=U(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);let c={x:u,filter:o},p={strides:n,pad:s,dilations:r},d=M.runKernel(tp,c,p);return l?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var kR=L({dilation2d_:wR});function SR(e,t){let n=_(e,"a","equal","string_or_numeric"),s=_(t,"b","equal","string_or_numeric");[n,s]=vt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(bo,r)}var Xn=L({equal_:SR});function IR(e,t,n){let s=_(t,"a","where"),r=_(n,"b","where"),a=_(e,"condition","where","bool"),i=it(it(a.shape,s.shape),r.shape),o=rd(a,i),u=rd(s,i),l=rd(r,i),c={condition:o,t:u,e:l};return M.runKernel(Mo,c)}var vn=L({where_:IR});function CR(e){let n={x:_(e,"x","zerosLike")};return M.runKernel(Ko,n)}var je=L({zerosLike_:CR});function NR(e,t){let n=_(e,"a","div"),s=_(t,"b","div");[n,s]=vt(n,s);let r=xe(n,s),a=je(r),i=Xn(s,a);return vn(i,a,r)}var TR=L({divNoNan_:NR});function $R(e,t){let n=_(e,"t1","dot"),s=_(t,"t2","dot");O((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(O(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let i=U(n,[1,-1]),o=U(s,[-1,1]),u=Ve(i,o);return U(u,[])}else if(n.rank===1&&s.rank===2){let i=U(n,[1,-1]),o=U(s,[s.shape[0],s.shape[1]]),u=Ve(i,o);return U(u,[u.size])}else if(n.rank===2&&s.rank===1){let i=U(s,[-1,1]),o=Ve(n,i);return U(o,[o.size])}else{let i=U(s,[s.shape[0],s.shape[1]]);return Ve(n,i)}}var Spe=L({dot_:$R});function _R(e,...t){let n=t.map((r,a)=>_(r,`tensors${a}`,"einsum")),s={equation:e};return M.runKernel(np,n,s)}var AR=L({einsum_:_R});function ER(e){let n={x:_(e,"x","elu","float32")};return M.runKernel(Pa,n)}var vp=L({elu_:ER});function RR(e){let t=_(e,"x","erf");O(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=le(t,"float32"));let n={x:t};return M.runKernel(ml,n)}var DR=L({erf_:RR});function FR(e){let n={x:_(e,"x","exp")};return M.runKernel(za,n)}var Yn=L({exp_:FR});function OR(e,t=0){let n=_(e,"x","expandDims","string_or_numeric");O(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return M.runKernel(yo,s,r)}var Pn=L({expandDims_:OR});function PR(e){let n={x:_(e,"x","expm1")};return M.runKernel(vo,n)}var zR=L({expm1_:PR});function MR(e,t){let n=_(e,"x","tile","string_or_numeric");O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return M.runKernel(Cr,s,r)}var hs=L({tile_:MR});function LR(e,t,n,s="float32"){t==null&&(t=e);let r=De([e,t],s),a=e<=t?e:t;for(let o=0;o<a;++o)r.set(1,o,o);let i=U(r.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return hs(Pn(i,0),[n[0],1,1]);if(n.length===2)return hs(Pn(Pn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return hs(Pn(Pn(Pn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var pS=L({eye_:LR});function zl(e,t,n){let s={shape:e,value:t,dtype:n};return M.runKernel(gl,{},s)}function BR(e){let n={x:_(e,"x","floor","float32")};return M.runKernel(Ma,n)}var xp=L({floor_:BR});function VR(e,t,n=0,s=0){let r=_(e,"x","gather"),a=_(t,"indices","gather","int32"),i={x:r,indices:a},o={axis:n,batchDims:s};return M.runKernel(wo,i,o)}var Yu=L({gather_:VR});function WR(e,t){let n=_(e,"a","greater","string_or_numeric"),s=_(t,"b","greater","string_or_numeric");[n,s]=vt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(So,r)}var Un=L({greater_:WR});function UR(e,t){let n=_(e,"a","greaterEqual","string_or_numeric"),s=_(t,"b","greaterEqual","string_or_numeric");[n,s]=vt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Va,r)}var Yo=L({greaterEqual_:UR});function GR(e){let n={input:_(e,"input","imag")};return M.runKernel(sp,n)}var Jg=L({imag_:GR});function HR(e){let n={x:_(e,"x","isFinite")};return M.runKernel(bl,n)}var Ipe=L({isFinite_:HR});function qR(e){let n={x:_(e,"x","isInf")};return M.runKernel(yl,n)}var Cpe=L({isInf_:qR});function jR(e){let n={x:_(e,"x","isNaN")};return M.runKernel(vl,n)}var KR=L({isNaN_:jR});function XR(e,t=.2){let s={x:_(e,"x","leakyRelu")},r={alpha:t};return M.runKernel(Ua,s,r)}var eb=L({leakyRelu_:XR});function YR(e,t){let n=_(e,"a","less","string_or_numeric"),s=_(t,"b","less","string_or_numeric");[n,s]=vt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Io,r)}var hS=L({less_:YR});function QR(e,t){let n=_(e,"a","lessEqual","string_or_numeric"),s=_(t,"b","lessEqual","string_or_numeric");[n,s]=vt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Co,r)}var Qo=L({lessEqual_:QR});function ZR(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return M.runKernel(Ig,{},s)}function JR(e,t=5,n=1,s=1,r=.5){let a=_(e,"x","localResponseNormalization");O(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),O(eo(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;a.rank===3&&(o=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let u={x:i},l={depthRadius:t,bias:n,alpha:s,beta:r},c=M.runKernel(ap,u,l);return o?U(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var eD=L({localResponseNormalization_:JR});function tD(e){let n={x:_(e,"x","log","float32")};return M.runKernel(Ga,n)}var Qn=L({log_:tD});function nD(e){let n={x:_(e,"x","log1p")};return M.runKernel(xl,n)}var tb=L({log1p_:nD});function Npe(e){return O(hr(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=_(t,"x","tf.grad","string_or_numeric"),r=n!=null?_(n,"dy","tf.grad"):null;return M.tidy(()=>{let{value:a,grads:i}=M.gradients(()=>e(s),[s],r);return r!=null&&pn(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),wp(i),i[0]})}}function Tpe(e){return O(hr(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{O(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=qu(t,"args","tf.grads","string_or_numeric"),r=n!=null?_(n,"dy","tf.grads"):null;return M.tidy(()=>{let{value:a,grads:i}=M.gradients(()=>e(...s),s,r);return r!=null&&pn(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),wp(i),i})}}function $pe(e){return O(hr(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{O(t instanceof et,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),O(n==null||n instanceof et,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=M.gradients(()=>e(t),[t],n);return wp(s),{grad:s[0],value:r}}}function _pe(e){return O(hr(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{O(Array.isArray(t)&&t.every(r=>r instanceof et),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),O(n==null||n instanceof et,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=M.gradients(()=>e(...t),t,n);return n!=null&&pn(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),wp(s.grads),s}}function sD(e,t){O(hr(e),()=>"The f passed in variableGrads(f) must be a function"),O(t==null||Array.isArray(t)&&t.every(l=>l instanceof vd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let l in M.registeredVariables)t.push(M.registeredVariables[l])}let s=n?t.filter(l=>!l.trainable):null,r=t.length;t=t.filter(l=>l.trainable),O(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:i,grads:o}=M.gradients(e,t,null,a);O(o.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return t.forEach((l,c)=>{o[c]!=null&&(u[l.name]=o[c])}),s!=null&&s.forEach(l=>u[l.name]=null),{value:i,grads:u}}function qs(e){return M.customGrad(e)}function wp(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function rD(e){let n={x:_(e,"x","neg")};return M.runKernel(To,n)}var kt=L({neg_:rD});function aD(e){let n={x:_(e,"x","softplus")};return M.runKernel(_l,n)}var Ml=L({softplus_:aD});function iD(e){let t=_(e,"x","logSigmoid");return qs(s=>({value:kt(Ml(kt(s))),gradFunc:i=>V(i,Hs(kt(s)))}))(t)}var Ape=L({logSigmoid_:iD});function oD(e,t=null,n=!1){let r={x:_(e,"x","max")},a={reductionIndices:t,keepDims:n};return M.runKernel(Ha,r,a)}var As=L({max_:oD});function uD(e,t){let n=_(e,"a","sub"),s=_(t,"b","sub");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(hi,r)}var ge=L({sub_:uD});function lD(e,t=null,n=!1){let s=_(e,"x","sum");s.dtype==="bool"&&(s=le(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return M.runKernel(ci,r,a)}var ve=L({sum_:lD});function cD(e,t=-1){let n=_(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return qs((r,a)=>{let o=As(r,t,!0),u=ge(r,o),l=ge(le(u,"float32"),Qn(ve(Yn(u),t,!0)));return a([l]),{value:l,gradFunc:(p,d)=>{let[h]=d,f=!0,m=Yn(h);return ge(p,V(ve(p,t,f),m))}}})(n)}var fS=L({logSoftmax_:cD});function nb(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function mS(e,t,n){let s=e.length+t.length,r=[],a=0,i=0;for(let o=0;o<s;o++)n.indexOf(o)===-1?r.push(e[a++]):r.push(t[i++]);return r}function gS(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function pa(e,t){let n=t.map(s=>1);return mS(e,n,t)}function dD(e,t,n){O(nb(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function bS(e,t){if(nb(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function sb(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function pD(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function hD(e,t=null,n=!1){let s=_(e,"x","logSumExp"),r=ts(t,s.shape),a=As(s,r,!0),i=ge(s,a),o=Yn(i),u=ve(o,r),l=Qn(u),c=ie(U(a,l.shape),l);if(n){let p=pa(c.shape,r);return U(c,p)}return c}var fD=L({logSumExp_:hD});function mD(e,t){let n=_(e,"a","logicalAnd","bool"),s=_(t,"b","logicalAnd","bool");it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(No,r)}var Ds=L({logicalAnd_:mD});function gD(e){let n={x:_(e,"x","logicalNot","bool")};return M.runKernel(wl,n)}var rb=L({logicalNot_:gD});function bD(e,t){let n=_(e,"a","logicalOr","bool"),s=_(t,"b","logicalOr","bool");it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(rp,r)}var yS=L({logicalOr_:bD});function yD(e,t){let n=_(e,"a","logicalXor","bool"),s=_(t,"b","logicalXor","bool");return it(n.shape,s.shape),Ds(yS(e,t),rb(Ds(e,t)))}var Epe=L({logicalXor_:yD}),Uc=2147483648;function vD(e,t,n="left"){let s=_(e,"sortedSequence","searchSorted"),r=_(t,"values","searchSorted"),a=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],o=U(s,[-1,a]),u=U(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(dt(u.shape)>=Uc)throw new Error(`values tensor size must less than ${Uc}`);if(o.shape[1]>=Uc)throw new Error(`trailing dim_size must less than ${Uc} for int32 output type, was ${o.shape[1]}`);let l={sortedSequence:o,values:u},c={side:n};return M.runKernel(Rg,l,c)}var vS=L({searchSorted_:vD});function xD(e,t){return vS(e,t,"left")}function wD(e,t,n,s,r){let a=_(e,"x","maxPool"),i=1,o=a,u=!1;a.rank===3&&(u=!0,o=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),O(Ps(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),hn("maxPool",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},p=M.runKernel(ja,l,c);return u?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var ab=L({maxPool_:wD});function kD(e,t=[1,1,1],n,s,r,a="NDHWC"){let i=_(e,"x","maxPool3d"),o=i,u=!1;i.rank===4&&(u=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),O(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),hn("maxPool3d",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=M.runKernel(ip,l,c);return u?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var xS=L({maxPool3d_:kD});function SD(e,t,n,s,r=!1){let i={x:_(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},u=M.runKernel($g,i,o);return{result:u[0],indexes:u[1]}}var ID=L({maxPoolWithArgmax_:SD});function CD(e,t){let n=_(e,"a","maximum"),s=_(t,"b","maximum");[n,s]=vt(n,s),n.dtype==="bool"&&(n=le(n,"int32"),s=le(s,"int32")),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(qa,r)}var $r=L({maximum_:CD});function ND(e,t=null,n=!1){let r={x:_(e,"x","mean")},a={axis:t,keepDims:n};return M.runKernel(Ka,r,a)}var It=L({mean_:ND});function $t(e,t="float32"){if(t==="complex64"){let s=$t(e,"float32"),r=$t(e,"float32");return ua(s,r)}let n=Yd(dt(e),t);return M.makeTensor(n,e,t)}function Mn(e,t="float32"){if(t==="complex64"){let s=Mn(e,"float32"),r=$t(e,"float32");return ua(s,r)}let n=ig(dt(e),t);return M.makeTensor(n,e,t)}function Rpe(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=_(e,"x","meshgrid",e instanceof et?e.dtype:"float32");if(t===void 0)return[s];let r=_(t,"y","meshgrid",t instanceof et?t.dtype:"float32"),a=dt(s.shape),i=dt(r.shape);return n==="xy"?(s=U(s,[1,-1]),r=U(r,[-1,1]),[Ve(Mn([i,1],s.dtype),s),Ve(r,Mn([1,a],r.dtype))]):(s=U(s,[-1,1]),r=U(r,[1,-1]),[Ve(s,Mn([1,i],s.dtype)),Ve(Mn([a,1],r.dtype),r)])}function TD(e,t=null,n=!1){let r={x:_(e,"x","min")},a={axis:t,keepDims:n};return M.runKernel(Xa,r,a)}var vm=L({min_:TD});function $D(e,t){let n=_(e,"a","minimum"),s=_(t,"b","minimum");[n,s]=vt(n,s),n.dtype==="bool"&&(n=le(n,"int32"),s=le(s,"int32")),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Ya,r)}var kp=L({minimum_:$D});function _D(e,t,n){O(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=_(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let o=0;o<s.rank;o++)O(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),O(t[o][0]>=0&&t[o][0]<=s.shape[o]-r&&t[o][1]>=0&&t[o][1]<=s.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},i={x:s};return M.runKernel(Qa,i,a)}var AD=L({mirrorPad_:_D});function ED(e,t){let n=_(e,"a","mod"),s=_(t,"b","mod");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(kl,r)}var RD=L({mod_:ED});function DD(e){let t=_(e,"x","square"),n={};return M.runKernel("Square",{x:t},n)}var ct=L({square_:DD});function FD(e,t=null,n=!1){e=_(e,"x","moments");let s=ts(t,e.shape),r=It(e,s,n),a=r.shape;n||(a=pa(r.shape,s));let i=ct(ge(le(e,"float32"),U(r,a))),o=It(i,s,n);return{mean:r,variance:o}}var ib=L({moments_:FD});function OD(e,t,n,s){let r=_(t,"data","multiRNNCell"),a=qu(n,"c","multiRNNCell"),i=qu(s,"h","multiRNNCell"),o=r,u=[];for(let p=0;p<e.length;p++){let d=e[p](o,a[p],i[p]);u.push(d[0]),u.push(d[1]),o=d[1]}let l=[],c=[];for(let p=0;p<u.length;p+=2)l.push(u[p]),c.push(u[p+1]);return[l,c]}var Dpe=L({multiRNNCell_:OD});function PD(e,t,n,s=!1){let r=_(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let u={logits:i===1?U(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:s},c=M.runKernel(_g,u,l);return i===1?U(c,[c.size]):c}var zD=L({multinomial_:PD});function MD(e,t){let n=_(e,"a","notEqual","string_or_numeric"),s=_(t,"b","notEqual","string_or_numeric");[n,s]=vt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel($o,r)}var Qu=L({notEqual_:MD});function LD(e){let n={x:_(e,"x","onesLike")};return M.runKernel(Eo,n)}var Zn=L({onesLike_:LD});function BD(e,t){let n=_(e,"v1","outerProduct"),s=_(t,"v2","outerProduct");O(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=U(n,[-1,1]),a=U(s,[1,-1]);return Ve(r,a)}var Fpe=L({outerProduct_:BD});function VD(e,t,n=0){let s=_(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return M.runKernel(Ja,a,r)}var yi=L({pad_:VD});function WD(e,t,n=0){return O(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),yi(e,[t],n)}var Ope=L({pad1d_:WD});function UD(e,t,n=0){return O(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),yi(e,t,n)}var Ppe=L({pad2d_:UD});function GD(e,t,n=0){return O(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),yi(e,t,n)}var zpe=L({pad3d_:GD});function HD(e,t,n=0){return O(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),yi(e,t,n)}var Mpe=L({pad4d_:HD});function qD(e,t,n){let s=_(e,"x","spaceToBatchND");O(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),O(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),O(s.shape.reduce((i,o,u)=>u>0&&u<=t.length?i&&(o+n[u-1][0]+n[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return M.runKernel(Vo,r,a)}var ob=L({spaceToBatchND_:qD});function jD(e,t,n,s,r,a,i){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let o=_(e,"x","maxPool"),u=o,l=!1;o.rank===3&&(l=!0,u=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(Ps(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=tS(u.shape,t,a,r,s),p=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=XD([c.filterHeight,c.filterWidth],p):d=[[0,0],[0,0]];let h=p[0]===1&&p[1]===1,[f,m]=KD([c.inHeight,c.inWidth],p,d),g=h?s:"valid",b=h?u:ob(u,p,f),v=(n==="avg"?()=>Xg(b,t,a,g,i):()=>ab(b,t,a,g,i))(),x=h?v:Yg(v,p,m);return l?U(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function KD(e,t,n){let s=n.map(c=>c[0]),r=n.map(c=>c[1]),a=e.concat(s,r),i=t.map((c,p)=>(c-a[p]%c)%c),o=r.map((c,p)=>c+i[p]),u=t.map((c,p)=>[s[p],o[p]]),l=t.map((c,p)=>[0,i[p]]);return[u,l]}function XD(e,t){let s=e.map((i,o)=>i+(i-1)*(t[o]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),a=s.map((i,o)=>i-r[o]);return s.map((i,o)=>[r[o],a[o]])}var Lpe=L({pool_:jD});function YD(e,t){let n=_(e,"base","pow"),s=_(t,"exp","pow");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(ei,r)}var ha=L({pow_:YD});function QD(e,t){let n=_(e,"x","prelu"),s=_(t,"alpha","prelu"),r={x:n,alpha:s};return M.runKernel(ti,r)}var ub=L({prelu_:QD});function ZD(e,t=null,n=!1){let s=_(e,"x","prod");s.dtype==="bool"&&(s=le(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return M.runKernel(ni,r,a)}var wS=L({prod_:ZD});function JD(e,t,n){let s=dt(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return M.makeTensor(r,e,n)}var Bpe=L({rand_:JD}),lb=wa(jd()),cb=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=lb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},e3=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=lb.alea(r.toString()),this.randn=new cb(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},t3=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=lb.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function n3(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new e3(t,n,s,r),i=De(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var Vpe=L({randomGamma_:n3});function s3(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new cb(t,n,s,!1,r),i=De(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var r3=L({randomNormal_:s3});function a3(e,t=0,n=1,s="float32",r){let a=De(e,s),i=new t3(t,n,null,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}var Ll=L({randomUniform_:a3});function Zu(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return M.runKernel(Il,{},r)}function i3(e){let n={input:_(e,"input","real")};return M.runKernel(op,n)}var Id=L({real_:i3});function o3(e){let n={x:_(e,"x","reciprocal")};return M.runKernel(Cl,n)}var u3=L({reciprocal_:o3});function l3(e){let n={x:_(e,"x","relu")};return M.runKernel(si,n)}var Xs=L({relu_:l3});function c3(e){let n={x:_(e,"x","relu6")};return M.runKernel(ai,n)}var kS=L({relu6_:c3});function d3(e,t){let s={x:_(e,"x","reverse")},r={dims:t};return M.runKernel(Oo,s,r)}var Jn=L({reverse_:d3});function p3(e){let t=_(e,"x","reverse");return O(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Jn(t,0)}var Wpe=L({reverse1d_:p3});function h3(e,t){let n=_(e,"x","reverse");return O(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Jn(n,t)}var Upe=L({reverse2d_:h3});function f3(e,t){let n=_(e,"x","reverse");return O(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Jn(n,t)}var Gpe=L({reverse3d_:f3});function m3(e,t){let n=_(e,"x","reverse");return O(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Jn(n,t)}var Hpe=L({reverse4d_:m3});function g3(e){let n={x:_(e,"x","round")};return M.runKernel(Po,n)}var SS=L({round_:g3});function b3(e){let n={x:_(e,"x","rsqrt","float32")};return M.runKernel(ii,n)}var IS=L({rsqrt_:b3});function we(e,t){if((Qt(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Qt(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Nr(e,[],[],t)}function y3(e){let n={x:_(e,"x","selu")};return M.runKernel(Tl,n)}var CS=L({selu_:y3});function v3(e,t,n,s,r,a=[1,1],i="NHWC"){let o=_(e,"x","separableConv2d"),u=_(t,"depthwiseFilter","separableConv2d"),l=_(n,"pointwiseFilter","separableConv2d"),c=o,p=!1;if(o.rank===3&&(p=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),O(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),O(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),O(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let d=u.shape[2],h=u.shape[3];O(l.shape[2]===d*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${l.shape[2]}.`);let f=yp(c,u,s,r,i,a),g=da(f,l,1,"valid",i);return p?U(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var x3=L({separableConv2d_:v3});async function w3(e,t){let n=_(e,"x","setdiff1d"),s=_(t,"y","setdiff1d");O(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),O(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),O(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),i=new Set(a),o=0;for(let c=0;c<r.length;c++)i.has(r[c])||o++;let u=new Wt([o],n.dtype),l=new Wt([o],"int32");for(let c=0,p=0;c<r.length;c++)i.has(r[c])||(u.values[p]=r[c],l.values[p]=c,p++);return[u.toTensor(),l.toTensor()]}var k3=w3;function S3(e){let n={x:_(e,"x","sign")};return M.runKernel($l,n)}var I3=L({sign_:S3});function C3(e){let n={x:_(e,"x","sin","float32")};return M.runKernel(oi,n)}var NS=L({sin_:C3});function N3(e){let n={x:_(e,"x","sinh")};return M.runKernel(Bo,n)}var TS=L({sinh_:N3});function T3(e,t,n){let s=_(e,"x","slice1d");return O(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),qe(s,[t],[n])}var db=L({slice1d_:T3});function $3(e,t,n){let s=_(e,"x","slice2d");return O(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),qe(s,t,n)}var $S=L({slice2d_:$3});function _3(e,t,n){let s=_(e,"x","slice3d");return O(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),qe(s,t,n)}var pb=L({slice3d_:_3});function A3(e,t,n){let s=_(e,"x","slice4d");return O(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),qe(s,t,n)}var Cd=L({slice4d_:A3});function E3(e,t=-1){let n=_(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return M.runKernel(di,s,r)}var hb=L({softmax_:E3});function R3(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return M.runKernel(kg,t)}var fb=L({fft_:R3});function D3(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return M.runKernel(Sg,t)}var Nd=L({ifft_:D3});function F3(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=U(e,[n,t]);s=Nd(r)}else{let r=[n,2*(t-1)],a=U(Id(e),[n,t]),i=U(Jg(e),[n,t]),o=Jn(qe(a,[0,1],[n,t-2]),1),u=V(Jn(qe(i,[0,1],[n,t-2]),1),we(-1)),l=Ft([a,o],1),c=Ft([i,u],1),p=U(ua(l,c),[r[0],r[1]]);s=Nd(p)}if(s=Id(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=U(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var _S=L({irfft_:F3});function O3(e,t,n=0){let r={x:_(e,"x","split")},a={numOrSizeSplits:t,axis:n};return M.runKernel(Wo,r,a)}var Bn=L({split_:O3});function P3(e,t){O(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=qe(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=Ft([e,$t(f)],e.shape.length-1),n=t}else r=e;let a=je(r),i=U(ua(r,a),[s,n]),o=fb(i),u=Math.floor(n/2)+1,l=Id(o),c=Jg(o),p=Bn(l,[u,n-u],l.shape.length-1),d=Bn(c,[u,n-u],c.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=u,U(ua(p[0],d[0]),h)}var mb=L({rfft_:P3});function z3(e){let n={x:_(e,"x","sqrt","float32")};return M.runKernel(li,n)}var dn=L({sqrt_:z3});function M3(e,t){let n=_(e,"a","squaredDifference"),s=_(t,"b","squaredDifference");[n,s]=vt(n,s),it(n.shape,s.shape);let r={a:n,b:s},a={};return M.runKernel(pi,r,a)}var AS=L({squaredDifference_:M3});function L3(e,t){let n=_(e,"x","squeeze");return U(n,Zw(n.shape,t).newShape)}var mr=L({squeeze_:L3});function B3(e,t=0){let n=qu(e,"tensors","stack","string_or_numeric");O(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&O(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return M.runKernel(Do,s,r)}var es=L({stack_:B3});function V3(e,t=0){let s={x:_(e,"x","step")},r={alpha:t};return M.runKernel(gi,s,r)}var Sp=L({step_:V3});function W3(e,t,n,s,r=0,a=0,i=0,o=0,u=0){let c={x:_(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return M.runKernel(Uo,c,p)}var U3=L({stridedSlice_:W3});function G3(e){let n={x:_(e,"x","tan","float32")};return M.runKernel(Go,n)}var H3=L({tan_:G3});function Zt(e,t){ka(e);let n=Rs(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Nr(e,null,n,t)}function Zi(e,t,n){if(ka(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Rs(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Nr(e,t,s,n)}function qpe(e,t,n){if(ka(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Rs(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Nr(e,t,s,n)}function jpe(e,t,n){if(ka(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Rs(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Nr(e,t,s,n)}function Kpe(e,t,n){if(ka(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Rs(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Nr(e,t,s,n)}function q3(e,t=1,n=!0){let s=_(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},i={k:t,sorted:n},[o,u]=M.runKernel(Ho,a,i);return{values:o,indices:u}}var j3=L({topk_:q3});function K3(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new cb(t,n,s,!0,r),i=De(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var gb=L({truncatedNormal_:K3});function X3(e,t=0){let n=_(e,"x","unique","string_or_numeric");O(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,i]=M.runKernel(Og,s,r);return{values:a,indices:i}}var yx=L({unique_:X3});function Y3(e,t,n){let s=_(e,"x","unsortedSegmentSum"),r=_(t,"segmentIds","unsortedSegmentSum","int32");O(eo(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},i={numSegments:n};return M.runKernel(hp,a,i)}var Q3=L({unsortedSegmentSum_:Y3});function Z3(e,t=0){let n=_(e,"x","unstack","string_or_numeric");O(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return M.runKernel(jo,s,r)}var Fs=L({unstack_:Z3});function J3(e,t){return vS(e,t,"right")}function eF(e,t=!0,n,s){return M.makeVariable(e,t,n,s)}function ES(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=De(e,"int32"),r=De([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let i=s.indexToLoc(n[a]),o=a*e.length;r.values.set(i,o)}return r.toTensor()}async function tF(e){let t=_(e,"condition","whereAsync","bool"),n=await t.data(),s=ES(t.shape,n);return e!==t&&t.dispose(),s}var RS=tF;async function nF(e,t,n){let s=_(e,"tensor","boolMask"),r=_(t,"mask","boolMask","bool"),a=n==null?0:n,i=r.rank,o=s.shape;O(i>0,()=>"mask cannot be scalar"),pn(o.slice(a,a+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=a;m<a+i;m++)u*=o[m];let l=o.slice(0,a).concat([u],o.slice(a+i)),c=U(s,l),p=U(r,[-1]),d=await RS(p),h=mr(d,[1]),f=Yu(c,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),c.dispose(),p.dispose(),d.dispose(),f}var Xpe=nF;function sF(e,t="euclidean",n=null,s=!1){e=_(e,"x","norm");let r=DS(e,t,n),a=r.shape;if(s){let i=ts(n,e.shape);a=pa(r.shape,i)}return U(r,a)}function DS(e,t,n=null){if(e.rank===0)return Lt(e);if(e.rank!==1&&n===null)return DS(U(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ve(Lt(e),n);if(t===1/0)return As(Lt(e),n);if(t===-1/0)return vm(Lt(e),n);if(t==="euclidean"||t===2)return dn(ve(ha(Lt(e),we(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return As(ve(Lt(e),n[0]),n[1]-1);if(t===1/0)return As(ve(Lt(e),n[1]),n[0]);if(t===-1/0)return vm(ve(Lt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return dn(ve(ct(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var FS=L({norm_:sF});function rF(e,t,n,s,r=!0){let a=_(e,"v","movingAverage"),i=_(t,"x","movingAverage"),o=_(n,"decay","movingAverage");gk(a,i),O(kr(a.shape,i.shape),()=>"Shape mismatch in v and x");let u=we(1),l=ge(u,o),c=V(ge(i,a),l);if(r){O(s!=null,()=>"When using zeroDebias: true, step is required.");let p=_(s,"step","movingAverage");c=xe(c,ge(u,ha(o,p)))}return ie(a,c)}var Ype=L({movingAverage_:rF});function aF(e,t,n){let s=_(e,"indices","scatterND","int32"),r=_(t,"updates","scatterND");Hg(r,s,n);let a={indices:s,updates:r},i={shape:n};return M.runKernel(zo,a,i)}var iF=L({scatterND_:aF});function oF(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function uF(e,t,n,s=0){let r=_(e,"sparseIndices","sparseToDense","int32"),a=_(t,"sparseValues","sparseToDense"),i=_(s,"defaultValue","sparseToDense",a.dtype);oF(r,a,n,i);let o={sparseIndices:r,sparseValues:a,defaultValue:i},u={outputShape:n};return M.runKernel(dp,o,u)}var OS=L({sparseToDense_:uF});function lF(e,t){let n=_(t,"indices","gatherND","int32"),r={params:_(e,"x","gatherND","string_or_numeric"),indices:n};return M.runKernel(ko,r)}var cF=L({gatherND_:lF});function dF(e,t){if(t==null)return e.shape.slice();if(kr(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function pF(e,t,n,s){let r=_(e,"x","dropout");if(O(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),O(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof et?r.clone():r;let a=dF(r,n),i=1-t,o=xe(xp(ie(Ll(a,0,1,"float32",s),i)),i);return V(r,o)}var hF=L({dropout_:pF});function fF(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function PS(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return Zt(r,"float32")}async function mF(e,t,n=1){let s=_(e,"predictions","inTopK"),r=_(t,"targets","inTopK");O(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),O(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),pn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];O(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let i=await s.data(),o=await r.data(),[u,l]=[i.length/a,a],c=Jw("bool",u);for(let p=0;p<u;p++){let d=p*l,h=i.subarray(d,d+l),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),c[p]=0;for(let m=0;m<n;m++)if(f[m].index===o[p]){c[p]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),ms(c,r.shape,"bool")}var Qpe=mF,fa={};Ae(fa,{conv2d:()=>yF,depthwiseConv2d:()=>kF,matMul:()=>IF});function gF(e,t,n,s,r,a="NHWC",i){let o=e;e.rank===3&&(o=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=U(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),O(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),O(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let l=a==="NHWC"?o.shape[3]:o.shape[1],c=a==="NHWC"?u.shape[3]:u.shape[1];O(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),O(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),hn("conv2dDerFilter",r,i);let p={x:o,dy:u},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return M.runKernel(fg,p,d)}var bb=L({conv2DBackpropFilter_:gF});function Ip(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return V(e,Sp(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Cp(e,t){let n=t,s=_t(e.shape,t.shape);return s.length>0&&(n=ve(n,s)),U(n,e.shape)}function Np(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Xs(e);if(t==="elu")return vp(e);if(t==="relu6")return kS(e);if(t==="prelu")return ub(e,n);if(t==="leakyrelu")return eb(e,s);if(t==="sigmoid")return Hs(e);throw new Error(`Unknown fused activation ${t}.`)}var Tp=(e,t)=>!(e>0)||t==="linear";function bF({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",Tp(M.state.gradientDepth,u)===!1){let k=da(e,t,n,s,r,a,i);return o!=null&&(k=ie(k,o)),Np(k,u,l,c)}let p=_(e,"x","conv2d","float32"),d=_(t,"filter","conv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=U(p,[1,p.shape[0],p.shape[1],p.shape[2]])),O(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),O(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),hn("fused conv2d",s,i),O(h.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${d.shape[2]}.`),O(Ps(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),O(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=Pl(h.shape,d.shape,n,a,s,i),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=vt(g,p),it(m.outShape,g.shape));let b;l!=null&&(b=_(l,"prelu weights","fused conv2d"));let y=(k,I)=>{let[$,E,A,P]=I,R=Ip(k,A,u);O(fr(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let F=Qg(E.shape,R,$,n,s),T=bb(E,R,$.shape,n,s),z=[F,T];if(P!=null){let W=Cp(P,R);z.push(W)}return z},v={x:h,filter:d,bias:g,preluActivationWeights:b},x={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return o==null?qs((I,$,E)=>{let A=M.runKernel(ia,v,x);return E([$,I,A]),f&&(A=U(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:y}})(h,d):qs((I,$,E,A)=>{let P=M.runKernel(ia,v,x);return A([$,I,P,E]),f&&(P=U(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:y}})(h,d,g)}var yF=L({fusedConv2d_:bF});function vF(e,t,n,s,r,a=[1,1],i){let o=e;e.rank===3&&(o=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={x:o,dy:u},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return M.runKernel(yg,l,c)}var zS=L({depthwiseConv2dNativeBackpropFilter_:vF});function xF(e,t,n,s,r,a=[1,1],i){let o=t,u=!1;t.rank===3&&(u=!0,o=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},p=M.runKernel(vg,l,c);return u?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var MS=L({depthwiseConv2dNativeBackpropInput_:xF});function wF({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(Tp(M.state.gradientDepth,u)===!1){let k=yp(e,t,n,s,r,a,i);return o!=null&&(k=ie(k,o)),Np(k,u,l,c)}let p=_(e,"x","depthwiseConv2d","float32"),d=_(t,"filter","depthwiseConv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=U(p,[1,p.shape[0],p.shape[1],p.shape[2]])),O(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),O(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),O(h.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),a==null&&(a=[1,1]),O(Ps(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),hn("fused depthwiseConv2d",s,i);let m=Pl(h.shape,d.shape,n,a,s,i,!0),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=vt(g,p),it(m.outShape,g.shape));let b;l!=null&&(b=_(l,"prelu weights","fused depthwiseConv2d"));let y=(k,I)=>{O(fr(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[$,E,A,P]=I,R=Ip(k,A,u),F=MS(E.shape,R,$,n,s,a,i),T=zS(E,R,$.shape,n,s,a,i);if(P!=null){let z=Cp(g,R);return[F,T,z]}return[F,T]},v={x:h,filter:d,bias:g,preluActivationWeights:b},x={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return o==null?qs((I,$,E)=>{let A=M.runKernel(oa,v,x);return E([$,I,A]),f&&(A=U(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:y}})(h,d):qs((I,$,E,A)=>{let P=M.runKernel(oa,v,x);return A([$,I,P,E]),f&&(P=U(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:y}})(h,d,g)}var kF=L({fusedDepthwiseConv2d_:wF});function SF({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(Tp(M.state.gradientDepth,a)===!1){let R=Ve(e,t,n,s);return r!=null&&(R=ie(R,r)),Np(R,a,i,o)}let u=_(e,"a","fused matMul"),l=_(t,"b","fused matMul");[u,l]=vt(u,l);let c=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=s?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=s?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=dt(f),b=dt(m);O(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${s} must match.`);let v=it(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,h]),x=n?U(u,[g,c,d]):U(u,[g,d,c]),k=s?U(l,[b,h,p]):U(l,[b,p,h]),I;r!=null&&(I=_(r,"bias","fused matMul"),[I]=vt(I,u),it(v,I.shape));let $;i!=null&&($=_(i,"prelu weights","fused matMul"));let E=(R,F)=>{let[T,z,W,j]=F,X=Ip(U(R,W.shape),W,a),Y,Z;if(!n&&!s?(Y=Ve(X,z,!1,!0),Z=Ve(T,X,!0,!1)):!n&&s?(Y=Ve(X,z,!1,!1),Z=Ve(X,T,!0,!1)):n&&!s?(Y=Ve(z,X,!1,!0),Z=Ve(T,X,!1,!1)):(Y=Ve(z,X,!0,!0),Z=Ve(X,T,!0,!0)),r!=null){let te=Cp(j,X);return[Y,Z,te]}else return[Y,Z]},A={a:x,b:k,bias:I,preluActivationWeights:$},P={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};return r==null?qs((F,T,z)=>{let W=M.runKernel(aa,A,P);return z([F,T,W]),{value:U(W,v),gradFunc:E}})(x,k):qs((F,T,z,W)=>{let j=M.runKernel(aa,A,P);return W([F,T,j,z]),{value:U(j,v),gradFunc:E}})(x,k,I)}var IF=L({fusedMatMul_:SF});function CF(e){return PS(e,.54,.46)}var NF=L({hammingWindow_:CF});function TF(e){return PS(e,.5,.5)}var LS=L({hannWindow_:TF});function $F(e,t,n,s=!1,r=0){let a=0,i=[];for(;a+t<=e.size;)i.push(qe(e,a,t)),a+=n;if(s)for(;a<e.size;){let o=a+t-e.size,u=Ft([qe(e,a,t-o),zl([o],r)]);i.push(u),a+=n}return i.length===0?Zi([],[0,t]):U(Ft(i),[i.length,t])}var BS=L({frame_:$F});function _F(e,t,n,s,r=LS){s==null&&(s=fF(t));let a=BS(e,t,n),i=V(a,r(t));return mb(i,s)}var AF=L({stft_:_F});function EF(e,t,n,s,r="bilinear",a=0){let i=_(e,"image","cropAndResize"),o=_(t,"boxes","cropAndResize","float32"),u=_(n,"boxInd","cropAndResize","int32"),l=o.shape[0];O(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),O(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),O(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),O(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),O(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),O(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let c={image:i,boxes:o,boxInd:u},p={method:r,extrapolationValue:a,cropSize:s};return M.runKernel(mo,c,p)}var RF=L({cropAndResize_:EF});function DF(e){let t=_(e,"image","flipLeftRight","float32");O(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return M.runKernel(xo,n,{})}var FF=L({flipLeftRight_:DF});function OF(e){let t=_(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];O(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,hs(t,r)}var PF=L({grayscaleToRGB_:OF});function zF(e,t,n=0,s=.5){let r=_(e,"image","rotateWithOffset","float32");O(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},i={radians:t,fillValue:n,center:s};return M.runKernel(Xo,a,i)}var MF=L({rotateWithOffset_:zF});function Zo(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let i=e.shape[0];return n=Math.min(n,i),O(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),O(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),O(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),O(t.rank===1,()=>"scores must be a 1D tensor"),O(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),O(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function LF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=_(e,"boxes","nonMaxSuppression","float32"),i=_(t,"scores","nonMaxSuppression","float32"),o=Zo(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;let u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return M.runKernel(_o,{boxes:a,scores:i},u)}var BF=L({nonMaxSuppression_:LF});function VF(e,t,n){let s=WF(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function WF(e,t,n){return GF(e,t,n||UF)}function UF(e,t){return e>t?1:e<t?-1:0}function GF(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);let o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}function VS(e,t,n,s,r){return yb(e,t,n,s,r,0)}function WS(e,t,n,s,r,a){return yb(e,t,n,s,r,0,!1,a,!0)}function US(e,t,n,s,r,a){return yb(e,t,n,s,r,a,!0)}function yb(e,t,n,s,r,a,i=!1,o=!1,u=!1){let l=[];for(let g=0;g<t.length;g++)t[g]>r&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(vx);let c=a>0?-.5/a:0,p=[],d=[];for(;p.length<n&&l.length>0;){let g=l.pop(),{score:b,boxIndex:y,suppressBeginIndex:v}=g;if(b<r)break;let x=!1;for(let k=p.length-1;k>=v;--k){let I=HF(e,y,p[k]);if(I>=s){x=!0;break}if(g.score=g.score*qF(s,c,I),g.score<=r)break}g.suppressBeginIndex=p.length,x||(g.score===b?(p.push(y),d.push(g.score)):g.score>r&&VF(l,g,vx))}let h=p.length,f=n-h;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=d),u&&(m.validOutputs=h),m}function HF(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),h=(o-a)*(u-i),f=(p-l)*(d-c);if(h<=0||f<=0)return 0;let m=Math.max(a,l),g=Math.max(i,c),b=Math.min(o,p),y=Math.min(u,d),v=Math.max(b-m,0)*Math.max(y-g,0);return v/(h+f-v)}function qF(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function vx(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function jF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),o=Zo(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;let u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:p}=VS(l,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),Zt(p,"int32")}var KF=jF;function XF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),u=Zo(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;let l={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},p=M.runKernel(Ao,l,c);return{selectedIndices:p[0],selectedScores:p[1]}}var YF=L({nonMaxSuppressionWithScore_:XF});async function QF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),u=Zo(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;let l=await Promise.all([i.data(),o.data()]),c=l[0],p=l[1],{selectedIndices:d,selectedScores:h}=US(c,p,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Zt(d,"int32"),selectedScores:Zt(h)}}var ZF=QF;function JF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),u=Zo(i,o,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,d={boxes:i,scores:o},h={maxOutputSize:l,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:a},f=M.runKernel(Sl,d,h);return{selectedIndices:f[0],validOutputs:f[1]}}var eO=L({nonMaxSuppressionPadded_:JF});async function tO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),u=Zo(i,o,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[d,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=WS(d,h,l,c,p,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Zt(f,"int32"),validOutputs:we(m,"int32")}}var nO=tO;function sO(e,t,n=!1,s=!1){let r=_(e,"images","resizeBilinear");O(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,i=!1;r.rank===3&&(i=!0,a=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},l=M.runKernel(ri,o,u);return i?U(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var rO=L({resizeBilinear_:sO});function aO(e,t,n=!1,s=!1){let r=_(e,"images","resizeNearestNeighbor");O(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),O(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,i=!1;r.rank===3&&(i=!0,a=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},l=M.runKernel(Nl,o,u);return i?U(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var iO=L({resizeNearestNeighbor_:aO});function oO(e,t="binary",n=!1,s=.5){let r=_(e,"image","threshold"),a=.2989,i=.587,o=.114,u=r.shape[0]*r.shape[1],l=V(Zt([s]),255),c,p,d,h;if(O(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),O(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),O(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),O(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[c,p,d]=Bn(r,[1,1,1],-1);let g=V(c,a),b=V(p,i),y=V(d,o);h=ie(ie(g,b),y)}else h=e;if(t==="otsu"){let g=aS(le(SS(h),"int32"),ms([]),256);l=uO(g,u)}let f=n?Qo(h,l):Un(h,l);return le(V(f,255),"int32")}function uO(e,t){let n=Zt([-1]),s=Zt([0]),r=Zt([0]),a,i,o,u,l,c;for(let p=0;p<e.size-1;p++){a=qe(e,0,p+1),i=qe(e,p+1),l=xe(ve(a),t),c=xe(ve(i),t);let d=ve(V(a,Zu(0,a.size)));o=xe(d,ve(a));let h=zl(i.shape,a.size),f=ie(Zu(0,i.size),h),m=V(i,f);u=xe(ve(m),ve(i));let g=ge(o,u),b=ge(o,u),y=V(l,c);r=V(V(y,g),b);let v=Un(r,s);s=vn(v,r,s),n=vn(v,Zt([p]),n)}return n}var lO=L({threshold_:oO});function cO(e,t,n="nearest",s="constant",r=0,a){let i=_(e,"image","transform","float32"),o=_(t,"transforms","transform","float32");O(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),O(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let u={image:i,transforms:o},l={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return M.runKernel(qo,u,l)}var dO=L({transform_:cO});function pO(e,t,n){O(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=_(e,"a","bandPart");O(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);let o=U(Zu(0,a,1,"int32"),[-1,1]),u=Zu(0,i,1,"int32"),l=ge(o,u),c=Ds(Qo(l,we(+t,"int32")),Yo(l,we(-n,"int32"))),p=$t([a,i],s.dtype);return U(es(Fs(U(s,[-1,a,i])).map(d=>vn(c,d,p))),r)}var hO=L({bandPart_:pO});function fO(e){let t;if(Array.isArray(e)){t=!1,O(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)O(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=Bn(e,e.shape[0],0).map(r=>mr(r,[0]));O(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(M.tidy(()=>{let a=s[r];if(r>0)for(let i=0;i<r;++i){let o=V(ve(V(n[i],a)),n[i]);a=ge(a,o)}return xe(a,FS(a,"euclidean"))}));return t?es(n,0):n}var mO=L({gramSchmidt_:fO});function gO(e,t=!1){if(O(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return xx(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((u,l)=>u*l),s=Fs(U(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(u=>{let[l,c]=xx(u,t);r.push(l),a.push(c)});let i=U(es(r,0),e.shape),o=U(es(a,0),e.shape);return[i,o]}}function xx(e,t=!1){return M.tidy(()=>{O(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=pS(n),a=ur(e),i=Zi([[1]],[1,1]),o=ur(i),u=n>=s?s:n;for(let l=0;l<u;++l){let c=a,p=o,d=r;[o,a,r]=M.tidy(()=>{let h=qe(a,[l,l],[n-l,1]),f=FS(h),m=qe(a,[l,l],[1,1]),g=vn(Un(m,0),Zi([[-1]]),Zi([[1]])),b=ge(m,V(g,f)),y=xe(h,b);y.shape[0]===1?o=ur(i):o=Ft([i,qe(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let v=kt(xe(Ve(g,b),f)),x=qe(a,[l,0],[n-l,s]),k=V(v,o),I=Ge(o);if(l===0)a=ge(x,Ve(k,Ve(I,x)));else{let A=ge(x,Ve(k,Ve(I,x)));a=Ft([qe(a,[0,0],[l,s]),A],0)}let $=Ge(k),E=qe(r,[0,l],[n,r.shape[1]-l]);if(l===0)r=ge(E,Ve(Ve(E,o),$));else{let A=ge(E,Ve(Ve(E,o),$));r=Ft([qe(r,[0,0],[n,l]),A],1)}return[o,a,r]}),Re([c,p,d])}return!t&&n>s&&(r=qe(r,[0,0],[n,s]),a=qe(a,[0,0],[s,s])),[r,a]})}var bO=L({qr_:gO}),yO=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(yO||{});function vO(e,t,n=3){let s=_(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=_(t,"weights","computeWeightedLoss"));let a=r==null?s:V(s,r);if(n===0)return a;if(n===2)return ve(a);if(n===1){if(r==null)return It(a);{let i=s.size/r.size,o=xe(ve(a),ve(r));return i>1?xe(o,we(i)):o}}if(n===3){if(r==null)return xe(ve(a),we(s.size));{let i=V(r,Mn(s.shape)),o=le(ve(Qu(i,we(0))),"float32");return xe(ve(a),o)}}throw Error(`Unknown reduction: ${n}`)}var Ys=L({computeWeightedLoss_:vO});function xO(e,t,n,s=3){let r=_(e,"labels","absoluteDifference"),a=_(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=_(n,"weights","absoluteDifference")),pn(r.shape,a.shape,"Error in absoluteDifference: ");let o=Lt(ge(r,a));return Ys(o,i,s)}var wO=L({absoluteDifference_:xO});function kO(e,t,n,s,r=3){let a=_(e,"labels","cosineDistance"),i=_(t,"predictions","cosineDistance"),o=null;s!=null&&(o=_(s,"weights","cosineDistance")),pn(a.shape,i.shape,"Error in cosineDistance: ");let u=we(1),l=ge(u,ve(V(a,i),n,!0));return Ys(l,o,r)}var SO=L({cosineDistance_:kO});function IO(e,t,n,s=3){let r=_(e,"labels","hingeLoss"),a=_(t,"predictions","hingeLoss"),i=null;n!=null&&(i=_(n,"weights","hingeLoss")),pn(r.shape,a.shape,"Error in hingeLoss: ");let o=we(1);r=ge(V(we(2),r),o);let u=Xs(ge(o,V(r,a)));return Ys(u,i,s)}var CO=L({hingeLoss_:IO});function NO(e,t,n,s=1,r=3){let a=_(e,"labels","huberLoss"),i=_(t,"predictions","huberLoss"),o=null;n!=null&&(o=_(n,"weights","huberLoss")),pn(a.shape,i.shape,"Error in huberLoss: ");let u=we(s),l=Lt(ge(i,a)),c=kp(l,u),p=ge(l,c),d=ie(V(we(.5),ct(c)),V(u,p));return Ys(d,o,r)}var TO=L({huberLoss_:NO});function $O(e,t,n,s=1e-7,r=3){let a=_(e,"labels","logLoss"),i=_(t,"predictions","logLoss"),o=null;n!=null&&(o=_(n,"weights","logLoss")),pn(a.shape,i.shape,"Error in logLoss: ");let u=we(1),l=we(s),c=kt(V(a,Qn(ie(i,l)))),p=V(ge(u,a),Qn(ie(ge(u,i),l))),d=ge(c,p);return Ys(d,o,r)}var _O=L({logLoss_:$O});function AO(e,t,n,s=3){let r=_(e,"labels","meanSquaredError"),a=_(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=_(n,"weights","meanSquaredError")),pn(r.shape,a.shape,"Error in meanSquaredError: ");let o=AS(r,a);return Ys(o,i,s)}var EO=L({meanSquaredError_:AO});function RO(e,t){let n=_(e,"labels","sigmoidCrossEntropyWithLogits"),s=_(t,"logits","sigmoidCrossEntropyWithLogits");pn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Xs(s),a=V(s,n),i=tb(Yn(kt(Lt(s))));return ie(ge(r,a),i)}function DO(e,t,n,s=0,r=3){let a=_(e,"multiClassLabels","sigmoidCrossEntropy"),i=_(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","sigmoidCrossEntropy")),pn(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){let l=we(s),c=we(1),p=we(.5);a=ie(V(a,ge(c,l)),V(p,l))}let u=RO(a,i);return Ys(u,o,r)}var FO=L({sigmoidCrossEntropy_:DO});function OO(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return qs((r,a,i)=>{let u=fD(a,[n],!0),l=ge(le(a,"float32"),u);i([r,l]);let c=kt(V(l,r));return{value:ve(c,[n]),gradFunc:(h,f)=>{let[m,g]=f,b=pa(h.shape,[n]);return[V(U(h,b),ge(le(m,"float32"),Yn(g))),V(U(h,b),ge(Yn(g),le(m,"float32")))]}}})(e,t)}function PO(e,t,n,s=0,r=3){let a=_(e,"onehotLabels","softmaxCrossEntropy"),i=_(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","softmaxCrossEntropy")),pn(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){let l=we(s),c=we(1),p=we(a.shape[1]);a=ie(V(a,ge(c,l)),xe(l,p))}let u=OO(a,i);return Ys(u,o,r)}var zO=L({softmaxCrossEntropy_:PO});function MO(e,t,n,s){let r=_(e,"indices","sparseFillEmptyRows","int32"),a=_(t,"values","sparseFillEmptyRows"),i=_(n,"denseShape","sparseFillEmptyRows","int32"),o=_(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let u={indices:r,values:a,denseShape:i,defaultValue:o},l=M.runKernel(up,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var LO=L({sparseFillEmptyRows_:MO});function BO(e,t,n){let s=_(e,"inputIndices","sparseReshape","int32"),r=_(t,"inputShape","sparseReshape","int32"),a=_(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let i={inputIndices:s,inputShape:r,newShape:a},o=M.runKernel(Al,i);return{outputIndices:o[0],outputShape:o[1]}}var VO=L({sparseReshape_:BO});function WO(e,t,n){let s=_(e,"data","sparseSegmentMean"),r=_(t,"indices","sparseSegmentMean","int32"),a=_(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let i={data:s,indices:r,segmentIds:a};return M.runKernel(lp,i)}var UO=L({sparseSegmentMean_:WO});function GO(e,t,n){let s=_(e,"data","sparseSegmentSum"),r=_(t,"indices","sparseSegmentSum","int32"),a=_(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let i={data:s,indices:r,segmentIds:a};return M.runKernel(cp,i)}var HO=L({sparseSegmentSum_:GO});function qO(e,t,n,s,r,a,i,o){let u=_(e,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=_(t,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},p={data:u,dataSplits:l},d=M.runKernel(pp,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}var jO=L({stringNGrams_:qO});function KO(e,t,n=!0){let s=_(e,"input","stringSplit","string"),r=_(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},i={input:s,delimiter:r},o=M.runKernel(Dg,i,a);return{indices:o[0],values:o[1],shape:o[2]}}var XO=L({stringSplit_:KO});function YO(e,t){let n=_(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return M.runKernel(Fg,r,s)}var QO=L({stringToHashBucketFast_:YO}),Zpe={fft:fb,ifft:Nd,rfft:mb,irfft:_S},Jpe={hammingWindow:NF,hannWindow:LS,frame:BS,stft:AF},jn={flipLeftRight:FF,grayscaleToRGB:PF,resizeNearestNeighbor:iO,resizeBilinear:rO,rotateWithOffset:MF,cropAndResize:RF,nonMaxSuppression:BF,nonMaxSuppressionAsync:KF,nonMaxSuppressionWithScore:YF,nonMaxSuppressionWithScoreAsync:ZF,nonMaxSuppressionPadded:eO,nonMaxSuppressionPaddedAsync:nO,threshold:lO,transform:dO},ZO={bandPart:hO,gramSchmidt:mO,qr:bO},ehe={absoluteDifference:wO,computeWeightedLoss:Ys,cosineDistance:SO,hingeLoss:CO,huberLoss:TO,logLoss:_O,meanSquaredError:EO,sigmoidCrossEntropy:FO,softmaxCrossEntropy:zO},Gc={sparseFillEmptyRows:LO,sparseReshape:VO,sparseSegmentMean:UO,sparseSegmentSum:HO},Uf={stringNGrams:jO,stringSplit:XO,stringToHashBucketFast:QO},_r=class extends Xk{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(a)}else this.applyGradients(r);return Re(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return sD(e,t)}dispose(){this.iterations_!=null&&Re(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:we(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(_r,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var vb=class extends _r{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:q(()=>je(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:q(()=>je(r).variable(a))});let i=Array.isArray(e)?e[s].tensor:e[n];if(i==null)return;let o=this.accumulatedGrads[s].variable,u=this.accumulatedUpdates[s].variable;q(()=>{let l=ie(V(o,this.rho),V(ct(i),1-this.rho)),c=V(xe(dn(ie(u,this.epsilon)),dn(ie(o,this.epsilon))),i),p=ie(V(u,this.rho),V(ct(c),1-this.rho));o.assign(l),u.assign(p);let d=ie(V(c,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Re(this.accumulatedGrads.map(e=>e.variable)),Re(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};vb.className="Adadelta";Tr(vb);var xb=class extends _r{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:q(()=>zl(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[s].variable;q(()=>{let o=ie(i,ct(a));i.assign(o);let u=ie(V(xe(a,dn(ie(o,M.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Re(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};xb.className="Adagrad";Tr(xb);var wb=class extends _r{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],q(()=>{this.accBeta1=we(t).variable(),this.accBeta2=we(n).variable()}),s==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);q(()=>{let n=ge(1,this.accBeta1),s=ge(1,this.accBeta2);t.forEach((r,a)=>{let i=M.registeredVariables[r],o=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:q(()=>je(i).variable(o))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:q(()=>je(i).variable(o))});let u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;let l=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,p=ie(V(l,this.beta1),V(u,1-this.beta1)),d=ie(V(c,this.beta2),V(ct(u),1-this.beta2)),h=xe(p,n),f=xe(d,s);l.assign(p),c.assign(d);let m=ie(V(xe(h,ie(dn(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Re(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Re(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),q(()=>{this.accBeta1.assign(ha(this.beta1,this.iterations_+1)),this.accBeta2.assign(ha(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};wb.className="Adam";Tr(wb);var kb=class extends _r{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],q(()=>{this.iteration=we(0).variable(),this.accBeta1=we(t).variable()}),s==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);q(()=>{let n=ge(1,this.accBeta1),s=xe(-this.learningRate,ie(V(this.iteration,this.decay),1));t.forEach((r,a)=>{let i=M.registeredVariables[r],o=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:je(i).variable(o)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:je(i).variable(o)});let u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;let l=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,p=ie(V(l,this.beta1),V(u,1-this.beta1)),d=V(c,this.beta2),h=Lt(u),f=$r(d,h);l.assign(p),c.assign(f);let m=ie(V(xe(s,n),xe(p,ie(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(ie(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Re(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Re(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};kb.className="Adamax";Tr(kb);var $p=class extends _r{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=M.registeredVariables[n];q(()=>{let i=ie(V(this.c,r),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=qt(we(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};$p.className="SGD";Tr($p);var Sb=class extends $p{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=we(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${n}/momentum`,variable:q(()=>je(r).variable(!1))});let a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[n];i!=null&&q(()=>{let o,u=ie(V(this.m,a),i);this.useNesterov?o=ie(V(this.c,ie(i,V(u,this.m))),r):o=ie(V(this.c,u),r),a.assign(u),r.assign(o)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Re(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Sb.className="Momentum";Tr(Sb);var Ib=class extends _r{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=M.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:q(()=>je(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:q(()=>je(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:q(()=>je(r).variable(a))});let i=Array.isArray(e)?e[s].tensor:e[n];if(i==null)return;let o=this.accumulatedMeanSquares[s].variable,u=this.accumulatedMoments[s].variable;q(()=>{let l=ie(V(o,this.decay),V(ct(i),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,p=ie(V(c,this.decay),V(i,1-this.decay)),d=xe(V(i,this.learningRate),dn(ge(l,ie(ct(p),this.epsilon)))),h=ie(V(u,this.momentum),d);o.assign(l),c.assign(p),u.assign(h);let f=ge(r,h);r.assign(f)}else{let c=ie(V(o,this.decay),V(ct(i),1-this.decay)),p=ie(V(u,this.momentum),xe(V(i,this.learningRate),dn(ie(c,this.epsilon))));o.assign(c),u.assign(p);let d=ge(r,p);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Re(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Re(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Re(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Ib.className="RMSProp";Tr(Ib);var Ur=class{static sgd(e){return new $p(e)}static momentum(e,t,n=!1){return new Sb(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Ib(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new wb(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new vb(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new kb(e,t,n,s,r)}static adagrad(e,t=.1){return new xb(e,t)}},Bi={sgd:Ur.sgd,momentum:Ur.momentum,adadelta:Ur.adadelta,adagrad:Ur.adagrad,rmsprop:Ur.rmsprop,adamax:Ur.adamax,adam:Ur.adam},JO=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function GS(){return new Promise(e=>JO(()=>e()))}var C={};Ae(C,{ERF_A1:()=>cP,ERF_A2:()=>dP,ERF_A3:()=>pP,ERF_A4:()=>hP,ERF_A5:()=>fP,ERF_P:()=>lP,PARALLELIZE_THRESHOLD:()=>Cb,SELU_SCALE:()=>qS,SELU_SCALEALPHA:()=>HS,applyActivation:()=>Np,assertAndGetBroadcastShape:()=>it,assertAxesAreInnerMostDims:()=>dD,assertParamsConsistent:()=>eP,assignToTypedArray:()=>xP,axesAreInnerMostDims:()=>nb,calculateShapes:()=>Lk,checkEinsumDimSizes:()=>NP,checkPadOnDimRoundingMode:()=>hn,combineLocations:()=>mS,complexWithEvenIndex:()=>bP,complexWithOddIndex:()=>yP,computeConv2DInfo:()=>Pl,computeConv3DInfo:()=>nS,computeDefaultPad:()=>Kg,computeDilation2DInfo:()=>vE,computeOptimalWindowSize:()=>nP,computeOutAndReduceShapes:()=>gS,computeOutShape:()=>tP,computePool2DInfo:()=>tS,computePool3DInfo:()=>xE,convertConv2DDataFormat:()=>sS,decodeEinsumEquation:()=>IP,eitherStridesOrDilationsAreOne:()=>Ps,expandShapeToKeepDim:()=>pa,exponent:()=>kP,exponents:()=>wP,fromStringArrayToUint8:()=>jP,fromUint8ToStringArray:()=>qP,getAxesPermutation:()=>bS,getBroadcastDims:()=>Dk,getComplexWithIndex:()=>vP,getEinsumComputePath:()=>TP,getEinsumPermutation:()=>CP,getFusedBiasGradient:()=>Cp,getFusedDyActivation:()=>Ip,getImageCenter:()=>sP,getInnerMostAxes:()=>pD,getPermuted:()=>aP,getReductionAxes:()=>_t,getReshaped:()=>rP,getReshapedPermuted:()=>iP,getSliceBeginCoords:()=>oP,getSliceSize:()=>uP,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>EP,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>RP,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>DP,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>PP,getSparseReshapeInputOutputMismatchErrorMessage:()=>MP,getSparseReshapeInputOutputMultipleErrorMessage:()=>zP,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>FP,getSparseReshapeNegativeOutputDimErrorMessage:()=>OP,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>WP,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>LP,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>BP,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>VP,getUndoAxesPermutation:()=>sb,isIdentityPermutation:()=>$P,log:()=>V$,mergeRealAndImagArrays:()=>mP,prepareAndValidate:()=>zk,prepareSplitSize:()=>AP,segment_util:()=>jS,shouldFuse:()=>Tp,slice_util:()=>wt,splitRealAndImagArrays:()=>gP,tupleValuesAreOne:()=>fr,upcastType:()=>cn,validateInput:()=>Hg,validateUpdateShape:()=>Gg,warn:()=>rr});function eP(e,t){let n=e[0].length;e.forEach((r,a)=>{O(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),O(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let i=0;i<n;i++)O(i===t||r[i]===s[i],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function tP(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var Cb=30;function nP(e){return e<=Cb?e:gd(e,Math.floor(Math.sqrt(e)))}function sP(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function rP(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let i=0;i<a;++i)r=r.concat([e[i+1]/t[i],t[i]]);r=r.concat(e.slice(a+1))}return r}function aP(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?a.push(i):r.push(i);s.push(...r),s.push(0),s.push(...a)}return s}function iP(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function oP(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function uP(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var HS=1.7580993408473768,qS=1.0507009873554805,lP=.3275911,cP=.254829592,dP=-.284496736,pP=1.421413741,hP=-1.453152027,fP=1.061405429;function mP(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function gP(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function bP(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function yP(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function vP(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function xP(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function wP(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function kP(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var Gf="->",SP=/->/g,wx=",",kx="...";function IP(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(SP,"").length)/Gf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Gf}").`);let[s,r]=e.split(Gf);O(s.indexOf(kx)===-1,()=>`The ellipsis notation ("${kx}") is not supported yet.`);let a=s.split(wx),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let d=0;d<r.length;++d){let h=r[d];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);o.indexOf(h)===-1&&o.push(h)}for(let d=0;d<s.length;++d){let h=s[d];o.indexOf(h)===-1&&h!==wx&&o.push(h)}let u=new Array(a.length);for(let d=0;d<i;++d){if(new Set(a[d].split("")).size!==a[d].length)throw new Error(`Found duplicate axes in input component ${a[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let h=0;h<a[d].length;++h)u[d].push(o.indexOf(a[d][h]))}let l=o.length,c=r.length,p=[];for(let d=c;d<l;++d)p.push(d);return{allDims:o,summedDims:p,idDims:u}}function CP(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function NP(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let i=0;i<t[r].length;++i)s[t[r][i]]===void 0?s[t[r][i]]=a[i]:O(s[t[r][i]]===a[i],()=>`Expected dimension ${s[t[r][i]]} at axis ${i} of input shaped ${JSON.stringify(a)}, but got dimension ${a[i]}`)}}function TP(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let i=0;i<r;++i)s.push([]);let a=[];for(let i=0;i<n.length;++i){let o=n[i],u=_P(t,o);for(let l of u)a.indexOf(l)===-1&&(s[i].push(l),a.push(l))}return{path:n,steps:s}}function $P(e){return e.every((t,n)=>t===n)}function _P(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function AP(e,t,n=0){let s=[];if(typeof t=="number")O(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);O(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let i=t.reduce((o,u)=>u>0?o+u:o);t[a]=e.shape[n]-i}O(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function EP(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function RP(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function DP(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function FP(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function OP(e,t){return`size ${e} must be non-negative, not ${t}`}function PP(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function zP(e,t){let n=dt(e),s=dt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function MP(e,t){let n=dt(e),s=dt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function LP(){return"segment ids must be >= 0"}function BP(){return"segment ids are not increasing"}function VP(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function WP(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var jS={};Ae(jS,{collectGatherOpShapeInfo:()=>HP,computeOutShape:()=>GP,segOpComputeOptimalWindowSize:()=>UP});function UP(e,t){let n=!1,s;for(e<=Cb?(s=e,n=!0):s=gd(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=gd(e,s+1);return s}function GP(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function HP(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let p=0;p<s;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=e.shape[n],o=[],u=1,l=1,c=1;for(let p=0;p<s;++p)o.push(e.shape[p]),u*=e.shape[p];for(let p=s;p<n;p++)o.push(e.shape[p]),l*=e.shape[p];for(let p=s;p<r;p++)o.push(t.shape[p]);for(let p=n+1;p<a;p++)o.push(e.shape[p]),c*=e.shape[p];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function qP(e){try{return e.map(t=>yd(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function jP(e){return e.map(t=>Fl(t))}var ws={};Ae(ws,{nonMaxSuppressionV3Impl:()=>VS,nonMaxSuppressionV4Impl:()=>WS,nonMaxSuppressionV5Impl:()=>US,whereImpl:()=>ES});var Bs=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bs.prototype)}},fs=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fs.prototype)}},G=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,G.prototype)}},Fe=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fe.prototype)}},KS=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,KS.prototype)}},XS=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function ma(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Cs(e,t){if(!e)throw new KS(t)}function Sx(e,t){let n=0;for(let s of e)s===t&&n++;return n}function bn(e){return e.length===1?e[0]:e}function pt(e){return Array.isArray(e)?e:[e]}function Vs(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function Xr(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var Hn={};function Nb(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function xm(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>xm(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:xm(s))}}}function Bl(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,i;if(a in n)i=n[a];else if(a in Hn)i=Hn[a];else if(i=t[a],i==null)throw new G(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let a=e;if(a.className==null||a.config==null)throw new G(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let i=a.className,o,u;if(i in n?[o,u]=n[i]:i in Hn?[o,u]=Hn.className:i in t&&([o,u]=t[i]),o==null)throw new G(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let h of Object.keys(Hn))l[h]=Hn[h];for(let h of Object.keys(n))l[h]=n[h];let c=a.config;c.customObjects=l;let p={...Hn};for(let h of Object.keys(n))Hn[h]=n[h];xm(a.config);let d=u(o,a.config,n,r);return Hn={...p},d}else{let l={...Hn};for(let p of Object.keys(n))Hn[p]=n[p];let c=new o(a.config);return Hn={...l},c}}}function KP(e,t){return e<t?-1:e>t?1:0}function Hc(e,t){return-1*KP(e,t)}function lr(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function XP(e){if(e==null)throw new G(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function vi(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new G(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Tb(e,t,n=0,s=1/0){return Cs(n>=0),Cs(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function Vt(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>Vt(n,`element ${s+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${YS(e)}.`)}function YS(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>YS(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function YP(e,t,n){let s=n!=null?n():w.now(),r;return(...i)=>{let o=n!=null?n():w.now();return o-s<t||(s=o,r=e(...i)),r}}function QS(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var QP=0;function ZS(){return QP++}var qc={};function _p(e=""){return e in qc||(qc[e]=0),qc[e]+=1,e+qc[e].toString()}var ZP=["channelsFirst","channelsLast"],JP=["nearest","bilinear"],ez=["valid","same","causal"],tz=["max","avg"],nz=["sum","mul","concat","ave"],Vi=new Map;function Ct(e){vi(ZP,"DataFormat",e)}function sz(e){vi(JP,"InterpolationFormat",e)}function Gn(e){vi(ez,"PaddingMode",e)}function JS(e){vi(tz,"PoolMode",e)}var Bu=[],Ix="/";function ta(e,t){Bu.push(e);try{let n=t();return Bu.pop(),n}catch(n){throw Bu.pop(),n}}function rz(){return Bu.length===0?"":Bu.join(Ix)+Ix}function eI(e){if(!nI(e))throw new Error("Not a valid tensor name: '"+e+"'");return rz()+e}function tI(e){if(!nI(e))throw new Error("Not a valid tensor name: '"+e+"'");Vi.has(e)||Vi.set(e,0);let t=Vi.get(e);if(Vi.set(e,Vi.get(e)+1),t>0){let n=`${e}_${t}`;return Vi.set(n,1),n}else return e}var az=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function nI(e){return!!e.match(az)}function iz(e){return e===parseInt(e.toString(),10)}function cr(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function no(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function gr(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function ys(e,t){if(t<e)throw new G(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}var Hf;function Rt(){return Hf==null&&(Hf=qA().epsilon()),Hf}function vs(){return"channelsLast"}function Ap(e,t){return le(e,t)}function Vl(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),U(e,n)}function oz(e,t){return q(()=>{if(e.shape.length!==2)throw new G(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Vl(e,1);return wm(n,[1,t,1])})}function uz(e){let t=[cr(e.shape)];return U(e,t)}function lz(e){if(e.rank<=1)throw new G(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],cr(e.shape,1)];return U(e,t)}function na(e,t,n){return q(()=>{switch(e.rank){case 1:return db(e,t,n);case 2:return $S(e,[t,0],[n,e.shape[1]]);case 3:return pb(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Cd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return qe(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return qe(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new G(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function qf(e,t,n){return q(()=>{switch(e.rank){case 1:return db(e,t,n);case 2:return $S(e,[0,t],[e.shape[0],n]);case 3:return pb(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Cd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new G(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function jc(e,t,n,s){return q(()=>{switch(e.rank){case 1:return db(e,t,n);case 2:switch(s){case 1:return na(e,t,n);case 2:return qf(e,t,n);default:throw new G(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return na(e,t,n);case 2:return pb(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return qf(e,t,n);default:throw new G(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return na(e,t,n);case 2:return Cd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Cd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return qf(e,t,n);default:throw new G(`The axis is not within the rank of the tensor ${s}`)}default:throw new G(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function $b(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Ft(e,t)}function Cx(e,t){switch(e.rank){case 1:return YE([e,t]);case 2:return ZE([e,t],0);case 3:return eR([e,t],0);case 4:return nR([e,t],0);default:throw new G(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function wm(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new G(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return hs(e,t)}function Ep(e,t=0,n=1,s,r){return r3(e,t,n,s,r)}function Es(e,t,n,s){if(e.rank<2||t.rank<2)throw new Fe(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Fe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return fa.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?km(e.rank,s,vs()):null,activation:n});{let r=e.shape.slice(),a=r.pop();e=U(e,[-1,a]);let i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=U(Ge(t,c),[u,-1]);let p=[...r,...l],d=!1,h=!1;return U(fa.matMul({a:e,b:t,transposeA:d,transposeB:h,bias:s?km(e.rank,s,vs()):null,activation:n}),p)}}function sI(e,t,n){return q(()=>(Array.isArray(t)?t=Zt(t,"int32"):t=le(t,"int32"),Yu(e,t,n)))}function Wl(e){return V(e,e)}function km(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new G(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1,1,1]):U(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,1,1,s[0]]):U(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1,1]):U(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,1,s[0]]):U(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1]):U(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,s[0]]):U(t,[1].concat(s))}else if(e<3)return t;throw new G(`Unsupported input rank by biasAdd: ${t.rank}`)}function ks(e,t,n){return q(()=>(n==null&&(n=vs()),Ct(n),ie(e,km(e.rank,t,n))))}function cz(e,t=1){if(t!==1)throw new Fe(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return vp(e)}function dz(e){return q(()=>xe(e,ie(Lt(e),1)))}function rI(e,t,n,s){return q(()=>hF(e,t,n,s))}function pz(e){return q(()=>{let t=ie(.5,V(.2,e));return Vn(t,0,1)})}function Ul(e,t,n=!1){return n?e():t()}var hz=["fanIn","fanOut","fanAvg"],fz=["normal","uniform","truncatedNormal"];function mz(e){vi(hz,"FanMode",e)}function gz(e){vi(fz,"Distribution",e)}var ns=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},_b=class extends ns{apply(e,t){return $t(e,t)}};_b.className="Zeros";re.registerClass(_b);var Rp=class extends ns{apply(e,t){return Mn(e,t)}};Rp.className="Ones";re.registerClass(Rp);var Ab=class extends ns{constructor(e){if(super(),typeof e!="object")throw new G(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new G(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return q(()=>V(we(this.value),Mn(e,t)))}getConfig(){return{value:this.value}}};Ab.className="Constant";re.registerClass(Ab);var Eb=class extends ns{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ll(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Eb.className="RandomUniform";re.registerClass(Eb);var Rb=class extends ns{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Fe(`randomNormal does not support dType ${t}.`);return Ep(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Rb.className="RandomNormal";re.registerClass(Rb);var Db=class extends ns{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Fe(`truncatedNormal does not support dType ${t}.`);return gb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Db.className="TruncatedNormal";re.registerClass(Db);var Fb=class extends ns{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return q(()=>{if(e.length!==2||e[0]!==e[1])throw new G("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,pS(e[0]))})}getConfig(){return{gain:this.gain}}};Fb.className="Identity";re.registerClass(Fb);function bz(e,t="channelsLast"){let n,s;if(Ct(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=cr(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=cr(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=cr(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var xn=class extends ns{constructor(e){if(super(),e.scale<0)throw new G(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,mz(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,gz(this.distribution),this.seed=e.seed}apply(e,t){let n=bz(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Fe(`${this.getClassName()} does not support dType ${t}.`);return gb(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return Ll(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};xn.className="VarianceScaling";re.registerClass(xn);var Dp=class extends xn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return xn.className}};Dp.className="GlorotUniform";re.registerClass(Dp);var Fp=class extends xn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return xn.className}};Fp.className="GlorotNormal";re.registerClass(Fp);var Op=class extends xn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return xn.className}};Op.className="HeNormal";re.registerClass(Op);var Pp=class extends xn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return xn.className}};Pp.className="HeUniform";re.registerClass(Pp);var zp=class extends xn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return xn.className}};zp.className="LeCunNormal";re.registerClass(zp);var Mp=class extends xn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return xn.className}};Mp.className="LeCunNormal";re.registerClass(Mp);var Ob=class extends ns{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Fe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return q(()=>{if(e.length<2)throw new Fe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=Ep(n,0,1,"float32"),r=ZO.gramSchmidt(s);return e[0]>e[1]&&(r=Ge(r)),V(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Ob.className="Orthogonal";re.registerClass(Ob);var Nx={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Tx(e,t={}){return Bl(e,re.SerializationMap.getMap().classNameMap,t,"initializer")}function yt(e){return Nb(e)}function ht(e){if(typeof e=="string"){let t=e in Nx?Nx[e]:e;if(t==="GlorotNormal")return new Fp;if(t==="GlorotUniform")return new Dp;if(t==="HeNormal")return new Op;if(t==="HeUniform")return new Pp;if(t==="LeCunNormal")return new zp;if(t==="LeCunUniform")return new Mp;{let n={};return n.className=t,n.config={},Tx(n)}}else return e instanceof ns?e:Tx(e)}function Sm(e){return Array.isArray(e)&&Array.isArray(e[0])}function Td(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Oe(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new G(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function nt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new G(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function $d(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var $x="Variable",yz=class{constructor(e,t="float32",n=$x,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=ZS(),n=n==null?$x:n,this.originalName=eI(n),this.name=tI(this.originalName),this.trainable_=s,this.constraint=r,this.val=eF(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),vz(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function vz(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Im(e){return e.map(t=>t.read())}function Pb(e){e.forEach(t=>{t[0].write(t[1])})}var Dt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},$s=class{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=ZS(),a!=null&&(this.originalName=eI(a),this.name=tI(this.originalName)),this.rank=t.length}},xz=0,Lp=class{constructor(e,t){this.callArgs=t,this.id=xz++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},wz=0,He=class extends re.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=wz++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Vs(n)+"_"+_p(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new fs(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new G(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return bn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return bn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Bs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Bs(`Layer ${this.name} is not connected, no input to return.`);return bn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Bs(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Bs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return bn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=pt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=pt(this.inputSpec);if(e.length!==t.length)throw new G(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new G(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new G(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new G(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new G(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let i=s.shape;for(let o in r.axes){let u=Number(o),l=r.axes[o],c=u>=0?i[u]:i[i.length+u];if(l!=null&&[l,null].indexOf(c)===-1)throw new G(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${l} but got shape ${i}.`)}}if(r.shape!=null)for(let i=0;i<r.shape.length;++i){let o=r.shape[i],u=s.shape[i];if(o!=null&&u!=null&&o!==u)throw new G(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=pt(e),s=!0;for(let a of n)if(!(a instanceof $s)){s=!1;break}let r=!0;for(let a of n)if(a instanceof $s){r=!1;break}if(s===r)throw new G("Arguments to apply() must be all SymbolicTensors or all Tensors");return ta(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of pt(e))a.push(i.shape);this.build(bn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),i=pt(a),o=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),o.push(u);if(a=bn(o),this.activityRegularizer!=null)throw new Fe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=kz(e),i=this.computeOutputShape(a),o,u=Sz(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((l,c)=>new $s(u,l,this,pt(e),t,this.name,c)):o=new $s(u,i,this,pt(e),t,this.name),this.addInboundNode(e,o,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Fe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Bs(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Bs(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new fs(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return $d(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Im(e?this.trainableWeights:this.weights)}setWeights(e){q(()=>{let t=this.weights;if(t.length!==e.length)throw new G(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=Im(t);for(let r=0;r<s.length;++r){let a=s[r],i=t[r],o=e[r];if(!w.arraysEqual(a.shape,o.shape))throw new G(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Pb(n)})}addWeight(e,t,n,s,r,a,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new G(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=o!=null?o():ht("zeros"));let u=s.apply(t,n),l=new yz(u,n,e,a,i);return u.dispose(),r!=null&&this.addLoss(()=>r.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=pt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,i=null){let o=pt(e);t=pt(t),n=pt(n),s=pt(s),r=Td(r),a=Td(a);let u=[],l=[],c=[];for(let p of o)u.push(p.sourceLayer),l.push(p.nodeIndex),c.push(p.tensorIndex);new Lp({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function kz(e){e=pt(e);let t=[];for(let n of e)t.push(n.shape);return bn(t)}function Sz(e){return"float32"}function aI(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let i=s.inputTensors[a],o=s.inboundLayers[a],u=s.nodeIndices[a],l=aI(i,o,u);for(let c of l)r.indexOf(c)===-1&&r.push(c)}return r}}}var Jo=class extends He{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:_p("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new G("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new G("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new G("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new $s(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Lp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new G(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Jo.className="InputLayer";re.registerClass(Jo);function iI(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new G("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Jo({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function Iz(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return le(t,e.dtype)}catch(n){throw new G(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Zr=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Zr)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=Iz(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new G(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof $s){if(this.id2Value[e.id]==null)throw new G(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new G(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof $s){if(this.id2Value[e.id]==null)throw new G(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new G(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Re(this.id2Mask)}},_d=new XS,Ad=new XS;function Cz(e){_d!=null&&_d.setMaxEntries(e),Ad!=null&&Ad.setMaxEntries(e)}function Ru(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),i=a?e:[e],o=i.map(f=>f.name),u=[],l=t.names();for(let f of o)l.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let c=o.join(",")+"|"+t.names().sort().join(","),p=_d.get(c),d;if(p==null){let f=Nz(i,t);p=f.sorted,d=f.recipientCounts,_d.put(c,p),Ad.put(c,d)}d={},r||Object.assign(d,Ad.get(c));let h=new Zr(t);for(let f=0;f<p.length;++f){if(s!=null){let A=mm().numTensors;A>s.maxNumTensors&&(s.maxNumTensors=A),A<s.minNumTensors&&(s.minNumTensors=A)}let m=p[f],g=m.sourceLayer;if(g instanceof Jo)continue;let b=[],y=[],v=[],x=!1;for(let A of m.inputs){let P=h.getValue(A),R=h.getMask(A);b.push(P),y.push(R),R!=null&&(x=!0),r||(d[A.name]--,d[A.name]===0&&!t.hasKey(A)&&o.indexOf(A.name)===-1&&!P.isDisposed&&A.sourceLayer.stateful!==!0&&v.push(P))}x&&(n=n||{},n.mask=y[0]);let k=pt(g.apply(b,n)),I=null;g.supportsMasking&&(I=g.computeMask(b,y));let $=$z(m),E=Array.isArray($)?$:[$];for(let A=0;A<E.length;++A){h.hasKey(E[A])||h.add(E[A],k[A],Array.isArray(I)?I[0]:I);let P=o.indexOf(E[A].name);P!==-1&&(u[P]=k[A])}r||Re(v)}return h.disposeMasks(),a?u:u[0]}function Nz(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=_x(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:i,recipientMap:o}=_x(a,t);for(let u of i)r.has(u.name)||(n.push(u),r.add(u.name));for(let u in o)s[u]==null&&(s[u]=new Set),o[u].forEach(l=>s[u].add(l))}}return{sorted:n,recipientCounts:Tz(s)}}function Tz(e){let t={};for(let n in e)t[n]=e[n].size;return t}function _x(e,t){let n=new Set,s=[],r={};for(let o of t.names())n.add(o);let a=[],i=[];for(a.push(e);a.length>0;){let o=a[a.length-1];if(n.has(o.name)){a.pop();continue}let u=i[i.length-1]===a.length-1;if(o.inputs.length===0||u)a.pop(),s.push(o),n.add(o.name),u&&i.pop();else{i.push(a.length-1);for(let l of o.inputs)r[l.name]==null&&(r[l.name]=new Set),r[l.name].add(o.name),!n.has(l.name)&&a.push(l)}}return{sorted:s,recipientMap:r}}function $z(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var _z=K();_z.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,Cz);var oI={kernelName:co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,Sp(le(n,"float32"),-1))}}},Az={kernelName:al,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=ct(le(n,"float32")),r=dn(ge(we(1),s));return kt(xe(e,r))}}}},Ez={kernelName:il,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=dn(ge(ct(le(n,"float32")),1));return xe(e,s)}}}},Rz={kernelName:Sr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=e,u=_t(n.shape,r);return u.length>0&&(o=ve(o,u)),U(o,n.shape)},b:()=>{let o=e,u=_t(s.shape,r);return u.length>0&&(o=ve(o,u)),U(o,s.shape)}}}},Dz={kernelName:Sa,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},Fz={kernelName:Ia,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>je(n)}}},Oz={kernelName:ll,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>je(n)}}},Pz={kernelName:cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,dn(ge(we(1),ct(le(n,"float32")))))}}},zz={kernelName:dl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=dn(ie(we(1),ct(le(n,"float32"))));return xe(e,s)}}}},Mz={kernelName:fl,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=ie(ct(n),ct(s)),u=V(e,xe(s,o)),l=_t(n.shape,r);return l.length>0&&(u=ve(u,l)),U(u,n.shape)},b:()=>{let o=ie(ct(n),ct(s)),u=kt(V(e,xe(n,o))),l=_t(s.shape,r);return l.length>0&&(u=ve(u,l)),U(u,s.shape)}}}},Lz={kernelName:pl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ie(ct(le(n,"float32")),1))}}},Bz={kernelName:hl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ge(we(1),ct(le(n,"float32"))))}}};function Vz(e,t,n,s,r,a){let i=_(e,"dy","avgPool3dGrad"),o=_(t,"input","avgPool3dGrad"),u=i,l=o,c=!1;o.rank===4&&(c=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),O(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),hn("avgPool3dGrad",r,a);let p={dy:u,input:l},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=M.runKernel(dg,p,d);return c?U(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Wz=L({avgPool3dGrad_:Vz}),Uz={kernelName:Qd,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Wz(e,s,r,a,i,o)}}};function Gz(e,t,n,s,r){let a=_(e,"dy","avgPoolGrad"),i=_(t,"input","avgPoolGrad");O(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,u=a,l=!1;i.rank===3&&(l=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),O(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let c={dy:u,input:o},p={filterSize:n,strides:s,pad:r},d=M.runKernel(cg,c,p);return l?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Hz=L({avgPoolGrad_:Gz}),qz={kernelName:Ca,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>Hz(e,s,r,a,i)}}},jz={kernelName:Na,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:i}=n;return!a&&!i?{a:()=>Ve(e,r,!1,!0),b:()=>Ve(s,e,!0,!1)}:!a&&i?{a:()=>Ve(e,r,!1,!1),b:()=>Ve(e,s,!0,!1)}:a&&!i?{a:()=>Ve(r,e,!1,!0),b:()=>Ve(s,e,!1,!1)}:{a:()=>Ve(r,e,!0,!0),b:()=>Ve(e,s,!0,!0)}}},Kz={kernelName:po,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>ob(e,s,r)}}},Xz={kernelName:L$,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let u=r.length-1;u>=0;u--)if(r[u]===a[u])i[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>ve(e,o,!0)}}},Yz={kernelName:Ta,gradFunc:e=>({x:()=>e.clone()})},Qz={kernelName:$a,gradFunc:e=>({x:()=>je(e)})},Zz={kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>vn(Ds(Yo(s,r),Qo(s,a)),e,je(e))}}},Jz={kernelName:Jd,inputsToSave:["x"],gradFunc:oI.gradFunc},eM={kernelName:ho,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(u=>u.shape),{axis:r}=n,a=ts(r,t[0].shape)[0],i=s.map(u=>u[a]);return Bn(e,i,a).map(u=>()=>u)}},tM={kernelName:_a,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return O(fr(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Qg(s.shape,e,r,i,o,u),filter:()=>bb(s,e,r.shape,i,o,u)}}},nM={kernelName:Aa,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>da(e,r,a,i,o,1,u),filter:()=>bb(e,s,r.shape,a,i,o,u)}}};function sM(e,t,n,s,r){let a=e;e.rank===4&&(a=U(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),O(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),O(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),O(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),O(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:a,dy:i},u={strides:s,pad:r,filterShape:n};return M.runKernel(mg,o,u)}var rM=L({conv3DBackpropFilter_:sM}),aM={kernelName:ep,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;O(fr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[i,o]=t;return{x:()=>lS(i.shape,e,o,r,a),filter:()=>rM(i,e,o.shape,r,a)}}},iM={kernelName:Ea,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(kt(NS(le(n,"float32"))),e)}}},oM={kernelName:Ra,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(TS(le(n,"float32")),e)}}},uM={kernelName:Da,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{let o=bS([r],s.rank),u=dS(e,r,a,!i);return o!=null&&(u=Ge(u,o)),u}}}},lM={kernelName:Fa,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=s==null?[1,1]:s;O(fr(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[u,l]=t;return O(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),O(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),O(Ps(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),hn("depthwiseConv2d",a,i),{x:()=>MS(u.shape,e,l,r,a,o,i),filter:()=>zS(u,e,l.shape,r,a,o,i)}}},cM={kernelName:tp,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>M.runKernel(em,a,n),filter:()=>M.runKernel(tm,i,n)}}},dM={kernelName:Pa,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>M.runKernel(wg,s)}}},pM={kernelName:ml,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=V(Yn(kt(ct(n))),2/Math.sqrt(Math.PI));return{x:()=>V(e,s)}}},hM={kernelName:za,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,n)}}},fM={kernelName:yo,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>U(e,n.shape)}}},mM={kernelName:vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,Yn(n))}}},gM={kernelName:Ma,gradFunc:e=>({x:()=>je(e)})},bM={kernelName:La,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=xe(e,le(s,"float32")),u=_t(n.shape,r);return u.length>0?U(ve(o,u),n.shape):o},b:()=>{let o=V(e,le(n,"float32")),u=_t(s.shape,r);u.length>0&&(o=U(ve(o,u),s.shape));let l=ct(s);return kt(xe(o,le(l,"float32")))}}}},yM={kernelName:Ba,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,i,o]=t,u=o==null?we(1):o,l=_t(a.shape,r.shape),c=[];if(a.rank===1){for(let x=0;x<r.shape.length-1;++x)c.push(r.shape[x]);c.push(1)}let p=ge(r,a),d=V(e,u),h=IS(ie(i,we(s))),f=V(V(V(h,h),h),we(-.5));return{x:()=>a.rank===1?U(V(V(e,hs(U(h,[1,1,1,a.shape[0]]),c)),u),r.shape):U(V(V(e,h),u),r.shape),mean:()=>{let x=V(V(h,we(-1)),d);return a.rank===1&&(x=ve(x,l)),U(x,a.shape)},variance:()=>{let x=V(V(f,p),d);return a.rank===1&&(x=ve(x,l)),U(x,a.shape)},scale:()=>{let x=V(p,h),k=V(e,x);return a.rank===1&&(k=ve(k,l)),U(k,a.shape)},offset:()=>{let x=e;return a.rank===1&&(x=ve(x,l)),U(x,a.shape)}}}},vM={kernelName:wo,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,i=ts(a,s.shape)[0];return{x:()=>{let u=s.shape,l=r.size,c=u.slice(0,i),p=c.length,d=u.slice(a,u.length).slice(1),h=d.length,f=Ax(0,p),m=Ax(p+1,p+1+h),g=Ex([c,[l],d]),b=U(e,g),y=U(r,[l]),v=Ex([[p],f,m]),x=Ge(b,v),k=Q3(x,y,s.shape[i]),I=sb(v);return k=Ge(k,I),k},indices:()=>r}}};function Ax(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Ex(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var xM={kernelName:Va,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>je(n),b:()=>je(s)}}},wM={kernelName:Wa,gradFunc:e=>({x:()=>le(e,"float32")})},kM={kernelName:bl,gradFunc:e=>({x:()=>je(e)})},SM={kernelName:yl,gradFunc:e=>({x:()=>je(e)})},IM={kernelName:vl,gradFunc:e=>({x:()=>je(e)})},CM={kernelName:Ua,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=Un(s,0);return{x:()=>vn(a,e,V(e,r))}}},NM={kernelName:xl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ie(n,1))}}},TM={kernelName:Ga,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,le(n,"float32"))}}},$M={kernelName:B$,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let i=Yn(s);return ge(e,V(ve(e,r,!0),i))}}}};function _M(e,t,n,s=5,r=1,a=1,i=.5){let o={x:e,y:t,dy:n},u={depthRadius:s,bias:r,alpha:a,beta:i};return M.runKernel(Cg,o,u)}var AM=L({localResponseNormalizationBackprop_:_M}),EM={kernelName:ap,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>AM(s,r,e,a,i,o,u)}}};function uI(e,t,n,s){return t.rank<n.rank&&(t=U(t,pa(t.shape,s))),e.rank<n.rank&&(e=U(e,pa(e.shape,s))),{x:()=>V(e,le(Xn(n,t),e.dtype))}}var Rx={kernelName:Ha,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],i=t[1],o=ts(r,a.shape),u=uI(e,i,a,o);return{x:()=>u.x()}}},RM={kernelName:qa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>V(e,le(Yo(n,s),"float32")),b:()=>V(e,le(hS(n,s),"float32"))}}};function DM(e,t,n,s,r,a,i){let o=_(e,"dy","maxPool3dGrad"),u=_(t,"input","maxPool3dGrad"),l=_(n,"output","maxPool3dGrad"),c=o,p=u,d=l,h=!1;u.rank===4&&(h=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=U(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=U(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),O(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),O(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),O(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),hn("maxPool3dGrad",a,i);let f={dy:c,input:p,output:d},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=M.runKernel(Tg,f,m);return h?U(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var FM=L({maxPool3dGrad_:DM}),OM={kernelName:ip,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>FM(e,s,r,a,i,o,u)}}};function PM(e,t,n,s,r,a,i){let o=_(e,"dy","maxPoolGrad"),u=_(t,"input","maxPoolGrad"),l=_(n,"output","maxPoolGrad");O(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),O(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),O(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),hn("maxPoolGrad",a,i);let c={dy:o,input:u,output:l},p={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return M.runKernel(Ng,c,p)}var zM=L({maxPoolGrad_:PM}),MM={kernelName:ja,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>zM(e,s,r,a,i,o)}}},LM={kernelName:Ka,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=ts(r,s.shape),o=gS(s.shape,a)[1],u=dt(o);return{x:()=>{let c=s.shape.slice();a.forEach(h=>{c[h]=1});let p=U(e,c);return xe(V(p,Mn(s.shape,"float32")),u)}}}},BM={kernelName:Xa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,i]=t,o=ts(r,a.shape),u=uI(e,i,a,o);return{x:()=>u.x()}}},VM={kernelName:Ya,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>V(e,le(Qo(n,s),"float32")),b:()=>V(e,le(Un(n,s),"float32"))}}},WM={kernelName:Qa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(i=>i[0]);return{x:()=>qe(e,a,s.shape)}}},UM={kernelName:kl,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=_t(n.shape,r);return o.length>0?U(ve(e,o),n.shape):e},b:()=>{let o=V(e,kt(xp(xe(n,s)))),u=_t(s.shape,r);return u.length>0?U(ve(o,u),s.shape):o}}}},GM={kernelName:Za,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=V(e,le(s,"float32")),u=_t(n.shape,r);return u.length>0?U(ve(o,u),n.shape):o},b:()=>{let o=V(e,le(n,"float32")),u=_t(s.shape,r);return u.length>0?U(ve(o,u),s.shape):o}}}},HM={kernelName:To,gradFunc:e=>({x:()=>kt(e)})},qM={kernelName:Ro,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>$t(n.shape,"float32")}}},jM={kernelName:Eo,gradFunc:e=>({x:()=>je(e)})},KM={kernelName:Do,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return Fs(e,s).map(a=>()=>a)}},Dx={kernelName:Ja,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(i=>i[0]);return{x:()=>qe(e,a,s.shape)}}},XM={kernelName:ei,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,i=s,o=it(a.shape,i.shape);return{a:()=>{let c=le(i,"float32"),p=V(e,V(c,ha(a,ge(c,we(1))))),d=_t(a.shape,o);return d.length>0&&(p=ve(p,d)),U(p,a.shape)},b:()=>{let c=Un(a,0),p=vn(c,Qn(a),je(a)),d=V(e,V(r,p)),h=_t(i.shape,o);return h.length>0&&(d=ve(d,h)),U(d,i.shape)}}}},YM={kernelName:ti,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=Un(n,0);return{x:()=>vn(r,e,V(e,s)),alpha:()=>{let a=vn(r,je(e),V(e,n)),i=_t(s.shape,e.shape);return i.length>0&&(a=ve(a,i)),U(a,s.shape)}}}};function QM(e,t,n){let s=e.shape.slice();s[n]=1;let r=U(t,s),a=ym(e,n,!0,!1),i=ym(e,n,!0,!0),o=V(a,i);return V(r,o)}function ZM(e,t,n){let s=e.shape.length,r=s-n.length,a=C.getAxesPermutation(n,s),i=e;a!=null&&(i=Ge(e,a));let o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce((d,h)=>d*h,1);o.push(l);let c=i.reshape(o),p=QM(c,t,r);if(p=p.reshape(i.shape),a!=null){let d=C.getUndoAxesPermutation(a);p=Ge(p,d)}return p}var JM={kernelName:ni,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=[];return r==null?a=s.shape.map((i,o)=>o):typeof r=="number"?a=[r]:a=r,{x:()=>ZM(s,e,a)}}},eL={kernelName:Oa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=xe(e,le(s,"float32")),u=_t(n.shape,r);return u.length>0?U(ve(o,u),n.shape):o},b:()=>{let o=V(e,le(n,"float32")),u=_t(s.shape,r);u.length>0&&(o=U(ve(o,u),s.shape));let l=ct(s);return kt(xe(o,le(l,"float32")))}}}},tL={kernelName:Cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,kt(ct(n)))}}},nL={kernelName:ai,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=V(Qo(n,6),Sp(n));return{x:()=>V(e,le(s,"float32"))}}},sL={kernelName:si,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,le(Sp(n),"float32"))}}},rL={kernelName:Fo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,n.shape)}}},aL={kernelName:ri,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>M.runKernel(Eg,r,n)}}},iL={kernelName:Nl,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>M.runKernel(Ag,r,n)}}},oL={kernelName:Oo,gradFunc:(e,t,n)=>{let{dims:s}=n,r=ts(s,e.shape);return{x:()=>Jn(e,r)}}},uL={kernelName:Po,gradFunc:e=>({x:()=>je(e)})},lL={kernelName:ii,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>kt(xe(e,V(ha(n,1.5),2)))}}},cL={kernelName:Mo,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>le(je(n),"float32"),t:()=>V(e,le(n,e.dtype)),e:()=>V(e,le(rb(n),e.dtype))}}},dL={kernelName:Tl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Un(n,we(0)),r=we(HS),a=we(qS),i=V(e,a),o=V(V(e,r),Yn(le(n,"float32")));return vn(s,i,o)}}}},pL={kernelName:ui,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(n,ge(we(1),n)))}}},hL={kernelName:$l,gradFunc:e=>({x:()=>je(e)})},fL={kernelName:oi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(Zg(le(n,"float32")),e)}}},mL={kernelName:Bo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(cS(le(n,"float32")),e)}}},gL={kernelName:Lo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,i=s.shape,[o,u]=Kk(s,r,a),l=[];for(let c=0;c<e.rank;c++)l.push([o[c],i[c]-o[c]-u[c]]);return{x:()=>yi(e,l)}}},bL={kernelName:di,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,i=V(e,s);return{logits:()=>ge(i,V(ve(i,[r],a),s))}}},yL={kernelName:_l,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,Hs(n))}}},Fx={kernelName:Vo,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>Yg(e,s,r)}}},Ox={kernelName:Wo,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>Ft(e,s)}}},vL={kernelName:li,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,V(dn(le(n,"float32")),2))}}},xL={kernelName:El,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(le(n,"float32"),2))}}},wL={kernelName:pi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=we(2);return{a:()=>V(e,V(r,ge(n,s))),b:()=>V(e,V(r,ge(s,n)))}}},kL={kernelName:gi,gradFunc:e=>({x:()=>je(e)})},SL={kernelName:hi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=e,u=_t(n.shape,r);return u.length>0&&(o=ve(o,u)),U(o,n.shape)},b:()=>{let o=e,u=_t(s.shape,r);return u.length>0&&(o=ve(o,u)),U(kt(o),s.shape)}}}},IL={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;ts(a,s.shape).forEach(l=>{r[l]=1});let o=U(e,r),u=V(o,Mn(s.shape,"float32"));return{x:()=>u}}},CL={kernelName:Go,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ct(Zg(n)))}}},NL={kernelName:fi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(ge(we(1),ct(n)),e)}}},TL={kernelName:Cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let i=je(s);if(s.rank===1)for(let o=0;o<r[0];++o)i=ie(i,qe(e,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)i=ie(i,qe(e,[o*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)for(let l=0;l<r[2];++l)i=ie(i,qe(e,[o*s.shape[0],u*s.shape[1],l*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)for(let l=0;l<r[2];++l)for(let c=0;c<r[3];++c)i=ie(i,qe(e,[o*s.shape[0],u*s.shape[1],l*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}},$L={kernelName:mi,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=sb(r);return{x:()=>Ge(e,a)}}},_L={kernelName:jo,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>es(e,r)}}},AL={kernelName:hp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>EL(e,n)}}};function EL(e,t){let n=$r(t,je(t)),s=Yu(e,n),r=Yo(t,we(0,"int32")),a=s.rank-r.rank;for(let o=0;o<a;++o)r=Pn(r,o+1);r=Ds(r,Mn(s.shape,"bool"));let i=je(s);return vn(r,s,i)}var RL={kernelName:Ko,gradFunc:e=>({x:()=>je(e)})},DL=[oI,Az,Ez,Rz,Dz,Fz,Oz,Pz,zz,Mz,Lz,Bz,Uz,qz,jz,Kz,Xz,Yz,Qz,Zz,Jz,eM,nM,tM,aM,iM,oM,uM,lM,cM,eL,dM,pM,hM,fM,mM,bM,gM,yM,vM,xM,wM,kM,SM,IM,CM,NM,TM,$M,EM,Rx,Rx,RM,OM,MM,LM,BM,VM,WM,UM,GM,HM,qM,jM,KM,Dx,Dx,XM,YM,JM,tL,nL,sL,rL,aL,iL,oL,uL,lL,cL,dL,pL,hL,fL,mL,gL,bL,yL,Fx,Fx,Ox,Ox,vL,wL,xL,kL,SL,IL,CL,NL,TL,$L,_L,AL,RL];for(let e of DL)W$(e);var FL={};Ae(FL,{maxNorm:()=>OL,minMaxNorm:()=>ML,nonNeg:()=>zL,unitNorm:()=>PL});function zb(e,t){return q(()=>dn(ve(V(e,e),t,!0)))}var Gl=class extends re.Serializable{getConfig(){return{}}},Mb=class extends Gl{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return q(()=>{let t=zb(e,this.axis),n=Vn(t,0,this.maxValue);return V(e,xe(n,ie(Rt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Mb.className="MaxNorm";re.registerClass(Mb);var Lb=class extends Gl{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return q(()=>xe(e,ie(Rt(),zb(e,this.axis))))}getConfig(){return{axis:this.axis}}};Lb.className="UnitNorm";re.registerClass(Lb);var Bb=class extends Gl{apply(e){return Xs(e)}};Bb.className="NonNeg";re.registerClass(Bb);var Vb=class extends Gl{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return q(()=>{let t=zb(e,this.axis),n=ie(V(this.rate,Vn(t,this.minValue,this.maxValue)),V(1-this.rate,t));return V(e,xe(n,ie(Rt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Vb.className="MinMaxNorm";re.registerClass(Vb);var Px={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ot(e){return Nb(e)}function zx(e,t={}){return Bl(e,re.SerializationMap.getMap().classNameMap,t,"constraint")}function Pt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Px?Px[e]:e,config:{}};return zx(n)}else return e instanceof Gl?e:zx(e)}function OL(e){return new Mb(e)}function PL(e){return new Lb(e)}function zL(){return new Bb}function ML(e){return new Vb(e)}var LL={};Ae(LL,{constant:()=>WL,glorotNormal:()=>XL,glorotUniform:()=>KL,heNormal:()=>YL,heUniform:()=>QL,identity:()=>qL,leCunNormal:()=>ZL,leCunUniform:()=>JL,ones:()=>VL,orthogonal:()=>eB,randomNormal:()=>GL,randomUniform:()=>UL,truncatedNormal:()=>HL,varianceScaling:()=>jL,zeros:()=>BL});function BL(){return new _b}function VL(){return new Rp}function WL(e){return new Ab(e)}function UL(e){return new Eb(e)}function GL(e){return new Rb(e)}function HL(e){return new Db(e)}function qL(e){return new Fb(e)}function jL(e){return new xn(e)}function KL(e){return new Dp(e)}function XL(e){return new Fp(e)}function YL(e){return new Op(e)}function QL(e){return new Pp(e)}function ZL(e){return new zp(e)}function JL(e){return new Mp(e)}function eB(e){return new Ob(e)}var tB={};Ae(tB,{Layer:()=>He,RNN:()=>Ar,RNNCell:()=>jl,activation:()=>NV,add:()=>OV,alphaDropout:()=>yW,average:()=>PV,averagePooling1d:()=>Yy,averagePooling2d:()=>Qy,averagePooling3d:()=>Zy,avgPool1d:()=>HV,avgPool2d:()=>jV,avgPool3d:()=>XV,avgPooling1d:()=>qV,avgPooling2d:()=>KV,avgPooling3d:()=>YV,batchNormalization:()=>WV,bidirectional:()=>cW,concatenate:()=>zV,conv1d:()=>bV,conv2d:()=>yV,conv2dTranspose:()=>vV,conv3d:()=>xV,conv3dTranspose:()=>wV,convLstm2d:()=>iW,convLstm2dCell:()=>oW,cropping2D:()=>SV,dense:()=>TV,depthwiseConv2d:()=>CV,dot:()=>VV,dropout:()=>$V,elu:()=>dV,embedding:()=>FV,flatten:()=>AV,gaussianDropout:()=>bW,gaussianNoise:()=>gW,globalAveragePooling1d:()=>QV,globalAveragePooling2d:()=>ZV,globalMaxPool1d:()=>pW,globalMaxPool2d:()=>hW,globalMaxPooling1d:()=>e0,globalMaxPooling2d:()=>t0,gru:()=>eW,gruCell:()=>tW,input:()=>QB,inputLayer:()=>cV,layerNormalization:()=>UV,leakyReLU:()=>hV,lstm:()=>nW,lstmCell:()=>sW,masking:()=>vW,maxPool1d:()=>fW,maxPool2d:()=>mW,maxPooling1d:()=>n0,maxPooling2d:()=>s0,maxPooling3d:()=>JV,maximum:()=>MV,minimum:()=>LV,multiply:()=>BV,permute:()=>DV,prelu:()=>fV,reLU:()=>pV,repeatVector:()=>EV,reshape:()=>RV,rnn:()=>uW,separableConv2d:()=>kV,simpleRNN:()=>rW,simpleRNNCell:()=>aW,softmax:()=>mV,spatialDropout1d:()=>_V,stackedRNNCells:()=>lW,thresholdedReLU:()=>gV,timeDistributed:()=>dW,upSampling2d:()=>IV,zeroPadding2d:()=>GV});async function sr(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let i=a;t.push(i.data()),n.push(r),s.push(i)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];Re(s)}}function lI(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var nB=125,so=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},sB=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},rB=class extends so{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let i=q(()=>ie(this.totals[s],V(r,n)));this.totals[s]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:q(()=>{let s=V(xe(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),qt(t[n])}))}},aB=class extends so{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let o=a[i];e.push(o.data()),t.push(r),n.push(i)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},iB=class extends so{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||GS,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=nB),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=YP(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await sr(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await sr(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await sr(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await sr(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await sr(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await sr(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await sr(e),await this.trainEnd(e))}};function cI(e,t){return e==null&&(e={}),e instanceof so?[e]:Array.isArray(e)&&e[0]instanceof so?e:pt(e).map(s=>new iB(s,t))}var Ss=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Ss.checkForDuplicate(t),Ss.constructors[e]==null&&(Ss.constructors[e]=[]),Ss.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Ss.constructors)Ss.constructors[+t].forEach(s=>{if(s===e)throw new G("Duplicate callback constructor.")})}static clear(){Ss.constructors={}}static createCallbacks(e){let t=[];for(let n in Ss.constructors){let s=+n;e>=s&&t.push(...Ss.constructors[s])}return t.map(n=>new n)}},Wb=Ss;Wb.constructors={};function dI(e,t,n,s,r,a,i,o,u){let l=new aB,c=[new rB,...Wb.createCallbacks(t)];e!=null&&c.push(...e),c.push(l);let p=new sB(c);return p.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:p,history:l}}function gs(e,t={},n=!1){return Bl(e,re.SerializationMap.getMap().classNameMap,t,"layer",n)}function Ed(e,t){return q(()=>{e.dtype!=="float32"&&(e=le(e,"float32"));let n=ve(Wl(e),t,!0),s=zl(n.shape,Rt()),r=dn($r(n,s));return xe(e,r)})}function xi(e,t){return q(()=>It(Wl(ge(t,e)),-1))}function Bp(e,t){return q(()=>It(Lt(ge(t,e)),-1))}function eu(e,t){return q(()=>{let n=ge(e,t),s=Vn(Lt(e),Rt(),Number.MAX_VALUE),r=Lt(xe(n,s));return V(100,It(r,-1))})}function oB(e,t){return q(()=>{let n=Vn(t,Rt(),Number.MAX_VALUE),s=Qn(ie(1,n)),r=Vn(e,Rt(),Number.MAX_VALUE),a=Qn(ie(1,r));return It(Wl(ge(s,a)),-1)})}function uB(e,t){return q(()=>{let n=$r(0,ge(1,V(e,t)));return It(Wl(n),-1)})}function lB(e,t){return q(()=>{let n=$r(0,ge(1,V(e,t)));return It(n,-1)})}function cB(e,t){return q(()=>{let n=ve(V(e,t),-1),s=As(V(ge(1,e),t),-1);return $r(0,ie(1,ge(s,n)))})}function dB(e,t){return q(()=>{let n=Math.log(2),s=ge(t,e),r=ge(ie(s,Ml(V(-2,s))),n);return It(r,-1)})}function Ju(e,t,n=!1){return q(()=>{if(n)t=hb(t);else{let s=ve(t,t.shape.length-1,!0);t=xe(t,s)}return t=Vn(t,Rt(),1-Rt()),kt(ve(V(le(e,"float32"),Qn(t)),t.shape.length-1))})}function Rd(e,t,n=!1){return q(()=>{let s=le(xp(uz(e)),"int32");t=Vn(t,Rt(),1-Rt());let r=t.shape,a=U(kd(s,r[r.length-1]),r);return Ju(a,t,n)})}function pB(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new G(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return q(()=>{let n=Xs(t),s=kt(Lt(t));return ie(ge(n,V(t,e)),tb(Yn(s)))})}function Vp(e,t){return q(()=>{let n;return n=Vn(t,Rt(),1-Rt()),n=Qn(xe(n,ge(1,n))),It(pB(e,n),-1)})}function hB(e,t){return q(()=>{let n=Vn(e,Rt(),1),s=Vn(t,Rt(),1);return ve(V(e,Qn(xe(n,s))),-1)})}function fB(e,t){return q(()=>{let n=Qn(ie(Rt(),t));return It(ge(t,V(e,n)),-1)})}function Ub(e,t){return q(()=>{let n=Ed(e,-1),s=Ed(t,-1),r=V(n,s);return kt(ve(r,-1))})}var Dd={meanSquaredError:xi,meanAbsoluteError:Bp,meanAbsolutePercentageError:eu,meanSquaredLogarithmicError:oB,squaredHinge:uB,hinge:lB,categoricalHinge:cB,logcosh:dB,categoricalCrossentropy:Ju,sparseCategoricalCrossentropy:Rd,binaryCrossentropy:Vp,kullbackLeiblerDivergence:hB,poisson:fB,cosineProximity:Ub};function jf(e){if(typeof e=="string"){if(e in Dd)return Dd[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new G(t)}else return e}function Gb(e,t){return q(()=>{let n=V(.5,Zn(t)),s=Ap(Un(t,n),e.dtype);return It(Xn(e,s),-1)})}function Hb(e,t){return q(()=>Ap(Xn(ju(e,-1),ju(t,-1)),"float32"))}function pI(e,t){return q(()=>le(ve(Ds(Xn(e,1),Xn(t,1))),"float32"))}function mB(e,t){return q(()=>le(ve(Ds(Xn(e,1),Xn(t,0))),"float32"))}function gB(e,t){return q(()=>le(ve(Ds(Xn(e,0),Xn(t,1))),"float32"))}function hI(e,t){return q(()=>{let n=pI(e,t),s=gB(e,t),r=ie(n,s);return le(vn(Un(r,0),xe(n,r),0),"float32")})}function bB(e,t){return q(()=>{let n=pI(e,t),s=mB(e,t),r=ie(n,s);return le(vn(Un(r,0),xe(n,r),0),"float32")})}function fI(e,t){return Vp(e,t)}function mI(e,t){return e.rank===t.rank&&(e=mr(e,[e.rank-1])),t=ju(t,-1),t.dtype!==e.dtype&&(t=le(t,e.dtype)),le(Xn(e,t),"float32")}var yB=xi,vB=xi,xB=Bp,wB=Bp,kB=eu,SB=eu,qb=Ju,IB=Ub,gI=Rd,Fd={binaryAccuracy:Gb,categoricalAccuracy:Hb,precision:hI,categoricalCrossentropy:qb,sparseCategoricalCrossentropy:gI,mse:yB,MSE:vB,mae:xB,MAE:wB,mape:kB,MAPE:SB,cosine:IB};function CB(e){if(typeof e=="string"&&e in Fd)return Fd[e];if(typeof e!="string"&&e!=null)return e;throw new G(`Unknown metric ${e}`)}function Kc(e){if(Cs(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(Dd))if(Dd[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Fd))if(Fd[n]===e){t=n;break}return t!==void 0?t:e.name}}function NB(e){let t={Adagrad:()=>Bi.adagrad(.01),Adadelta:()=>Bi.adadelta(1,.95,Rt()),Adam:()=>Bi.adam(.001,.9,.999,Rt()),Adamax:()=>Bi.adamax(.002,.9,.999,Rt(),0),RMSProp:()=>Bi.rmsprop(.001,.9,0,Rt()),SGD:()=>Bi.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new G(`Unknown Optimizer ${e}`)}var Mx=1*1024*1024;function Lx(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!Cm(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>Mx&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Mx}.`)}}function Cm(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!Cm(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!Cm(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function TB(e,t,n,s=console.log){let r=_B(e),a=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(t*c)));let i;if(!r){a.push("Receives inputs"),i=[];for(let c in e.nodesByDepth)i.push(...e.nodesByDepth[c])}s("_".repeat(t)),Od(a,n,s),s("=".repeat(t));let o=e.layers;for(let c=0;c<o.length;++c)r?AB(o[c],n,s):EB(o[c],n,i,s),s((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let u=$B(e),l=$d(e.nonTrainableWeights);s(`Total params: ${u+l}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${l}`),s("_".repeat(t))}function $B(e){let t;return e.collectedTrainableWeights!=null?t=$d(e.collectedTrainableWeights):t=$d(e.trainableWeights),t}function _B(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let i of r.inboundNodes)if(s.indexOf(i)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Od(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function AB(e,t,n){let s,r;try{r=e.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch(u){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(u){s="multiple"}let a=e.name,i=e.getClassName(),o=[`${a} (${i})`,r,s,e.countParams().toString()];Od(o,t,n)}function EB(e,t,n,s){let r,a;try{a=e.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch(p){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(p){r="multiple"}let i=[];for(let p of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(p)===-1))for(let d=0;d<p.inboundLayers.length;++d){let h=p.inboundLayers[d].name,f=p.nodeIndices[d],m=p.tensorIndices[d];i.push(`${h}[${f}][${m}]`)}let o=e.name,u=e.getClassName(),l=i.length===0?"":i[0],c=[`${o} (${u})`,a,r,e.countParams().toString(),l];Od(c,t,s);for(let p=1;p<i.length;++p)Od(["","","","",i[p]],t,s)}function bI(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function el(e,t){if(e===null)return null;if(typeof e=="string")return Xr(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];bI(t,r,a)?n.push(a):n.push(el(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=Xr(s);n[a]=el(r,a)}}return n}}function Nm(e,t){if(e==null)return null;if(typeof e=="string")return Vs(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];bI(t,r,a)?n.push(a):n.push(Nm(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=Vs(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=Nm(r,s)}return n}}var yI="0.0.0",Is=class extends He{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=_p(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],lr(this.inputs).length!==this.inputs.length)throw new G(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);lr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(x)}for(let b of this.inputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;Cs(v===0,"input layer has >1 nodes"),Cs(x===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(x)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let y=this.inputLayers[b];if(!(y instanceof Jo))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},n={},s={},r={},a={},i=[],o=(b,y,v,x,k,I)=>{(x==null||k==null||I==null)&&(x=b.sourceLayer,k=b.nodeIndex,I=b.tensorIndex);let $=x.inboundNodes[k];if(v.indexOf($)!==-1)throw new fs(`The tensor ${b.name} at layer "${x.name}" is part of a cycle.`);if(y.indexOf($)!==-1)return;this.containerNodes.add(Is.nodeKey(x,k)),x.id in a||(a[x.id]=Object.keys(a).length),v.indexOf($)===-1&&v.push($);let E=$.inboundLayers.length;for(let A=0;A<E;A++){let P=$.inputTensors[A],R=$.inboundLayers[A],F=$.nodeIndices[A],T=$.tensorIndices[A];o(P,y,v,R,F,T)}for(y.push($);v.indexOf($)>=0;)v.splice(v.indexOf($),1);i.push($)},u=[],l=[];for(let b of this.outputs)o(b,u,l);let c=i.slice().reverse();for(let b of c){n[b.id]=b,b.id in t||(t[b.id]=0);let y=t[b.id],v=s[b.outboundLayer.id]==null?0:s[b.outboundLayer.id];y=Math.max(y,v),s[b.outboundLayer.id]=y,r[b.outboundLayer.id]=b.outboundLayer,t[b.id]=y;for(let x=0;x<b.inboundLayers.length;x++){let k=b.inboundLayers[x],I=b.nodeIndices[x],$=k.inboundNodes[I],E=t[$.id]==null?0:t[$.id];t[$.id]=Math.max(y+1,E),n[$.id]=$}}let p={};for(let b in t){let y=t[b];y in p||(p[y]=[]),p[y].push(n[b])}let d={};for(let b in s){let y=s[b];y in d||(d[y]=[]),d[y].push(r[b])}let h=Object.keys(d).map(b=>parseInt(b,10)).sort(Hc);this.layers=[];for(let b of h){let y=d[b];y.sort((v,x)=>{let k=a[v.id],I=a[x.id];return k<I?-1:k>I?1:0});for(let v of y)v instanceof Is&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=d,h=Object.keys(p).map(b=>parseInt(b,10)).sort(Hc);let f=this.inputs.slice(),m=[];for(let b of h)for(let y of p[b]){let v=y.outboundLayer;if(v!=null){for(let x of y.inputTensors)if(f.indexOf(x)===-1)throw new fs(`Graph disconnected: cannot obtain value for tensor ${x} at layer "${v.name}". The following previous layers were accessed without issue: ${m}`);for(let x of y.outputTensors)f.push(x);m.push(v.name)}}this.nodesByDepth=p;let g=this.layers.map(b=>b.name);for(let b of g){let y=g.filter(v=>v===b).length;if(y!==1)throw new fs(`The name "${b}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Lp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new G("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new G(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,s++}let r=[];for(let a in e){let i=a;if(n[a]==null){let o=a.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(n[i]!=null)r.push([n[i],e[a]]);else if(t)throw new G(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new G(`${a.length} of ${s} weights are not set: ${a}`)}Pb(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${yI}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Nm(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return q(()=>{e=pt(e);let n=new Zr;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return Ru(this.outputs,n,t)})}computeMask(e,t){return q(()=>{e=pt(e);let n;return t==null?n=ma(null,e.length):n=pt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Td(e);if(t.length!==this.inputLayers.length)throw new G(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],u=t[i],l=o.name+"_0_0";n[l]=u}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Hc);if(s.length>1)for(let i of s){let o=this.nodesByDepth[i];for(let u of o){let l=u.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(l.id)!==-1)continue;let c=[];for(let f=0;f<u.inboundLayers.length;f++){let m=u.inboundLayers[f],g=u.nodeIndices[f],b=u.tensorIndices[f],y=`${m.name}_${g}_${b}`,v=n[y];c.push(v)}let p=l.computeOutputShape(bn(c)),d=Td(p),h=l.inboundNodes.indexOf(u);for(let f=0;f<d.length;f++){let m=`${l.name}_${h}_${f}`;n[m]=d[f]}}}let r=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],c=`${o.name}_${u}_${l}`;a.push(c)}for(let i=0;i<a.length;i++){let o=a[i];Cs(o in n),r.push(n[o])}return bn(r)}runInternalGraph(e,t){t==null&&(t=ma(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let u=this.inputs[o],l=e[o],c=t[o];n[u.id]=[l,c]}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Hc);for(let o of s){let u=this.nodesByDepth[o];for(let l of u){let c=l.outboundLayer,p=l.inputTensors,d=l.outputTensors,h=new Array;for(let f of p)f.id in n&&h.push(n[f.id]);if(h.length===p.length){let f={},m,g,b,y;if(l.callArgs!=null&&(f=l.callArgs),h.length===1){let[v,x]=h[0];f.mask==null&&(f.mask=x),b=pt(c.call(v,f)),y=pt(c.computeMask(v,x)),m=[v],g=[x]}else m=h.map(v=>v[0]),g=h.map(v=>v[1]),f.mask==null&&(f.mask=g),b=pt(c.call(m,f)),y=pt(c.computeMask(m,g));if(c.activityRegularizer)throw new Fe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<d.length;++v){let x=d[v],k=b[v],I=y[v];n[x.id]=[k,I]}}}}let r=[],a=[],i=[];for(let o of this.outputs){Cs(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[u,l]=n[o.id];i.push(u.shape),r.push(u),a.push(l)}return[r,a,i]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof Is?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=Is.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new G(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new G("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new G(`No such layer: ${e}`)}calculateLosses(){return q(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=Is.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),o=a.getConfig(),u=[];for(let c=0;c<a.inboundNodes.length;c++){let p=a.inboundNodes[c],d=Is.nodeKey(a,c),h={};if(this.containerNodes.has(d)){if(p.callArgs)try{JSON.stringify(p.callArgs),h=p.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(p.inboundLayers.length>0){let f=[];for(let m=0;m<p.inboundLayers.length;m++){let g=p.inboundLayers[m],b=p.nodeIndices[m],y=p.tensorIndices[m],v=Is.nodeKey(g,b),x=t[v];x==null&&(x=0),f.push([g.name,x,y,h])}u.push(f)}}}let l={};l.name=a.name,l.className=i,l.config=o,l.inboundNodes=u,n.push(l)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],o=this.inputLayersNodeIndices[a],u=Is.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let c=this.inputLayersTensorIndices[a];s.push([i.name,l,c])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],o=this.outputLayersNodeIndices[a],u=Is.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let c=this.outputLayersTensorIndices[a];r.push([i.name,l,c])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function i(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function o(m,g){let b=[],y;for(let v of g){let x=v[0],k=v[1],I=v[2];if(y=v[3]==null?{}:v[3],!(x in r)){i(m,g);return}let $=r[x];if($.inboundNodes.length<=k){i(m,g);return}let E=$.inboundNodes[k];b.push(E.outputTensors[I])}b.length>0&&m.apply(bn(b),y)}function u(m){let g=m.name,b=gs(m,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(s),r[g]=b,m.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new G(`Corrupted configuration, expected array for nodeData: ${v}`);i(b,v)})}let l=t.name,c=t.layers;for(let m of c)u(m);for(;!XP(a);)for(let m of c){let g=r[m.name];if(g.name in a){let b=a[g.name];delete a[g.name];for(let y of b)o(g,y)}}let p=[],d=[],h=t.inputLayers;for(let m of h){let g=m[0],b=m[1],y=m[2];Cs(g in r);let x=r[g].inboundNodes[b].outputTensors;p.push(x[y])}let f=t.outputLayers;for(let m of f){let g=m[0],b=m[1],y=m[2];Cs(g in r);let x=r[g].inboundNodes[b].outputTensors;d.push(x[y])}return new e({inputs:p,outputs:d,name:l})}get stateful(){if(this._stateful)throw new G("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){q(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function RB(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function vI(e,t){return RB(e,t,"classWeight")}async function xI(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=q(()=>{if(e.shape.length===1)return ur(e);if(e.shape.length===2){if(e.shape[1]>1)return ju(e,1);if(e.shape[1]===1)return U(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());Re(r);let i=[];return a.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),Zt(i,"float32")}else return null}function DB(e,t){return V(e,t)}var FB=32;function wI(e,t){let n,s,r=t;n=r.xs,s=r.ys,w.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=Bx("input",e.inputNames,n),i=Bx("output",e.outputNames,s),o=a[0].shape[0];w.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let u=0;u<a.length;u++)w.assert(a[u].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${a[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let u=0;u<i.length;u++)w.assert(i[u].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:a,ys:i}}function Bx(e,t,n){if(n instanceof et)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new G(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function OB(e){if(e.length===3)throw new Fe("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function PB(e,t,n){let s=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,i;if(r)if(Vx(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=OB(n.validationData);a=g.xs,i=g.ys}let o=e.makeTrainFunction(),u=e.getDedupedMetricsNames(),l;r?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let c=cI(n.callbacks,n.yieldEvery),p=n.verbose==null?1:n.verbose,{callbackList:d,history:h}=dI(c,p,n.epochs,null,null,zB(t,n),null,r,l);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await d.onEpochBegin(f);let b=0,y=0;for(s||(m=await t.iterator());!s||b<n.batchesPerEpoch;){let v=await m.next();if(s&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){let{xs:x,ys:k}=wI(e,v.value),I={};I.batch=y,I.size=x[0].shape[0],await d.onBatchBegin(y,I);let $=[];if(n.classWeight!=null){let P=vI(n.classWeight,e.outputNames);for(let R=0;R<P.length;++R)$.push(await xI(k[R],null,P[R]))}let E=x.concat(k).concat($),A=o(E);Re(E);for(let P=0;P<u.length;++P){let R=u[P],F=A[P];I[R]=F,qt(F)}await d.onBatchEnd(y,I),lI(I),y++,b++}if(s?b>=n.batchesPerEpoch:v.done){if(r){let x;Vx(n.validationData)?x=pt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):x=pt(e.evaluate(a,i,{batchSize:n.validationBatchSize==null?FB:n.validationBatchSize,verbose:0}));for(let k=0;k<e.metricsNames.length;++k)g[`val_${e.metricsNames[k]}`]=x[k]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function zB(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Vx(e){return typeof e.iterator=="function"}function MB(e){return typeof e.next=="function"}async function LB(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Fe("Verbose mode is not implemented yet.");w.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=MB(t)?t:await t.iterator(),o=0,u=0;for(;!s||u<n.batches;){let l=await i.next();if(a=q(()=>{if(l.value){let{xs:c,ys:p}=wI(e,l.value),d=c.concat(p),h=q(()=>r(d));if(Re(d),u===0)for(let m=0;m<h.length;++m)a.push(we(0));let f=d[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],b=a[m];a[m]=q(()=>ie(a[m],V(f,g))),u>0&&Re(b)}Re(h),o+=f,++u}return a}),l.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<a.length;++l){let c=a[l];a[l]=xe(a[l],o),Re(c)}return bn(a)}function Tm(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Du(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>na(s,t,n-t)):na(e,t,n-t)}function jb(e,t){return q(()=>e==null?null:Array.isArray(e)?e.map(n=>jb(n,t)):sI(e,t.dtype==="int32"?t:le(t,"int32")))}function $m(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function BB(e,t,n,s,r,a,i,o,u,l,c,p,d,h,f){r==null&&(r=32),a==null&&(a=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(u!=null&&l!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new G("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),b;g!=null&&(b=ys(0,g)),i==null&&(i=1);let{callbackList:y,history:v}=dI(o,i,a,d,g,h,r,m,p);y.setModel(e),e.history=v,await y.onTrainBegin(),e.stopTraining_=!1;for(let x=d;x<a;++x){await y.onEpochBegin(x);let k={};if(h!=null)throw new Fe("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Fe("batch shuffling is not implemneted yet");c&&w.shuffle(b);let I=Zt(b),$=$m(g,r);for(let E=0;E<$.length;++E){let A={};if(await y.onBatchBegin(E,A),q(()=>{let P=$[E][0],R=$[E][1],F=na(I,P,R-P);A.batch=E,A.size=R-P;let T=jb(n,F),z=t(T);for(let W=0;W<s.length;++W){let j=s[W],X=z[W];A[j]=X,qt(X)}if(E===$.length-1&&m){let W=e.testLoop(u,l,r);for(let j=0;j<s.length;++j){let X=s[j],Y=W[j];qt(Y),k["val_"+X]=Y}}}),await y.onBatchEnd(E,A),lI(A),e.stopTraining_)break}I.dispose()}if(await y.onEpochEnd(x,k),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}async function VB(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,i,o,u,l,c,p,d;try{let h=s.batchSize==null?32:s.batchSize;Tm(h);let f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,h);r=m[0],a=m[1],d=m[2];let g=!1,b;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)u=s.validationData[0],l=s.validationData[1];else throw s.validationData.length===3?new Fe("validationData including sample weights is not supported yet."):new G(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let A=!0,P=await e.standardizeUserData(u,l,null,null,A,h);c=P[0],p=P[1],b=c.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;let A=Math.floor(r[0].shape[0]*(1-s.validationSplit)),P=r[0].shape[0];c=Du(r,A,P),i=r,r=Du(r,0,A),p=Du(a,A,P),o=a,a=Du(a,0,A),b=c.concat(p)}else s.validationSteps!=null&&(g=!0);let y=r.concat(a).concat(d);e.checkTrainableWeightsConsistency();let v=e.makeTrainFunction(),x=e.getDedupedMetricsNames(),k,I;g?(e.makeTestFunction(),k=e.testFunction,I=x.slice().concat(x.map(A=>"val_"+A))):(k=null,b=[],I=x.slice());let $=cI(s.callbacks,s.yieldEvery);return await BB(e,v,y,x,h,s.epochs,s.verbose,$,k,b,s.shuffle,I,s.initialEpoch,null,null)}finally{e.isTraining=!1,ps(r,t),ps(a,n),ps(i,t),ps(o,n),ps(c,u),ps(p,l),d!=null&&Re(d)}}function kI(e){let t=[];e instanceof et&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(Vl(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function ps(e,t){if(e==null)return;let n=[];if(t instanceof et)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof et)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function WB(e){return e instanceof et}function _m(e){return Array.isArray(e)}function Wx(e){return!WB(e)&&!_m(e)}function Ux(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(_m(e)&&e.length>0)i=!0;else if(Wx(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new G(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let a;if(Wx(e)){e=e,a=[];for(let i of t){if(e[i]==null)throw new G(`No data provided for "${i}". Need data for each key in: ${t}`);a.push(e[i])}}else if(_m(e)){if(e=e,e.length!==t.length)throw new G(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new G(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=kI(a),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=a[i];if(o.shape.length!==n[i].length)throw new G(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let u=0;u<n[i].length;++u){if(u===0&&!s)continue;let l=o.shape[u],c=n[i][u];if(c!=null&&c>=0&&l!==c)throw new G(`${r} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${r} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return a}function UB(e,t,n){let s=lr(e.map(a=>a.shape[0]));s.sort();let r=lr(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new G(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new G(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!w.arraysEqual(s,r))throw new G(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function GB(e,t,n){let s=[xi,Vp,Ju];for(let r=0;r<e.length;++r){let a=e[r],i=t[r],o=n[r];if(i!=null){if(i===Ju&&a.shape[a.shape.length-1]===1)throw new G(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){let u=a.shape.slice(1),l=o.slice(1);for(let c=0;c<u.length;++c){let p=u[c],d=l[c];if(d!=null&&p!==d)throw new G(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Gx(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new G(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new G(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=a[i];if(o.shape.length!==n[i].length)throw new G(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let u=0;u<n[i].length;++u){if(u===0&&!s)continue;let l=o.shape[u],c=n[i][u];if(c!=null&&c!==l)throw new G(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function HB(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var qB="layers-model",dr=class extends Is{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new G("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");TB(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=NB(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof _r))throw new G("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new G(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(jf(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new G(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>jf(i))}else{let a=jf(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],o=this.outputNames[a];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ta("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=HB(e.metrics,this.outputNames),r=(a,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,a])};ta("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=s[a];(u=>{let l="",c,p,d;for(let h of u){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===Vp?["accuracy","acc"].indexOf(h)!==-1?p=Gb:["crossentropy","ce"].indexOf(h)!==-1&&(p=fI):this.lossFunctions[a]===Rd?["accuracy","acc"].indexOf(h)!==-1?p=mI:["crossentropy","ce"].indexOf(h)!==-1&&(p=gI):["accuracy","acc"].indexOf(h)!==-1?p=Hb:["crossentropy","ce"].indexOf(h)!==-1&&(p=qb);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),d=p,c=l+g}else d=CB(h),c=l+Kc(h);let f;ta(c,()=>{f=d}),r(a,c,f)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;Tm(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let i=a[0].concat(a[1]);this.makeTestFunction();let o=this.testFunction,u=this.testLoop(o,i,s,n.verbose,n.steps);return bn(u)}finally{ps(a[0],e),ps(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),LB(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new G(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new G(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new G("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Zr;if(e instanceof et&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new G(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)a.add(this.inputs[o],e[o])}else for(let o of this.inputs){let u=e[o.name];if(u==null)throw new G(`No value is provided for the model's input ${o.name}`);a.add(o,u)}let i=Ru(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=ma(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(i=>i.name);for(let i=0;i<e.length;++i){let o=a.indexOf(e[i]);if(o!==-1&&(t[i]=r[o],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new G(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return q(()=>{let s=this.checkNumSamples(e);if(n)throw new Fe("Verbose predictLoop() is not implemented yet.");let r=$m(s,t),a=this.outputs.map(i=>[]);for(let i=0;i<r.length;++i)q(()=>{let u=r[i][0],l=r[i][1],c=Du(e,u,l),p=[];if(Array.isArray(c))for(let h=0;h<c.length;++h)p.push({key:this.inputs[h],value:c[h]});else p.push({key:this.inputs[0],value:c});let d=new Zr(p);return Ru(this.outputs,d)}).forEach((u,l)=>a[l].push(u));return bn(a.map(i=>Ft(i,0)))})}predict(e,t={}){let n=kI(e);Gx(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return Tm(s),this.predictLoop(n,s)}finally{ps(n,e)}}predictOnBatch(e){Gx(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new fs("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===Rd?r.push(i.slice(0,i.length-1).concat([1])):r.push(i)}if(e=Ux(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ux(t,this.feedOutputNames,r,!1,"target"),UB(e,t,null),GB(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new G(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[i,o]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(s!=null){let l=vI(s,this.outputNames);u=[];for(let c=0;c<l.length;++c)u.push(await xI(o[c],null,l[c]))}return[i,o,u]}testLoop(e,t,n,s=0,r){return q(()=>{let a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new Fe("Verbose mode is not implemented yet.");if(r!=null)throw new Fe("steps mode in testLoop() is not implemented yet");{let o=$m(a,n),u=Zt(ys(0,a));for(let l=0;l<o.length;++l){let c=o[l][0],p=o[l][1],d=na(u,c,p-c),h=jb(t,d),f=e(h);if(l===0)for(let m=0;m<f.length;++m)i.push(we(0));for(let m=0;m<f.length;++m){let g=f[m];i[m]=ie(i[m],V(p-c,g))}}for(let l=0;l<i.length;++l)i[l]=xe(i[l],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;Sx(e,s)>1&&(r+=`_${Sx(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let c=[];for(let f=0;f<this.inputs.length;++f)c.push({key:this.inputs[f],value:n[f]});let p=new Zr(c),d=Ru(this.outputs,p,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](s[f],d[f]);r[f]!=null&&(g=DB(g,r[f]));let b=It(g);t.push(b),f===0?h=g:h=ie(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],b=this.metricsTensors[f][1];m=It(g(s[b],d[b]))}qt(m),a.push(m)}return h=It(h),this.calculateLosses().forEach(f=>{h=ie(h,f)}),h},o=this.collectedTrainableWeights.map(c=>c.read()),u=!0;return[this.optimizer_.minimize(i,u,o)].concat(a)}}makeTestFunction(){this.testFunction=e=>q(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:s[u]});let i=new Zr(a),o=Ru(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let l=this.lossFunctions[u],c=It(l(r[u],o[u]));u===0?n=c:n=ie(n,c),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let l=this.metricsTensors[u][0],c=this.metricsTensors[u][1],p=It(l(r[c],o[c]));t.push(p)}return t})}async fit(e,t,n={}){return VB(this,e,t,n)}async fitDataset(e,t){return PB(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],i=this.makeTrainFunction()(s.concat(r)),o=[];for(let u of i){let l=await u.data();o.push(l[0])}return Re(i),ps(n[0],e),ps(n[1],t),bn(o)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=mm().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-mm().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Vs(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Vs(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=Vs(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Vs(Kc(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Vs(Kc(e)));{let e={};for(let t in this.metrics)e[t]=Vs(Kc(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=el(e.optimizer_config),n=gs(t),s;if(typeof e.loss=="string")s=Xr(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>Xr(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=Xr(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>Xr(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=Xr(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=An.getSaveHandlers(e);if(u.length===0)throw new G(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new G(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new G("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await An.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,i={modelTopology:this.toJSON(r,s),format:qB,generatedBy:`TensorFlow.js tfjs-layers v${yI}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:l,specs:c}=await An.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...c),n.data=An.concatenateArrayBuffers([n.data,l])}return this.userDefinedMetadata!=null&&(Lx(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){Lx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};dr.className="Model";re.registerClass(dr);var SI=class extends dr{};SI.className="Functional";re.registerClass(SI);async function jB(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=el(n),r=gs(s,t);if(e.weightsManifest!=null){let a=await An.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(o=>o.originalName)),i={};for(let o of r.weights)i[o.originalName]=a[o.originalName];r.loadWeights(i),Re(a)}return r}async function KB(e,t){if(t==null&&(t={}),typeof e=="string"){let n=An.getLoadHandlers(e,t);if(n.length===0)n.push(An.browserHTTPRequest(e,t));else if(n.length>1)throw new G(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return XB(e,void 0,t)}async function XB(e,t,n){if(n==null&&(n={}),e.load==null)throw new G("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,i=s.weightData!=null&&s.weightSpecs!=null&&a,o=gs(el(r),t,i),u=s.trainingConfig;if(u!=null&&o.loadTrainingConfig(u),s.userDefinedMetadata!=null&&o.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new G("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:c}=YB(s.weightData,s.weightSpecs);o.loadWeights(l,a),o.optimizer!=null&&c.length>0&&await o.optimizer.setWeights(c),Re(l),Re(c.map(p=>p.tensor))}return o}function YB(e,t){let n=An.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var Am=class extends dr{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:_p("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new G(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Am||e instanceof dr,n;if(t){if(n=e,n.outputs.length!==1)throw new G("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new G("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new G("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=iI({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new G(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new G("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=aI(this.outputs[0])}this.inboundNodes=[],new Lp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ma(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(nt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new dr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new fs("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new fs("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new fs("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new fs("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new G("Legacy serialization format not supported yet.");r=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof Am))throw new Fe(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of r){let l=gs(o,void 0,s);s&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new G("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new G("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},Kb=Am;Kb.className="Sequential";re.registerClass(Kb);function the(e){return new dr(e)}function nhe(e){return new Kb(e)}function she(e,t){return t==null&&(t={}),KB(e,t)}function QB(e){return iI(e)}function rhe(e,t){Wb.registerCallbackConstructor(e,t)}var kn=class extends re.Serializable{getConfig(){return{}}},II=class extends kn{apply(e,t=1){return cz(e,t)}};II.className="elu";re.registerClass(II);var CI=class extends kn{apply(e){return CS(e)}};CI.className="selu";re.registerClass(CI);var NI=class extends kn{apply(e){return Xs(e)}};NI.className="relu";re.registerClass(NI);var TI=class extends kn{apply(e){return q(()=>kp(6,Xs(e)))}};TI.className="relu6";re.registerClass(TI);var $I=class extends kn{apply(e){return e}};$I.className="linear";re.registerClass($I);var _I=class extends kn{apply(e){return Hs(e)}};_I.className="sigmoid";re.registerClass(_I);var AI=class extends kn{apply(e){return pz(e)}};AI.className="hardSigmoid";re.registerClass(AI);var EI=class extends kn{apply(e){return Ml(e)}};EI.className="softplus";re.registerClass(EI);var RI=class extends kn{apply(e){return dz(e)}};RI.className="softsign";re.registerClass(RI);var DI=class extends kn{apply(e){return Ku(e)}};DI.className="tanh";re.registerClass(DI);var Xb=class extends kn{apply(e,t=-1){return hb(e,t)}};Xb.className="softmax";re.registerClass(Xb);var FI=class extends kn{apply(e,t=-1){return fS(e,t)}};FI.className="logSoftmax";re.registerClass(FI);var OI=class extends kn{apply(e,t=1){return q(()=>V(Hs(V(e,t)),e))}};OI.className="swish";re.registerClass(OI);var PI=class extends kn{apply(e){return q(()=>V(e,Ku(Ml(e))))}};PI.className="mish";re.registerClass(PI);function br(e){return e.getClassName()}function Kf(e,t={}){return Bl(e,re.SerializationMap.getMap().classNameMap,t,"activation")}function yr(e){if(e==null){let t={};return t.className="linear",t.config={},Kf(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},Kf(t)}else return e instanceof kn?e:Kf(e)}function Yb(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var zI=class extends re.Serializable{},Hl=class extends zI{constructor(e){super(),Yb(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return q(()=>{let t=$t([1]);return this.hasL1&&(t=ie(t,ve(V(this.l1,Lt(e))))),this.hasL2&&(t=ie(t,ve(V(this.l2,Wl(e))))),U(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Hl.className="L1L2";re.registerClass(Hl);function ZB(e){return Yb(e),new Hl({l1:e!=null?e.l1:null,l2:0})}function JB(e){return Yb(e),new Hl({l2:e!=null?e.l2:null,l1:0})}var Hx={l1l2:"L1L2"};function at(e){return Nb(e)}function qx(e,t={}){return Bl(e,re.SerializationMap.getMap().classNameMap,t,"regularizer")}function ft(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Hx?Hx[e]:e,config:{}};return qx(n)}else return e instanceof zI?e:qx(e)}var Qb=class extends He{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let n=Xs(e);return this.maxValue!=null&&(n=Vn(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Qb.className="ReLU";re.registerClass(Qb);var Zb=class extends He{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return eb(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Zb.className="LeakyReLU";re.registerClass(Zb);var Jb=class extends He{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ht(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ft(e.alphaRegularizer),this.alphaConstraint=Pt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new G(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=nt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Dt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oe(e),ub(e,this.alpha.read())}getConfig(){let e={alphaInitializer:yt(this.alphaInitializer),alphaRegularizer:at(this.alphaRegularizer),alphaConstraint:Ot(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Jb.className="PReLU";re.registerClass(Jb);var ey=class extends He{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Fe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return vp(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};ey.className="ELU";re.registerClass(ey);var ty=class extends He{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Oe(e);return V(n,le(Un(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};ty.className="ThresholdedReLU";re.registerClass(ty);var ny=class extends He{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Xb().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Oe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};ny.className="Softmax";re.registerClass(ny);function Ji(e,t,n){if(typeof e=="number")return ma(e,t);if(e.length!==t)throw new G(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!iz(r))throw new G(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function bs(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),i;return n==="same"?i=e:i=e-a+1,Math.floor((i+s-1)/s)}function Ns(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+gr([n-t,0]);else if(s==="same")e=e*t;else throw new G(`Unsupport padding mode: ${s}.`);return e}function sy(e,t){return q(()=>(Ct(t),t==="channelsFirst"?Ge(e,[0,2,3,1]):e))}function MI(e,t){return q(()=>(Ct(t),t==="channelsFirst"?Ge(e,[0,2,3,4,1]):e))}function eV(e,t,n,s=1,r="valid",a,i=1){return q(()=>{if(a==null&&(a=vs()),Ct(a),e.shape.length!==3)throw new G(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new G(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new G(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=Ge(e,[0,2,1])),r==="causal")throw new Fe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=iS(e,t,s,r==="same"?"same":"valid","NWC",i);return n!=null&&(o=ks(o,n)),o})}function jx(e,t,n,s=[1,1],r="valid",a,i,o=null){return q(()=>{if(a==null&&(a=vs()),Ct(a),e.rank!==3&&e.rank!==4)throw new G(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new G(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=sy(e,a);if(r==="causal")throw new Fe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=fa.conv2d({x:u,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),a==="channelsFirst"&&(u=Ge(u,[0,3,1,2])),u})}function tV(e,t,n,s=[1,1,1],r="valid",a,i){return q(()=>{if(a==null&&(a=vs()),Ct(a),e.rank!==4&&e.rank!==5)throw new G(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new G(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=MI(e,a);if(r==="causal")throw new Fe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=uS(o,t,s,r==="same"?"same":"valid","NDHWC",i),n!=null&&(o=ks(o,n)),a==="channelsFirst"&&(o=Ge(o,[0,4,1,2,3])),o})}var ry=class extends He{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ry.verifyArgs(t),this.rank=e,Vt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Fe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ji(t.kernelSize,e,"kernelSize"),this.strides=Ji(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Gn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ct(this.dataFormat),this.activation=yr(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=ht(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Pt(t.biasConstraint),this.biasRegularizer=ft(t.biasRegularizer),this.activityRegularizer=ft(t.activityRegularizer),this.dilationRate=Ji(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new G(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new G(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new G(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Cs("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Tb(e.kernelSize,"number",1,3))throw new G(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:br(this.activation),useBias:this.useBias,biasInitializer:yt(this.biasInitializer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),biasConstraint:Ot(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},ql=class extends ry{constructor(e,t){super(e,t),this.kernel=null,ql.verifyArgs(t),this.filters=t.filters,Vt(this.filters,"filters"),this.kernelInitializer=ht(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Pt(t.kernelConstraint),this.kernelRegularizer=ft(t.kernelRegularizer)}build(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new G(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return q(()=>{e=Oe(e);let n,s=this.bias==null?null:this.bias.read(),r=QS(this.activation.getClassName());if(r!=null&&this.rank===2)n=jx(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=eV(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=jx(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=tV(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Fe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=nt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=bs(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:yt(this.kernelInitializer),kernelRegularizer:at(this.kernelRegularizer),kernelConstraint:Ot(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new G(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},LI=class extends ql{constructor(e){super(2,e),LI.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Tb(e.kernelSize,"number",1,2))throw new G(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},Wp=LI;Wp.className="Conv2D";re.registerClass(Wp);var BI=class extends ql{constructor(e){super(3,e),BI.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new G(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},Up=BI;Up.className="Conv3D";re.registerClass(Up);var ay=class extends Wp{constructor(e){if(super(e),this.inputSpec=[new Dt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new G(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=nt(e),e.length!==4)throw new G("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new G("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return q(()=>{let n=Oe(e);if(n.shape.length!==4)throw new G(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let o=s[a],u=s[i],l=this.kernelSize[0],c=this.kernelSize[1],p=this.strides[0],d=this.strides[1],h=Ns(o,p,l,this.padding),f=Ns(u,d,c,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=Ge(n,[0,2,3,1]));let g=oS(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ge(g,[0,3,1,2])),this.bias!=null&&(g=ks(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=nt(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[s]=Ns(t[s],o,a,this.padding),t[r]=Ns(t[r],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};ay.className="Conv2DTranspose";re.registerClass(ay);var iy=class extends Up{constructor(e){if(super(e),this.inputSpec=[new Dt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new G(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=nt(e),e.length!==5)throw new G("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new G("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return q(()=>{let n=Oe(e);if(n.shape.length!==5)throw new G(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,i,o;this.dataFormat==="channelsFirst"?(o=2,a=3,i=4):(o=1,a=2,i=3);let u=s[o],l=s[a],c=s[i],p=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],b=Ns(u,f,p,this.padding),y=Ns(l,m,d,this.padding),v=Ns(c,g,h,this.padding),x=[r,b,y,v,this.filters];this.dataFormat!=="channelsLast"&&(n=Ge(n,[0,2,3,4,1]));let k=cR(n,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=Ge(k,[0,4,1,2,3])),this.bias!==null&&(k=ks(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(e){e=nt(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],p=this.strides[2];return t[n]=this.filters,t[s]=Ns(t[s],l,i,this.padding),t[r]=Ns(t[r],c,o,this.padding),t[a]=Ns(t[a],p,u,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};iy.className="Conv3DTranspose";re.registerClass(iy);var VI=class extends ql{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new G("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new G("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new G(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=ht(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ft(t.depthwiseRegularizer),this.depthwiseConstraint=Pt(t.depthwiseConstraint),this.pointwiseInitializer=ht(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ft(t.pointwiseRegularizer),this.pointwiseConstraint=Pt(t.pointwiseConstraint)}build(e){if(e=nt(e),e.length<this.rank+2)throw new G(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new G(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Dt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return q(()=>{e=Oe(e);let n;if(this.rank===1)throw new Fe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ge(e,[0,2,3,1])),n=x3(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=ks(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ge(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=yt(this.depthwiseInitializer),e.pointwiseInitializer=yt(this.pointwiseInitializer),e.depthwiseRegularizer=at(this.depthwiseRegularizer),e.pointwiseRegularizer=at(this.pointwiseRegularizer),e.depthwiseConstraint=Ot(this.depthwiseConstraint),e.pointwiseConstraint=Ot(this.pointwiseConstraint),e}};VI.className="SeparableConv";var oy=class extends VI{constructor(e){super(2,e)}};oy.className="SeparableConv2D";re.registerClass(oy);var WI=class extends ql{constructor(e){super(1,e),WI.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Tb(e.kernelSize,"number",1,1))throw new G(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},uy=WI;uy.className="Conv1D";re.registerClass(uy);var ly=class extends He{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return q(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){let n=jc(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return jc(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=jc(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return jc(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};ly.className="Cropping2D";re.registerClass(ly);var cy=class extends He{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ct(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,sz(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return q(()=>{let n=Oe(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=Ge(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],i=this.interpolation==="nearest"?jn.resizeNearestNeighbor(n,[r,a]):jn.resizeBilinear(n,[r,a]);return Ge(i,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?jn.resizeNearestNeighbor(n,[r,a]):jn.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};cy.className="UpSampling2D";re.registerClass(cy);function nV(e,t,n=[1,1],s="valid",r,a){return q(()=>{r==null&&(r=vs()),Ct(r);let i=sy(e,r);if(e.rank!==4)throw new G(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new G(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=yp(i,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(i=Ge(i,[0,3,1,2])),i})}var dy=class extends ry{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=ht(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Pt(e.depthwiseConstraint),this.depthwiseRegularizer=ft(e.depthwiseRegularizer)}build(e){if(e=nt(e),e.length<4)throw new G(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new G(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return q(()=>{e=Oe(e);let n=nV(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=ks(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=bs(t,this.kernelSize[0],this.padding,this.strides[0]),a=bs(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=yt(this.depthwiseInitializer),e.depthwiseRegularizer=at(this.depthwiseRegularizer),e.depthwiseConstraint=Ot(this.depthwiseRegularizer),e}};dy.className="DepthwiseConv2D";re.registerClass(dy);function UI(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new G("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function GI(e,t,n,s=!1,r,a,i=!1,o=!1){return q(()=>{let u=t.shape.length;if(u<3)throw new G(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(ys(2,u));if(t=Ge(t,l),a!=null)throw new Fe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=le(le(r,"bool"),"float32"),r.rank===u-1&&(r=Pn(r,-1)),r=Ge(r,l)),s&&(t=Jn(t,0),r!=null&&(r=Jn(r,0)));let c=[],p,d=n,h=t.shape[0],f=Fs(t),m;r!=null&&(m=Fs(r));for(let b=0;b<h;++b){let y=f[b],v=q(()=>e(y,d));if(r==null)p=v[0],d=v[1];else{let x=q(()=>{let k=m[b],I=ge(Zn(k),k),$=ie(V(v[0],k),V(d[0],I)),E=d.map((A,P)=>ie(V(v[1][P],k),V(A,I)));return{output:$,newStates:E}});p=x.output,d=x.newStates}o&&c.push(p)}let g;return o&&(g=es(c,1)),[p,g,d]})}var HI=class extends He{constructor(e){super(e);let t;if(e.cell==null)throw new G("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new qp({cells:e.cell}):t=e.cell,t.stateSize==null)throw new G("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Dt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return ys(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Sm(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return q(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Fe("Constants support is not implemented in RNN yet.");Sm(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Dt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new G(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Dt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){q(()=>{if(!this.stateful)throw new Bs("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new G("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>$t([n,s])):this.states_=[$t([n,this.cell.stateSize])];else if(e==null)Re(this.states_),this.keptStates!=null&&(Re(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>$t([n,s])):this.states_[0]=$t([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new G(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Re(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,i=[n,a];if(!w.arraysEqual(r.shape,i))throw new G(`State ${s} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>qt(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=UI(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new Dt({shape:u.shape}));i=i.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof $s){let u=[e].concat(a),l=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=l;let p=super.apply(u,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return q(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=Oe(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new G(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:s},u=GI((h,f)=>{let m=this.cell.call([h].concat(f),i);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=u[0],c=u[1],p=u[2];this.stateful&&this.resetStates(p,s);let d=this.returnSequences?c:l;return this.returnState?[d].concat(p):d})}getInitialState(e){return q(()=>{let t=$t(e.shape);return t=ve(t,[1,2]),t=Vl(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?wm(t,[1,n]):t):this.cell.stateSize>1?[wm(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===HI.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=gs(s,n);return new e(Object.assign(t,{cell:r}))}},Ar=HI;Ar.className="RNN";re.registerClass(Ar);var jl=class extends He{},Gp=class extends jl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Vt(this.units,"units"),this.activation=yr(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=Pt(e.kernelConstraint),this.recurrentConstraint=Pt(e.recurrentConstraint),this.biasConstraint=Pt(e.biasConstraint),this.dropout=no([1,gr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=no([1,gr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return q(()=>{if(e=e,e.length!==2)throw new G(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=vr({ones:()=>Zn(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=vr({ones:()=>Zn(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?r=Es(V(e,a),this.kernel.read()):r=Es(e,this.kernel.read()),this.bias!=null&&(r=ks(r,this.bias.read())),i!=null&&(n=V(n,i));let o=ie(r,Es(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:br(this.activation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),recurrentInitializer:yt(this.recurrentInitializer),biasInitializer:yt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),recurrentConstraint:Ot(this.recurrentConstraint),biasConstraint:Ot(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};Gp.className="SimpleRNNCell";re.registerClass(Gp);var py=class extends Ar{constructor(e){e.cell=new Gp(e),super(e)}call(e,t){return q(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};py.className="SimpleRNN";re.registerClass(py);var Hp=class extends jl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new G("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Vt(this.units,"units"),this.activation=yr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=yr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=Pt(e.kernelConstraint),this.recurrentConstraint=Pt(e.recurrentConstraint),this.biasConstraint=Pt(e.biasConstraint),this.dropout=no([1,gr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=no([1,gr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return q(()=>{if(e=e,e.length!==2)throw new G(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=vr({ones:()=>Zn(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=vr({ones:()=>Zn(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,i,o,u;0<this.dropout&&this.dropout<1&&(e=V(e,r[0]));let l=Es(e,this.kernel.read());this.useBias&&(l=ks(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=V(s,a[0]));let c=this.recurrentKernel.read(),[p,d]=Bn(c,[2*this.units,this.units],c.rank-1),h=Es(s,p),[f,m,g]=Bn(l,3,l.rank-1),[b,y]=Bn(h,2,h.rank-1);i=this.recurrentActivation.apply(ie(f,b)),o=this.recurrentActivation.apply(ie(m,y));let v=Es(V(o,s),d);u=this.activation.apply(ie(g,v));let x=ie(V(i,s),V(ie(1,kt(i)),u));return[x,x]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:br(this.activation),recurrentActivation:br(this.recurrentActivation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),recurrentInitializer:yt(this.recurrentInitializer),biasInitializer:yt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),recurrentConstraint:Ot(this.recurrentConstraint),biasConstraint:Ot(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Hp.className="GRUCell";re.registerClass(Hp);var hy=class extends Ar{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Hp(e),super(e)}call(e,t){return q(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};hy.className="GRU";re.registerClass(hy);var Kl=class extends jl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Vt(this.units,"units"),this.activation=yr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=yr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=Pt(e.kernelConstraint),this.recurrentConstraint=Pt(e.recurrentConstraint),this.biasConstraint=Pt(e.biasConstraint),this.dropout=no([1,gr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=no([1,gr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=nt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends ns{apply(i,o){let u=r.apply([a]),l=new Rp().apply([a]),c=r.apply([a*2]);return Cx(Cx(u,l),c)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return q(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new G(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=vr({ones:()=>Zn(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=vr({ones:()=>Zn(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,o,u,l,c;0<this.dropout&&this.dropout<1&&(e=V(e,a[0]));let p=Es(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=V(s,i[0])),p=ie(p,Es(s,this.recurrentKernel.read())),this.useBias&&(p=ks(p,this.bias.read()));let[d,h,f,m]=Bn(p,4,p.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(h),l=ie(V(u,r),V(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);let g=V(c,this.activation.apply(l));return[g,g,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:br(this.activation),recurrentActivation:br(this.recurrentActivation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),recurrentInitializer:yt(this.recurrentInitializer),biasInitializer:yt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),recurrentConstraint:Ot(this.recurrentConstraint),biasConstraint:Ot(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};Kl.className="LSTMCell";re.registerClass(Kl);var fy=class extends Ar{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kl(e),super(e)}call(e,t){return q(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};fy.className="LSTM";re.registerClass(fy);var qp=class extends jl{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return q(()=>{e=e;let n=e.slice(1),s=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?s.push(n.splice(0,i.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=s[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(let i of r.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){Sm(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{ta(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(gs(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Im(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}Pb(t)}};qp.className="StackedRNNCells";re.registerClass(qp);function vr(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>a!=null?a(t(),n):rI(t(),n),o=()=>Ul(i,t,s);return!r||r<=1?qt(o().clone()):Array(r).fill(void 0).map(o).map(l=>qt(l.clone()))}var qI=class extends Ar{constructor(e){if(e.unroll)throw new Fe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Fe("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Dt({ndim:5})]}call(e,t){return q(()=>{if(this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new G("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return q(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=$t(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){q(()=>{if(!this.stateful)throw new Bs("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new G("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$t(r)):this.states_=[$t(r)];else if(e==null)Re(this.states_),this.keptStates!=null&&(Re(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$t(r)):this.states_[0]=$t(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new G(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Re(this.states_);for(let i=0;i<this.states_.length;++i){let o=e[i],u=r;if(!w.arraysEqual(o.shape,u))throw new G(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${o.shape}`);this.states_[i]=o}}this.states_=this.states_.map(i=>qt(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o=t==="channelsFirst",u=e[o?3:2],l=e[o?4:3],c=bs(u,s[0],r,a[0],i[0]),p=bs(l,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,p]:[c,p,n]]}};qI.className="ConvRNN2D";var jp=class extends Kl{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super({...e,units:t}),this.filters=t,Vt(this.filters,"filters"),this.kernelSize=Ji(n,2,"kernelSize"),this.kernelSize.forEach(o=>Vt(o,"kernelSize")),this.strides=Ji(s||1,2,"strides"),this.strides.forEach(o=>Vt(o,"strides")),this.padding=r||"valid",Gn(this.padding),this.dataFormat=a||"channelsLast",Ct(this.dataFormat),this.dilationRate=Ji(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Vt(o,"dilationRate"))}build(e){var t;e=nt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new G(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let u=this.biasInitializer,l=this.filters;o=new(t=class extends ns{apply(c,p){let d=u.apply([l]),h=Mn([l]),f=u.apply([l*2]);return $b([d,h,f])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return q(()=>{if(e.length!==3)throw new G(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=vr({ones:()=>Zn(s),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,u=(Z,te,J)=>!te||!te[J]?Z:V(te[J],Z),l=u(s,o,0),c=u(s,o,1),p=u(s,o,2),d=u(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=vr({ones:()=>Zn(r),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=u(r,h,0),m=u(r,h,1),g=u(r,h,2),b=u(r,h,3),y=3,[v,x,k,I]=Bn(this.kernel.read(),i,y),[$,E,A,P]=this.useBias?Bn(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,v,$,this.padding),c=this.inputConv(c,x,E,this.padding),p=this.inputConv(p,k,A,this.padding),d=this.inputConv(d,I,P,this.padding);let[R,F,T,z]=Bn(this.recurrentKernel.read(),i,y);f=this.recurrentConv(f,R),m=this.recurrentConv(m,F),g=this.recurrentConv(g,T),b=this.recurrentConv(b,z);let W=this.recurrentActivation.apply(ie(l,f)),j=this.recurrentActivation.apply(ie(c,m)),X=ie(V(j,a),V(W,this.activation.apply(ie(p,g)))),Y=V(this.recurrentActivation.apply(ie(d,b)),this.activation.apply(X));return[Y,Y,X]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=da(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?ks(r,n,this.dataFormat):r}recurrentConv(e,t){return da(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};jp.className="ConvLSTM2DCell";re.registerClass(jp);var my=class extends qI{constructor(e){let t=new jp(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};my.className="ConvLSTM2D";re.registerClass(my);var Kp=class extends He{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Ul(()=>rI(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Kp.className="Dropout";re.registerClass(Kp);var gy=class extends Kp{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};gy.className="SpatialDropout1D";re.registerClass(gy);var by=class extends He{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Vt(this.units,"units"),this.activation=yr(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Pt(e.kernelConstraint),this.biasConstraint=Pt(e.biasConstraint),this.kernelRegularizer=ft(e.kernelRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.activityRegularizer=ft(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=nt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=nt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Oe(e),s=QS(this.activation.getClassName()),r;return s!=null?r=Es(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Es(n,this.kernel.read()),this.bias!=null&&(r=ks(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:br(this.activation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),biasInitializer:yt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),biasConstraint:Ot(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};by.className="Dense";re.registerClass(by);var yy=class extends He{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=nt(e);for(let t of e.slice(1))if(t==null)throw new G(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],cr(e,1)]}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=Ge(n,s)}return lz(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};yy.className="Flatten";re.registerClass(yy);var vy=class extends He{constructor(e){super(e),this.supportsMasking=!0,this.activation=yr(e.activation)}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.activation.apply(n)})}getConfig(){let e={activation:br(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};vy.className="Activation";re.registerClass(vy);var xy=class extends He{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return q(()=>(e=Oe(e),oz(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};xy.className="RepeatVector";re.registerClass(xy);var wy=class extends He{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let o=0;o<s.length;++o){let u=s[o];if(this.isUnknown(u))if(a===null)a=o;else throw new G("Can only specifiy one unknown dimension.");else r*=u}let i=cr(e);if(a!==null){if(r===0||i%r!==0)throw new G(n);s[a]=i/r}else if(i!==r)throw new G(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Oe(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return U(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};wy.className="Reshape";re.registerClass(wy);var ky=class extends He{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=ys(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Dt({ndim:this.dims.length+1})]}computeOutputShape(e){e=nt(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return Ge(Oe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};ky.className="Permute";re.registerClass(ky);var Sy=class extends He{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Oe(e),s=-1;return gm(Qu(n,this.maskValue),s)}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Oe(e),s=-1,r=!0,a=gm(Qu(n,this.maskValue),s,r);return V(n,le(a,n.dtype))})}};Sy.className="Masking";re.registerClass(Sy);var Iy=class extends He{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(pt(e.inputLength))}this.inputDim=e.inputDim,Vt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Vt(this.outputDim,"outputDim"),this.embeddingsInitializer=ht(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ft(e.embeddingsRegularizer),this.activityRegularizer=ft(e.activityRegularizer),this.embeddingsConstraint=Pt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return q(()=>this.maskZero?(e=Oe(e),Qu(e,je(e))):null)}computeOutputShape(e){if(e=nt(e),this.inputLength==null)return[...e,this.outputDim];let t=pt(this.inputLength);if(t.length!==e.length-1)throw new G(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new G(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Oe(e);n.dtype!=="int32"&&(n=Ap(n,"int32"));let s=sI(this.embeddings.read(),U(n,[n.size]));return U(s,nt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:yt(this.embeddingsInitializer),embeddingsRegularizer:at(this.embeddingsRegularizer),activityRegularizer:at(this.activityRegularizer),embeddingsConstraint:Ot(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Iy.className="Embedding";re.registerClass(Iy);var wi=class extends He{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Fe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new G("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[nt(e)]),e=e,e.length<2)throw new G(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=lr(t),t.length>1)throw new G(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&lr(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return q(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=gr(s);for(let a of e){let i=a.rank;for(let o=0;o<r-i;++o)a=Vl(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let o of e){let u=o.rank;if(u==null){let l=o.shape,c=l[0],p=l.slice(1).concat([c]),d=U(o,[c].concat(cr(l.slice(1))));d=Ge(d,[1,0]),d=U(d,p),n.push(d),r=!0}else if(u>1){let l=ys(1,u).concat([0]);n.push(Ge(o,l)),r=!0}else n.push(o)}let a=this.mergeFunction(n),i=a.rank;if(r){if(i==null){let o=a.shape,u=o.length,l=o[u-1],c=[l].concat(o.slice(0,o.length-1));a=U(Ge(U(a,[-1,l]),[1,0]),c)}else if(i>1){let o=[i-1].concat(ys(0,i-1));a=Ge(a,o)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=lr(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return q(()=>{if(t==null)return null;if(!Array.isArray(t))throw new G("`mask` should be an Array");if(!Array.isArray(e))throw new G("`inputs` should be an Array");if(t.length!==e.length)throw new G(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Pn(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=Ds(n,t[s]);return n})}},Cy=class extends wi{constructor(e){super(e)}mergeFunction(e){return q(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ie(t,e[n]);return t})}};Cy.className="Add";re.registerClass(Cy);var Ny=class extends wi{constructor(e){super(e)}mergeFunction(e){return q(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=V(t,e[n]);return t})}};Ny.className="Multiply";re.registerClass(Ny);var Ty=class extends wi{constructor(e){super(e)}mergeFunction(e){return q(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ie(t,e[n]);return V(1/e.length,t)})}};Ty.className="Average";re.registerClass(Ty);var $y=class extends wi{constructor(e){super(e)}mergeFunction(e){return q(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=$r(t,e[n]);return t})}};$y.className="Maximum";re.registerClass($y);var _y=class extends wi{constructor(e){super(e)}mergeFunction(e){return q(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=kp(t,e[n]);return t})}};_y.className="Minimum";re.registerClass(_y);var Ay=class extends wi{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new G("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let i of n)if(w.arraysEqual(i,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new G("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return q(()=>$b(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new G("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new G("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new G("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new G(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return q(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(le(Zn(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Pn(t[a],-1)):s.push(t[a]);let r=Ft(s,this.axis);return eS(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Ay.className="Concatenate";re.registerClass(Ay);function Tu(e,t){for(;e<0;)e+=t;return e}function sV(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Fe("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Fe("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return q(()=>{let i;if(s>r){i=s-r;let u=[];for(let l=0;l<i;++l)u.push(1);t=U(t,t.shape.concat(u))}else if(r>s){i=r-s;let u=[];for(let l=0;l<i;++l)u.push(1);e=U(e,e.shape.concat(u))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?o=ve(V(e,t),a[0]):o=ve(V(Ge(e,[1,0]),t),a[1]);else{let u=a[0]!==e.shape.length-1,l=a[1]===t.shape.length-1;o=Ve(e,t,u,l)}if(i>0){let u;s>r?u=s+r-3:u=s-1;let l=[];for(let c=u;c<u+i;++c)l.push(c);o=mr(o,l)}return o.shape.length===1&&(o=Pn(o,1)),o})}var Ey=class extends wi{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Fe("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new G(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new G(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>Tu(r,e[a].shape.length)):s=[Tu(this.axes,t.shape.length),Tu(this.axes,n.shape.length)],this.normalize&&(t=Ed(t,s[0]),n=Ed(n,s[1])),sV(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Tu(this.axes,e.length),Tu(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Fe("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Ey.className="Dot";re.registerClass(Ey);var Ry=class extends He{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Oe(e);return Ul(()=>ie(Ep(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};Ry.className="GaussianNoise";re.registerClass(Ry);var Dy=class extends He{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.rate>0&&this.rate<1?Ul(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return V(n,Ep(n.shape,1,r))},()=>n,t.training||!1):n})}};Dy.className="GaussianDropout";re.registerClass(Dy);var Fy=class extends He{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return q(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Ul(()=>{let r=Oe(e),a=1.6732632423543772,i=1.0507009873554805,o=-a*i,u=Yo(Ll(n),this.rate);u=Ap(u,"float32");let l=((1-this.rate)*(1+this.rate*o**2))**-.5,c=-l*o*this.rate,p=ie(V(r,u),V(ie(u,-1),o));return ie(V(p,l),c)},()=>Oe(e),t.training||!1)}return e})}};Fy.className="AlphaDropout";re.registerClass(Fy);function tl(e,t,n,s,r,a=.001){let i;if(e.rank===2)i=zE(e,t,n,s,r,a);else if(e.rank===3)i=LE(e,t,n,s,r,a);else if(e.rank===4)i=VE(e,t,n,s,r,a);else throw new Fe(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function rV(e,t,n,s,r=.001){return q(()=>{let a=ib(e,s),i=a.mean,o=a.variance;return[tl(e,i,o,n,t,r),i,o]})}function aV(e,t,n,s,r=.001){return q(()=>{let a=ib(e,s),i=a.mean,o=a.variance,u=[];for(let f of ys(0,e.rank))s.indexOf(f)!==-1?u.push(1):u.push(e.shape[f]);let l=U(i,u),c=U(o,u),p=t==null?null:U(t,u),d=n==null?null:U(n,u);return[tl(e,l,c,d,p,r),i,o]})}function iV(e,t,n,s,r=.001){return w.arraysEqual(s.slice().sort(),ys(0,e.rank-1))?rV(e,t,n,s,r):aV(e,t,n,s,r)}var Oy=class extends He{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ht(e.betaInitializer||"zeros"),this.gammaInitializer=ht(e.gammaInitializer||"ones"),this.movingMeanInitializer=ht(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ht(e.movingVarianceInitializer||"ones"),this.betaConstraint=Pt(e.betaConstraint),this.gammaConstraint=Pt(e.gammaConstraint),this.betaRegularizer=ft(e.betaRegularizer),this.gammaRegularizer=ft(e.gammaRegularizer)}build(e){e=nt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new G(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Dt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return q(()=>{let n=t.training==null?!1:t.training,s=Oe(e),r=s.shape,a=r.length,i=ys(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);let u=ma(1,a);u[o]=r[o];let l=i.slice();l.sort();let c=!w.arraysEqual(l,ys(0,a).slice(0,a-1)),p=()=>{if(c){let b=U(this.movingMean.read(),u),y=U(this.movingVariance.read(),u),v=this.center?U(this.beta.read(),u):null,x=this.scale?U(this.gamma.read(),u):null;return tl(s,b,y,v,x,this.epsilon)}else return tl(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return p();let[d,h,f]=iV(s,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(b,y,v)=>{q(()=>{let x=1-v,k=b.read(),I=V(ge(k,y),x);b.write(ge(k,I))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:yt(this.betaInitializer),gammaInitializer:yt(this.gammaInitializer),movingMeanInitializer:yt(this.movingMeanInitializer),movingVarianceInitializer:yt(this.movingVarianceInitializer),betaRegularizer:at(this.betaRegularizer),gammaRegularizer:at(this.gammaRegularizer),betaConstraint:Ot(this.betaConstraint),gammaConstraint:Ot(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Oy.className="BatchNormalization";re.registerClass(Oy);var Py=class extends He{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ht(e.betaInitializer||"zeros"),this.gammaInitializer=ht(e.gammaInitializer||"ones"),this.betaRegularizer=ft(e.betaRegularizer),this.gammaRegularizer=ft(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=nt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==lr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=Oe(e),s=n.shape,r=s.length;return q(()=>{let{mean:i,variance:o}=ib(n,this.axis,!0),u=ma(1,r);for(let f of this.axis)u[f]=s[f];let l=f=>f!=null&&f.shape.length!==r?U(f,u):f,c=l(this.gamma.read()),p=l(this.beta.read()),d=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(d.push(s[f]),h.push(1)):(d.push(1),h.push(s[f]));return i=hs(i,d),o=hs(o,d),c=hs(c,h),p=hs(p,h),tl(n,i,o,p,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:yt(this.betaInitializer),gammaInitializer:yt(this.gammaInitializer),betaRegularizer:at(this.betaRegularizer),gammaRegularizer:at(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Py.className="LayerNormalization";re.registerClass(Py);function oV(e,t,n){return q(()=>{if(e.rank!==4)throw new G(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new G("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=vs()),n!=="channelsLast"&&n!=="channelsFirst")throw new G(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],yi(e,s)})}var zy=class extends He{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?vs():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new G(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new G(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new G(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){e=nt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return q(()=>oV(Oe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};zy.className="ZeroPadding2D";re.registerClass(zy);function Xp(e,t,n,s,r,a){return q(()=>{Ct(r),JS(a),Gn(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=vs()),a==null&&(a="max"),e=sy(e,r);let i,o=s==="same"?"same":"valid";return a==="max"?i=ab(e,t,n,o):i=Xg(e,t,n,o),r==="channelsFirst"&&(i=Ge(i,[0,3,1,2])),i})}function jI(e,t,n,s,r,a){return q(()=>{Ct(r),JS(a),Gn(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=vs()),a==null&&(a="max"),e=MI(e,r);let i,o=s==="same"?"same":"valid";return a==="max"?i=xS(e,t,n,o):i=rS(e,t,n,o),r==="channelsFirst"&&(i=Ge(i,[0,4,1,2,3])),i})}var KI=class extends He{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new G(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Vt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new G(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Vt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Gn(this.padding),this.inputSpec=[new Dt({ndim:3})]}computeOutputShape(e){e=nt(e);let t=bs(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return q(()=>{this.invokeCallHook(e,t),e=Vl(Oe(e),2);let n=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return mr(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},My=class extends KI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),Xp(e,t,n,s,r,"max")}};My.className="MaxPooling1D";re.registerClass(My);var Ly=class extends KI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),Xp(e,t,n,s,r,"avg")}};Ly.className="AveragePooling1D";re.registerClass(Ly);var XI=class extends He{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new G(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Vt(this.poolSize,"poolSize"),Vt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ct(this.dataFormat),Gn(this.padding),this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=bs(t,this.poolSize[0],this.padding,this.strides[0]),n=bs(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return q(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},By=class extends XI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),Xp(e,t,n,s,r,"max")}};By.className="MaxPooling2D";re.registerClass(By);var Vy=class extends XI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),Xp(e,t,n,s,r,"avg")}};Vy.className="AveragePooling2D";re.registerClass(Vy);var YI=class extends He{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new G(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Vt(this.poolSize,"poolSize"),Vt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ct(this.dataFormat),Gn(this.padding),this.inputSpec=[new Dt({ndim:5})]}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=bs(t,this.poolSize[0],this.padding,this.strides[0]),n=bs(n,this.poolSize[1],this.padding,this.strides[1]),s=bs(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return q(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Wy=class extends YI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),jI(e,t,n,s,r,"max")}};Wy.className="MaxPooling3D";re.registerClass(Wy);var Uy=class extends YI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ct(r),Gn(s),jI(e,t,n,s,r,"avg")}};Uy.className="AveragePooling3D";re.registerClass(Uy);var QI=class extends He{constructor(e){super(e),this.inputSpec=[new Dt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Fe}},Gy=class extends QI{constructor(e){super(e||{})}call(e,t){return q(()=>{let n=Oe(e);return It(n,1)})}};Gy.className="GlobalAveragePooling1D";re.registerClass(Gy);var Hy=class extends QI{constructor(e){super(e||{})}call(e,t){return q(()=>{let n=Oe(e);return As(n,1)})}};Hy.className="GlobalMaxPooling1D";re.registerClass(Hy);var ZI=class extends He{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ct(this.dataFormat),this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Fe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},qy=class extends ZI{call(e,t){return q(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?It(n,[1,2]):It(n,[2,3])})}};qy.className="GlobalAveragePooling2D";re.registerClass(qy);var jy=class extends ZI{call(e,t){return q(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?As(n,[1,2]):As(n,[2,3])})}};jy.className="GlobalMaxPooling2D";re.registerClass(jy);var JI=class extends He{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=gs(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},Ky=class extends JI{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=nt(e),e.length<3)throw new G(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=nt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return q(()=>(e=Oe(e),GI((a,i)=>[Oe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Ky.className="TimeDistributed";re.registerClass(Ky);function uV(e){vi(nz,"BidirectionalMergeMode",e)}var lV="concat",Xy=class extends JI{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=gs(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=gs(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?lV:e.mergeMode,uV(this.mergeMode),e.weights)throw new Fe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):bn(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=UI(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new G("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let l=n.map(c=>new Dt({shape:c.shape}));this.forwardLayer.stateSpec=l.slice(0,u/2),this.backwardLayer.stateSpec=l.slice(u/2),i.push(...l)}if(s!=null)throw new Fe("Support for constants in Bidirectional layers is not implemented yet.");let o=a[0]instanceof $s;for(let u of a)if(u instanceof $s!==o)throw new G("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let u=[e].concat(a),l=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=l;let p=super.apply(u,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return q(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),u=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Jn(r,1));let i;return this.mergeMode==="concat"?i=$b([s,r]):this.mergeMode==="sum"?i=ie(s,r):this.mergeMode==="ave"?i=V(.5,ie(s,r)):this.mergeMode==="mul"?i=V(s,r):this.mergeMode==null&&(i=[s,r]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ta(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),ta(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=gs(t.layer);if(delete t.layer,t.numConstants!=null)throw new Fe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};Xy.className="Bidirectional";re.registerClass(Xy);function cV(e){return new Jo(e)}function dV(e){return new ey(e)}function pV(e){return new Qb(e)}function hV(e){return new Zb(e)}function fV(e){return new Jb(e)}function mV(e){return new ny(e)}function gV(e){return new ty(e)}function bV(e){return new uy(e)}function yV(e){return new Wp(e)}function vV(e){return new ay(e)}function xV(e){return new Up(e)}function wV(e){return new iy(e)}function kV(e){return new oy(e)}function SV(e){return new ly(e)}function IV(e){return new cy(e)}function CV(e){return new dy(e)}function NV(e){return new vy(e)}function TV(e){return new by(e)}function $V(e){return new Kp(e)}function _V(e){return new gy(e)}function AV(e){return new yy(e)}function EV(e){return new xy(e)}function RV(e){return new wy(e)}function DV(e){return new ky(e)}function FV(e){return new Iy(e)}function OV(e){return new Cy(e)}function PV(e){return new Ty(e)}function zV(e){return new Ay(e)}function MV(e){return new $y(e)}function LV(e){return new _y(e)}function BV(e){return new Ny(e)}function VV(e){return new Ey(e)}function WV(e){return new Oy(e)}function UV(e){return new Py(e)}function GV(e){return new zy(e)}function Yy(e){return new Ly(e)}function HV(e){return Yy(e)}function qV(e){return Yy(e)}function Qy(e){return new Vy(e)}function jV(e){return Qy(e)}function KV(e){return Qy(e)}function Zy(e){return new Uy(e)}function XV(e){return Zy(e)}function YV(e){return Zy(e)}function QV(e){return new Gy(e)}function ZV(e){return new qy(e)}function e0(e){return new Hy(e)}function t0(e){return new jy(e)}function n0(e){return new My(e)}function s0(e){return new By(e)}function JV(e){return new Wy(e)}function eW(e){return new hy(e)}function tW(e){return new Hp(e)}function nW(e){return new fy(e)}function sW(e){return new Kl(e)}function rW(e){return new py(e)}function aW(e){return new Gp(e)}function iW(e){return new my(e)}function oW(e){return new jp(e)}function uW(e){return new Ar(e)}function lW(e){return new qp(e)}function cW(e){return new Xy(e)}function dW(e){return new Ky(e)}var pW=e0,hW=t0,fW=n0,mW=s0;function gW(e){return new Ry(e)}function bW(e){return new Dy(e)}function yW(e){return new Fy(e)}function vW(e){return new Sy(e)}var xW={};Ae(xW,{MAPE:()=>EW,MSE:()=>FW,binaryAccuracy:()=>wW,binaryCrossentropy:()=>kW,categoricalAccuracy:()=>IW,categoricalCrossentropy:()=>CW,cosineProximity:()=>$W,mape:()=>RW,meanAbsoluteError:()=>_W,meanAbsolutePercentageError:()=>AW,meanSquaredError:()=>DW,mse:()=>OW,precision:()=>NW,recall:()=>TW,sparseCategoricalAccuracy:()=>SW});function wW(e,t){return Gb(e,t)}function kW(e,t){return fI(e,t)}function SW(e,t){return mI(e,t)}function IW(e,t){return Hb(e,t)}function CW(e,t){return qb(e,t)}function NW(e,t){return hI(e,t)}function TW(e,t){return bB(e,t)}function $W(e,t){return Ub(e,t)}function _W(e,t){return Bp(e,t)}function AW(e,t){return eu(e,t)}function EW(e,t){return eu(e,t)}function RW(e,t){return eu(e,t)}function DW(e,t){return xi(e,t)}function FW(e,t){return xi(e,t)}function OW(e,t){return xi(e,t)}var PW={};Ae(PW,{modelFromJSON:()=>jB});var zW={};Ae(zW,{l1:()=>LW,l1l2:()=>MW,l2:()=>BW});function MW(e){return new Hl(e)}function LW(e){return ZB(e)}function BW(e){return JB(e)}var VW=class extends so{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof dr))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Xc(e,t){return e<t}function Kx(e,t){return e>t}var WW=class extends VW{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Fe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Xc:this.mode==="max"?this.monitorFunc=Kx:this.monitor.indexOf("acc")!==-1?this.monitorFunc=Kx:this.monitorFunc=Xc,this.monitorFunc===Xc&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Xc?1/0:-1/0}async onEpochEnd(e,t){await sr(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function UW(e){return new WW(e)}var ahe={earlyStopping:UW},GW=K();GW.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var r0=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(r0||{}),Xx;(e=>{let t;(n=>{n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Xx||(Xx={}));var Jy={};function ihe(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Jy[e]=n}function a0(e){return Jy[e]}function ohe(e){delete Jy[e]}function S(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let o=a.inputIndexStart,u=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?o+1:a.inputIndexEnd;if(a.type==="tensor")return un(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(o,u).map(d=>un(d,n,s,r));let l=un(t.inputNames.slice(o)[0],n,s,r),c=l.dataSync();return a.type==="number"?c[0]:w.toNestedArray(l.shape,c)}let i=t.attrParams[e];return i&&i.value}function un(e,t,n,s){let[r,a]=_n(e);if(s!=null){let o=s.getHashTableHandleByName(r);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[Pd(r,o)]);return i!==void 0?t[Pd(r,i)][a]:void 0}function HW(e,t,n){return t[Pd(e,n.currentContextId)]}function Ts(e,t){let[n,s,r]=_n(e);return[Pd(n,t&&t.currentContextId),s,r]}function Pd(e,t){return t?`${e}-${t}`:e}function _n(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function ad(e,t,n){let s=S("pad",e,t,n);if(s==="explicit"){s=S("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function Ws(e){return e.kept?e:ur(e)}var i0={};Ae(i0,{json:()=>qW});var qW=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],o0={};Ae(o0,{json:()=>jW});var jW=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],u0={};Ae(u0,{json:()=>KW});var KW=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],l0={};Ae(l0,{json:()=>XW});var XW=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],c0={};Ae(c0,{json:()=>YW});var YW=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],d0={};Ae(d0,{json:()=>QW});var QW=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],p0={};Ae(p0,{json:()=>ZW});var ZW=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],h0={};Ae(h0,{json:()=>JW});var JW=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],f0={};Ae(f0,{json:()=>e4});var e4=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],m0={};Ae(m0,{json:()=>t4});var t4=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],g0={};Ae(g0,{json:()=>n4});var n4=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],b0={};Ae(b0,{json:()=>s4});var s4=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],y0={};Ae(y0,{json:()=>r4});var r4=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],v0={};Ae(v0,{json:()=>a4});var a4=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],x0={};Ae(x0,{json:()=>i4});var i4=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],w0={};Ae(w0,{json:()=>o4});var o4=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],k0={};Ae(k0,{json:()=>u4});var u4=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],S0={};Ae(S0,{json:()=>l4});var l4=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],I0={};Ae(I0,{json:()=>c4});var c4=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Yx=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[i0,o0,u0,l0,c0,d0,p0,h0,f0,m0,g0,b0,y0,v0,x0,w0,k0,S0,I0],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],i=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),o=[],u=[],l={},c={};t!=null&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(f=>{let m=i[f];m.inputNames.forEach((g,b)=>{let[y,,v]=Ts(g),x=i[y];if(x.outputs!=null){let k=x.outputs.indexOf(v);if(k!==-1){let I=`${y}:${k}`;m.inputNames[b]=I}}m.inputs.push(x),x.children.push(m)})}),Object.keys(c).length===0?p.forEach(f=>{let m=i[f];m.children.length===0&&u.push(m)}):Object.keys(c).forEach(f=>{let[m]=Ts(f),g=i[m];g!=null&&(g.signatureKey=c[f],u.push(g))}),Object.keys(l).length>0?Object.keys(l).forEach(f=>{let[m]=Ts(f),g=i[m];g&&(g.signatureKey=l[f],o.push(g))}):o=s;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:i,inputs:o,outputs:u,weights:r,placeholders:s,signature:t,functions:d};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=a0(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,i;switch(r.type){case"string":i=Em(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Em(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":i=Mm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Mm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":i=Dm(e.attr,r.tfName,r.defaultValue||0),i===void 0&&!!r.tfDeprecatedName&&(i=Dm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":i=zm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=zm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":i=Rm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Rm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":i=Bm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Bm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":i=Pm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Pm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":i=Lm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Lm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":i=Fm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Fm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":i=Om(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Om(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":i=Qx(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Qx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:i,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((c,p)=>(c[p.name]=this.mapNode(p),p.op==="Const"&&s.push(c[p.name]),c),{}));let a=[],i=[];e.signature.inputArg.forEach(c=>{let[p]=Ts(c.name),d={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ev(c.type),type:"dtype"}},children:[]};d.signatureKey=c.name,a.push(d),r[p]=d}),Object.keys(r).forEach(c=>{let p=r[c];p.inputNames.forEach((d,h)=>{let[f,,m]=Ts(d),g=r[f];if(g.outputs!=null){let b=g.outputs.indexOf(m);if(b!==-1){let y=`${f}:${b}`;p.inputNames[h]=y}}p.inputs.push(g),g.children.push(p)})});let u=e.ret;e.signature.outputArg.forEach(c=>{let[p,d]=Ts(u[c.name]),h=r[p];h!=null&&(h.defaultOutput=d,i.push(h))});let l=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:i,weights:s,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function d4(e){let t=K().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function C0(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):d4(e);return t?n:n.toLowerCase()}function Em(e,t,n,s=!1){let r=e[t];return r!=null?C0(r.s,s):n}function Rm(e,t,n){let s=e[t];return s?s.b:n}function Dm(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function ev(e){switch(typeof e=="string"&&(e=r0[e]),e){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function Qx(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function Fm(e,t,n){let s=e[t];return s&&s.type?ev(s.type):n}function Om(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>ev(r)):n}function N0(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Pm(e,t,n){let s=e[t];return s&&s.shape?N0(s.shape):n}function zm(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function Mm(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>C0(a,s)):n}function Lm(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>N0(r)):n}function Bm(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var p4=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return un(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return un(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Dm(this.node.rawAttrs,e,t);if(n.s!=null)return Em(this.node.rawAttrs,e,t);if(n.b!=null)return Rm(this.node.rawAttrs,e,t);if(n.shape!=null)return Pm(this.node.rawAttrs,e,t);if(n.type!=null)return Fm(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return zm(this.node.rawAttrs,e,t);if(n.list.s!=null)return Mm(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Lm(this.node.rawAttrs,e,t);if(n.list.b!=null)return Bm(this.node.rawAttrs,e,t);if(n.list.type!=null)return Om(this.node.rawAttrs,e,t)}return t}},h4=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ie(S("a",e,t,n),S("b",e,t,n))];case"AddN":return[sE(S("tensors",e,t,n))];case"FloorMod":case"Mod":return[RD(S("a",e,t,n),S("b",e,t,n))];case"Mul":return[V(S("a",e,t,n),S("b",e,t,n))];case"RealDiv":case"Div":return[xe(S("a",e,t,n),S("b",e,t,n))];case"DivNoNan":return[TR(S("a",e,t,n),S("b",e,t,n))];case"FloorDiv":return[Jk(S("a",e,t,n),S("b",e,t,n))];case"Sub":return[ge(S("a",e,t,n),S("b",e,t,n))];case"Minimum":return[kp(S("a",e,t,n),S("b",e,t,n))];case"Maximum":return[$r(S("a",e,t,n),S("b",e,t,n))];case"Pow":return[ha(S("a",e,t,n),S("b",e,t,n))];case"SquaredDifference":return[AS(S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},f4=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Lt(S("x",e,t,n))];case"Acos":return[JA(S("x",e,t,n))];case"Acosh":return[tE(S("x",e,t,n))];case"Asin":return[cE(S("x",e,t,n))];case"Asinh":return[pE(S("x",e,t,n))];case"Atan":return[fE(S("x",e,t,n))];case"Atan2":return[gE(S("x",e,t,n),S("y",e,t,n))];case"Atanh":return[yE(S("x",e,t,n))];case"Ceil":return[jE(S("x",e,t,n))];case"Complex":return[ua(S("real",e,t,n),S("imag",e,t,n))];case"Cos":return[Zg(S("x",e,t,n))];case"Cosh":return[cS(S("x",e,t,n))];case"Elu":return[vp(S("x",e,t,n))];case"Erf":return[DR(S("x",e,t,n))];case"Exp":return[Yn(S("x",e,t,n))];case"Expm1":return[zR(S("x",e,t,n))];case"Floor":return[xp(S("x",e,t,n))];case"Log":return[Qn(S("x",e,t,n))];case"Log1p":return[tb(S("x",e,t,n))];case"Imag":return[Jg(S("x",e,t,n))];case"Neg":return[kt(S("x",e,t,n))];case"Reciprocal":return[u3(S("x",e,t,n))];case"Real":return[Id(S("x",e,t,n))];case"Relu":return[Xs(S("x",e,t,n))];case"Round":return[SS(S("x",e,t,n))];case"Selu":return[CS(S("x",e,t,n))];case"Sigmoid":return[Hs(S("x",e,t,n))];case"Sin":return[NS(S("x",e,t,n))];case"Sign":return[I3(S("x",e,t,n))];case"Sinh":return[TS(S("x",e,t,n))];case"Softplus":return[Ml(S("x",e,t,n))];case"Sqrt":return[dn(S("x",e,t,n))];case"Square":return[ct(S("x",e,t,n))];case"Tanh":return[Ku(S("x",e,t,n))];case"Tan":return[H3(S("x",e,t,n))];case"ClipByValue":return[Vn(S("x",e,t,n),S("clipValueMin",e,t,n),S("clipValueMax",e,t,n))];case"Relu6":return[kS(S("x",e,t,n))];case"Rsqrt":return[IS(un(e.inputNames[0],t,n))];case"Prod":return[wS(S("x",e,t,n),S("axes",e,t,n))];case"LeakyRelu":return[eb(S("x",e,t,n),S("alpha",e,t,n))];case"Prelu":return[ub(S("x",e,t,n),S("alpha",e,t,n))];case"IsNan":return[KR(un(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function qn(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];w.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function Zx(e){return!(typeof e=="number"||e.some(t=>t<0))}function $u(e,t,n){let s=Vm(e,n),r=!Zx(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=Vm(a.shape,s)}),!Zx(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Vm(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var m4=class{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=we(0),qt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),qn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,qt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return ms([],[0].concat(this.elementShape));let n=this.readMany(e);return qn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),es(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return ms([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return qn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ft(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Fs(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];q(()=>{t=U(t,[1,n,r]);for(let o=0;o<e.length;++o){let u=o===0?0:s[o-1],l=[0,u,0],c=[1,e[o],r];a[o]=U(qe(t,l,c),this.elementShape)}return a});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,a)}},ro=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);qn(t,r.shape,"TensorList shape mismatch: "),qt(r)}),this.idTensor=we(0),this.maxNumElements=s,qt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ro([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);qn(e,this.elementShape,"TensorList shape mismatch: ");let s=$u(this.elementShape,this.tensors,e);return q(()=>{let r=this.tensors.map(a=>U(a,s));return es(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=$u(this.elementShape,this.tensors,e),s=this.tensors.pop();return qn(s.shape,e,"TensorList shape mismatch: "),U(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(qn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");qt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new ro([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);qn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=$u(this.elementShape,this.tensors,t);return U(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);qn(this.elementShape,t.shape,"TensorList shape mismatch: "),qt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);qn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=$u(this.elementShape,this.tensors,n);return e.length===0?ms([],[0].concat(s)):q(()=>{let r=e.map(a=>U(this.tensors[a],s));return es(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);qn(this.elementShape,t,"TensorList shape mismatch: ");let n=$u(this.elementShape,this.tensors,t);return this.size()===0?ms([],[0].concat(n)):q(()=>{let s=this.tensors.map(r=>U(r,n));return Ft(s,0)})}};function g4(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);qn(r,t,"TensorList shape mismatch: ");let a=Fs(e);return new ro(a,t,s)}function b4(e,t,n){return new ro([],e,t,n)}function y4(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new ro([],n,e.dtype,s),i=Fs(e,0);return t.forEach((o,u)=>{a.setItem(o,i[u])}),a}function v4(e,t,n){let s=0,r=t.map(c=>(s+=c,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),i=Vm(a,n),o=s===0?0:e.size/s,u=q(()=>{let c=[];e=U(e,[1,s,o]);for(let p=0;p<t.length;++p){let d=p===0?0:r[p-1],h=[0,d,0],f=[1,t[p],o];c[p]=U(qe(e,h,f),i)}return e.dispose(),c}),l=new ro([],n,e.dtype,t.length);for(let c=0;c<u.length;c++)l.setItem(c,u[c]);return l}var x4=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=S("thenBranch",e,t,n),r=S("elseBranch",e,t,n),a=S("cond",e,t,n),i=S("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=S("body",e,t,n),r=S("cond",e,t,n),a=S("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map(c=>c.id),u=await i[0].data();i.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let l=a;for(;u[0];){let c=l;l=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);let p=l.map(h=>h.id);c.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()});let d=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await d[0].data(),d.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()})}return l}case"LoopCond":{let s=S("pred",e,t,n);return[Ws(s)]}case"Switch":{let s=S("pred",e,t,n),r=S("data",e,t,n);return r.kept||(r=Ws(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>un(r,t,n)!==void 0);if(s){let r=un(s,t,n);return[Ws(r)]}return}case"Enter":{let s=S("frameName",e,t,n),r=S("tensor",e,t,n);return n.enterFrame(s),[Ws(r)]}case"Exit":{let s=S("tensor",e,t,n);return n.exitFrame(),[Ws(s)]}case"NextIteration":{let s=S("tensor",e,t,n);return n.nextIteration(),[Ws(s)]}case"TensorArrayV3":{let s=S("size",e,t,n),r=S("dtype",e,t,n),a=S("elementShape",e,t,n),i=S("dynamicSize",e,t,n),o=S("clearAfterRead",e,t,n),u=S("identicalElementShapes",e,t,n),l=S("name",e,t,n),c=new m4(l,r,s,a,u,i,o);return n.addTensorArray(c),[c.idTensor,we(1)]}case"TensorArrayWriteV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=S("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=S("tensorArrayId",e,t,n),r=S("tensor",e,t,n),a=S("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[we(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("elementShape",e,t,n),i=S("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{let s=S("indices",e,t,n),r=S("tensor",e,t,n),a=S("elementShape",e,t,n),i=S("numElements",e,t,n),o=y4(r,s,a,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=S("elementShape",e,t,n),r=S("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let i=S(a,e,t,n),o=b4(s,r,i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let s=S("tensorListId",e,t,n),r=S("indices",e,t,n),a=S("elementShape",e,t,n),i=S("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),i=S("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),i=g4(s,r,a);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id),a=S("dtype",e,t,n),i=S("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{let s=S("tensorListId",e,t,n),r=S("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("lengths",e,t,n),i=v4(s,a,r);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id);return[we(r.size(),"int32")]}case"TensorListResize":{let s=S("tensorListId",e,t,n),r=S("size",e,t,n),i=n.getTensorList(s.id).resize(r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Jx(e,t,n){let[s,r]=S("fusedOps",e,t,n),a=s==="biasadd",i=!a,o=r==="prelu",u=s==="fusedbatchnorm",l=S("numArgs",e,t,n);if(a){if(o&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=S("strides",e,t,n),p=ad(e,t,n),d=S("dataFormat",e,t,n).toUpperCase(),h=S("dilations",e,t,n),[f,m]=S("args",e,t,n);i&&(m=f,f=void 0);let g=S("leakyreluAlpha",e,t,n);return{stride:c,pad:p,dataFormat:d,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var w4=(e,t,n)=>{switch(e.op){case"Conv1D":{let s=S("stride",e,t,n),r=S("pad",e,t,n),a=S("dataFormat",e,t,n).toUpperCase(),i=S("dilation",e,t,n);return[iS(S("x",e,t,n),S("filter",e,t,n),s,r,a,i)]}case"Conv2D":{let s=S("strides",e,t,n),r=ad(e,t,n),a=S("dataFormat",e,t,n).toUpperCase(),i=S("dilations",e,t,n);return[da(S("x",e,t,n),S("filter",e,t,n),[s[1],s[2]],r,a,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=Jx(e,t,n);return[fa.conv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{let{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=Jx(e,t,n);return[fa.depthwiseConv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let s=S("outputShape",e,t,n),r=S("strides",e,t,n),a=ad(e,t,n);return[oS(S("x",e,t,n),S("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let s=S("strides",e,t,n),r=ad(e,t,n),a=S("dilations",e,t,n),i=S("dataFormat",e,t,n).toUpperCase();return[yp(S("input",e,t,n),S("filter",e,t,n),[s[1],s[2]],r,i,[a[1],a[2]])]}case"Conv3D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("dataFormat",e,t,n).toUpperCase(),i=S("dilations",e,t,n);return[uS(S("x",e,t,n),S("filter",e,t,n),[s[1],s[2],s[3]],r,a,[i[1],i[2],i[3]])]}case"AvgPool":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[Xg(S("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[ab(S("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n),i=S("includeBatchInIndex",e,t,n),{result:o,indexes:u}=ID(S("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,i);return[o,u]}case"AvgPool3D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[rS(S("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[xS(S("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("dilations",e,t,n),i=s[1],o=s[2],u=a[1],l=a[2];return[kR(S("x",e,t,n),S("filter",e,t,n),[i,o],r,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},k4=(e,t,n)=>{switch(e.op){case"Fill":{let s=S("shape",e,t,n),r=S("dtype",e,t,n),a=S("value",e,t,n);return[zl(s,a,r)]}case"LinSpace":{let s=S("start",e,t,n),r=S("stop",e,t,n),a=S("num",e,t,n);return[ZR(s,r,a)]}case"Multinomial":{let s=S("logits",e,t,n),r=S("numSamples",e,t,n),a=S("seed",e,t,n);return[zD(s,r,a)]}case"OneHot":{let s=S("indices",e,t,n),r=S("depth",e,t,n),a=S("onValue",e,t,n),i=S("offValue",e,t,n);return[kd(s,r,a,i)]}case"Ones":return[Mn(S("shape",e,t,n),S("dtype",e,t,n))];case"OnesLike":return[Zn(S("x",e,t,n))];case"RandomUniform":return[Ll(S("shape",e,t,n),S("minval",e,t,n),S("maxval",e,t,n),S("dtype",e,t,n))];case"Range":{let s=S("start",e,t,n),r=S("stop",e,t,n),a=S("step",e,t,n);return[Zu(s,r,a,S("dtype",e,t,n))]}case"TruncatedNormal":{let s=S("shape",e,t,n),r=S("mean",e,t,n),a=S("stdDev",e,t,n),i=S("seed",e,t,n);return[gb(s,r,a,S("dtype",e,t,n),i)]}case"Zeros":return[$t(S("shape",e,t,n),S("dtype",e,t,n))];case"ZerosLike":return[je(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Xf(e,t,n){let s=S("boxes",e,t,n),r=S("scores",e,t,n),a=S("maxOutputSize",e,t,n),i=S("iouThreshold",e,t,n),o=S("scoreThreshold",e,t,n),u=S("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}}var S4=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Xf(e,t,n),l=await jn.nonMaxSuppressionWithScoreAsync(s,r,a,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Xf(e,t,n),u=S("padToMaxOutputSize",e,t,n),l=await jn.nonMaxSuppressionPaddedAsync(s,r,a,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Xf(e,t,n);return[await jn.nonMaxSuppressionAsync(s,r,a,i,o)]}case"Where":{let s=le(S("condition",e,t,n),"bool"),r=[await RS(s)];return s.dispose(),r}case"ListDiff":return k3(S("x",e,t,n),S("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},I4=(e,t,n)=>{switch(e.op){case"LowerBound":{let s=S("sortedSequence",e,t,n),r=S("values",e,t,n);return[xD(s,r)]}case"TopKV2":{let s=S("x",e,t,n),r=S("k",e,t,n),a=S("sorted",e,t,n),i=j3(s,r,a);return[i.values,i.indices]}case"UpperBound":{let s=S("sortedSequence",e,t,n),r=S("values",e,t,n);return[J3(s,r)]}case"Unique":{let s=S("x",e,t,n),r=yx(s);return[r.values,r.indices]}case"UniqueV2":{let s=S("x",e,t,n),r=S("axis",e,t,n),a=yx(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},C4=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let s=S("default",e,t,n);return[un(e.name,t,n)||s];case"Placeholder":return[un(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=S("x",e,t,n);return[Ws(l)]}case"IdentityN":return S("x",e,t,n).map(l=>Ws(l));case"Snapshot":let r=S("x",e,t,n);return[Ws(r)];case"Shape":return[Zt(S("x",e,t,n).shape,"int32")];case"ShapeN":return S("x",e,t,n).map(l=>Zt(l.shape));case"Size":return[we(S("x",e,t,n).size,"int32")];case"Rank":return[we(S("x",e,t,n).rank,"int32")];case"NoOp":return[we(1)];case"Print":let a=S("x",e,t,n),i=S("data",e,t,n),o=S("message",e,t,n),u=S("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},N4=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=we(0),this.tensorMap=new Map,qt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return we(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),q(()=>{let s=Fs(t),r=n.length,a=s.length;w.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let i=0;i<r;i++){let o=n[i],u=s[i];qt(u),this.tensorMap.set(o,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return q(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],i=this.findWithDefault(a,t);s.push(i)}return es(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},T4=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=S("keyDType",e,t,n),a=S("valueDType",e,t,n),i=new N4(r,a);return s.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),i=S("values",e,t,n);return[await s.getHashTableById(r.id).import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),i=S("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=S("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},$4=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let s=S("images",e,t,n),r=S("size",e,t,n),a=S("alignCorners",e,t,n),i=S("halfPixelCenters",e,t,n);return[jn.resizeBilinear(s,[r[0],r[1]],a,i)]}case"ResizeNearestNeighbor":{let s=S("images",e,t,n),r=S("size",e,t,n),a=S("alignCorners",e,t,n),i=S("halfPixelCenters",e,t,n);return[jn.resizeNearestNeighbor(s,[r[0],r[1]],a,i)]}case"CropAndResize":{let s=S("image",e,t,n),r=S("boxes",e,t,n),a=S("boxInd",e,t,n),i=S("cropSize",e,t,n),o=S("method",e,t,n),u=S("extrapolationValue",e,t,n);return[jn.cropAndResize(s,r,a,i,o,u)]}case"ImageProjectiveTransformV3":{let s=S("images",e,t,n),r=S("transforms",e,t,n),a=S("outputShape",e,t,n),i=S("fillValue",e,t,n),o=S("interpolation",e,t,n),u=S("fillMode",e,t,n);return[jn.transform(s,r,o.toLowerCase(),u.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},_4=(e,t,n)=>{switch(e.op){case"Equal":return[Xn(S("a",e,t,n),S("b",e,t,n))];case"NotEqual":return[Qu(S("a",e,t,n),S("b",e,t,n))];case"Greater":return[Un(S("a",e,t,n),S("b",e,t,n))];case"GreaterEqual":return[Yo(S("a",e,t,n),S("b",e,t,n))];case"Less":return[hS(S("a",e,t,n),S("b",e,t,n))];case"LessEqual":return[Qo(S("a",e,t,n),S("b",e,t,n))];case"LogicalAnd":return[Ds(S("a",e,t,n),S("b",e,t,n))];case"LogicalNot":return[rb(S("a",e,t,n))];case"LogicalOr":return[yS(S("a",e,t,n),S("b",e,t,n))];case"Select":case"SelectV2":return[vn(S("condition",e,t,n),S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},A4=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ve(S("a",e,t,n),S("b",e,t,n),S("transposeA",e,t,n),S("transposeB",e,t,n))];case"Einsum":return[AR(S("equation",e,t,n),...S("tensors",e,t,n))];case"Transpose":return[Ge(S("x",e,t,n),S("perm",e,t,n))];case"_FusedMatMul":let[s,r]=S("fusedOps",e,t,n),a=s==="biasadd",i=r==="prelu",o=S("numArgs",e,t,n),u=S("leakyreluAlpha",e,t,n);if(a){if(i&&o!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,c]=S("args",e,t,n);return[fa.matMul({a:S("a",e,t,n),b:S("b",e,t,n),transposeA:S("transposeA",e,t,n),transposeB:S("transposeB",e,t,n),bias:l,activation:r,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},E4=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Xu(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"FusedBatchNormV3":return[Xu(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"LRN":return[eD(S("x",e,t,n),S("radius",e,t,n),S("bias",e,t,n),S("alpha",e,t,n),S("beta",e,t,n))];case"Softmax":return[hb(S("x",e,t,n))];case"LogSoftmax":return[fS(S("x",e,t,n))];case"SparseToDense":return[OS(S("sparseIndices",e,t,n),S("outputShape",e,t,n),S("sparseValues",e,t,n),S("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},R4=(e,t,n)=>{switch(e.op){case"Max":{let i=S("axis",e,t,n),o=S("keepDims",e,t,n);return[As(S("x",e,t,n),i,o)]}case"Mean":{let i=S("axis",e,t,n),o=S("keepDims",e,t,n);return[It(S("x",e,t,n),i,o)]}case"Min":{let i=S("axis",e,t,n),o=S("keepDims",e,t,n);return[vm(S("x",e,t,n),i,o)]}case"Sum":{let i=S("axis",e,t,n),o=S("keepDims",e,t,n);return[ve(S("x",e,t,n),i,o)]}case"All":{let i=S("axis",e,t,n),o=S("keepDims",e,t,n);return[eS(S("x",e,t,n),i,o)]}case"Any":{let i=S("axis",e,t,n),o=S("keepDims",e,t,n);return[gm(S("x",e,t,n),i,o)]}case"ArgMax":{let i=S("axis",e,t,n);return[ju(S("x",e,t,n),i)]}case"ArgMin":{let i=S("axis",e,t,n);return[uE(S("x",e,t,n),i)]}case"Prod":{let i=S("axis",e,t,n),o=S("keepDims",e,t,n);return[wS(S("x",e,t,n),i,o)]}case"Cumprod":{let i=S("axis",e,t,n),o=S("exclusive",e,t,n),u=S("reverse",e,t,n);return[ym(S("x",e,t,n),i,o,u)]}case"Cumsum":{let i=S("axis",e,t,n),o=S("exclusive",e,t,n),u=S("reverse",e,t,n);return[dS(S("x",e,t,n),i,o,u)]}case"Bincount":let s=S("x",e,t,n),r=S("weights",e,t,n),a=S("size",e,t,n);return[aS(s,r,a)];case"DenseBincount":{let i=S("x",e,t,n),o=S("weights",e,t,n),u=S("size",e,t,n),l=S("binaryOutput",e,t,n);return[gR(i,o,u,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},D4=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let s=S("n",e,t,n),r=S("axis",e,t,n),a=S("tensors",e,t,n);return a=a.slice(0,s),[Ft(a,r)]}case"Gather":{let s=S("x",e,t,n),r=S("indices",e,t,n);return[Yu(s,le(r,"int32"),0)]}case"GatherV2":{let s=S("axis",e,t,n),r=S("batchDims",e,t,n),a=S("x",e,t,n),i=S("indices",e,t,n);return[Yu(a,le(i,"int32"),s,r)]}case"Reverse":{let s=S("dims",e,t,n),r=[];for(let i=0;i<s.length;i++)s[i]&&r.push(i);let a=S("x",e,t,n);return[Jn(a,r)]}case"ReverseV2":{let s=S("axis",e,t,n),r=S("x",e,t,n);return[Jn(r,s)]}case"Slice":{let s=S("begin",e,t,n),r=S("size",e,t,n);return[qe(S("x",e,t,n),s,r)]}case"StridedSlice":{let s=S("begin",e,t,n),r=S("end",e,t,n),a=S("strides",e,t,n),i=S("beginMask",e,t,n),o=S("endMask",e,t,n),u=S("ellipsisMask",e,t,n),l=S("newAxisMask",e,t,n),c=S("shrinkAxisMask",e,t,n),p=S("x",e,t,n);return[U3(p,s,r,a,i,o,u,l,c)]}case"Pack":return q(()=>{let s=S("axis",e,t,n),r=S("tensors",e,t,n),a=r[0].shape,i=mr(r[0]).shape,o=r.map(u=>{let l=w.arraysEqual(u.shape,a);if(!l&&!w.arraysEqual(mr(u).shape,i))throw new Error("the input tensors shape does not match");return l?u:U(u,a)});return[es(o,s)]});case"Unpack":{let s=S("axis",e,t,n),r=S("tensor",e,t,n);return Fs(r,s)}case"Tile":{let s=S("reps",e,t,n);return[hs(S("x",e,t,n),s)]}case"Split":case"SplitV":{let s=S("axis",e,t,n),r=S("numOrSizeSplits",e,t,n),a=S("x",e,t,n);return Bn(a,r,s)}case"ScatterNd":{let s=S("indices",e,t,n),r=S("values",e,t,n),a=S("shape",e,t,n);return[iF(s,r,a)]}case"GatherNd":{let s=S("x",e,t,n),r=S("indices",e,t,n);return[cF(s,r)]}case"SparseToDense":{let s=S("sparseIndices",e,t,n),r=S("outputShape",e,t,n),a=S("sparseValues",e,t,n),i=S("defaultValue",e,t,n);return[OS(s,a,r,a.dtype===i.dtype?i:le(i,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},F4=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:i}=Gc.sparseFillEmptyRows(S("indices",e,t,n),S("values",e,t,n),S("denseShape",e,t,n),S("defaultValue",e,t,n));return[s,r,a,i]}case"SparseReshape":{let{outputIndices:s,outputShape:r}=Gc.sparseReshape(S("inputIndices",e,t,n),S("inputShape",e,t,n),S("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[Gc.sparseSegmentMean(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];case"SparseSegmentSum":return[Gc.sparseSegmentSum(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},O4=(e,t,n)=>{switch(e.op){case"FFT":return[fb(S("x",e,t,n))];case"IFFT":return[Nd(S("x",e,t,n))];case"RFFT":return[mb(S("x",e,t,n))];case"IRFFT":return[_S(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},P4=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:s,nGramsSplits:r}=Uf.stringNGrams(S("data",e,t,n),S("dataSplits",e,t,n),S("separator",e,t,n),S("nGramWidths",e,t,n),S("leftPad",e,t,n),S("rightPad",e,t,n),S("padWidth",e,t,n),S("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{let{indices:s,values:r,shape:a}=Uf.stringSplit(S("input",e,t,n),S("delimiter",e,t,n),S("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[Uf.stringToHashBucketFast(S("input",e,t,n),S("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},z4=(e,t,n)=>{switch(e.op){case"Cast":return[le(S("x",e,t,n),S("dtype",e,t,n))];case"ExpandDims":{let s=S("axis",e,t,n);return[Pn(S("x",e,t,n),s)]}case"Squeeze":{let s=S("axis",e,t,n);return[mr(S("x",e,t,n),s)]}case"Reshape":return[U(S("x",e,t,n),S("shape",e,t,n))];case"MirrorPad":return[AD(S("x",e,t,n),S("padding",e,t,n),S("mode",e,t,n))];case"PadV2":case"Pad":return[yi(S("x",e,t,n),S("padding",e,t,n),S("constantValue",e,t,n))];case"SpaceToBatchND":{let s=S("blockShape",e,t,n),r=S("paddings",e,t,n);return[ob(S("x",e,t,n),s,r)]}case"BatchToSpaceND":{let s=S("blockShape",e,t,n),r=S("crops",e,t,n);return[Yg(S("x",e,t,n),s,r)]}case"DepthToSpace":{let s=S("blockSize",e,t,n),r=S("dataFormat",e,t,n).toUpperCase();return[yR(S("x",e,t,n),s,r)]}case"BroadcastTo":return[rd(S("x",e,t,n),S("shape",e,t,n))];case"BroadcastArgs":return[GE(S("s0",e,t,n),S("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ew(e,t,n,s){let r=((a,i,o)=>{switch(a.category){case"arithmetic":return q(()=>h4(a,i,o));case"basic_math":return q(()=>f4(a,i,o));case"control":return x4(a,i,o);case"convolution":return q(()=>w4(a,i,o));case"creation":return q(()=>k4(a,i,o));case"dynamic":return S4(a,i,o);case"evaluation":return q(()=>I4(a,i,o));case"image":return q(()=>$4(a,i,o));case"graph":return q(()=>C4(a,i,o));case"logical":return q(()=>_4(a,i,o));case"matrices":return q(()=>A4(a,i,o));case"normalization":return q(()=>E4(a,i,o));case"reduction":return q(()=>R4(a,i,o));case"slice_join":return q(()=>D4(a,i,o));case"sparse":return q(()=>F4(a,i,o));case"spectral":return q(()=>O4(a,i,o));case"string":return q(()=>P4(a,i,o));case"transformation":return q(()=>z4(a,i,o));case"hash_table":return T4(a,i,o,s);case"custom":let u=a0(a.op);if(u&&u.customExecutor)return u.customExecutor(new p4(a,i,o));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(r)?r.then(a=>[].concat(a)):[].concat(r)}var tw=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function nw(e,t,n,s){let r=new Set,a=[],i=null,o=null,u=new Set,l=Object.keys(e).map(d=>_n(d)[0]),c=[];s!=null&&(c=s.map(d=>_n(d.name)[0]));let p=[...t];for(;p.length>0;){let d=p.pop();if((T0(d)||W4(d)||U4(d))&&i==null&&(i=d,o=i.children.map(h=>h.name).filter(h=>r.has(h))),r.add(d.name),n[d.name]==null&&l.indexOf(d.name)===-1&&c.indexOf(d.name)===-1){if(d.inputs.length===0){a.push(d.name);continue}d.inputs.forEach(h=>{u.has(h.name)||(u.add(h.name),p.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}function M4(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map(c=>_n(c)[0]).map(c=>e.nodes[c]),o=e.initNodes;i.forEach(c=>{s.has(c.name)&&a.push(c)}),e.weights.forEach(c=>{s.has(c.name)&&a.push(c)}),o!=null&&o.forEach(c=>{s.has(c.name)&&a.push(c)});let u=new Set,l=[];for(;a.length>0;){let c=a.pop();u.add(c.name),t[c.name]||l.push(c),c.children.forEach(p=>{!u.has(p.name)&&s.has(p.name)&&p.inputs.every(d=>u.has(d.name))&&a.push(p)})}return l}var L4=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],B4=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],V4=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function T0(e){return L4.indexOf(e.op)>=0}function W4(e){return B4.indexOf(e.op)>=0}function U4(e){return V4.indexOf(e.op)>=0}var Wm=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Wm(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=nw(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let i=t.map(u=>u.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${s}]`)}return M4(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(c=>this.graph.nodes[_n(c)[0]]),r=t.map(c=>_n(c)[0]),a=r.map(c=>this.graph.nodes[c]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(s,a),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,a),this.compiledMap.set(i,o));let u={},l={};return q(()=>{let c=new tw(this.weightMap,u,l,this.functionExecutorMap),p={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=_n(f),b=[];b[g]=e[f],p[m]=b});let d=this.getFrozenTensorIds(p),h={};for(let f=0;f<o.length;f++){let m=o[f];if(!p[m.name]){let g=ew(m,p,c,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);p[m.name]=g,this.checkTensorForDisposal(m.name,m,p,c,d,r,h)}}return this.parent==null&&c.dispose(d),t.map(f=>un(f,p,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let u=HW(o.name,n,s);u!=null&&u.forEach(l=>{if(l&&!l.kept&&!r.has(l.id)){let c=i[l.id];if(c===1){if(!this.keepTensorForDebug)l.dispose();else{let[p,d]=Ts(t.name,s);this.intermediateTensors[p]?this.intermediateTensors[p][d]=l:(this.intermediateTensors[p]=[],this.intermediateTensors[p][d]=l)}delete i[l.id]}else c!=null&&i[l.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=K().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();let a=new tw(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let i=t.map(l=>un(l,this.tensorsMap,a)),o=i.map(l=>l.id),u=Object.keys(e).map(l=>e[l].id);return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,i)=>(r[this.inputs[i].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(y=>this.graph.nodes[_n(y)[0]]),i=n.map(y=>_n(y)[0]),o=i.map(y=>this.graph.nodes[y]);o.length===0&&(o=this._outputs);let{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:p}=nw(e,o,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(y=>({node:y,contexts:t.currentContext})),h={...this.weightMap};Object.keys(e).forEach(y=>{let[v,x]=_n(y),k=[];k[x]=e[y],h[v]=k});let f={},m=this.getFrozenTensorIds(h),g={};for(;d.length>0;){let y=this.processStack(a,d,t,h,g,m,i,f,u);await Promise.all(y)}c==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=o.filter(y=>!T0(y)&&!un(y.name,h,t)).map(y=>y.name);if(b.length>0){let y="";throw c!=null&&(y=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${r}]. Consider providing the following inputs: [${l}]. ${y}`)}return h}processStack(e,t,n,s,r,a,i,o,u){let l=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let p="";if(c.node.op==="Enter"&&S("isConstant",c.node,s,n)&&([p]=Ts(c.node.name,n)),s[c.node.name]==null){let d=ew(c.node,s,n,this._resourceManager);p||([p]=Ts(c.node.name,n));let h=n.currentContext;w.isPromise(d)?l.push(d.then(f=>(s[p]=f,n.currentContext=h,this.checkTensorForDisposal(p,c.node,s,n,a,i,o),this.processChildNodes(c.node,t,n,s,r,u),f))):(s[p]=d,this.checkTensorForDisposal(p,c.node,s,n,a,i,o),this.processChildNodes(c.node,t,n,s,r,u))}else this.processChildNodes(c.node,t,n,s,r,u)}return l}processChildNodes(e,t,n,s,r,a){e.children.forEach(i=>{let[o]=Ts(i.name,n);r[o]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!un(u,s,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!un(u,s,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=_n(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((o,u)=>a[u]===-1||a[u]===o);w.assert(i,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&w.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=_n(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=_n(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},G4=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},H4="?tfjs-format=file",q4="model.json",j4=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new G4}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=An.browserHTTPRequest(e,this.loadOptions);else{let t=An.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(An.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=An.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Wm(Yx.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=Yx.Instance.transformGraph(e.modelInitializer);this.initializer=new Wm(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=An.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof et)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function uhe(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${q4}${H4}`);let n=new j4(e,t);return await n.load(),n}var lhe="0.0.0",K4={};Ae(K4,{CSVDataset:()=>L0,Dataset:()=>tu,FileDataSource:()=>q0,TextLineDataset:()=>M0,URLDataSource:()=>j0,array:()=>bU,csv:()=>$U,func:()=>_U,generator:()=>AU,microphone:()=>RU,version_data:()=>DU,webcam:()=>EU,zip:()=>yU});var X4=wa(jd()),Y4=wa(jd());function Q4(e,t){return zd(e,t)}function zd(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(ao(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let i in e){let o=e[i],u=zd(o,t,n,s);a[i]=u}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function Z4(e,t=_0){return $0(e,t)}function $0(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(ao(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let i in s){let o=e.map(l=>l[i]),u=$0(o,t,n);a[i]=u}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function _0(e){return e===null?null:ao(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function A0(e,t){let n=new Map;zd(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let i=await a;n.set(r,i)}}return zd(e,t,n)}function ao(e){let t=!1;if(K().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=Yw();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof et)&&!(e instanceof Promise)&&!t)}function J4(e){return e==null||eU(e)||Array.isArray(e)||typeof e=="object"&&e instanceof et||w.isTypedArray(e)}function eU(e){return e===null||typeof e!="object"&&typeof e!="function"}function tU(e){return Q4(e,nU)}function nU(e){return e instanceof et?{value:e.clone(),recurse:!1}:ao(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var E0=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},R0=class extends E0{constructor(){super(R0.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},D0=R0;D0.INITIAL_CAPACITY=32;function F0(e){return new aU(e)}function tv(e){return new iU(e)}function sU(e,t){return new O0(e,t)}function rU(e,t=P0.FAIL){return new mU(e,t)}var Gt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new hU(this,e)}filter(e){return new dU(this,e)}map(e){return new pU(this,e)}mapAsync(e){return new sw(this,e)}serialMapAsync(e){return new sw(this,e).serial()}flatmap(e){return new fU(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new cU(this,e,t)}columnMajorBatch(e,t=!0,n=_0){return this.rowMajorBatch(e,t).map(r=>Z4(r,n))}concatenate(e,t){return new O0(F0([this,e]),t)}take(e){return e<0||e==null?this:new lU(this,e)}skip(e){return e<0||e==null?this:new uU(this,e)}prefetch(e){return new z0(this,e)}shuffle(e,t){return new gU(this,e,t)}serial(){return new oU(this)}},aU=class extends Gt{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:tU(e),done:!1}}},iU=class extends Gt{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},oU=class extends Gt{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},uU=class extends Gt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Re(e.value)}return this.upstream.next()}},lU=class extends Gt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},cU=class extends Gt{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},dU=class extends Gt{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Re(e.value)}}},pU=class extends Gt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=_s.getTensorsInContainer(e.value),n=this.transform(e.value),s=_s.getTensorsInContainer(n);for(let r of t)_s.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},hU=class extends Gt{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},sw=class extends Gt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=_s.getTensorsInContainer(e.value),n=await this.transform(e.value),s=_s.getTensorsInContainer(n);for(let r of t)_s.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},nv=class extends Gt{constructor(){super(),this.outputQueue=new D0,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},fU=class extends nv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=_s.getTensorsInContainer(e.value),n=this.transform(e.value),s=_s.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)_s.isTensorInList(r,s)||r.dispose();return!0}},O0=class extends Gt{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},P0=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(P0||{}),mU=class extends Gt{constructor(e,t=0){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof Gt?{value:a.next().then(o=>(t++,o.done&&n++,o.value)),recurse:!1}:{value:null,recurse:!0}}let r=await A0(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},z0=class extends Gt{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new E0(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},gU=class extends z0{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Y4.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},tu=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),$n(async()=>(await n.iterator()).columnMajorBatch(e,t,vU),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,$n(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,$n(async()=>(await t.iterator()).filter(s=>q(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return $n(async()=>(await t.iterator()).map(n=>q(()=>e(n))),this.size)}mapAsync(e){let t=this;return $n(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return $n(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,$n(async()=>{let s=tv(async()=>({value:await t.iterator(),done:!1}));return sU(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,$n(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=X4.alea(t||w.now().toString());return $n(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,$n(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};tu.MAX_BUFFER_SIZE=1e4;function $n(e,t=null){return new class extends tu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function bU(e){return $n(async()=>F0(e),e.length)}function yU(e){if(!ao(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return $n(async()=>{let n=await A0(e,s=>{if(s instanceof tu)return{value:s.iterator(),recurse:!1};if(ao(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return rU(n,1)},t)}function vU(e){if(e===null)return null;let t=e[0];return J4(t)?{value:xU(e),recurse:!1}:{value:null,recurse:!0}}function xU(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof et?es(e):ms(e)}var M0=class extends tu{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},Yc='"',_u=Symbol("out"),rw=Symbol("field"),Qc=Symbol("quote"),Yf=Symbol("quoteafterquote"),aw=Symbol("quoteinquote"),L0=class extends tu{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new M0(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[r],u=null;if(o==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let l=Number(o);if(isNaN(l))i&&i.dtype==="bool"?u=this.getBoolean(o):u=o;else if(!i||!i.dtype)u=l;else switch(i.dtype){case"float32":u=l;break;case"int32":u=Math.floor(l);break;case"bool":u=this.getBoolean(o);break;default:u=l}}i&&i.isLabel?s[a]=u:n[a]=u}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=_u;for(let i=0;i<r;i++)switch(a){case _u:switch(e.charAt(i)){case Yc:s=i+1,a=Qc;break;case this.delimiter:if(s=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=_u;break;default:a=rw,s=i;break}break;case rw:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i)),a=_u,s=i+1;break;default:}break;case Qc:switch(e.charAt(i)){case Yc:a=Yf;break;default:}break;case Yf:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i-1)),a=_u,s=i+1;break;case Yc:a=Qc;break;default:a=aw;break}break;case aw:switch(e.charAt(i)){case Yc:a=Qc;break;default:}break;default:}if(a===Yf?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},B0=class extends Gt{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!K().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new B0(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),ms(n,t)}},V0=class extends Gt{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Zt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,i=r+n,o=s+a;this.cropBox=Zi([a,r,o,i],[1,4])}else this.cropBox=Zi([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!K().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new V0(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Fk.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return q(()=>{let t=Pn(le(e,"float32"),0),n;n=jn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return U(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},W0=class{},U0=class extends Gt{split(e){return new wU(this,e)}},wU=class extends U0{constructor(e,t){super(),this.upstream=e,this.impl=new kU(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},kU=class extends nv{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},SU=class extends Gt{decodeUTF8(){return new IU(this)}},IU=class extends U0{constructor(e){super(),this.upstream=e,this.impl=new CU(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},CU=class extends nv{constructor(e){if(super(),this.upstream=e,K().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Yw();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return K().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},G0=class extends SU{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(K().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=i=>{let o=r.result;if(o instanceof ArrayBuffer&&(o=new Uint8Array(o)),!(o instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(o)},r.onabort=i=>n(new Error("Aborted")),r.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function NU(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=TU(e));let a=await(n||w.fetch)(s,r);if(a.ok){let i=new Uint8Array(await a.arrayBuffer());return new G0(i,t)}else throw new Error(a.statusText)}var TU=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function H0(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var q0=class extends W0{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(H0(this.input)&&K().get("IS_NODE")){let e=ag();this.input=e.readFileSync(this.input.slice(7))}return new G0(this.input,this.options)}},j0=class extends W0{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return H0(this.url)?new q0(this.url,this.fileOptions).iterator():NU(this.url,this.fileOptions)}};function $U(e,t={}){return new L0(new j0(e),t)}function _U(e){let t=tv(e);return $n(async()=>t)}function AU(e){return $n(async()=>{let t=await e();return tv(()=>t.next())})}async function EU(e,t){return V0.create(e,t)}async function RU(e){return B0.create(e)}var DU="0.0.0";function be(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var FU=ws.whereImpl,K0=class extends rl{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Kd(this,ds())}nextDataId(){return K0.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,K().get("IS_NODE")&&C.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return C.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return De(e.shape,e.dtype,n)}makeOutput(e,t,n){return ds().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){be([e],"where");let t=this.readSync(e.dataId);return FU(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},X0=K0;X0.nextDataId=0;var sv={};Ae(sv,{addImpl:()=>Q0,bincountImpl:()=>av,bincountReduceImpl:()=>Z0,ceilImpl:()=>J0,concatImpl:()=>iv,equalImpl:()=>eC,expImpl:()=>nC,expm1Impl:()=>rC,floorImpl:()=>aC,gatherNdImpl:()=>iC,gatherV2Impl:()=>oC,greaterEqualImpl:()=>lC,greaterImpl:()=>uC,lessEqualImpl:()=>dC,lessImpl:()=>cC,linSpaceImpl:()=>pC,logImpl:()=>hC,maxImpl:()=>fC,maximumImpl:()=>mC,minimumImpl:()=>gC,multiplyImpl:()=>ov,negImpl:()=>bC,notEqualImpl:()=>yC,prodImpl:()=>vC,rangeImpl:()=>lv,rsqrtImpl:()=>xC,sigmoidImpl:()=>kG,simpleAbsImpl:()=>Y0,sliceImpl:()=>Ld,sparseFillEmptyRowsImpl:()=>kC,sparseReshapeImpl:()=>SC,sparseSegmentReductionImpl:()=>cv,sqrtImpl:()=>CG,squaredDifferenceImpl:()=>IC,stridedSliceImpl:()=>CC,stringNGramsImpl:()=>NC,stringSplitImpl:()=>TC,stringToHashBucketFastImpl:()=>$C,subImpl:()=>_C,tileImpl:()=>AC,topKImpl:()=>RC,transposeImpl:()=>uv,uniqueImpl:()=>DC});function Y0(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var OU=e=>{let{x:t}=e.inputs,n=e.backend;be(t,"abs");let s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=Y0(r),n.makeOutput(s,t.shape,t.dtype)},PU={kernelName:co,backendName:"cpu",kernelFunc:OU};function At(e){return(t,n,s,r,a)=>{let i=C.assertAndGetBroadcastShape(t,n),o=i.length,u=w.computeStrides(i),l=w.sizeFromShape(i),c=w.getTypedArrayFromDType(a,l),p=t.length,d=n.length,h=w.computeStrides(t),f=w.computeStrides(n),m=C.getBroadcastDims(t,i),g=C.getBroadcastDims(n,i);if(m.length+g.length===0)for(let b=0;b<c.length;++b)c[b]=e(s[b%s.length],r[b%r.length]);else for(let b=0;b<c.length;++b){let y=w.indexToLoc(b,o,u),v=y.slice(-p);m.forEach($=>v[$]=0);let x=w.locToIndex(v,p,h),k=y.slice(-d);g.forEach($=>k[$]=0);let I=w.locToIndex(k,d,f);c[b]=e(s[x],r[I])}return[c,i]}}function En(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64"),u=n.data.get(o.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}var zU={kernelName:Zd,backendName:"cpu",kernelFunc:En};function Md(e,t,n="float32"){if(n==="complex64"){let r=Md(e,t,"float32"),a=Md(e,t,"float32");return En({inputs:{real:r,imag:a},backend:e})}let s=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Os(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var MU={kernelName:Wa,backendName:"cpu",kernelFunc:Os};function ga(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var LU={kernelName:op,backendName:"cpu",kernelFunc:ga};function xr(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Os({inputs:{x:r},backend:n});let i=Md(n,r.shape,r.dtype),o=xr({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=En({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}if(r.dtype==="complex64"){let i=ga({inputs:{input:r},backend:n}),o=xr({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=Os({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32"){let i=n.data.get(r.dataId).values,o=Int32Array.from(i);return n.makeTensorInfo(r.shape,"int32",o)}if(a==="bool"){let i=n.data.get(r.dataId).values,o=w.toTypedArray([0],r.dtype),[u,l]=At((c,p)=>c!==p?1:0)(r.shape,[],i,o,"bool");return n.makeTensorInfo(l,"bool",u)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var BU={kernelName:Ta,backendName:"cpu",kernelFunc:xr};function Ht(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;be([i,o],e);let l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,p=i.dtype==="string"?C.fromUint8ToStringArray(l):l,d=i.dtype==="string"?C.fromUint8ToStringArray(c):c,h=s||i.dtype,[f,m]=t(i.shape,o.shape,p,d,h);return u.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;if(i.dtype==="complex64"||o.dtype==="complex64"){let l=xr({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),c=u.data.get(l.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,h=u.data.get(p.dataId).values,f=u.data.get(d.dataId).values,m=xr({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),b=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,v=u.data.get(b.dataId).values,x=u.data.get(y.dataId).values,[k,I,$]=n(i.shape,o.shape,h,f,v,x),E=u.makeTensorInfo($,"float32",k),A=u.makeTensorInfo($,"float32",I),P=En({inputs:{real:E,imag:A},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(E),u.disposeIntermediateTensorInfo(A),P}else{let l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,p=s||i.dtype,[d,h]=t(i.shape,o.shape,l,c,p);return u.makeTensorInfo(h,p,d)}}}function rv(e){return(t,n,s,r,a,i)=>{let o=C.assertAndGetBroadcastShape(t,n),u=w.sizeFromShape(o),l=o.length,c=w.computeStrides(o),p=w.getTypedArrayFromDType("float32",u),d=w.getTypedArrayFromDType("float32",u),h=C.getBroadcastDims(t,o),f=C.getBroadcastDims(n,o),m=C.mergeRealAndImagArrays(s,r),g=C.mergeRealAndImagArrays(a,i),b=t.length,y=w.computeStrides(t),v=n.length,x=w.computeStrides(n);if(h.length+f.length===0)for(let k=0;k<p.length;k++){let I=k%m.length,$=k%g.length,E=e(m[I*2],m[I*2+1],g[$*2],g[$*2+1]);p[k]=E.real,d[k]=E.imag}else for(let k=0;k<p.length;k++){let I=w.indexToLoc(k,l,c),$=I.slice(-b);h.forEach(F=>$[F]=0);let E=w.locToIndex($,b,y),A=I.slice(-v);f.forEach(F=>A[F]=0);let P=w.locToIndex(A,v,x),R=e(m[E*2],m[E*2+1],g[P*2],g[P*2+1]);p[k]=R.real,d[k]=R.imag}return[p,d,o]}}var Q0=At((e,t)=>e+t),VU=rv((e,t,n,s)=>({real:e+n,imag:t+s})),Xl=Ht(Sr,Q0,VU),WU={kernelName:Sr,backendName:"cpu",kernelFunc:Xl};function av(e,t,n,s,r){let a=w.sizeFromShape(s),i=w.makeZerosTypedArray(r,n);for(let o=0;o<e.length;o++){let u=e[o];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(a>0?i[u]+=t[o]:i[u]+=1)}return i}function Z0(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],i=De([r,n],t.dtype);for(let o=0;o<r;o++)for(let u=0;u<a;u++){let l=e.get(o,u);if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s?i.set(1,o,l):t.size>0?i.set(i.get(o,l)+t.get(o,u),o,l):i.set(i.get(o,l)+1,o,l))}return i}function Er(e){return(t,n,s)=>{let r=w.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function st(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:i}=s;if(be(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=a,u=o.data.get(i.dataId).values,l=w.sizeFromShape(i.shape),c=n||i.dtype,p=w.getArrayFromDType(c,l);for(let d=0;d<l;++d)p[d]=t(u[d],r);return o.makeTensorInfo(i.shape,c,p)}}function nu(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:i}=s;if(be(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,r);return o.makeTensorInfo(i.shape,l,c)}}var J0=Er(e=>Math.ceil(e)),UU=nu($a,J0),GU={kernelName:$a,backendName:"cpu",kernelFunc:UU};function iv(e,t,n,s){let r=w.getArrayFromDType(n,w.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);r.set(i.vals,a),a+=o})}else{let a=0;e.forEach(i=>{let o=n==="string"?C.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let l=0;l<i.shape[0];++l){let c=l*t[1]+a;for(let p=0;p<i.shape[1];++p)r[c+p]=o[u++]}a+=i.shape[1]})}return r}var eC=At((e,t)=>e===t?1:0),tC=Ht(bo,eC,null,"bool"),HU={kernelName:bo,backendName:"cpu",kernelFunc:tC},nC=Er(e=>Math.exp(e)),sC=nu(za,nC,"float32"),qU={kernelName:za,backendName:"cpu",kernelFunc:sC},rC=Er(e=>Math.expm1(e)),jU=nu(vo,rC),KU={kernelName:vo,backendName:"cpu",kernelFunc:jU},aC=Er(e=>Math.floor(e)),XU=nu(Ma,aC),YU={kernelName:Ma,backendName:"cpu",kernelFunc:XU};function iC(e,t,n,s,r,a,i,o,u){let l=De([s,a],n);for(let c=0;c<s;c++){let p=[],d=0;for(let h=0;h<r;h++){let f=e[c*r+h];d+=f*i[h],p.push(f)}if(d<0||d>=u/a)throw new Error(`Invalid indices: ${p} does not index into ${o}`);for(let h=0;h<a;h++)l.values[c*a+h]=t.get(...t.indexToLoc(d*a+h))}return l}function oC(e,t,n){let s=De(n,e.dtype);for(let r=0;r<s.size;++r){let i=s.indexToLoc(r).slice(),o=i[0],u=i[2],l=t.locToIndex([o,u]);i[2]=t.values[l];let c=e.locToIndex(i);0<=c&&c<e.values.length&&(s.values[r]=e.values[c])}return s}var uC=At((e,t)=>e>t?1:0),QU=Ht(So,uC,null,"bool"),ZU={kernelName:So,backendName:"cpu",kernelFunc:QU},lC=At((e,t)=>e>=t?1:0),JU=Ht(Va,lC,null,"bool"),eG={kernelName:Va,backendName:"cpu",kernelFunc:JU},cC=At((e,t)=>e<t?1:0),tG=Ht(Io,cC,null,"bool"),nG={kernelName:Io,backendName:"cpu",kernelFunc:tG},dC=At((e,t)=>e<=t?1:0),sG=Ht(Co,dC,null,"bool"),rG={kernelName:Co,backendName:"cpu",kernelFunc:sG};function pC(e,t,n){let s=(t-e)/(n-1),r=w.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var hC=Er(e=>Math.log(e)),aG=nu(Ga,hC),iG={kernelName:Ga,backendName:"cpu",kernelFunc:aG};function fC(e,t,n,s){let r=w.getTypedArrayFromDType(s,w.sizeFromShape(n));for(let a=0;a<r.length;++a){let i=a*t,o=e[i];for(let u=0;u<t;++u){let l=e[i+u];(Number.isNaN(l)||l>o)&&(o=l)}r[a]=o}return r}var mC=At((e,t)=>Math.max(e,t)),oG=Ht(qa,mC),uG={kernelName:qa,backendName:"cpu",kernelFunc:oG},gC=At((e,t)=>Math.min(e,t)),lG=Ht(Ya,gC),cG={kernelName:Ya,backendName:"cpu",kernelFunc:lG},ov=At((e,t)=>e*t),dG=rv((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Yp=Ht(Za,ov,dG),pG={kernelName:Za,backendName:"cpu",kernelFunc:Yp};function bC(e,t,n){let s=w.createScalarValue(-1,n);return ov([],t,s,e,n)}function hG(e){let{inputs:t,backend:n}=e,{x:s}=t;be(s,"neg");let r=n.data.get(s.dataId).values,[a,i]=bC(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}var fG={kernelName:To,backendName:"cpu",kernelFunc:hG},yC=At((e,t)=>e!==t?1:0),mG=Ht($o,yC,null,"bool"),gG={kernelName:$o,backendName:"cpu",kernelFunc:mG};function uv(e,t,n,s,r){let a=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),u=w.computeStrides(r),l=w.getTypedArrayFromDType(n,w.sizeFromShape(r));for(let c=0;c<i;++c){let p=w.indexToLoc(c,a,o),d=new Array(p.length);for(let f=0;f<d.length;f++)d[f]=p[s[f]];let h=w.locToIndex(d,a,u);l[h]=e[c]}return l}function wn(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;be(r,"transpose");let i=r.shape.length,o=new Array(i);for(let p=0;p<o.length;p++)o[p]=r.shape[a[p]];let u=s.data.get(r.dataId).values,l=uv(u,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}var bG={kernelName:mi,backendName:"cpu",kernelFunc:wn};function vC(e,t,n,s){let[r,a]=C.computeOutAndReduceShapes(e,s),i=cn(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(r),i),u=w.sizeFromShape(a);for(let l=0;l<o.length;++l){let c=l*u,p=1;for(let d=0;d<u;++d)p*=n[c+d];o[l]=p}return{outVals:o,outShape:r,outDtype:i}}function yG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"prod");let o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=C.getAxesPermutation(u,o),c=u,p=r,d=[];l!=null&&(p=wn({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(p),c=C.getInnerMostAxes(c.length,o));let h=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=vC(p.shape,p.dtype,h,c),b=m;return i&&(b=C.expandShapeToKeepDim(m,u)),d.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(b,g,f)}var vG={kernelName:ni,backendName:"cpu",kernelFunc:yG};function lv(e,t,n,s){let r=e===t,a=e<t&&n<0,i=t<e&&n>1;if(r||a||i)return w.makeZerosTypedArray(0,s);let o=Math.abs(Math.ceil((t-e)/n)),u=w.makeZerosTypedArray(o,s);t<e&&n===1&&(n=-1),u[0]=e;for(let l=1;l<u.length;l++)u[l]=u[l-1]+n;return u}var xC=Er(e=>1/Math.sqrt(e)),xG=nu(ii,xC),wG={kernelName:ii,backendName:"cpu",kernelFunc:xG},kG=Er(e=>1/(1+Math.exp(-e))),wC=st(ui,e=>1/(1+Math.exp(-e))),SG={kernelName:ui,backendName:"cpu",kernelFunc:wC};function Ld(e,t,n,s,r){let a=wt.isSliceContinous(s,t,n),i=w.sizeFromShape(n),o=w.computeStrides(s);if(a){let p=wt.computeFlatOffset(t,o);return r==="string"?e.slice(p,p+i):e.subarray(p,p+i)}let u=r==="string"?C.fromUint8ToStringArray(e):e,l=De(s,r,u),c=De(n,r);for(let p=0;p<c.size;++p){let d=c.indexToLoc(p),h=d.map((f,m)=>f+t[m]);c.set(l.get(...h),...d)}return r==="string"?C.fromStringArrayToUint8(c.values):c.values}function ba(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;be(r,"slice");let[o,u]=wt.parseSliceParams(r,a,i);wt.assertParamsValid(r,o,u);let l=n.data.get(r.dataId).values,c=Ld(l,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,c)}var IG={kernelName:Lo,backendName:"cpu",kernelFunc:ba};function kC(e,t,n,s,r,a,i){let o=t[0],u=a[0],l=new Array(u),c=new Array(o),p=t[1];if(u===0){if(o!==0)throw new Error(C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=w.getArrayFromDType(n,0),b=w.getArrayFromDType(r,0);return[g,[0,p],b,l,c]}let d=!0,h=0,f=new Array(u).fill(0);for(let g=0;g<o;++g){let b=e[g*p];if(b<0)throw new Error(C.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=u)throw new Error(C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,u));++f[b],d=d&&b>=h,h=b}let m=!0;for(let g=0;g<u;++g){let b=f[g]===0;l[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let g=e,b=s;for(let y=0;y<o;++y)c[y]=y;return[g,[o,p],b,l,c]}else{let g=f[u-1],b=w.getArrayFromDType(n,g*p),y=w.getArrayFromDType(r,g),v=new Array(u).fill(0);for(let x=0;x<o;++x){let k=e[x*p],I=v[k],$=(k===0?0:f[k-1])+I;v[k]++;for(let E=0;E<p;++E)b[$*p+E]=e[x*p+E];y[$]=s[x],c[x]=$}for(let x=0;x<u;++x)if(v[x]===0){let I=x===0?0:f[x-1];b[I*p+0]=x;for(let $=1;$<p;++$)b[I*p+$]=0;y[I]=i}return[b,[g,p],y,l,c]}}function SC(e,t,n,s,r){let a=w.sizeFromShape(s),i=t[0],o=r.length,u=[],l=1,c=-1;for(let g=0;g<o;++g){let b=r[g];if(b===-1){if(c!==-1)throw new Error(C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,g));c=g,u.push(1)}else{if(b<0)throw new Error(C.getSparseReshapeNegativeOutputDimErrorMessage(g,b));l*=b,u.push(b)}}if(c!==-1){if(l<=0)throw new Error(C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/l);if(l*g!==a)throw new Error(C.getSparseReshapeInputOutputMultipleErrorMessage(s,u));u[c]=g}if(w.sizeFromShape(u)!==a)throw new Error(C.getSparseReshapeInputOutputMismatchErrorMessage(s,u));let d=s.length,h=[];if(d>0){h[d-1]=1;for(let g=d-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(o>0){f[o-1]=1;for(let g=o-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let m=w.getArrayFromDType(n,i*o);for(let g=0;g<i;++g){let b=0;for(let y=0;y<d;++y)b+=e[g*d+y]*h[y];for(let y=0;y<o;++y)m[g*o+y]=Math.trunc(b/f[y]),b%=f[y]}return[m,[i,o],u]}function cv(e,t,n,s,r,a=!1,i=0){let o=s.length,u=[t[0],e.length/t[0]],l=u[1],p=o>0?r[o-1]+1:0;if(p<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let h=d.reduce((v,x)=>v*x,1),f=w.getArrayFromDType(n,h);if(o===0)return p>0&&f.fill(i),[f,d];if(p<=0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,b=0,y=r[m];for(;;){let v=0;if(g<o){if(v=r[g],y===v){++g;continue}if(y>=v)throw new Error(C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>b&&f.fill(i,b*l,y*l);for(let x=m;x<g;++x){let k=s[x];if(k<0||k>=u[0])throw new Error(C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,s[x],u[0]));for(let I=0;I<l;I++)f[y*l+I]+=e[k*l+I]}if(a)for(let x=0;x<l;x++)f[y*l+x]/=g-m;if(m=g,++g,b=y+1,y=v,g>o)break}return b<p&&f.fill(i,b*l,p*l),[f,d]}var CG=Er(e=>Math.sqrt(e)),NG=st(li,e=>Math.sqrt(e)),TG={kernelName:li,backendName:"cpu",kernelFunc:NG},IC=At((e,t)=>{let n=e-t;return n*n}),$G=Ht(pi,IC),_G={kernelName:pi,backendName:"cpu",kernelFunc:$G};function CC(e,t,n,s){let r=De(e,t.dtype);for(let a=0;a<r.size;a++){let i=r.indexToLoc(a),o=new Array(i.length);for(let u=0;u<o.length;u++)o[u]=i[u]*n[u]+s[u];r.set(t.get(...o),...i)}return r}var AG=class{constructor(e,t,n,s,r,a){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){let o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(r-(i+1))),c=a-(u+l),p=t+(u>0?0:i-o),d=0;d+=u*this.leftPad.length;for(let b=0;b<c;++b)d+=e[p+b].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[s+i]=new Uint8Array(d);let f=n[s+i],m=0,g=b=>b.forEach(y=>f[m++]=y);for(let b=0;b<u;++b)g(this.leftPad),g(this.separator);for(let b=0;b<c-1;++b)g(e[p+b]),g(this.separator);if(c>0){g(e[p+c-1]);for(let b=0;b<l;++b)g(this.separator),g(this.rightPad)}else{for(let b=0;b<l-1;++b)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let u=1;u<s;++u){let l=t[u]>=o;if(l=l&&t[u]<=n,!l)throw new Error(`Invalid split value ${t[u]}, must be in [${o}, ${n}]`);o=t[u]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let r=s-1,a=w.getArrayFromDType("int32",s);if(n===0||s===0){let o=new Array(n);for(let u=0;u<=r;++u)a[u]=0;return[o,a]}a[0]=0;for(let o=1;o<=r;++o){let u=t[o]-t[o-1],l=0;this.nGramWidths.forEach(c=>{l+=this.getNumNGrams(u,c)}),this.preserveShort&&u>0&&l===0&&(l=1),a[o]=a[o-1]+l}let i=new Array(a[r]);for(let o=0;o<r;++o){let u=t[o],l=a[o];if(this.nGramWidths.forEach(c=>{let p=t[o+1]-t[o],d=this.getNumNGrams(p,c);this.createNGrams(e,u,i,l,d,c),l+=d}),this.preserveShort&&l===a[o]){let c=t[o+1]-t[o];if(c===0)continue;let p=c+2*this.padWidth,d=1;this.createNGrams(e,u,i,l,d,p)}}return[i,a]}};function NC(e,t,n,s,r,a,i,o){return new AG(n,s,r,a,i,o).compute(e,t)}function EG(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],i=e.indexOf(a);for(;i!==-1;){let o=e.subarray(0,i);(!n||o.length!==0)&&s.push(o),e=e.subarray(i+1),i=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let i=e.subarray(r,a);(!n||i.length!==0)&&s.push(i),r=a+1}}function TC(e,t,n){let s=e.length,r=[],a=0,i=0,o=new Array(s);for(let d=0;d<s;++d){let h=r.length;EG(e[d],t,n,r);let f=r.length-h;o[d]=f,a+=f,i=Math.max(i,f)}let u=w.getArrayFromDType("int32",a*2),l=new Array(a),c=[s,i],p=0;for(let d=0;d<s;++d)for(let h=0;h<o[d];++h)u[p*2]=d,u[p*2+1]=h,l[p]=r[p],++p;return[u,l,c]}function $C(e,t){let n=w.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=w.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var _C=At((e,t)=>e-t),RG=rv((e,t,n,s)=>({real:e-n,imag:t-s})),dv=Ht(hi,_C,RG),DG={kernelName:hi,backendName:"cpu",kernelFunc:dv};function AC(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=De(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),i=new Array(e.rank);for(let u=0;u<i.length;u++)i[u]=a[u]%e.shape[u];let o=e.locToIndex(i);s.values[r]=e.values[o]}return s}var Fu=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function EC(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let o=s-n+1,u=t-n+1,l=Math.log(o),c=.5*Math.exp(2*l/3),p=.5*Math.sqrt(l*c*(o-c)/o)*Math.sign(u-o/2),d=Math.max(n,Math.floor(t-u*c/o+p)),h=Math.min(s,Math.floor(t+(o-u)*c/o+p));EC(e,t,d,h)}let r=e[t],a=n,i=s;for(w.swap(e,n,t),Fu(e[s],r)>0&&w.swap(e,n,s);a<i;){for(w.swap(e,a,i),a++,i--;Fu(e[a],r)<0;)a=a+1;for(;Fu(e[i],r)>0;)i=i-1}Fu(e[n],r)===0?w.swap(e,n,i):(i=i+1,w.swap(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function RC(e,t,n,s,r){let a=t[t.length-1],[i,o]=[e.length/a,a],u=w.getTypedArrayFromDType(n,i*s),l=w.getTypedArrayFromDType("int32",i*s);for(let p=0;p<i;p++){let d=p*o,h=e.subarray(d,d+o),f=new Array(h.length);h.forEach((y,v)=>f[v]={value:y,index:v}),s<f.length&&(EC(f,s),f=f.slice(0,s)),r&&f.sort(Fu);let m=p*s,g=u.subarray(m,m+s),b=l.subarray(m,m+s);for(let y=0;y<s;y++)g[y]=f[y].value,b[y]=f[y].index}let c=t.slice();return c[c.length-1]=s,[De(c,n,u),De(c,"int32",l)]}function DC(e,t,n,s){let r=w.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let i={},o=new Int32Array(n[r]),u=new Wt(a,s,e),l=[],c=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=e[f].toString();else{let g=[];for(let b=0;b<a[0];b++)for(let y=0;y<a[2];y++)g.push(u.get(b,f,y));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,l.push(f)}}let p=a.slice();p[1]=Object.keys(i).length;let d=new Wt(p,s);l.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let b=0;b<a[2];b++)d.set(u.get(g,f,b),g,m,b)});let h=n.slice();return h[r]=p[1],{outputValues:d.values,outputShape:h,indices:o}}var che="0.0.0";bp("cpu",()=>new X0,1);var FC=st(Pa,e=>e>=0?e:Math.exp(e)-1),FG={kernelName:Pa,backendName:"cpu",kernelFunc:FC};function OC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;be([r],"leakyRelu");let i=w.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,u=w.getTypedArrayFromDType("float32",i);for(let l=0;l<o.length;l++)u[l]=o[l]<0?a*o[l]:o[l];return n.makeTensorInfo(r.shape,"float32",u)}var OG={kernelName:Ua,backendName:"cpu",kernelFunc:OC},PG=At((e,t)=>e<0?t*e:e);function PC(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;be([s,r],"prelu");let a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,u]=PG(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}var zG={kernelName:ti,backendName:"cpu",kernelFunc:PC},zC=st(si,e=>Math.max(0,e)),MG={kernelName:si,backendName:"cpu",kernelFunc:zC},MC=st(ai,e=>Math.min(Math.max(0,e),6)),LG={kernelName:ai,backendName:"cpu",kernelFunc:MC};function pv(e,t,n,s,r){if(n==="linear")return Os({inputs:{x:t},backend:e});if(n==="relu")return zC({inputs:{x:t},backend:e});if(n==="elu")return FC({inputs:{x:t},backend:e});if(n==="relu6")return MC({inputs:{x:t},backend:e});if(n==="prelu")return PC({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return OC({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return wC({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function mt(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=w.sizeFromShape(r.shape),o=w.inferFromImplicitShape(a,i),u=w.sizeFromShape(o);w.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let l=n.data.get(r.dataId);if(l.complexTensorInfos!=null){let c=l.complexTensorInfos.real,p=l.complexTensorInfos.imag;c.shape=o,p.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var BG={kernelName:Fo,backendName:"cpu",kernelFunc:mt};function LC(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;be([r,a],"matMul");let u=r.shape.length,l=a.shape.length,c=i?r.shape[u-2]:r.shape[u-1],p=o?a.shape[l-1]:a.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],h=o?a.shape[l-2]:a.shape[l-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),v=bi.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);w.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,c,d]:[g,d,c],k=o?[b,h,p]:[b,p,h],I=mt({inputs:{x:r},backend:n,attrs:{shape:x}}),$=mt({inputs:{x:a},backend:n,attrs:{shape:k}}),E=i?I.shape[1]:I.shape[2],A=i?I.shape[2]:I.shape[1],P=o?$.shape[1]:$.shape[2],R=Math.max(g,b),F=n.data.get(I.dataId).values,T=n.data.get($.dataId).values,z=w.computeStrides(I.shape),W=w.computeStrides($.shape),[j,X,Y]=i?[z[0],1,z[1]]:[z[0],z[1],1],[Z,te,J]=o?[1,W[1],W[0]]:[W[1],1,W[0]],se=A*P,ne=De([R,A,P],I.dtype),oe=ne.values,ae=n.blockSize;for(let de=0;de<R;de++)for(let me=0;me<A;me+=ae)for(let ke=0;ke<P;ke+=ae)for(let Ie=0;Ie<E;Ie+=ae){let Ee=Math.min(me+ae,A),Pe=Math.min(ke+ae,P),Xe=Math.min(Ie+ae,E);for(let Je=me;Je<Ee;Je++)for(let Ye=ke;Ye<Pe;Ye++){let tt=0;for(let Ce=Ie;Ce<Xe;Ce++){let ut=Math.min(de,g-1)*j,rt=Math.min(de,b-1)*J,Jt=F[ut+Je*X+Ce*Y],Nt=T[Ce*Z+Ye*te+rt];tt+=Jt*Nt}oe[de*se+(Je*P+Ye)]+=tt}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo($),n.makeTensorInfo(v,ne.dtype,ne.values)}var VG={kernelName:Na,backendName:"cpu",kernelFunc:LC};function WG(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=s,d,h,f,m=[];d=LC({inputs:{a:r,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(h=Xl({inputs:{a:d,b:i},backend:n}),m.push(d),d=h),c&&(f=pv(n,d,c,o,p),m.push(d),d=f);for(let b of m)n.disposeIntermediateTensorInfo(b);return d}var UG={kernelName:aa,backendName:"cpu",kernelFunc:WG},GG=st(al,e=>Math.acos(e)),HG={kernelName:al,backendName:"cpu",kernelFunc:GG},qG=st(il,e=>Math.acosh(e)),jG={kernelName:il,backendName:"cpu",kernelFunc:qG};function KG(e){let{inputs:t,backend:n}=e,s=t;be(t,"addN");let r=s.map(o=>n.data.get(o.dataId).values),a=De(s[0].shape,s[0].dtype),i=a.values;for(let o=0;o<s.length;o++){let u=r[o];for(let l=0;l<i.length;l++)i[l]+=u[l]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var XG={kernelName:Sa,backendName:"cpu",kernelFunc:KG};function YG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"all");let o=w.parseAxisParam(a,r.shape),u=o,l=C.getAxesPermutation(u,r.shape.length),c=r;l!=null&&(c=wn({inputs:{x:r},backend:n,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,r.shape.length)),C.assertAxesAreInnerMostDims("all",u,c.shape.length);let[p,d]=C.computeOutAndReduceShapes(c.shape,u),h=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];v=v&&k}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(i){let b=C.expandShapeToKeepDim(p,o),y=mt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var QG={kernelName:ol,backendName:"cpu",kernelFunc:YG};function ZG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"any");let o=w.parseAxisParam(a,r.shape),u=o,l=C.getAxesPermutation(u,r.shape.length),c=r;l!=null&&(c=wn({inputs:{x:r},backend:n,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,r.shape.length)),C.assertAxesAreInnerMostDims("any",u,c.shape.length);let[p,d]=C.computeOutAndReduceShapes(c.shape,u),h=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];v=v||k}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(i){let b=C.expandShapeToKeepDim(p,o),y=mt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var JG={kernelName:ul,backendName:"cpu",kernelFunc:ZG};function eH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;be(r,"argMax");let i=w.parseAxisParam(a,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=wn({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],C.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[c,p]=C.computeOutAndReduceShapes(u.shape,i),d=w.sizeFromShape(c),h=w.makeZerosTypedArray(d,"int32"),f=w.sizeFromShape(p),m=n.data.get(u.dataId).values;for(let g=0;g<h.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let k=m[b+x];k>y&&(y=k,v=x)}h[g]=v}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var tH={kernelName:Ia,backendName:"cpu",kernelFunc:eH};function nH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;be(r,"argMin");let i=w.parseAxisParam(a,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=wn({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],C.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[c,p]=C.computeOutAndReduceShapes(u.shape,i),d=w.sizeFromShape(c),h=w.makeZerosTypedArray(d,"int32"),f=w.sizeFromShape(p),m=n.data.get(u.dataId).values;for(let g=0;g<h.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let k=m[b+x];k<y&&(y=k,v=x)}h[g]=v}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var sH={kernelName:ll,backendName:"cpu",kernelFunc:nH},rH=st(cl,e=>Math.asin(e)),aH={kernelName:cl,backendName:"cpu",kernelFunc:rH},iH=st(dl,e=>Math.asinh(e)),oH={kernelName:dl,backendName:"cpu",kernelFunc:iH},uH=st(pl,e=>Math.atan(e)),lH={kernelName:pl,backendName:"cpu",kernelFunc:uH},cH=At((e,t)=>Math.atan2(e,t)),dH=Ht(fl,cH),pH={kernelName:fl,backendName:"cpu",kernelFunc:dH},hH=st(hl,e=>Math.atanh(e)),fH={kernelName:hl,backendName:"cpu",kernelFunc:hH};function hv(e,t,n,s,r,a){let i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=De(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let x=0;x<r.batchSize;++x){let k=x*b,I=x*s[0];for(let $=0;$<r.inChannels;++$)for(let E=0;E<r.outHeight;++E){let A=E*i-d,P=Math.max(0,A),R=Math.min(r.inHeight,c+A),F=k+E*y;for(let T=0;T<r.outWidth;++T){let z=T*o-h,W=Math.max(0,z),j=Math.min(r.inWidth,p+z),X=f,Y=0,Z=0;for(let J=P;J<R;J+=u){let se=I+J*s[1];for(let ne=W;ne<j;ne+=l){let oe=se+ne*s[2],ae=e[oe+$];a==="max"&&ae>X?X=ae:a==="avg"&&(Y+=ae,Z++)}if(isNaN(X))break}let te=F+T*v+$;g[te]=a==="avg"?Y/Z:X}}}return m}function BC(e,t,n,s,r=!1,a=!1){let i=De(s.outShape,"int32"),o=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,p=s.effectiveFilterHeight,d=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=De(t,n,e);for(let g=0;g<s.batchSize;++g)for(let b=0;b<s.inChannels;++b)for(let y=0;y<s.outHeight;++y){let v=y*o-h,x=v;for(;x<0;)x+=l;let k=Math.min(s.inHeight,p+v);for(let I=0;I<s.outWidth;++I){let $=I*u-f,E=$;for(;E<0;)E+=c;let A=Math.min(s.inWidth,d+$),P=Number.NEGATIVE_INFINITY,R=-1;for(let F=x;F<k;F+=l){let T=F-v;for(let z=E;z<A;z+=c){let W=z-$,j=m.get(g,F,z,b);j>P&&(P=j,r?R=a?((g*s.inHeight+F)*s.inWidth+z)*s.inChannels+b:(F*s.inWidth+z)*s.inChannels+b:R=T*d+W)}}i.set(R,g,y,I,b)}}return i}function VC(e,t,n,s,r,a){let i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,y=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=De(r.outShape,n),x=v.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[2]*r.outShape[3]*r.outShape[4],$=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let A=0;A<r.batchSize;++A){let P=A*k,R=A*s[0];for(let F=0;F<r.inChannels;++F)for(let T=0;T<r.outDepth;++T){let z=T*i-m,W=z;for(;W<0;)W+=l;let j=Math.min(r.inDepth,d+z),X=P+T*I;for(let Y=0;Y<r.outHeight;++Y){let Z=Y*o-g,te=Z;for(;te<0;)te+=c;let J=Math.min(r.inHeight,h+Z),se=X+Y*$;for(let ne=0;ne<r.outWidth;++ne){let oe=ne*u-b,ae=oe;for(;ae<0;)ae+=p;let de=Math.min(r.inWidth,f+oe),me=se+ne*E,ke=y,Ie=0,Ee=0;for(let Xe=W;Xe<j;Xe+=l){let Je=R+Xe*s[1];for(let Ye=te;Ye<J;Ye+=c){let tt=Je+Ye*s[2];for(let Ce=ae;Ce<de;Ce+=p){let ut=tt+Ce*s[3],rt=e[ut+F];if(a==="max"&&rt>ke?ke=rt:a==="avg"&&(Ie+=rt,Ee++),isNaN(ke))break}if(isNaN(ke))break}if(isNaN(ke))break}let Pe=me+F;x[Pe]=a==="avg"?Ie/Ee:ke}}}}return v}function mH(e,t){let n=De(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let y=b*s-d,v=y;for(;v<0;)v+=i;let x=Math.min(t.inDepth,l+y);for(let k=0;k<t.outHeight;++k){let I=k*r-h,$=I;for(;$<0;)$+=o;let E=Math.min(t.inHeight,c+I);for(let A=0;A<t.outWidth;++A){let P=A*a-f,R=P;for(;R<0;)R+=u;let F=Math.min(t.inWidth,p+P),T=Number.NEGATIVE_INFINITY,z=-1;for(let W=v;W<x;W+=i){let j=W-y;for(let X=$;X<E;X+=o){let Y=X-I;for(let Z=R;Z<F;Z+=u){let te=Z-P,J=e.get(m,W,X,Z,g);J>=T&&(T=J,z=j*c*p+Y*c+te)}}}n.set(z,m,b,k,A,g)}}}return n}function gH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;be(r,"avgPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(C.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=C.computePool2DInfo(r.shape,a,i,l,o,u),p;if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))p=Os({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),f=hv(d,r.shape,r.dtype,h,c,"avg");p=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return p}var bH={kernelName:Ca,backendName:"cpu",kernelFunc:gH};function yH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s;be(r,"avgPool3d");let c=C.computePool3DInfo(r.shape,a,i,1,o,u,l),p=n.data.get(r.dataId).values,d=VC(p,r.shape,r.dtype,w.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var vH={kernelName:Qd,backendName:"cpu",kernelFunc:yH};function xH(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;be([r,a],"avgPool3DGrad");let c=C.computePool3DInfo(a.shape,i,o,1,u,l),p=c.strideDepth,d=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,v=c.dilationWidth,x=c.effectiveFilterDepth,k=c.effectiveFilterHeight,I=c.effectiveFilterWidth,$=x-1-c.padInfo.front,E=I-1-c.padInfo.left,A=k-1-c.padInfo.top,P=De(a.shape,"float32"),R=1/(f*m*g),F=n.bufferSync(r);for(let T=0;T<c.batchSize;++T)for(let z=0;z<c.inChannels;++z)for(let W=0;W<c.inDepth;++W)for(let j=0;j<c.inHeight;++j)for(let X=0;X<c.inWidth;++X){let Y=W-$,Z=j-A,te=X-E,J=0;for(let se=0;se<x;se+=b){let ne=(Y+se)/p;if(!(ne<0||ne>=c.outDepth||Math.floor(ne)!==ne))for(let oe=0;oe<k;oe+=y){let ae=(Z+oe)/d;if(!(ae<0||ae>=c.outHeight||Math.floor(ae)!==ae))for(let de=0;de<I;de+=v){let me=(te+de)/h;if(me<0||me>=c.outWidth||Math.floor(me)!==me)continue;J+=F.get(T,ne,ae,me,z)}}}P.set(J*R,T,W,j,X,z)}return n.makeTensorInfo(P.shape,P.dtype,P.values)}var wH={kernelName:dg,backendName:"cpu",kernelFunc:xH};function kH(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;be([r,a],"avgPoolGrad");let{filterSize:o,strides:u,pad:l}=s,c=C.computePool2DInfo(i.shape,o,u,1,l),p=c.strideHeight,d=c.strideWidth,h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,v=y-1-c.padInfo.left,x=b-1-c.padInfo.top,k=De(i.shape,"float32"),I=1/(h*f),$=n.data.get(r.dataId).values,E=De(r.shape,"float32",$);for(let A=0;A<c.batchSize;++A)for(let P=0;P<c.inChannels;++P)for(let R=0;R<c.inHeight;++R)for(let F=0;F<c.inWidth;++F){let T=R-x,z=F-v,W=0;for(let j=0;j<b;j+=m){let X=(T+j)/p;if(!(X<0||X>=c.outHeight||Math.floor(X)!==X))for(let Y=0;Y<y;Y+=g){let Z=(z+Y)/d;if(Z<0||Z>=c.outWidth||Math.floor(Z)!==Z)continue;W+=E.get(A,X,Z,P)}}k.set(W*I,A,R,F,P)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var SH={kernelName:cg,backendName:"cpu",kernelFunc:kH};function IH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:u}=t;w.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),be([r,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);let c=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,b=h.length,y=d.length,v=p.length,x=0,k=0,I=0,$=0;for(let E=0;E<c.length;++E)m[E]=f[x++]+(c[E]-p[k++])*h[I++]/Math.sqrt(d[$++]+l),x>=g&&(x=0),k>=v&&(k=0),I>=b&&(I=0),$>=y&&($=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var CH={kernelName:Ba,backendName:"cpu",kernelFunc:IH};function NH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;be([r],"batchToSpaceND");let o=a.reduce((b,y)=>b*y),u=C.getReshaped(r.shape,a,o),l=C.getPermuted(u.length,a.length),c=C.getReshapedPermuted(r.shape,a,o),p=C.getSliceBeginCoords(i,a.length),d=C.getSliceSize(c,i,a.length),h=mt({inputs:{x:r},backend:n,attrs:{shape:u}}),f=wn({inputs:{x:h},backend:n,attrs:{perm:l}}),m=mt({inputs:{x:f},backend:n,attrs:{shape:c}}),g=ba({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var TH={kernelName:po,backendName:"cpu",kernelFunc:NH};function $H(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=av(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}var _H={kernelName:pg,backendName:"cpu",kernelFunc:$H};function AH(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=C.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var EH={kernelName:hg,backendName:"cpu",kernelFunc:AH},RH=st(Ir,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),DH={kernelName:Ir,backendName:"cpu",kernelFunc:RH},FH=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let l=0;l<o.length;l++){let c=o[l],p=u[l];s[l]=Math.hypot(c,p)}return n.makeOutput(s,t.shape,"float32")},OH={kernelName:Jd,backendName:"cpu",kernelFunc:FH};function io(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var PH={kernelName:sp,backendName:"cpu",kernelFunc:io};function oo(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=C.computeOutShape(t.map(m=>m.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(m=>w.sizeFromShape(m.shape)>0);if(o.length===1)return Os({inputs:{x:o[0]},backend:n});let u=o.map(m=>m.shape);if(C.assertParamsConsistent(u,a),o[0].dtype==="complex64"){let m=o.map(x=>ga({inputs:{input:x},backend:n})),g=o.map(x=>io({inputs:{input:x},backend:n})),b=oo({inputs:m,backend:n,attrs:{axis:a}}),y=oo({inputs:g,backend:n,attrs:{axis:a}}),v=En({inputs:{real:b,imag:y},backend:n});return m.forEach(x=>n.disposeIntermediateTensorInfo(x)),g.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),v}let l=o.map(m=>{let g=w.sizeFromShape(m.shape.slice(a));return mt({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),c=l.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));i=C.computeOutShape(l.map(m=>m.shape),1);let p=l[0].shape[0]===1,d=iv(c,i,t[0].dtype,p),h=C.computeOutShape(o.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,d);return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var zH={kernelName:ho,backendName:"cpu",kernelFunc:oo};function WC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s;be([r,a],"conv2d");let p=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,p),h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,v=d.dataFormat==="channelsLast",x=new Wt(d.outShape,r.dtype),k=w.computeStrides(r.shape),I=w.computeStrides(a.shape),$=k[0],E=v?k[1]:k[2],A=v?k[2]:1,P=v?1:k[1],R=x.strides[0],F=v?x.strides[1]:x.strides[2],T=v?x.strides[2]:1,z=v?1:x.strides[1],W=n.data.get(r.dataId).values,j=n.data.get(a.dataId).values,X=x.values;for(let Y=0;Y<d.batchSize;++Y){let Z=Y*$,te=Y*R;for(let J=0;J<d.outHeight;++J){let se=te+J*F,ne=J*d.strideHeight-y;for(let oe=0;oe<h;++oe){let ae=ne+oe*m;if(ae<0||ae>=d.inHeight)continue;let de=oe*I[0],me=Z+ae*E;for(let ke=0;ke<d.outWidth;++ke){let Ie=se+ke*T,Ee=ke*d.strideWidth-b;for(let Pe=0;Pe<f;++Pe){let Xe=Ee+Pe*g;if(Xe<0||Xe>=d.inWidth)continue;let Je=de+Pe*I[1],Ye=me+Xe*A,tt=Je;for(let Ce=0;Ce<d.inChannels;++Ce){let ut=W[Ye+Ce*P];for(let rt=0;rt<d.outChannels;++rt)X[Ie+rt*z]+=ut*j[tt+rt];tt+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,X)}var MH={kernelName:_a,backendName:"cpu",kernelFunc:WC};function LH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=s;be([r,a],"conv2dBackpropFilter");let p=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(r.shape,c,i,1,o,l,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=d,b=d.dataFormat==="channelsLast",y=new Wt(d.filterShape,"float32"),v=d.padInfo.left,x=d.padInfo.top,k=n.data.get(r.dataId).values,I=n.data.get(a.dataId).values,$=new Wt(r.shape,r.dtype,k),E=new Wt(a.shape,a.dtype,I);for(let A=0;A<m;++A){let P=Math.max(0,Math.ceil((x-A)/h)),R=Math.min(d.outHeight,(d.inHeight+x-A)/h);for(let F=0;F<g;++F){let T=Math.max(0,Math.ceil((v-F)/f)),z=Math.min(d.outWidth,(d.inWidth+v-F)/f);for(let W=0;W<d.inChannels;++W)for(let j=0;j<d.outChannels;++j){let X=0;for(let Y=0;Y<d.batchSize;++Y)for(let Z=P;Z<R;++Z){let te=A+Z*h-x;for(let J=T;J<z;++J){let se=F+J*f-v;b?X+=$.get(Y,te,se,W)*E.get(Y,Z,J,j):X+=$.get(Y,W,te,se)*E.get(Y,j,Z,J)}}y.set(X,A,F,W,j)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var BH={kernelName:fg,backendName:"cpu",kernelFunc:LH};function VH(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s;be([r,a],"conv2dBackpropInput");let p=w.computeStrides(a.shape),d=w.computeStrides(r.shape),h=C.convertConv2DDataFormat(l),f=C.computeConv2DInfo(i,a.shape,o,1,u,c,!1,h),m=new Wt(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,y=n.data.get(a.dataId).values,[v,x,k]=p,{batchSize:I,filterHeight:$,filterWidth:E,inChannels:A,inHeight:P,inWidth:R,outChannels:F,outHeight:T,outWidth:z,strideHeight:W,strideWidth:j}=f;h=f.dataFormat;let X=$-1-f.padInfo.top,Y=E-1-f.padInfo.left,Z=h==="channelsLast",te=m.strides[0],J=Z?m.strides[1]:m.strides[2],se=Z?m.strides[2]:1,ne=Z?1:m.strides[1],oe=d[0],ae=Z?d[1]:d[2],de=Z?d[2]:1,me=Z?1:d[1];for(let ke=0;ke<I;++ke)for(let Ie=0;Ie<A;++Ie)for(let Ee=0;Ee<P;++Ee){let Pe=Ee-X,Xe=Math.max(0,Math.ceil(Pe/W)),Je=Math.min(T,($+Pe)/W);for(let Ye=0;Ye<R;++Ye){let tt=Ye-Y,Ce=Math.max(0,Math.ceil(tt/j)),ut=Math.min(z,(E+tt)/j),rt=0;for(let Nt=Xe;Nt<Je;++Nt){let In=Nt*W-Pe;for(let Et=Ce;Et<ut;++Et){let en=Et*j-tt,Cn=oe*ke+ae*Nt+de*Et,Nn=v*($-1-In)+x*(E-1-en)+k*Ie;for(let Yt=0;Yt<F;++Yt){let Dn=b[Cn+me*Yt],tn=y[Nn+Yt];rt+=Dn*tn}}}let Jt=te*ke+J*Ee+se*Ye+ne*Ie;g[Jt]=rt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var WH={kernelName:Aa,backendName:"cpu",kernelFunc:VH};function UH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s;be([r,a],"conv3d");let l=C.computeConv3DInfo(r.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=l,b=g.front,y=g.left,v=g.top,x=new Wt(l.outShape,r.dtype),k=n.data.get(r.dataId).values,I=n.data.get(a.dataId).values,$=x.values,E=w.computeStrides(r.shape),A=w.computeStrides(a.shape);for(let P=0;P<l.batchSize;++P){let R=P*E[0],F=P*x.strides[0];for(let T=0;T<l.outDepth;++T){let z=F+T*x.strides[1],W=T*l.strideDepth-b;for(let j=0;j<c;++j){let X=W+j*h;if(X<0||X>=l.inDepth)continue;let Y=j*A[0],Z=R+X*E[1];for(let te=0;te<l.outHeight;++te){let J=z+te*x.strides[2],se=te*l.strideHeight-v;for(let ne=0;ne<p;++ne){let oe=se+ne*f;if(oe<0||oe>=l.inHeight)continue;let ae=Y+ne*A[1],de=Z+oe*E[2];for(let me=0;me<l.outWidth;++me){let ke=J+me*l.outChannels,Ie=me*l.strideWidth-y;for(let Ee=0;Ee<d;++Ee){let Pe=Ie+Ee*m;if(Pe<0||Pe>=l.inWidth)continue;let Xe=ae+Ee*A[2],Je=de+Pe*l.inChannels,Ye=Xe;for(let tt=0;tt<l.inChannels;++tt){let Ce=k[Je+tt];for(let ut=0;ut<l.outChannels;++ut)$[ke+ut]+=Ce*I[Ye+ut];Ye+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var GH={kernelName:ep,backendName:"cpu",kernelFunc:UH};function HH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s;be([r,a],"conv3dBackpropFilterV2");let l=w.computeStrides(r.shape),c=w.computeStrides(a.shape),p=C.computeConv3DInfo(r.shape,u,i,1,o),d=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,b=p.filterWidth,y=new Wt(p.filterShape,"float32"),v=y.values,[x,k,I,$]=y.strides,E=n.data.get(a.dataId).values,[A,P,R,F]=c,T=n.data.get(r.dataId).values,[z,W,j,X]=l,Y=p.padInfo.front,Z=p.padInfo.left,te=p.padInfo.top;for(let J=0;J<m;++J){let se=Math.max(0,Math.ceil((Y-J)/d)),ne=Math.min(p.outDepth,(p.inDepth+Y-J)/d),oe=J*x;for(let ae=0;ae<g;++ae){let de=Math.max(0,Math.ceil((te-ae)/h)),me=Math.min(p.outHeight,(p.inHeight+te-ae)/h),ke=ae*k+oe;for(let Ie=0;Ie<b;++Ie){let Ee=Math.max(0,Math.ceil((Z-Ie)/f)),Pe=Math.min(p.outWidth,(p.inWidth+Z-Ie)/f),Xe=Ie*I+ke;for(let Je=0;Je<p.inChannels;++Je){let Ye=Je*$+Xe;for(let tt=0;tt<p.outChannels;++tt){let Ce=0;for(let ut=0;ut<p.batchSize;++ut){let rt=ut*z,Jt=ut*A;for(let Nt=se;Nt<ne;++Nt){let Et=(J+Nt*d-Y)*W+rt,en=Nt*P+Jt;for(let Cn=de;Cn<me;++Cn){let Yt=(ae+Cn*h-te)*j+Et,Dn=Cn*R+en;for(let tn=Ee;tn<Pe;++tn){let Ms=(Ie+tn*f-Z)*X+Yt,Ni=tn*F+Dn;Ce+=T[Ms+Je]*E[Ni+tt]}}}}v[Ye+tt]=Ce}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var qH={kernelName:mg,backendName:"cpu",kernelFunc:HH};function jH(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s;be([r],"conv3dBackpropInputV2");let l=w.computeStrides(r.shape),c=w.computeStrides(a.shape),p=C.computeConv3DInfo(u,a.shape,o,1,i),d=new Wt(p.inShape,"float32"),h=d.values,[f,m,g,b]=d.strides,y=n.data.get(r.dataId).values,[v,x,k,I]=l,$=n.data.get(a.dataId).values,[E,A,P,R]=c,{batchSize:F,filterDepth:T,filterHeight:z,filterWidth:W,inChannels:j,inDepth:X,inHeight:Y,inWidth:Z,outChannels:te,outDepth:J,outHeight:se,outWidth:ne,strideDepth:oe,strideHeight:ae,strideWidth:de}=p,me=T-1-p.padInfo.front,ke=z-1-p.padInfo.top,Ie=W-1-p.padInfo.left;for(let Ee=0;Ee<F;++Ee)for(let Pe=0;Pe<j;++Pe)for(let Xe=0;Xe<X;++Xe){let Je=Xe-me,Ye=Math.max(0,Math.ceil(Je/oe)),tt=Math.min(J,(T+Je)/oe);for(let Ce=0;Ce<Y;++Ce){let ut=Ce-ke,rt=Math.max(0,Math.ceil(ut/ae)),Jt=Math.min(se,(z+ut)/ae);for(let Nt=0;Nt<Z;++Nt){let In=Nt-Ie,Et=Math.max(0,Math.ceil(In/de)),en=Math.min(ne,(W+In)/de),Cn=0;for(let Nn=Ye;Nn<tt;++Nn){let Yt=Nn*oe-Je;for(let Dn=rt;Dn<Jt;++Dn){let tn=Dn*ae-ut;for(let zs=Et;zs<en;++zs){let Ms=zs*de-In,Ni=v*Ee+x*Nn+k*Dn+I*zs,Zs=E*(T-1-Yt)+A*(z-1-tn)+P*(W-1-Ms)+R*Pe;for(let Ls=0;Ls<te;++Ls){let fu=y[Ni+Ls],Ti=$[Zs+Ls];Cn+=fu*Ti}}}}h[f*Ee+m*Xe+g*Ce+b*Nt+Pe]=Cn}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var KH={kernelName:gg,backendName:"cpu",kernelFunc:jH},XH=st(Ea,e=>Math.cos(e)),YH={kernelName:Ea,backendName:"cpu",kernelFunc:XH},QH=st(Ra,e=>Math.cosh(e)),ZH={kernelName:Ra,backendName:"cpu",kernelFunc:QH};function JH(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,[c,p,d,h]=r.shape,f=a.shape[0],[m,g]=o,b=De([f,m,g,h],"float32"),y=n.data.get(a.dataId).values,v=n.data.get(i.dataId).values,x=n.data.get(r.dataId).values,k=w.computeStrides(r.shape),I=w.computeStrides(b.shape);for(let $=0;$<f;$++){let E=$*4,A=y[E],P=y[E+1],R=y[E+2],F=y[E+3],T=v[$];if(T>=c)continue;let z=m>1?(R-A)*(p-1)/(m-1):0,W=g>1?(F-P)*(d-1)/(g-1):0;for(let j=0;j<m;j++){let X=m>1?A*(p-1)+j*z:.5*(A+R)*(p-1);if(X<0||X>p-1){for(let Y=0;Y<g;Y++)for(let Z=0;Z<h;Z++){let te=Z+Y*I[2]+j*I[1]+$*I[0];b.values[te]=l}continue}if(u==="bilinear"){let Y=Math.floor(X),Z=Math.ceil(X),te=X-Y;for(let J=0;J<g;J++){let se=g>1?P*(d-1)+J*W:.5*(P+F)*(d-1);if(se<0||se>d-1){for(let de=0;de<h;de++){let me=de+J*I[2]+j*I[1]+$*I[0];b.values[me]=l}continue}let ne=Math.floor(se),oe=Math.ceil(se),ae=se-ne;for(let de=0;de<h;de++){let me=de+ne*k[2]+Y*k[1]+T*k[0],ke=x[me];me=de+oe*k[2]+Y*k[1]+T*k[0];let Ie=x[me];me=de+ne*k[2]+Z*k[1]+T*k[0];let Ee=x[me];me=de+oe*k[2]+Z*k[1]+T*k[0];let Pe=x[me],Xe=ke+(Ie-ke)*ae,Je=Ee+(Pe-Ee)*ae;me=de+J*I[2]+j*I[1]+$*I[0],b.values[me]=Xe+(Je-Xe)*te}}}else for(let Y=0;Y<g;++Y){let Z=g>1?P*(d-1)+Y*W:.5*(P+F)*(d-1);if(Z<0||Z>d-1){for(let se=0;se<h;se++){let ne=se+Y*I[2]+j*I[1]+$*I[0];b.values[ne]=l}continue}let te=Math.round(Z),J=Math.round(X);for(let se=0;se<h;se++){let ne=se+te*k[2]+J*k[1]+T*k[0],oe=se+Y*I[2]+j*I[1]+$*I[0];b.values[oe]=x[ne]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var eq={kernelName:mo,backendName:"cpu",kernelFunc:JH};function tq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;be(r,"cumprod");let u=C.getAxesPermutation([a],r.shape.length),l=r;u!=null&&(l=wn({inputs:{x:r},backend:n,attrs:{perm:u}}));let c=C.getInnerMostAxes(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);let p=cn(l.dtype,"int32"),d=w.makeOnesTypedArray(w.sizeFromShape(l.shape),p),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(b,y)=>b+f-y-1:(b,y)=>b+y;for(let b=0;b<h.length;b+=f)for(let y=0;y<f;y++){let v=m(b,y);if(y===0)d[v]=i?1:h[v];else{let x=m(b,y-1);d[v]=i?h[x]*d[x]:h[v]*d[x]}}let g=n.makeTensorInfo(l.shape,p,d);if(u!=null){let b=C.getUndoAxesPermutation(u),y=wn({inputs:{x:g},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),y}return g}var nq={kernelName:fo,backendName:"cpu",kernelFunc:tq};function sq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;be(r,"cumsum");let u=C.getAxesPermutation([a],r.shape.length),l=r;u!=null&&(l=wn({inputs:{x:r},backend:n,attrs:{perm:u}}));let c=C.getInnerMostAxes(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);let p=cn(l.dtype,"int32"),d=w.makeZerosTypedArray(w.sizeFromShape(l.shape),p),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(b,y)=>b+f-y-1:(b,y)=>b+y;for(let b=0;b<h.length;b+=f)for(let y=0;y<f;y++){let v=m(b,y);if(y===0)d[v]=i?0:h[v];else{let x=m(b,y-1);d[v]=i?h[x]+d[x]:h[v]+d[x]}}let g=n.makeTensorInfo(l.shape,p,d);if(u!=null){let b=C.getUndoAxesPermutation(u),y=wn({inputs:{x:g},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),y}return g}var rq={kernelName:Da,backendName:"cpu",kernelFunc:sq};function aq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(r.shape.length===1){let u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=av(u,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,c)}else if(r.shape.length===2){let u=n.bufferSync(r),l=n.bufferSync(a),c=Z0(u,l,i,o);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var iq={kernelName:bg,backendName:"cpu",kernelFunc:aq};function oq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=r.shape[0],u=r.shape[1],l=r.shape[2],c=r.shape[3],p=u*a,d=l*a,h=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*p*d*h),g=0;for(let b=0;b<o;++b)for(let y=0;y<p;++y){let v=Math.floor(y/a),x=y%a;for(let k=0;k<d;++k){let I=Math.floor(k/a),$=k%a,E=(x*a+$)*h;for(let A=0;A<h;++A){let R=A+E+c*(I+l*(v+u*b));m[g++]=f[R]}}}return n.makeTensorInfo([o,p,d,h],r.dtype,m)}var uq={kernelName:go,backendName:"cpu",kernelFunc:oq};function UC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s;be([r,a],"depthwiseConv2DNative");let c=w.computeStrides(r.shape),p=w.computeStrides(a.shape),d=u;d==null&&(d=[1,1]),w.assert(C.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let h=C.computeConv2DInfo(r.shape,a.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=h,v=y.left,x=y.top,k=h.outChannels/h.inChannels,I=new Wt(h.outShape,r.dtype),$=n.data.get(r.dataId).values,E=n.data.get(a.dataId).values,A=I.values;for(let P=0;P<h.batchSize;++P){let R=P*c[0],F=P*I.strides[0];for(let T=0;T<h.outHeight;++T){let z=F+T*I.strides[1],W=T*h.strideHeight-x;for(let j=0;j<f;++j){let X=W+j*g;if(X<0||X>=h.inHeight)continue;let Y=j*p[0],Z=R+X*c[1];for(let te=0;te<h.outWidth;++te){let J=z+te*I.strides[2],se=te*h.strideWidth-v;for(let ne=0;ne<m;++ne){let oe=se+ne*b;if(oe<0||oe>=h.inWidth)continue;let ae=Y+ne*p[1],de=Z+oe*h.inChannels,me=J,ke=ae;for(let Ie=0;Ie<h.inChannels;++Ie){let Ee=$[de+Ie];for(let Pe=0;Pe<k;++Pe)A[me+Pe]+=Ee*E[ke+Pe];me+=k,ke+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var lq={kernelName:Fa,backendName:"cpu",kernelFunc:UC};function cq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=s;be([r,a],"depthwiseConv2dNativeBackpropFilter");let p=C.computeConv2DInfo(r.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:h,filterHeight:f,filterWidth:m}=p,g=new Wt(p.filterShape,"float32"),b=p.padInfo.left,y=p.padInfo.top,v=p.outChannels/p.inChannels,x=n.data.get(r.dataId).values,k=new Wt(r.shape,r.dtype,x),I=n.data.get(a.dataId).values,$=new Wt(a.shape,a.dtype,I);for(let E=0;E<f;++E){let A=Math.max(0,Math.ceil((y-E)/d)),P=Math.min(p.outHeight,(p.inHeight+y-E)/d);for(let R=0;R<m;++R){let F=Math.max(0,Math.ceil((b-R)/h)),T=Math.min(p.outWidth,(p.inWidth+b-R)/h);for(let z=0;z<p.outChannels;++z){let W=Math.trunc(z/v),j=z%v,X=0;for(let Y=0;Y<p.batchSize;++Y)for(let Z=A;Z<P;++Z){let te=E+Z*d-y;for(let J=F;J<T;++J){let se=R+J*h-b;X+=k.get(Y,te,se,W)*$.get(Y,Z,J,z)}}g.set(X,E,R,W,j)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var dq={kernelName:yg,backendName:"cpu",kernelFunc:cq};function pq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=s;be([r,a],"depthwiseConv2DNativeBackpropInput");let p=w.computeStrides(r.shape),d=w.computeStrides(a.shape),h=C.computeConv2DInfo(c,a.shape,i,o,u,l,!0),f=new Wt(h.inShape,"float32"),m=f.values,[g,b,y]=f.strides,v=n.data.get(r.dataId).values,[x,k,I]=p,$=n.data.get(a.dataId).values,[E,A,P]=d,{batchSize:R,filterHeight:F,filterWidth:T,inChannels:z,inHeight:W,inWidth:j,outChannels:X,outHeight:Y,outWidth:Z,strideHeight:te,strideWidth:J}=h,se=F-1-h.padInfo.top,ne=T-1-h.padInfo.left,oe=X/z;for(let ae=0;ae<R;++ae)for(let de=0;de<z;++de)for(let me=0;me<W;++me){let ke=me-se,Ie=Math.max(0,Math.ceil(ke/te)),Ee=Math.min(Y,(F+ke)/te);for(let Pe=0;Pe<j;++Pe){let Xe=Pe-ne,Je=Math.max(0,Math.ceil(Xe/J)),Ye=Math.min(Z,(T+Xe)/J),tt=0;for(let Ce=Ie;Ce<Ee;++Ce){let ut=Ce*te-ke;for(let rt=Je;rt<Ye;++rt){let Jt=rt*J-Xe,Nt=x*ae+k*Ce+I*rt,In=E*(F-1-ut)+A*(T-1-Jt)+P*de;for(let Et=0;Et<oe;++Et){let en=de*oe+Et,Cn=v[Nt+en],Nn=$[In+Et];tt+=Cn*Nn}}}m[g*ae+b*me+y*Pe+de]=tt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var hq={kernelName:vg,backendName:"cpu",kernelFunc:pq};function fq(e){let{inputs:t,backend:n}=e,{x:s}=t,r=w.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,i=De([r,r],s.dtype),o=i.values;for(let l=0;l<a.length;l++)o[l*r+l]=a[l];let u=[...s.shape,...s.shape];return n.makeTensorInfo(u,i.dtype,i.values)}var mq={kernelName:xg,backendName:"cpu",kernelFunc:fq},gq={kernelName:tp,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(s.dataId).values,c=s.shape.length,p=u.data.get(r.dataId).values,d=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:v,strideHeight:x,strideWidth:k,filterHeight:I,filterWidth:$,dilationHeight:E,dilationWidth:A,outShape:P}=C.computeDilation2DInfo(s.shape,r.shape,a,i,"NHWC",o),R=w.sizeFromShape(P),F=P.length,T=w.getArrayFromDType(s.dtype,R);for(let W=0;W<h;++W)for(let j=0;j<b;++j){let X=j*x-v.top;for(let Y=0;Y<y;++Y){let Z=Y*k-v.left;for(let te=0;te<g;++te){let J=Number.MIN_SAFE_INTEGER;for(let ne=0;ne<I;++ne){let oe=X+ne*E;if(oe>=0&&oe<f)for(let ae=0;ae<$;++ae){let de=Z+ae*A;if(de>=0&&de<m){let me=w.locToIndex([W,oe,de,te],c,w.computeStrides(s.shape)),ke=w.locToIndex([ne,ae,te],d,w.computeStrides(r.shape)),Ie=l[me]+p[ke];Ie>J&&(J=Ie)}}}let se=w.locToIndex([W,j,Y,te],F,w.computeStrides(P));T[se]=J}}}return{dataId:u.write(w.toTypedArray(T,s.dtype),P,s.dtype),shape:P,dtype:s.dtype}}},bq={kernelName:tm,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=w.toNestedArray(s.shape,l.data.get(s.dataId).values),p=w.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:I,dilationHeight:$,dilationWidth:E,outShape:A}=C.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);w.assert(a.rank===A.length,()=>`Error in ${tm}, dy must have the same rank as output ${A.length}, but got ${a.rank}`);let P=w.toNestedArray(A,l.data.get(a.dataId).values),R=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let T=0;T<d;++T)for(let z=0;z<g;++z){let W=z*v-y.top;for(let j=0;j<b;++j){let X=j*x-y.left;for(let Y=0;Y<m;++Y){let Z=Number.MIN_SAFE_INTEGER,te=0,J=0;for(let se=0;se<k;++se){let ne=W+se*$;if(ne>=0&&ne<h)for(let oe=0;oe<I;++oe){let ae=X+oe*E;if(ae>=0&&ae<f){let de=c[T][ne][ae][Y]+p[se][oe][Y];de>Z&&(Z=de,te=se,J=oe)}}}R[te][J][Y]+=P[T][z][j][Y]}}}return{dataId:l.write(w.toTypedArray(R,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},yq={kernelName:em,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=w.toNestedArray(s.shape,l.data.get(s.dataId).values),p=w.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:I,dilationHeight:$,dilationWidth:E,outShape:A}=C.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);w.assert(a.rank===A.length,()=>`Error in ${em}, dy must have the same rank as output ${A.length}, but got ${a.rank}`);let P=w.toNestedArray(A,l.data.get(a.dataId).values),R=w.makeZerosNestedTypedArray(s.shape,s.dtype);for(let T=0;T<d;++T)for(let z=0;z<g;++z){let W=z*v-y.top;for(let j=0;j<b;++j){let X=j*x-y.left;for(let Y=0;Y<m;++Y){let Z=Number.MIN_SAFE_INTEGER,te=W<0?0:W,J=X<0?0:X;for(let se=0;se<k;++se){let ne=W+se*$;if(ne>=0&&ne<h)for(let oe=0;oe<I;++oe){let ae=X+oe*E;if(ae>=0&&ae<f){let de=c[T][ne][ae][Y]+p[se][oe][Y];de>Z&&(Z=de,te=ne,J=ae)}}}R[T][te][J][Y]+=P[T][z][j][Y]}}}return{dataId:l.write(w.toTypedArray(R,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function Yl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"sum");let o;r.dtype==="bool"?o=xr({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):o=Os({inputs:{x:r},backend:n});let u=o.shape.length,l=w.parseAxisParam(a,o.shape),c=C.getAxesPermutation(l,u),p=l,d=o;c!=null&&(d=wn({inputs:{x:o},backend:n,attrs:{perm:c}}),p=C.getInnerMostAxes(p.length,u)),C.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[h,f]=C.computeOutAndReduceShapes(d.shape,p),m=C.upcastType(d.dtype,"int32"),g=Md(n,h,m),b=w.sizeFromShape(f),y=n.data.get(g.dataId).values,v=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){let k=x*b,I=0;for(let $=0;$<b;++$)I+=v[k+$];y[x]=I}if(i){let x=C.expandShapeToKeepDim(g.shape,l),k=g;g=mt({inputs:{x:g},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(k)}return n.disposeIntermediateTensorInfo(o),c!=null&&n.disposeIntermediateTensorInfo(d),g}var vq={kernelName:ci,backendName:"cpu",kernelFunc:Yl};function xq(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=C.decodeEinsumEquation(r,a.length);C.checkEinsumDimSizes(i.length,u,a);let{path:l,steps:c}=C.getEinsumComputePath(o,u),p=c.length,d=null,h=i.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:b,expandDims:y}=C.getEinsumPermutation(h,u[g]),v;C.isIdentityPermutation(b)?v=a[g]:(v=wn({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=mt({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),d===null?d=v:(d=Yp({inputs:{a:v,b:d},backend:n}),f.push(d))}m<p-1&&(l[m]>=0&&(d=Yl({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var wq={kernelName:np,backendName:"cpu",kernelFunc:xq};function kq(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;be([s,r],"eluGrad");let a=new Float32Array(w.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let u=0;u<i.length;++u){let l=i[u];l>=1?a[u]=o[u]:a[u]=o[u]*(l+1)}return n.makeTensorInfo(r.shape,"float32",a)}var Sq={kernelName:wg,backendName:"cpu",kernelFunc:kq},Iq=C.ERF_P,Cq=C.ERF_A1,Nq=C.ERF_A2,Tq=C.ERF_A3,$q=C.ERF_A4,_q=C.ERF_A5,Aq=st(ml,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+Iq*n);return t*(1-((((_q*s+$q)*s+Tq)*s+Nq)*s+Cq)*s*Math.exp(-n*n))}),Eq={kernelName:ml,backendName:"cpu",kernelFunc:Aq};function Bd(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice(),u=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),mt({inputs:{x:r},backend:n,attrs:{shape:o}})}var Rq={kernelName:yo,backendName:"cpu",kernelFunc:Bd},Dq=At((e,t)=>e/t),fv=Ht(Oa,Dq),Um={kernelName:Oa,backendName:"cpu",kernelFunc:fv};function GC(e,t,n){let s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[r,a],c=w.sizeFromShape(l),p=w.getTypedArrayFromDType("float32",c),d=w.getTypedArrayFromDType("float32",c);for(let g=0;g<r;g++){let b=ba({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,a]}}),y=ba({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,a]}}),v=En({inputs:{real:b,imag:y},backend:n}),{real:x,imag:k}=Fq(v,t,n),I=C.mergeRealAndImagArrays(x,k);for(let $=0;$<a;$++){let E=C.getComplexWithIndex(I,$);p[g*a+$]=E.real,d[g*a+$]=E.imag}n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(v)}let h=n.makeTensorInfo(l,"float32",p),f=n.makeTensorInfo(l,"float32",d),m=En({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function Fq(e,t,n){let s=w.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(Oq(s)){let o=Gm(a,i,s,t,n),u=[e.shape[0],e.shape[1]];if(t){let l=n.makeTensorInfo(u,"float32",o.real),c=n.makeTensorInfo(u,"float32",o.imag),p=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),d=Os({inputs:{x:p},backend:n}),h=Um.kernelFunc({inputs:{a:l,b:p},backend:n}),f=Um.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=C.mergeRealAndImagArrays(a,i),u=Pq(o,s,t);return C.splitRealAndImagArrays(u)}}function Oq(e){return(e&e-1)===0}function Gm(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=C.mergeRealAndImagArrays(e,t),i=n/2,o=C.complexWithEvenIndex(a),u=o.real,l=o.imag,c=[u.length],p=r.makeTensorInfo(c,"float32",u),d=r.makeTensorInfo(c,"float32",l),h=En({inputs:{real:p,imag:d},backend:r}),f=C.complexWithOddIndex(a),m=f.real,g=f.imag,b=[m.length],y=r.makeTensorInfo(b,"float32",m),v=r.makeTensorInfo(b,"float32",g),x=En({inputs:{real:y,imag:v},backend:r}),k=Gm(u,l,i,s,r),I=k.real,$=k.imag,E=[I.length],A=r.makeTensorInfo(E,"float32",I),P=r.makeTensorInfo(E,"float32",$),R=En({inputs:{real:A,imag:P},backend:r}),F=Gm(m,g,i,s,r),T=F.real,z=F.imag,W=[T.length],j=r.makeTensorInfo(W,"float32",T),X=r.makeTensorInfo(W,"float32",z),Y=En({inputs:{real:j,imag:X},backend:r}),Z=C.exponents(n,s),te=[Z.real.length],J=r.makeTensorInfo(te,"float32",Z.real),se=r.makeTensorInfo(te,"float32",Z.imag),ne=En({inputs:{real:J,imag:se},backend:r}),oe=Yp({inputs:{a:ne,b:Y},backend:r}),ae=Xl({inputs:{a:R,b:oe},backend:r}),de=dv({inputs:{a:R,b:oe},backend:r}),me=ga({inputs:{input:ae},backend:r}),ke=ga({inputs:{input:de},backend:r}),Ie=io({inputs:{input:ae},backend:r}),Ee=io({inputs:{input:de},backend:r}),Pe=oo({inputs:[me,ke],backend:r,attrs:{axis:0}}),Xe=oo({inputs:[Ie,Ee],backend:r,attrs:{axis:0}}),Je=r.data.get(Pe.dataId).values,Ye=r.data.get(Xe.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(Y),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(de),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(ke),r.disposeIntermediateTensorInfo(Ee),r.disposeIntermediateTensorInfo(Pe),r.disposeIntermediateTensorInfo(Xe),{real:Je,imag:Ye}}function Pq(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,i=0;for(let o=0;o<t;o++){let u=C.exponent(r*o,t,n),l=C.getComplexWithIndex(e,o);a+=l.real*u.real-l.imag*u.imag,i+=l.real*u.imag+l.imag*u.real}n&&(a/=t,i/=t),C.assignToTypedArray(s,a,i,r)}return s}function zq(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=r/a,o=mt({inputs:{x:s},backend:n,attrs:{shape:[i,a]}}),u=GC(o,!1,n),l=mt({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}var Mq={kernelName:kg,backendName:"cpu",kernelFunc:zq};function mv(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||w.inferDtype(r),o=w.getArrayFromDType(i,w.sizeFromShape(s));return Bq(o,r,i),t.makeTensorInfo(s,i,o)}var Lq={kernelName:gl,backendName:"cpu",kernelFunc:mv};function Bq(e,t,n){e.fill(t)}var Vq={kernelName:xo,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[i,o,u,l]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<i;d++){let h=d*u*o*l;for(let f=0;f<o;f++){let m=f*(u*l);for(let g=0;g<u;g++){let b=g*l;for(let y=0;y<l;y++){let v=Math.round(u-g-1),x=h+m+b+y,k=c[x];if(v>=0&&v<u){let I=v*l,$=h+m+I+y;k=c[$]}a[x]=k}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Wq=At((e,t)=>Math.floor(e/t)),Uq=Ht(La,Wq,null,"int32"),Gq={kernelName:La,backendName:"cpu",kernelFunc:Uq};function Hq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=WC({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d}});if(i){let g=m;m=Xl({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=pv(n,m,h,o,f),n.disposeIntermediateTensorInfo(g)}return m}var qq={kernelName:ia,backendName:"cpu",kernelFunc:Hq};function jq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=UC({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d}});if(i){let g=m;m=Xl({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=pv(n,m,h,o,f),n.disposeIntermediateTensorInfo(g)}return m}var Kq={kernelName:oa,backendName:"cpu",kernelFunc:jq};function Xq(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=w.sizeFromShape(s.shape),i=r.shape,o=i[i.length-1],[u,l,c,p]=C.prepareAndValidate(s,r);if(l===0)return n.makeTensorInfo(u,s.dtype,[]);let d=n.data.get(r.dataId).values,h=n.bufferSync(s),f=iC(d,h,s.dtype,l,o,c,p,s.shape,a);return n.makeTensorInfo(u,s.dtype,f.values)}var Yq={kernelName:ko,backendName:"cpu",kernelFunc:Xq};function Qq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;be([r,a],"gatherV2");let u=w.parseAxisParam(i,r.shape)[0],l=n.data.get(a.dataId).values,c=r.shape[u];for(let x=0;x<l.length;++x){let k=l[x];w.assert(k<=c-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${c-1}]`)}let p=o;o==null&&(p=0);let d=w.sizeFromShape(a.shape),h=C.segment_util.collectGatherOpShapeInfo(r,a,u,p),f=mt({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=mt({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,d/h.batchSize]}}),g=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],b=n.bufferSync(m),y=n.bufferSync(f),v=oC(y,b,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,v.dtype,v.values)}var Zq={kernelName:wo,backendName:"cpu",kernelFunc:Qq};function Jq(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=r/a,o=mt({inputs:{x:s},backend:n,attrs:{shape:[i,a]}}),u=GC(o,!0,n),l=mt({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}var e6={kernelName:Sg,backendName:"cpu",kernelFunc:Jq},t6=st(bl,e=>Number.isFinite(e)?1:0,"bool"),n6={kernelName:bl,backendName:"cpu",kernelFunc:t6},s6=st(yl,e=>Math.abs(e)===1/0?1:0,"bool"),r6={kernelName:yl,backendName:"cpu",kernelFunc:s6},a6=st(vl,e=>Number.isNaN(e)?1:0,"bool"),i6={kernelName:vl,backendName:"cpu",kernelFunc:a6};function o6(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=pC(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}var u6={kernelName:Ig,backendName:"cpu",kernelFunc:o6},l6=st(xl,e=>Math.log1p(e)),c6={kernelName:xl,backendName:"cpu",kernelFunc:l6},d6=At((e,t)=>e&&t),p6=Ht(No,d6,null,"bool"),h6={kernelName:No,backendName:"cpu",kernelFunc:p6},f6=st(wl,e=>e?0:1,"bool"),m6={kernelName:wl,backendName:"cpu",kernelFunc:f6},g6=At((e,t)=>e||t),b6=Ht(rp,g6,null,"bool"),y6={kernelName:rp,backendName:"cpu",kernelFunc:b6};function v6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s;be(r,"LRN");let l=r.shape[3],c=l-1,p=n.data.get(r.dataId).values,d=w.sizeFromShape(r.shape),h=new Float32Array(d);function f(m){let g=m%l,b=m-g+Math.max(0,g-a),y=m-g+Math.min(g+a,c),v=0;for(;b<=y;b++){let x=p[b];v+=x*x}return v}for(let m=0;m<d;m++){let g=f(m),b=p[m]*Math.pow(i+o*g,-u);h[m]=b}return n.makeTensorInfo(r.shape,r.dtype,h)}var x6={kernelName:ap,backendName:"cpu",kernelFunc:v6};function w6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s;be(i,"LRNGrad");let p=w.sizeFromShape(i.shape),d=i.shape[3],h=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(p),b=p;for(let y=0;y<b;y++){let v=y%d,x=y-v+Math.max(0,v-o),k=y-v+Math.min(d,v+o+1),I=0;for(let $=x;$<k;$++)I+=Math.pow(f[$],2);I=l*I+u;for(let $=x;$<k;$++){let E=-2*l*c*f[$]*m[y]/I;y===$&&(E+=Math.pow(I,-c)),E*=h[y],g[$]+=E}}return n.makeTensorInfo(i.shape,r.dtype,g)}var k6={kernelName:Cg,backendName:"cpu",kernelFunc:w6};function HC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n,u=r.shape,l=u.length,c=w.parseAxisParam(a,u),p=c,d=C.getAxesPermutation(p,l),h=o.data.get(r.dataId).values;if(d!=null){let x=new Array(l);for(let k=0;k<x.length;k++)x[k]=u[d[k]];h=uv(h,u,r.dtype,d,x),p=C.getInnerMostAxes(p.length,l),u=x}be(r,"max"),C.assertAxesAreInnerMostDims("max",p,l);let[f,m]=C.computeOutAndReduceShapes(u,p),g=w.sizeFromShape(m),b=fC(h,g,f,r.dtype),y=o.write(b,f,r.dtype),v=f;return i&&(v=C.expandShapeToKeepDim(f,c)),{dataId:y,shape:v,dtype:r.dtype}}var S6={kernelName:Ha,backendName:"cpu",kernelFunc:HC};function I6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;be(r,"maxPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(C.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=C.computePool2DInfo(r.shape,a,i,l,o,u),p;if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))p=Os({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),f=hv(d,r.shape,r.dtype,h,c,"max");p=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return p}var C6={kernelName:ja,backendName:"cpu",kernelFunc:I6};function N6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s;be(r,"maxPool3d");let c=C.computePool3DInfo(r.shape,a,i,1,o,u,l),p=n.data.get(r.dataId).values,d=VC(p,r.shape,r.dtype,w.computeStrides(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var T6={kernelName:ip,backendName:"cpu",kernelFunc:N6};function $6(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;be([r,a],"maxPool3DGrad");let c=C.computePool3DInfo(a.shape,i,o,1,u,l),p=n.bufferSync(a),d=mH(p,c),h=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,b=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,x=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,$=k-1-c.padInfo.left,E=x-1-c.padInfo.top,A=De(a.shape,"float32"),P=n.bufferSync(r);for(let R=0;R<c.batchSize;++R)for(let F=0;F<c.inChannels;++F)for(let T=0;T<c.inDepth;++T)for(let z=0;z<c.inHeight;++z)for(let W=0;W<c.inWidth;++W){let j=T-I,X=z-E,Y=W-$,Z=0;for(let te=0;te<v;te+=g){let J=(j+te)/h;if(!(J<0||J>=c.outDepth||Math.floor(J)!==J))for(let se=0;se<x;se+=b){let ne=(X+se)/f;if(!(ne<0||ne>=c.outHeight||Math.floor(ne)!==ne))for(let oe=0;oe<k;oe+=y){let ae=(Y+oe)/m;if(ae<0||ae>=c.outWidth||Math.floor(ae)!==ae)continue;let de=v*x*k-1-d.get(R,J,ne,ae,F),me=te*x*k+se*k+oe,ke=de===me?1:0;if(ke===0)continue;Z+=P.get(R,J,ne,ae,F)*ke}}}A.set(Z,R,T,z,W,F)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var _6={kernelName:Tg,backendName:"cpu",kernelFunc:$6};function A6(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;be([a,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=s,d=C.computePool2DInfo(o.shape,u,l,1,c,p),h=n.data.get(o.dataId).values,f=De(d.outShape,o.dtype,BC(h,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,v=d.effectiveFilterHeight,x=d.effectiveFilterWidth,k=x-1-d.padInfo.left,I=v-1-d.padInfo.top,$=De(o.shape,"float32"),E=n.data.get(r.dataId).values,A=De(r.shape,"float32",E);for(let P=0;P<d.batchSize;++P)for(let R=0;R<d.inChannels;++R)for(let F=0;F<d.inHeight;++F)for(let T=0;T<d.inWidth;++T){let z=F-I,W=T-k,j=0;for(let X=0;X<v;X+=b){let Y=(z+X)/m;if(!(Y<0||Y>=d.outHeight||Math.floor(Y)!==Y))for(let Z=0;Z<x;Z+=y){let te=(W+Z)/g;if(te<0||te>=d.outWidth||Math.floor(te)!==te)continue;let J=v*x-1-f.get(P,Y,te,R),se=X*x+Z,ne=J===se?1:0;if(ne===0)continue;j+=A.get(P,Y,te,R)*ne}}$.set(j,P,F,T,R)}return n.makeTensorInfo($.shape,$.dtype,$.values)}var E6={kernelName:Ng,backendName:"cpu",kernelFunc:A6};function R6(e,t,n,s,r){let a=w.computeStrides(t),i=hv(e,t,n,a,r,"max"),o=BC(e,t,n,r,!0,s);return[i.values,o.values]}var D6={kernelName:$g,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;be(s,"MaxPoolWithArgmax");let l=u.data.get(s.dataId).values,c=C.computePool2DInfo(s.shape,r,a,[1,1],i),[p,d]=R6(l,s.shape,s.dtype,o,c),h=u.write(p,c.outShape,s.dtype),f=u.write(d,c.outShape,s.dtype);return[{dataId:h,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function F6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=w.parseAxisParam(a,r.shape),l=C.computeOutAndReduceShapes(r.shape,o)[1],c=w.sizeFromShape(l),p=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));p.push(d);let h=xr({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});p.push(h);let f=fv({inputs:{a:h,b:d},backend:n});p.push(f);let m=Yl({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:i}});return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var O6={kernelName:Ka,backendName:"cpu",kernelFunc:F6};function P6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"min");let o=w.parseAxisParam(a,r.shape),u=o,l=C.getAxesPermutation(u,r.shape.length),c=r;l!=null&&(c=wn({inputs:{x:r},backend:n,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,r.shape.length)),C.assertAxesAreInnerMostDims("min",u,c.shape.length);let[p,d]=C.computeOutAndReduceShapes(c.shape,u),h=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];(Number.isNaN(k)||k<v)&&(v=k)}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(i){let b=C.expandShapeToKeepDim(p,o),y=mt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var z6={kernelName:Xa,backendName:"cpu",kernelFunc:P6};function M6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;be(r,"mirrorPad");let o=a.map((v,x)=>v[0]+r.shape[x]+v[1]),u=a.map(v=>v[0]),l=a.map((v,x)=>v[0]+r.shape[x]),c=i==="reflect"?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,h=w.computeStrides(r.shape),f=w.sizeFromShape(o),m=o.length,g=w.computeStrides(o),b=w.getTypedArrayFromDType(r.dtype,f);for(let v=0;v<f;v++){let x=w.indexToLoc(v,m,g);for(let I=0;I<m;I++)x[I]<u[I]?x[I]=u[I]*2-x[I]-c:x[I]>=l[I]&&(x[I]=(l[I]-1)*2-x[I]+c);x=x.map((I,$)=>I-u[$]);let k=w.locToIndex(x,d,h);b[v]=p[k]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}var L6={kernelName:Qa,backendName:"cpu",kernelFunc:M6},B6=At((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),V6=Ht(kl,B6),W6={kernelName:kl,backendName:"cpu",kernelFunc:V6},U6=wa(jd());function qC(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length,o=a;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let u=w.parseAxisParam([o],r.shape),l=HC({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=C.expandShapeToKeepDim(l.shape,u),p=mt({inputs:{x:l},backend:n,attrs:{shape:c}}),d=dv({inputs:{a:r,b:p},backend:n}),h=sC({inputs:{x:d},backend:n}),f=Yl({inputs:{x:h},backend:n,attrs:{axis:u,keepDims:!1}}),m=mt({inputs:{x:f},backend:n,attrs:{shape:c}}),g=fv({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var G6={kernelName:di,backendName:"cpu",kernelFunc:qC};function H6(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;be(r,"multinomial");let u=o?r:qC({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],p=n.data.get(u.dataId).values,d=[l,a],h=w.makeZerosTypedArray(w.sizeFromShape(d),"int32");for(let f=0;f<l;++f){let m=f*c,g=new Float32Array(c-1);g[0]=p[m];for(let v=1;v<g.length;++v)g[v]=g[v-1]+p[m+v];let b=U6.alea(i.toString()),y=f*a;for(let v=0;v<a;++v){let x=b();h[y+v]=g.length;for(let k=0;k<g.length;k++)if(x<g[k]){h[y+v]=k;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",h)}var q6={kernelName:_g,backendName:"cpu",kernelFunc:H6},j6=ws.nonMaxSuppressionV3Impl;function K6(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s;be(r,"NonMaxSuppression");let l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:p}=j6(l,c,i,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var X6={kernelName:_o,backendName:"cpu",kernelFunc:K6},Y6=ws.nonMaxSuppressionV4Impl;function Q6(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s;be(r,"NonMaxSuppressionPadded");let c=n.data.get(r.dataId).values,p=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:h}=Y6(c,p,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Z6={kernelName:Sl,backendName:"cpu",kernelFunc:Q6},J6=ws.nonMaxSuppressionV5Impl;function ej(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s;be(r,"NonMaxSuppressionWithScore");let c=n.data.get(r.dataId).values,p=n.data.get(a.dataId).values,d=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=J6(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var tj={kernelName:Ao,backendName:"cpu",kernelFunc:ej};function nj(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;be(r,"oneHot");let u=w.sizeFromShape(r.shape),l=new Float32Array(u*a);l.fill(o);let c=n.data.get(r.dataId).values;for(let p=0;p<u;++p)c[p]>=0&&c[p]<a&&(l[p*a+c[p]]=i);return n.makeTensorInfo([...r.shape,a],"int32",l)}var sj={kernelName:Ro,backendName:"cpu",kernelFunc:nj};function Vd(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=ga({inputs:{input:s},backend:n}),a=Vd({inputs:{x:r},backend:n}),i=io({inputs:{input:s},backend:n}),o=Vd({inputs:{x:i},backend:n}),u=En({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return mv({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var rj={kernelName:Ko,backendName:"cpu",kernelFunc:Vd};function jC(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=ga({inputs:{input:s},backend:n}),a=jC({inputs:{x:r},backend:n}),i=io({inputs:{input:s},backend:n}),o=Vd({inputs:{x:i},backend:n}),u=En({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return mv({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var aj={kernelName:Eo,backendName:"cpu",kernelFunc:jC};function KC(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Bd({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let p=Bd({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),l=oo({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}var ij={kernelName:Do,backendName:"cpu",kernelFunc:KC};function oj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;be(r,"pad");let o=a.map((y,v)=>y[0]+r.shape[v]+y[1]),u=a.map(y=>y[0]),l=n.data.get(r.dataId).values,c=w.sizeFromShape(r.shape),p=r.shape.length,d=w.computeStrides(r.shape),h=w.sizeFromShape(o),f=o.length,m=w.computeStrides(o),g=w.getTypedArrayFromDType(r.dtype,h);i!==0&&g.fill(i);for(let y=0;y<c;y++){let x=w.indexToLoc(y,p,d).map((I,$)=>I+u[$]),k=w.locToIndex(x,f,m);g[k]=l[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}var XC={kernelName:Ja,backendName:"cpu",kernelFunc:oj},uj=At((e,t)=>Math.pow(e,t)),lj=Ht(ei,uj),cj={kernelName:ei,backendName:"cpu",kernelFunc:lj};function dj(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=lv(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}var pj={kernelName:Il,backendName:"cpu",kernelFunc:dj},hj=st(Cl,e=>1/e),fj={kernelName:Cl,backendName:"cpu",kernelFunc:hj};function mj(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;be(r,"resizeBilinear");let u=w.computeStrides(r.shape),[l,c]=o,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(w.sizeFromShape([p,l,c,f])),b=[a&&l>1?d-1:d,a&&c>1?h-1:h],y=[a&&l>1?l-1:l,a&&c>1?c-1:c],v=0,x=b[0]/y[0],k=b[1]/y[1];for(let I=0;I<p;I++)for(let $=0;$<l;$++){let E;i?E=x*($+.5)-.5:E=x*$;let A=Math.max(0,Math.floor(E)),P=E-A,R=Math.min(d-1,Math.ceil(E)),F=I*u[0]+A*u[1],T=I*u[0]+R*u[1];for(let z=0;z<c;z++){let W;i?W=k*(z+.5)-.5:W=k*z;let j=Math.max(0,Math.floor(W)),X=W-j,Y=Math.min(h-1,Math.ceil(W)),Z=F+j*u[2],te=T+j*u[2],J=F+Y*u[2],se=T+Y*u[2];for(let ne=0;ne<f;ne++){let oe=m[Z+ne],ae=m[te+ne],de=m[J+ne],me=m[se+ne],ke=oe+(de-oe)*X,Ie=ae+(me-ae)*X,Ee=ke+(Ie-ke)*P;g[v++]=Ee}}}return n.makeTensorInfo([p,l,c,f],"float32",g)}var gj={kernelName:ri,backendName:"cpu",kernelFunc:mj};function bj(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;be([a,r],"resizeBilinearGrad");let o=w.computeStrides(r.shape),[u,l,c,p]=r.shape,[,d,h]=a.shape,f=new Float32Array(u*l*c*p),m=[i&&d>1?l-1:l,i&&h>1?c-1:c],g=[i&&d>1?d-1:d,i&&h>1?h-1:h],b=m[0]/g[0],y=m[1]/g[1],v=n.data.get(a.dataId).values,x=0;for(let k=0;k<u;k++){let I=k*o[0];for(let $=0;$<d;$++){let E=$*b,A=Math.floor(E),P=Math.min(Math.ceil(E),l-1),R=I+A*o[1],F=I+P*o[1],T=E-A,z=1-T;for(let W=0;W<h;W++){let j=W*y,X=Math.floor(j),Y=Math.min(Math.ceil(j),c-1),Z=j-X,te=1-Z,J=R+X*o[2],se=R+Y*o[2],ne=F+X*o[2],oe=F+Y*o[2],ae=z*te,de=z*Z,me=T*te,ke=T*Z;for(let Ie=0;Ie<p;Ie++){let Ee=v[x++];f[J+Ie]+=Ee*ae,f[se+Ie]+=Ee*de,f[ne+Ie]+=Ee*me,f[oe+Ie]+=Ee*ke}}}}return n.makeTensorInfo([u,c,l,p],"float32",f)}var yj={kernelName:Eg,backendName:"cpu",kernelFunc:bj};function vj(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;be(r,"resizeNearestNeighbor");let u=w.computeStrides(r.shape),[l,c]=o,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(p*l*c*f),b=[a&&l>1?d-1:d,a&&c>1?h-1:h],y=[a&&l>1?l-1:l,a&&c>1?c-1:c],v=b[0]/y[0],x=b[1]/y[1],k=0;for(let I=0;I<p;I++){let $=I*u[0];for(let E=0;E<l;E++){let A=i?v*(E+.5):v*E,P=Math.min(d-1,a?Math.round(A):Math.floor(A));i&&(P=Math.max(0,P));let R=$+P*u[1];for(let F=0;F<c;F++){let T=i?x*(F+.5):x*F,z=Math.min(h-1,a?Math.round(T):Math.floor(T));i&&(z=Math.max(0,z));let W=R+z*u[2];for(let j=0;j<f;j++){let X=m[W+j];g[k++]=X}}}}return n.makeTensorInfo([p,l,c,f],r.dtype,g)}var xj={kernelName:Nl,backendName:"cpu",kernelFunc:vj};function wj(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;be([a,r],"resizeNearestNeighborGrad");let o=w.computeStrides(r.shape),u=w.computeStrides(a.shape),[l,c,p,d]=r.shape,[,h,f]=a.shape,m=new Float32Array(l*c*p*d),g=n.data.get(a.dataId).values,b=[i&&h>1?c-1:c,i&&f>1?p-1:p],y=[i&&h>1?h-1:h,i&&f>1?f-1:f],v=b[0]/y[0],x=b[1]/y[1],k=1/v,I=1/x,$=Math.ceil(k)*2+2,E=Math.ceil(I)*2+2;for(let A=0;A<l;A++){let P=A*o[0];for(let R=0;R<c;R++){let F=P+R*o[1],T=Math.floor(R*k),z=Math.floor(T-$/2);for(let W=0;W<p;W++){let j=F+W*o[2],X=Math.floor(W*I),Y=Math.floor(X-E/2);for(let Z=0;Z<d;Z++){let te=0;for(let J=0;J<$;J++){let se=J+z;if(se<0||se>=h)continue;let ne=P+se*u[1],oe=se*v,ae=Math.min(c-1,i?Math.round(oe):Math.floor(oe));if(R===ae)for(let de=0;de<E;de++){let me=de+Y;if(me<0||me>=f)continue;let ke=ne+me*u[2],Ie=me*x,Ee=Math.min(p-1,i?Math.round(Ie):Math.floor(Ie));W===Ee&&(te+=g[ke+Z])}}m[j+Z]=te}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var kj={kernelName:Ag,backendName:"cpu",kernelFunc:wj};function Sj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;be(r,"reverse");let i=r.shape.length,o=w.parseAxisParam(a,r.shape);if(i===0)return Os({inputs:{x:r},backend:n});let u=new Wt(r.shape,r.dtype),l=n.bufferSync(r);for(let c=0;c<u.size;c++){let p=u.indexToLoc(c),d=p.slice();o.forEach(h=>d[h]=r.shape[h]-1-d[h]),u.set(l.get(...d),...p)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}var Ij={kernelName:Oo,backendName:"cpu",kernelFunc:Sj},Cj={kernelName:Xo,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[l,c,p,d]=s.shape,[h,f]=C.getImageCenter(i,c,p),m=255,g=Math.sin(r),b=Math.cos(r),y=o.data.get(s.dataId).values;for(let x=0;x<l;x++){let k=x*p*c*d;for(let I=0;I<c;I++){let $=I*(p*d);for(let E=0;E<p;E++){let A=E*d;for(let P=0;P<d;P++){let R=[l,I,E,P],F=R[2],T=R[1],z=(F-h)*b-(T-f)*g,W=(F-h)*g+(T-f)*b;z=Math.round(z+h),W=Math.round(W+f);let j=a;if(typeof a!="number"&&(P===3?j=m:j=a[P]),z>=0&&z<p&&W>=0&&W<c){let Y=W*(p*d),Z=z*d,te=k+Y+Z+P;j=y[te]}let X=k+$+A+P;u[X]=j}}}}return{dataId:o.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Nj=st(Po,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),Tj={kernelName:Po,backendName:"cpu",kernelFunc:Nj};function YC(e,t,n,s,r,a,i,o,u,l){let c=[s/r,r],p=e.values,d=t.values;if(s===0)return De(n,t.dtype);let h=De(c,t.dtype);h.values.fill(u);for(let f=0;f<a;f++){let m=[],g=0;for(let b=0;b<i;b++){let y=p[f*i+b];m.push(y),g+=y*o[b]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let b=0;b<r;b++)l?h.values[g*r+b]+=d[f*r+b]:h.values[g*r+b]=t.rank===0?d[0]:d[f*r+b]}return h}function $j(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=C.calculateShapes(a,r,i),d=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=YC(h,f,i,p,l,u,o,c,0,d);return n.makeTensorInfo(i,m.dtype,m.values)}var _j={kernelName:zo,backendName:"cpu",kernelFunc:$j};function Aj(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function Ej(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}function Rj(e,t,n,s,r,a){let i=w.getArrayFromDType("int32",n*r);for(let o=0;o<n;++o){let u=e.slice(o*s,(o+1)*s),l=o*r;for(let c=0;c<r;++c)i[l+c]=a==="left"?Aj(u,t[c+l]):Ej(u,t[c+l])}return i}function Dj(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=Rj(o,u,r.shape[0],r.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",l)}var Fj={kernelName:Rg,backendName:"cpu",kernelFunc:Dj};function Oj(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;be([s,r,a],"select");let i=s.shape.length,o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=cn(r.dtype,a.dtype),p=w.makeZerosTypedArray(w.sizeFromShape(r.shape),c),d=0,h=i===0||i>1||r.shape.length===1?1:w.sizeFromShape(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<h;m++)o[f]===1?p[d++]=u[f]:p[d++]=l[f];return n.makeTensorInfo(r.shape,c,p)}var Pj={kernelName:Mo,backendName:"cpu",kernelFunc:Oj},zj=C.SELU_SCALEALPHA,Mj=C.SELU_SCALE,Lj=st(Tl,e=>e>=0?Mj*e:zj*(Math.exp(e)-1)),Bj={kernelName:Tl,backendName:"cpu",kernelFunc:Lj},Vj=st($l,e=>e<0?-1:e>0?1:0),Wj={kernelName:$l,backendName:"cpu",kernelFunc:Vj},Uj=st(oi,e=>Math.sin(e)),Gj={kernelName:oi,backendName:"cpu",kernelFunc:Uj},Hj=st(Bo,e=>Math.sinh(e)),qj={kernelName:Bo,backendName:"cpu",kernelFunc:Hj},jj=11920928955078125e-23,iw=Math.log(jj)+2,Kj=st(_l,e=>{let t=e>-iw,n=e<iw,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),Xj={kernelName:_l,backendName:"cpu",kernelFunc:Kj};function Yj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;be([r],"spaceToBatchND");let o=w.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let I=1+a.length;I<r.shape.length;++I)u.push([0,0]);let l=XC.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=C.getReshaped(l.shape,a,o,!1),p=C.getPermuted(c.length,a.length,!1),d=C.getReshapedPermuted(l.shape,a,o,!1),m=mt({inputs:{x:l},backend:n,attrs:{shape:c}}),y=wn({inputs:{x:m},backend:n,attrs:{perm:p}}),k=mt({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),k}var Qj={kernelName:Vo,backendName:"cpu",kernelFunc:Yj};function Zj(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[p,d,h,f,m]=kC(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var Jj={kernelName:up,backendName:"cpu",kernelFunc:Zj};function e5(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,p]=SC(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}var t5={kernelName:Al,backendName:"cpu",kernelFunc:e5};function n5(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=cv(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}var s5={kernelName:lp,backendName:"cpu",kernelFunc:n5};function r5(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=cv(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}var a5={kernelName:cp,backendName:"cpu",kernelFunc:r5};function i5(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=C.calculateShapes(a,r,o),h=!1,f=n.bufferSync(r),m=n.bufferSync(a),g=n.data.get(i.dataId).values[0],b=YC(f,m,o,d,c,l,u,p,g,h);return n.makeTensorInfo(o,b.dtype,b.values)}var o5={kernelName:dp,backendName:"cpu",kernelFunc:i5};function u5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=C.prepareSplitSize(r,a,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map(p=>{let d=[...c];d[o]=p;let h=ba({inputs:{x:r},backend:n,attrs:{begin:l,size:d}});return l[o]+=p,h})}var l5={kernelName:Wo,backendName:"cpu",kernelFunc:u5},c5={kernelName:El,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;be(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let o=0;o<r.length;++o){let u=r[o];a[o]=u*u}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},d5=st(gi,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),p5={kernelName:gi,backendName:"cpu",kernelFunc:d5};function h5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s;be(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=wt.sliceInfo(r.shape,a,i,o,u,l,c,p,d),k;if(m)k=mt({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let I=wt.computeOutShape(y,v,x),$=ba({inputs:{x:r},backend:n,attrs:{begin:y,size:I}});k=mt({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo($)}else{let I=n.bufferSync(r),$=CC(h,I,x,y);k=n.makeTensorInfo(f,$.dtype,$.values)}return k}var f5={kernelName:Uo,backendName:"cpu",kernelFunc:h5};function m5(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:p}=t,d=n.data.get(c.dataId).values,h=n.data.get(p.dataId).values,[f,m]=NC(d,h,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var g5={kernelName:pp,backendName:"cpu",kernelFunc:m5};function b5(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,p]=TC(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var y5={kernelName:Dg,backendName:"cpu",kernelFunc:b5};function v5(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(a.dataId).values,o=$C(i,r);return n.makeTensorInfo(a.shape,"int32",o)}var x5={kernelName:Fg,backendName:"cpu",kernelFunc:v5},w5=st(Go,e=>Math.tan(e)),k5={kernelName:Go,backendName:"cpu",kernelFunc:w5},S5=st(fi,e=>Math.tanh(e)),I5={kernelName:fi,backendName:"cpu",kernelFunc:S5};function C5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;be(r,"tile");let i=AC(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var N5={kernelName:Cr,backendName:"cpu",kernelFunc:C5};function T5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;be(r,"topk");let o=n.data.get(r.dataId).values,[u,l]=RC(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}var $5={kernelName:Ho,backendName:"cpu",kernelFunc:T5};function _5(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,p,d,h]=r.shape,[f,m]=l!=null?l:[p,d],g=[c,f,m,h],b=w.computeStrides(r.shape),y=b[0],v=b[1],x=b[2],k=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(g));k.fill(u);let I=s.data.get(r.dataId).values,$=s.data.get(a.dataId).values;for(let A=0;A<c;++A){let P=a.shape[0]===1?$:$.subarray(A*8,A*8+8);for(let R=0;R<f;++R)for(let F=0;F<m;++F)for(let T=0;T<h;++T){let z,W=P[6]*F+P[7]*R+1;if(W===0)continue;let j=(P[0]*F+P[1]*R+P[2])/W,X=(P[3]*F+P[4]*R+P[5])/W,Y=ow(j,d,o),Z=ow(X,p,o);switch(i){case"nearest":z=O5(I,p,d,y,v,x,A,Z,Y,T,u);break;case"bilinear":z=P5(I,p,d,y,v,x,A,Z,Y,T,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let te=A*y+R*v+F*x+T;k[te]=z}return s.makeTensorInfo(g,r.dtype,k)}return{dataId:s.write(k,g,r.dtype),shape:r.shape,dtype:r.dtype}}var A5={kernelName:qo,backendName:"cpu",kernelFunc:_5};function ow(e,t,n){switch(n){case"reflect":return E5(e,t);case"wrap":return R5(e,t);case"nearest":return F5(e,t);case"constant":default:return D5(e,t)}}function E5(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return w.clamp(0,n,t-1)}function R5(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return w.clamp(0,n,t-1)}function D5(e,t){return e}function F5(e,t){return w.clamp(0,e,t-1)}function Ou(e,t,n,s,r,a,i,o,u,l,c){let p=i*s+o*r+u*a+l;return 0<=o&&o<t&&0<=u&&u<n?e[p]:c}function O5(e,t,n,s,r,a,i,o,u,l,c){let p=Math.round(o),d=Math.round(u);return Ou(e,t,n,s,r,a,i,p,d,l,c)}function P5(e,t,n,s,r,a,i,o,u,l,c){let p=Math.floor(o),d=Math.floor(u),h=p+1,f=d+1,m=(f-u)*Ou(e,t,n,s,r,a,i,p,d,l,c)+(u-d)*Ou(e,t,n,s,r,a,i,p,f,l,c),g=(f-u)*Ou(e,t,n,s,r,a,i,h,d,l,c)+(u-d)*Ou(e,t,n,s,r,a,i,h,f,l,c);return(h-o)*m+(o-p)*g}function z5(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;be(a,"unique");let i=s.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=DC(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}var M5={kernelName:Og,backendName:"cpu",kernelFunc:z5};function L5(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r.shape.length,o=r.shape[a],u=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==a&&(u[l++]=r.shape[h]);let c=new Array(i).fill(0),p=r.shape.slice();p[a]=1;let d=new Array(o);for(let h=0;h<d.length;h++){c[a]=h;let f=ba({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});d[h]=mt({inputs:{x:f},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(f)}return d}var B5={kernelName:jo,backendName:"cpu",kernelFunc:L5};function V5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;be(r,"unsortedSegmentSum");let o=r.shape.length,u=a.shape.length,l=[],c=[],p=o-u,d=a;for(let f=0;f<p;++f){let m=Bd({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<i;++f){let m=w.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),b=tC({inputs:{a:g,b:d},backend:n}),y=xr({inputs:{x:b},backend:n,attrs:{dtype:"float32"}}),v=Yp({inputs:{a:y,b:r},backend:n}),x=Yl({inputs:{x:v},backend:n,attrs:{axis:0,keepDims:!1}});l.push(x),c.push(g),c.push(b),c.push(y),c.push(v),c.push(x)}let h=KC({inputs:l,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var W5={kernelName:hp,backendName:"cpu",kernelFunc:V5},U5=[UG,PU,HG,jG,WU,XG,QG,JG,tH,sH,aH,oH,lH,pH,fH,bH,vH,wH,SH,VG,CH,TH,_H,EH,BU,GU,DH,zU,OH,zH,MH,BH,WH,GH,qH,KH,YH,ZH,eq,nq,rq,iq,uq,lq,dq,hq,mq,gq,bq,yq,wq,FG,Sq,HU,Eq,qU,Rq,KU,Mq,Lq,Vq,YU,Gq,qq,Kq,Yq,Zq,ZU,eG,MU,e6,PH,n6,r6,i6,OG,nG,rG,u6,iG,c6,h6,m6,y6,x6,k6,S6,uG,C6,T6,_6,E6,D6,O6,z6,cG,L6,W6,q6,pG,fG,X6,Z6,tj,gG,sj,aj,ij,XC,cj,zG,vG,pj,LU,Um,fj,MG,LG,BG,gj,yj,xj,kj,Ij,Cj,Tj,wG,_j,Fj,Pj,Bj,SG,Wj,Gj,qj,IG,G6,Xj,Qj,Jj,t5,s5,a5,o5,l5,TG,c5,_G,p5,f5,g5,y5,x5,DG,vq,k5,I5,N5,$5,A5,bG,M5,B5,W5,rj];for(let e of U5)Rl(e);var G5={};Ae(G5,{assertNotComplex:()=>ru,bindCanvasToFramebuffer:()=>nK,bindColorTextureToFramebuffer:()=>od,bindTextureToProgramUniformSampler:()=>d1,bindTextureUnit:()=>u1,bindVertexBufferToProgramAttribute:()=>Hm,callAndCheck:()=>fe,canBeRepresented:()=>QC,createFragmentShader:()=>e1,createFramebuffer:()=>o1,createProgram:()=>t1,createStaticIndexBuffer:()=>r1,createStaticVertexBuffer:()=>s1,createTexture:()=>a1,createVertexShader:()=>JC,getBatchDim:()=>ya,getExtensionOrThrow:()=>Pu,getFramebufferErrorMessage:()=>p1,getMaxTexturesInShader:()=>g1,getNumChannels:()=>eK,getProgramUniformLocation:()=>c1,getProgramUniformLocationOrThrow:()=>l1,getRowsCols:()=>va,getShapeAs3D:()=>ud,getTextureShapeFromLogicalShape:()=>f1,getWebGLDisjointQueryTimerVersion:()=>b1,getWebGLErrorMessage:()=>ZC,getWebGLMaxTextureSize:()=>m1,hasExtension:()=>Ln,isCapableOfRenderingToFloatTexture:()=>y1,isDownloadFloatTextureEnabled:()=>v1,isReshapeFree:()=>nl,isWebGLFenceEnabled:()=>x1,isWebGLVersionEnabled:()=>jm,linkProgram:()=>n1,logShaderSourceAndInfoLog:()=>bv,resetMaxTextureSize:()=>sK,resetMaxTexturesInShader:()=>rK,unbindColorTextureFromFramebuffer:()=>qm,unbindTextureUnit:()=>tK,validateFramebuffer:()=>zu,validateProgram:()=>id,validateTextureSize:()=>i1});var Yr={},Qf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function H5(e,t){Yr[e]=t}function xs(e,t){if(!(e in Yr)||t!=null){let s=j5(e,t);if(s!==null)Yr[e]=s;else return console.log("Could not get context for WebGL version",e),null}let n=Yr[e];return n==null||n.isContextLost()?(delete Yr[e],xs(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Yr[e])}function q5(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function j5(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?q5(e):t;return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Yr[e]},!1),e===1?n.getContext("webgl",Qf)||n.getContext("experimental-webgl",Qf):n.getContext("webgl2",Qf)}function Ql(e,t){return[t,e]}function K5(e,t){return e*t}function Zc(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function su(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function X5(e,t){let[n,s]=su(e,t);return n*s*4}function gv(e,t){let n=e,s,r,a,i,o,u,l,c,p,d;return K().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,p=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function fe(e,t){let n=t();return K().getBool("DEBUG")&&Y5(e),n}function Y5(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+ZC(e,t))}var Q5=596e-10,Z5=65504;function QC(e){return!!(K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||Q5<Math.abs(e)&&Math.abs(e)<Z5)}function ZC(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Pu(e,t){return Qs(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function JC(e,t){let n=Qs(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(fe(e,()=>e.shaderSource(n,t)),fe(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function e1(e,t){let n=Qs(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(fe(e,()=>e.shaderSource(n,t)),fe(e,()=>e.compileShader(n)),K().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw bv(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var J5=/ERROR: [0-9]+:([0-9]+):/g;function bv(e,t){let n=J5.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,i=r.map((p,d)=>w.rightPad((d+1).toString(),a)+p),o=0;for(let p=0;p<i.length;p++)o=Math.max(i[p].length,o);let u=i.slice(0,s-1),l=i.slice(s-1,s),c=i.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function t1(e){return Qs(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function n1(e,t){if(fe(e,()=>e.linkProgram(t)),!K().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function id(e,t){if(fe(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function s1(e,t){let n=Qs(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),fe(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function r1(e,t){let n=Qs(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),fe(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function eK(){return K().getNumber("WEBGL_VERSION")===2?1:4}function a1(e){return Qs(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function i1(e,t){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function o1(e){return Qs(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Hm(e,t,n,s,r,a,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),fe(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i)),fe(e,()=>e.enableVertexAttribArray(o)),!0)}function u1(e,t,n){h1(e,n),fe(e,()=>e.activeTexture(e.TEXTURE0+n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function tK(e,t){h1(e,t),fe(e,()=>e.activeTexture(e.TEXTURE0+t)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function l1(e,t,n){return Qs(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function c1(e,t,n){return e.getUniformLocation(t,n)}function d1(e,t,n,s){fe(e,()=>u1(e,t,s)),fe(e,()=>e.uniform1i(n,s))}function nK(e){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),fe(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function od(e,t,n){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function qm(e,t){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function zu(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+p1(e,t))}function p1(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Qs(e,t,n){let s=fe(e,()=>t());if(s==null)throw new Error(n);return s}function h1(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function ya(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function va(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function ud(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[ya(e),...va(e)]),t}function f1(e,t=!1){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?w.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let s=w.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=ya(e),a=2,i=2;return e.length&&([a,i]=va(e)),s=r*(a/2)*(i/2),w.sizeToSquarishShape(s).map(o=>o*2)}return w.sizeToSquarishShape(s)}function Jc(e){return e%2===0}function nl(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||Jc(n)&&Jc(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Jc(e[0])&&Jc(t[0])}var ld,cd;function m1(e){if(ld==null){let t=xs(e);ld=t.getParameter(t.MAX_TEXTURE_SIZE)}return ld}function sK(){ld=null}function rK(){cd=null}function g1(e){if(cd==null){let t=xs(e);cd=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,cd)}function b1(e){if(e===0)return 0;let t,n=xs(e);return Ln(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Ln(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Ln(e,t){return e.getExtension(t)!=null}function jm(e){try{if(xs(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function y1(e){if(e===0)return!1;let t=xs(e);if(e===1){if(!Ln(t,"OES_texture_float"))return!1}else if(!Ln(t,"EXT_color_buffer_float"))return!1;return Km(t)}function v1(e){if(e===0)return!1;let t=xs(e);if(e===1){if(!Ln(t,"OES_texture_float")||!Ln(t,"WEBGL_color_buffer_float"))return!1}else{if(Ln(t,"EXT_color_buffer_float"))return Km(t);let s="EXT_color_buffer_half_float";if(Ln(t,s)){let r=t.getExtension(s);return aK(t,r)}return!1}return Km(t)}function Km(e){let t=gv(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),i}function aK(e,t){let n=gv(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(i),o}function x1(e){return e!==2?!1:xs(e).fenceSync!=null}function ru(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Ne=K();Ne.registerFlag("HAS_WEBGL",()=>Ne.getNumber("WEBGL_VERSION")>0);Ne.registerFlag("WEBGL_VERSION",()=>jm(2)?2:jm(1)?1:0);Ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ne.get("WEBGL_VERSION")===2);Ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ne.registerFlag("WEBGL_PACK",()=>Ne.getBool("HAS_WEBGL"));Ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_CLIP",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_REDUCE",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_CONV_IM2COL",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>m1(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>g1(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Ne.getNumber("WEBGL_VERSION");return e===0?0:b1(e)});Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!gp.isMobile());Ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>y1(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ne.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>v1(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>x1(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>gp.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function fn(){let e,t,n,s,r,a,i,o,u,l;return K().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function ki(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let i=`int ${e[a]} = ${n} / ${r}`,o=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${i}; ${o};`}).join("")}function Qp(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let i=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,o=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${i}; ${o};`}).join("")}function iK(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function oK(e,t,n="index"){let s=e.map((a,i)=>i),r=iK(s,t);return r.map((a,i)=>{let o=`int ${e[i]} = ${n} / ${r[i]}`,u=i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${r[i]}`:`index -= ${e[i]} * ${r[i]}`;return`${o}; ${u};`}).join("")}function yv(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function vv(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var w1=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:k1}=C;function uK(e,t,n){let s=[];if(e.forEach(h=>{let f=w.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=xv(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>lK(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=fn(),u=pK(o),l,c,p=mK(o);return t.isPacked?(l=cK(t.logicalShape,i,n.enableShapeUniforms),c=fK(o)):(l=dK(t.logicalShape,i,n.enableShapeUniforms),c=hK(o)),n.packedInputs&&(p+=vK),[p,u,c,r,l,a,n.userCode].join(`
`)}function au(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return EK(e,t);case 1:return DK(e,t);case 2:return OK(e,t);case 3:return zK(e,t);case 4:return LK(e,t);case 5:return BK(e);case 6:return VK(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function S1(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return AK(e);case 1:return RK(e,t);case 2:return FK(e,t);case 3:return PK(e,t);default:return MK(e,t)}}function lK(e,t,n=!1,s){let r="";n?r+=S1(e,s):r+=au(e,s);let a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(n?r+=WK(e,t):r+=UK(e,t)),r}function cK(e,t,n){switch(e.length){case 0:return I1();case 1:return xK(e,t,n);case 2:return $K(e,t,n);case 3:return kK(e,t,n);default:return IK(e,t,n)}}function dK(e,t,n){switch(e.length){case 0:return I1();case 1:return wK(e,t,n);case 2:return _K(e,t,n);case 3:return SK(e,t,n);case 4:return CK(e,t,n);case 5:return NK(e,t);case 6:return TK(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function pK(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function hK(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function fK(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function mK(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${gK}
    ${bK}
    ${yK}
  `}var gK=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,bK=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,yK=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vK=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function I1(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function xK(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function wK(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function kK(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function SK(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Qp(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=ki(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function IK(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),i=a,o="",u="b, r, c";for(let l=2;l<e.length-1;l++)i*=e[e.length-l-1],o=`
      int b${l} = index / ${i};
      index -= b${l} * ${i};
    `+o,u=`b${l}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${u});
    }
  `}function CK(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Qp(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=ki(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function NK(e,t){let n=ki(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function TK(e,t){let n=ki(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function $K(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function _K(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Si(e){return`offset${e}`}function AK(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=fn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function EK(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Si(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,u]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${o}, ${u}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function RK(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=fn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function DK(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${iu(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],i=r[1];if(i===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Si(n);return i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function FK(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=fn();if(a!=null&&w.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;let l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function OK(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&w.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let d=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:i,keptDims:o}=w.squeezeShape(n),u=i;if(u.length<n.length){let d=ou(e,u),h=["row","col"];return`
      ${au(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${uu(h,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${iu(e)}
      }
    `;let l=a[0],c=a[1],p=Si(s);return c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${s}, uv);
    }
  `:l===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${p};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function PK(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let d=n.slice(1),h=[1,2],f=ou(e,d),m=["b","row","col"];return`
        ${S1(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${uu(m,h)});
        }
      `}let o=fn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `;let u=i[0],l=i[1],c=Math.ceil(n[2]/2),p=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${p}, ${c}, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `}function zK(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=w.squeezeShape(n),l=o;if(l.length<n.length){let m=ou(e,l),g=["row","col","depth"];return`
        ${au(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${uu(g,u)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${i}, 1)));
        ${iu(e)}
      }
    `;let c=e.shapeInfo.texShape,p=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=Si(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${i} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function MK(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=fn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],p=Math.ceil(a[i-1]/2),d=p*Math.ceil(a[i-2]/2),h="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<i-1;m++)h=`int b${m}, `+h,d*=a[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});
      return ${r.texture2D}(${n}, uv);
    }
  `}function LK(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=w.squeezeShape(n);if(u.length<n.length){let y=ou(e,u),v=["row","col","depth","depth2"];return`
      ${au(y,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${uu(v,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${a}, 1)));
        ${iu(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===o&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;let b=Si(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${d}, ${h}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}function BK(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=w.squeezeShape(t);if(u.length<t.length){let m=ou(e,u),g=["row","col","depth","depth2","depth3"];return`
      ${au(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${uu(g,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${a}, ${r})) +
          depth3;
        ${iu(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===o&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Si(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function VK(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=w.squeezeShape(t);if(r.length<t.length){let g=ou(e,r),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${au(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${uu(b,a)});
      }
    `}let i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${l}, ${u}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${iu(e)}
      }
    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];if(f===c&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===i&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Si(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${l} + depth * ${u} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function iu(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function WK(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=k1(e.shapeInfo.logicalShape,t.logicalShape),u=ot(i),l=i-a,c,p=["x","y","z","w","u","v"];a===0?c="":i<2&&o.length>=1?c="coords = 0;":c=o.map(y=>`coords.${p[y+l]} = 0;`).join(`
`);let d="";i<2&&a>0?d="coords":d=e.shapeInfo.logicalShape.map((y,v)=>`coords.${p[v+l]}`).join(", ");let h="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,b=w.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!b)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)i===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(o.length){let y=a-2,v=a-1;o.indexOf(y)>-1&&o.indexOf(v)>-1?h="return vec4(outputValue.x);":o.indexOf(y)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(v)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${h}
    }
  `}function UK(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let l=ot(u),c=k1(e.shapeInfo.logicalShape,t.logicalShape),p=u-o,d,h=["x","y","z","w","u","v"];o===0?d="":u<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${h[m+p]} = 0;`).join(`
`);let f="";return u<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+p]}`).join(", "),`
    float ${r}() {
      ${l} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function ot(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function xv(e,t,n){let{newShape:s,keptDims:r}=w.squeezeShape(t),a=t.length,i=e&&a===3&&t[0]===1,o=i?t.slice(1):s,u=!e&&a>1&&!w.arraysEqual(t,n)&&s.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:r}}function ou(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function uu(e,t){return t.map(n=>e[n]).join(", ")}function GK(e,t,n,s){let r=n.map((c,p)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:d}}),a=r.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=uK(r,i,t),u=e1(e.gl,o),l=e.createProgram(u);return K().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,...C1(e,t,l)}}function C1(e,t,n){let s={},r={},a={},i=[],o,u,l,c=null,p=null;p=e.getUniformLocation(n,"NAN",!1),K().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let h=0;h<t.variableNames.length;h++){let f=t.variableNames[h];s[f]=e.getUniformLocation(n,f,d),s[`offset${f}`]=e.getUniformLocation(n,`offset${f}`,d),t.enableShapeUniforms&&(r[`${f}Shape`]=e.getUniformLocation(n,`${f}Shape`,d),a[`${f}TexShape`]=e.getUniformLocation(n,`${f}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),l=e.getUniformLocation(n,"outShapeStrides",d),u=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((h,f)=>{i[f]=e.getUniformLocation(n,h.name,d)}),{uniformLocations:s,customUniformLocations:i,infLoc:c,nanLoc:p,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}}function uw(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],i=a.shape;if(!w.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(n.isUniform&&a.isUniform)return;let o=n.texShape,u=a.isUniform?null:a.texData.texShape;if(!w.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}function HK(e,t,n,s,r){t.program.enableShapeUniforms||(uw(t.inShapeInfos,n),uw([t.outShapeInfo],[s]));let a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),K().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((u,l)=>{let c=t.program.variableNames[l],p=t.uniformLocations[c],d=t.uniformLocations[`offset${c}`],h=t.inShapesLocations[`${c}Shape`],f=t.inTexShapesLocations[`${c}TexShape`];if(h){let{uniformShape:m}=xv(t.program.packedInputs,u.shape,u.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),p!=null){if(u.isUniform){if(w.sizeFromShape(u.shape)<2)e.gl.uniform1f(p,u.uniformValues[0]);else{let m=u.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(p,m)}return}u.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture.texture,p,l)}});let o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let u=w.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((u,l)=>{let c=t.customUniformLocations[l],p=r[l];if(u.type==="float")e.gl.uniform1fv(c,p);else if(u.type==="vec2")e.gl.uniform2fv(c,p);else if(u.type==="vec3")e.gl.uniform3fv(c,p);else if(u.type==="vec4")e.gl.uniform4fv(c,p);else if(u.type==="int")e.gl.uniform1iv(c,p);else if(u.type==="ivec2")e.gl.uniform2iv(c,p);else if(u.type==="ivec3")e.gl.uniform3iv(c,p);else if(u.type==="ivec4")e.gl.uniform4iv(c,p);else throw Error(`uniform type ${u.type} is not supported yet.`)}),e.executeProgram()}function qK(e,t,n){let s="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:l,uniformShape:c,keptDims:p}=xv(e.packedInputs,i.shape,u),d="",h="",f="";if(c.length===1&&e.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${k[0]>1}_${k[1]>1}`}else if(c.length===2&&!e.packedInputs)h=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!e.packedInputs){let k=w.computeStrides(c);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let m=i.shape.length,g=c.length===2&&w.arraysEqual(i.shape,u),b=w.sizeFromShape(i.shape)===1,y=C.getBroadcastDims(i.shape,n.shape),v=!e.packedInputs&&m===n.shape.length&&w.arraysEqual(u,n.texData.texShape),x=e.packedInputs||c.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${m}_${v}_${l?p:""}_${c.length}_${b}_${y}_${g}_${d}_${h}_${f}_${x}_${o}`}else{let u=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${u}_${o}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${K().getNumber("WEBGL_VERSION")}`,a}function Sn(e){return K().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var jK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=fn();this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qp(["r","c","d"],e):ki(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},KK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=fn();this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qp(["r","c","d"],e):ki(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},XK=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=fn();this.outputShape=e,this.userCode=`
      ${w1}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},YK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=fn();this.outputShape=e,this.userCode=`
      ${w1}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},QK=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=fn();this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?vv():yv(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},ZK=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=fn();this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let o=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?vv():yv(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},JK={};Ae(JK,{bindVertexProgramAttributeStreams:()=>F1,createBufferFromOutputTexture:()=>z1,createFloat16MatrixTexture:()=>A1,createFloat16PackedMatrixTexture:()=>D1,createFloat32MatrixTexture:()=>_1,createIndexBuffer:()=>$1,createPackedMatrixTexture:()=>R1,createUnsignedBytesMatrixTexture:()=>E1,createVertexBuffer:()=>T1,createVertexShader:()=>N1,downloadByteEncodedFloatMatrixFromOutputTexture:()=>L1,downloadFloat32MatrixFromBuffer:()=>M1,downloadMatrixFromPackedOutputTexture:()=>V1,downloadPackedMatrixFromBuffer:()=>B1,getInternalFormatForFloat16MatrixTexture:()=>kv,getInternalFormatForFloat16PackedMatrixTexture:()=>Cv,getInternalFormatForFloat32MatrixTexture:()=>wv,getInternalFormatForPackedMatrixTexture:()=>Iv,getInternalFormatForUnsignedBytesMatrixTexture:()=>Sv,uploadDenseMatrixToTexture:()=>O1,uploadPixelDataToTexture:()=>P1});function N1(e){let t=fn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return JC(e,n)}function T1(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return s1(e,t)}function $1(e){let t=new Uint16Array([0,1,2,2,1,3]);return r1(e,t)}function Zl(e,t,n,s,r,a){i1(t,n);let i=a1(e),o=e.TEXTURE_2D;return fe(e,()=>e.bindTexture(o,i)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),K().getNumber("WEBGL_VERSION")===1?fe(e,()=>e.texImage2D(o,0,s,t,n,0,r,a,null)):fe(e,()=>e.texStorage2D(o,1,s,t,n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function wv(e){return e.internalFormatFloat}function _1(e,t,n,s){let[r,a]=Ql(t,n);return Zl(e,r,a,wv(s),s.textureFormatFloat,e.FLOAT)}function kv(e){return e.internalFormatHalfFloat}function A1(e,t,n,s){let[r,a]=Ql(t,n);return Zl(e,r,a,kv(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function Sv(e){return e.downloadTextureFormat}function E1(e,t,n,s){let[r,a]=Ql(t,n);return Zl(e,r,a,Sv(s),e.RGBA,e.UNSIGNED_BYTE)}function Iv(e){return e.internalFormatPackedFloat}function R1(e,t,n,s){let[r,a]=su(t,n);return Zl(e,r,a,Iv(s),e.RGBA,e.FLOAT)}function Cv(e){return e.internalFormatPackedHalfFloat}function D1(e,t,n,s){let[r,a]=su(t,n);return Zl(e,r,a,Cv(s),e.RGBA,s.textureTypeHalfFloat)}function F1(e,t,n){return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Hm(e,t,"clipSpacePos",n,3,20,0)&&Hm(e,t,"uv",n,2,20,12)}function O1(e,t,n,s,r,a){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,u;r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(r),K().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,o,i)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function P1(e,t,n){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?K().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):K().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function z1(e,t,n,s){let r=e.createBuffer();fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let o=4*4*t*n;return fe(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ)),fe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function M1(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function L1(e,t,n,s){let[r,a]=Ql(t,n),i=4,o=new Uint8Array(K5(t*n,i));return fe(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function B1(e,t,n,s,r,a,i,o){let u=e,l=new Float32Array(X5(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function V1(e,t,n){let s=new Float32Array(t*n*4);return fe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var Zf=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=K().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,H5(t,e)):this.gl=xs(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),K().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Pu(this.gl,r),Ln(this.gl,a))this.textureHalfFloatExtension=Pu(this.gl,a);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ln(this.gl,s))this.colorBufferHalfFloatExtension=Pu(this.gl,s);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ln(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Ln(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=T1(this.gl),this.indexBuffer=$1(this.gl),this.framebuffer=o1(this.gl),this.textureConfig=gv(this.gl,this.textureHalfFloatExtension)}get debug(){return K().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;fe(e,()=>e.finish()),fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.deleteFramebuffer(this.framebuffer)),fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),fe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),_1(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),A1(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),E1(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),P1(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),O1(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),D1(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),R1(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(qm(this.gl,this.framebuffer),this.outputTexture=null),fe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>L1(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return B1(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return M1(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=z1(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(K().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>V1(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=N1(t));let n=t1(t);return fe(t,()=>t.attachShader(n,this.vertexShader)),fe(t,()=>t.attachShader(n,e)),n1(t,n),this.debug&&id(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=F1(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&fe(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&id(this.gl,this.program),fe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?l1(this.gl,e,t):c1(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),fe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),d1(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=su(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&id(this.gl,this.program),zu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),fe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Pu(this.gl,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=eX(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),od(this.gl,e,this.framebuffer),this.debug&&zu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(od(this.gl,this.outputTexture,this.framebuffer),this.debug&&zu(this.gl)):qm(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;od(s,e,this.framebuffer),this.debug&&zu(s),this.outputTexture=e,fe(s,()=>s.viewport(0,0,t,n)),fe(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),fe(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function eX(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:tX,bincountImpl:W1,bincountReduceImpl:nX,ceilImpl:sX,concatImpl:rX,equalImpl:aX,expImpl:iX,expm1Impl:oX,floorImpl:uX,gatherNdImpl:lX,gatherV2Impl:cX,greaterImpl:dX,greaterEqualImpl:pX,lessImpl:hX,lessEqualImpl:fX,linSpaceImpl:mX,logImpl:gX,maxImpl:bX,maximumImpl:yX,minimumImpl:vX,multiplyImpl:xX,negImpl:wX,notEqualImpl:kX,prodImpl:SX,rangeImpl:IX,rsqrtImpl:CX,sigmoidImpl:NX,simpleAbsImpl:U1,sliceImpl:TX,sparseFillEmptyRowsImpl:$X,sparseReshapeImpl:_X,sparseSegmentReductionImpl:G1,sqrtImpl:AX,stridedSliceImpl:EX,stringNGramsImpl:RX,stringSplitImpl:DX,stringToHashBucketFastImpl:FX,subImpl:OX,tileImpl:PX,topKImpl:zX,transposeImpl:Nv,uniqueImpl:MX}=sv;function H1(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function ln(e,t){return t===1?[e]:H1(e,t)}function LX(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var BX=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Sn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=ln("rc",this.rank),n=ot(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},q1=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2===1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${VX(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?vv():yv(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function VX(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?oK(["r","c","d"],"inputShape"):ki(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var WX=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=cw(t,n),r=dw(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=lw(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let o=this.freeTextures[r].shift();return this.usedTextures[r].push(o),o}let i;return s===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=cw(n,s),a=dw(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let i=lw(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=K().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function UX(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function lw(e,t,n,s,r){let a=GX(t,s),i;if(r){let[u,l]=su(e[0],e[1]);i=u*l}else{let[u,l]=Ql(e[0],e[1]);i=u*l}let o=UX(n,a);return i*o}function GX(e,t){switch(e){case 3:return Iv(t);case 4:return Cv(t);case 1:return wv(t);case 0:return kv(t);case 2:return Sv(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function HX(e){return K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}function cw(e,t){if(e===1)return 3;if(e===0||e==null)return HX(t);if(e===3||e===2)return 2;throw new Error(`Unknown logical texture type ${e}`)}function dw(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Gs=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},ss="if (isnan(x)) return x;",qX="return x;",pw="return abs(x);",jX="return (x >= 0.0) ? x : (exp(x) - 1.0);",KX=ss+`
  return (x < 0.0) ? 0.0 : x;
`,XX=ss+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Wi="return x;",YX="return 1.0 / (1.0 + exp(-1.0 * x));",QX="return x;",ZX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,JX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,e8=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,t8="return 1.0 / (1.0 + exp(-1.0 * x));",Jr=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},n8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length);let t=e.length,n=ln("rc",t),s=ot(t),r=LX(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},s8=ws.whereImpl,r8=1e-7,a8=1e-4,ed={};function i8(e){return e in ed||(ed[e]={}),ed[e]}var o8=K().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),u8=600;function l8(){return K().global.screen==null?1024:K().global.screen.height*K().global.screen.width*window.devicePixelRatio*u8/1024/1024}var j1=class extends rl{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!K().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Zf)t=e;else{let n=xs(K().getNumber("WEBGL_VERSION"),e);t=new Zf(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=xs(K().getNumber("WEBGL_VERSION"));t=new Zf(n),this.binaryCache=i8(K().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new WX(this.gpgpu),this.numMBBeforeWarning=l8(),this.texData=new Kd(this,ds())}nextDataId(){return j1.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((K().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||K().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:1,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(K().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:1,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(a!=null){let p;o?p=new Jr(i,Wi):p=new Gs(i,Wi);let d=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:s}],s),h=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let u=this.activeTimers!=null,l;u&&(l=w.now());let c;if(s==="complex64"){let p=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);c=C.mergeRealAndImagArrays(p,d)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=w.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(r!=null){let h;o?h=new Jr(s,Wi):h=new Gs(s,Wi);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(K().getBool("DEBUG")&&!K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&K().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,l;if(a!=="complex64"&&K().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let h=this.texData.get(l.dataId);u=this.gpgpu.createBufferFromTexture(h.texture.texture,...Zc(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(a==="complex64"){let h=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),f=h[0],m=h[1];c=C.mergeRealAndImagArrays(f,m)}else if(u==null)c=this.getValuesFromTexture(e);else{let h=w.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(u,h)}if(l!=null&&this.disposeIntermediateTensorInfo(l),u!=null){let h=this.gpgpu.gl;fe(h,()=>h.deleteBuffer(u))}let p=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(h=>h(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ds().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:u}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;o?d=new Jr(r,Wi):d=new Gs(r,Wi);let h=this.runWebGLProgram(d,[{dataId:e,shape:r,dtype:i}],i),f=this.readToGPU(h,t);return this.disposeIntermediateTensorInfo(h),f}if(u==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=this.decode(e,t.customTexShape),c=ds().makeTensorFromTensorInfo(l),p=this.texData.get(l.dataId);return{tensorRef:c,...p.texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return De(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!QC(n))throw K().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=w.sizeFromShape(t);if(K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let p=this.decode(e),d=this.texData.get(p.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Zc(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(p),h}let a=K().getBool("WEBGL_PACK")&&s===!0,i=a?ud(t):t,o=a?new YK(i):new XK(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),a=w.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(r);i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=o8){return K().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&w.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){C.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return s8(e.shape,t)}packedUnaryOp(e,t,n){let s=new Jr(e.shape,t),r=this.compileAndRun(s,[e],n);return ds().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=U1(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(K().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,pw,e.dtype);let t=new Gs(e.shape,pw),n=this.compileAndRun(t,[e]);return ds().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return ds().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new n8(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new BX(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[ya(e.shape),...va(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[ya(t),...va(t)],a=new q1(r,n),i=!0,o=[n],u=this.runWebGLProgram(a,[s],e.dtype,o,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(t!=null){let p=w.sizeFromShape(r),d=t[0]*t[1]*4;w.assert(p<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=ud(r),o;s?o=new KK(i):o=new jK(i);let u=!0,l=[t!=null?t:Zc(i)],c=this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,u,t);return{dtype:a,shape:r,dataId:c.dataId}}runWebGLProgram(e,t,n,s,r=!1,a){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===0){let g=a!=null?a:Zc(e.outputShape);o.texShape=g.map(b=>b*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),w.sizeFromShape(i.shape)===0)return o.values=w.getTypedArrayFromDType(i.dtype,0),i;let u=[],l=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(g.dataId);if(b.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=K().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!b.isPacked!=!!e.packedInputs)g=b.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),b=this.texData.get(g.dataId);else if(b.isPacked&&!nl(b.shape,g.shape)){let y=g,v=g.shape;g.shape=b.shape,g=this.packedReshape(g,v),u.push(g),b=this.texData.get(g.dataId),y.shape=v}return{shape:g.shape,texData:b,isUniform:!1}});this.uploadToGPU(i.dataId);let c={shape:i.shape,texData:o,isUniform:!1},p=qK(e,l,c),d=this.getAndSaveBinary(p,()=>GK(this.gpgpu,e,l,c)),h=this.activeTimers!=null,f;h&&(f=this.startTimer()),K().get("ENGINE_COMPILE_ONLY")||HK(this.gpgpu,d,l,c,s),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=K().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!K().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&r===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(K().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=q(()=>{if(!K().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=K().getBool("DEBUG");K().set("DEBUG",!1);let t=this.abs(we(1e-8)).dataSync()[0];if(K().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?r8:a8}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(a!=null)return;let u=this.activeTimers!=null,l;u&&(l=w.now());let c=t.texShape;if(c==null&&(c=f1(n,o),t.texShape=c),r!=null){let p=ud(n),d,h=c[1],f=c[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(o||!m)&&([h,f]=su(c[0],c[1])),o?d=new ZK(p,m):d=new QK(p,m);let g=m?[f,h]:c,b=this.makeTensorInfo(g,s),y=this.texData.get(b.dataId);m?y.usage=2:y.usage=1,y.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),h,f,r);let v=[[f,h]],x=!0,k=this.runWebGLProgram(d,[b],s,v,x),I=this.texData.get(k.dataId);t.texShape=I.texShape,t.isPacked=I.isPacked,t.usage=I.usage,K().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(t.texture=I.texture,t.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(b),u&&(this.uploadWaitMs+=w.now()-l)}else{let p=this.acquireTexture(c,i,s,o);t.texture=p}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=c8(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(r){throw r}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await GS(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(bv(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}=C1(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}},K1=j1;K1.nextDataId=0;function c8(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var dhe="0.0.0";function d8(){K().set("WEBGL_FORCE_F16_TEXTURES",!0)}gp.isBrowser()&&bp("webgl",()=>new K1,2);var phe={forceHalfFloat:d8},X1=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,uo=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Sn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Zp=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,Jl=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=C.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=Sn(r);let a="";if(s)if(r===0||w.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${ot(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let o=ln("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${o[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${o[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${o[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${o[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Rn(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var p8={kernelName:Wa,backendName:"webgl",kernelFunc:Rn};function Rr(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=Rn({inputs:{x:s},backend:n}),u=Rn({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}var h8={kernelName:Zd,backendName:"webgl",kernelFunc:Rr},Y1="return (a < 0.) ? b * a : a;",Q1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function f8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",w.createScalarValue(a,"float32")),o=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jl(Q1,r.shape,i.shape):new uo(Y1,r.shape,i.shape),u=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),u}var m8={kernelName:Ua,backendName:"webgl",kernelFunc:f8},Z1="return (a < 0.) ? b * a : a;",J1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function g8(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jl(J1,s.shape,r.shape):new uo(Z1,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var b8={kernelName:ti,backendName:"webgl",kernelFunc:g8},lu="if (isnan(x)) return x;",y8=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,v8=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ke({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:i}=r,o=a,u=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let p=o.texData.get(i.dataId),d=n(p.values,u);return o.makeTensorInfo(i.shape,u,d)}let l=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return l?c=new Jr(i.shape,t):c=new Gs(i.shape,e),o.runWebGLProgram(c,[i],u)}}function jt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{let{a:u,b:l}=i,c=o;if(s&&u.dtype==="complex64"){let f=c.texData.get(u.dataId),m=c.texData.get(l.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(v=>{let[x,k]=v,I={dataId:x.dataId,dtype:x.dtype,shape:u.shape},$={dataId:k.dataId,dtype:k.dtype,shape:l.shape},E=new uo(e,u.shape,l.shape);return c.runWebGLProgram(E,[I,$],cn(x.dtype,k.dtype))}),y=Rr({inputs:{real:g,imag:b},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(b),y}let p=a||cn(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([u,l]))&&r!=null){let f=c.texData.get(u.dataId).values,m=c.texData.get(l.dataId).values,g=u.dtype==="string"?C.fromUint8ToStringArray(f):f,b=u.dtype==="string"?C.fromUint8ToStringArray(m):m,[y,v]=r(u.shape,l.shape,g,b,p),x=c.makeTensorInfo(v,p),k=c.texData.get(x.dataId);return k.values=y,x}let d=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return d?h=new Jl(t,u.shape,l.shape,n):h=new uo(e,u.shape,l.shape),c.runWebGLProgram(h,[u,l],p)}}function Jp(e,t=!1){if(e==="linear")return t?QX:qX;if(e==="relu")return t?JX:KX;if(e==="elu")return t?ZX:jX;if(e==="relu6")return t?e8:XX;if(e==="prelu")return t?J1:Z1;if(e==="leakyrelu")return t?Q1:Y1;if(e==="sigmoid")return t?t8:YX;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var e2=class{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Sn(this.outputShape.length);let l=s?e[1]:e[2],c=Math.ceil(l/2),p=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${y};
          int batchB = ${v};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${g}

        setOutput(result);
      }
    `}},hw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},fw=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},mw="return a * b;";function Tv(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=C.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let o=n.texData.get(s.dataId),u=n.texData.get(r.dataId),l=new fw(hw.REAL,s.shape,r.shape),c=new fw(hw.IMAG,s.shape,r.shape),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:s.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(l,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),f=Rr({inputs:{real:d,imag:h},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let o=n.texData.get(s.dataId),u=n.texData.get(r.dataId),[l,c]=xX(s.shape,r.shape,o.values,u.values,a),p=n.makeTensorInfo(c,a),d=n.texData.get(p.dataId);return d.values=l,p}let i;return K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Jl(mw,s.shape,r.shape):i=new uo(mw,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}var x8={kernelName:Za,backendName:"webgl",kernelFunc:Tv};function w8(e,t,n){let s=[ya(e.shape),...va(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[ya(t),...va(t)],i=new q1(a,s),o=!0,u=[s],l=n.runWebGLProgram(i,[r],e.dtype,u,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function he(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=w.sizeFromShape(r.shape),u=w.inferFromImplicitShape(a,o),l=w.sizeFromShape(u);w.assert(o===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let c=i.texData.get(r.dataId);return c.isPacked&&!nl(r.shape,u)&&!(c.texture!==null&&nl(c.shape,u))?w8(r,u,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}var k8={kernelName:Fo,backendName:"webgl",kernelFunc:he},gw=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i=Math.floor(n/4)*4,o=n%4,u="sumValue += dot(values, ones);";if(t!=null){let c=1/t;u=`sumValue += dot(values * ${w.isInt(c)?c.toPrecision(2):c}, ones);`}let l="";r%n>0&&(l=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}},S8=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let l=Math.floor(n/4)*4,c=n%4,p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${l};
        if (${c===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${u});
      }
    `}};function I8(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=C.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function Ii(e,t,n,s){let r=I8(e.shape),a=e;for(let i=0;i<r.length;i++){let{inSize:o,windowSize:u,outSize:l}=r[i],c,p;n==="mean"?c=i===0?new gw({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new gw({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):c=new S8({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),p=a,a=s.runWebGLProgram(c,[a],t),p.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(p)}return a}var C8=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=ot(this.rank),r=N8(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function N8(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var T8=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=ot(this.rank),r=H1("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=r[l];let i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${o}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${o}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function eh(e,t,n){let s=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new T8(e.shape,t):new C8(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function $8(e,t,n,s){let r=t,a=e.shape.length,i=w.parseAxisParam(r,e.shape),o=i,u=C.getAxesPermutation(o,a),l=u!=null,c=e;l&&(c=eh(e,u,s),o=C.getInnerMostAxes(o.length,a)),C.assertAxesAreInnerMostDims("sum",o,a);let[p,d]=C.computeOutAndReduceShapes(c.shape,o),h=p;n&&(h=C.expandShapeToKeepDim(p,i));let f=w.sizeFromShape(d),g=w.sizeFromShape(e.shape)/f,b=he({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),y=mp(e.dtype),v=Ii(b,y,"sum",s),x=he({inputs:{x:v},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),l&&s.disposeIntermediateTensorInfo(c),x}function th(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return $8(r,a,i,n)}var _8={kernelName:ci,backendName:"webgl",kernelFunc:th};function zt(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let c=0;c<u.length;c++)u[c]=r.shape[a[c]];let l;if(i.shouldExecuteOnCPU([r])){let p=i.texData.get(r.dataId).values,d=Nv(p,r.shape,r.dtype,a,u);l=i.makeTensorInfo(u,r.dtype);let h=i.texData.get(l.dataId);h.values=d}else l=eh(r,a,i);return l}var A8={kernelName:mi,backendName:"webgl",kernelFunc:zt},t2=1e3;function Wd({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let l=e.shape.length,c=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],d=s?t.shape[c-1]:t.shape[c-2],h=n?e.shape[l-1]:e.shape[l-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),x=bi.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[b,p,h]:[b,h,p],I=s?[y,f,d]:[y,d,f],$=he({inputs:{x:e},backend:r,attrs:{shape:k}}),E=he({inputs:{x:t},backend:r,attrs:{shape:I}}),A=[$,E],P=Math.max(b,y),R=n?$.shape[1]:$.shape[2],F=a!=null,T=i!=null,z=u==="leakyrelu",W=u!=null?Jp(u,!0):null,j=F||T||z||W!=null,X;if((h===1||f===1)&&R>t2&&j===!1){let Z=$,te=E;n&&(Z=zt({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),A.push(Z)),s&&(te=zt({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),A.push(te));let J=f!==1,se=f===1,ne=Z;J&&(ne=he({inputs:{x:Z},backend:r,attrs:{shape:[P,R,1]}}),A.push(ne));let oe=f===1?2:1,ae=te;se&&(ae=he({inputs:{x:te},backend:r,attrs:{shape:[P,1,R]}}),A.push(ae));let de=Tv({inputs:{a:ne,b:ae},backend:r});X=th({inputs:{x:de},backend:r,attrs:{axis:oe,keepDims:!0}}),A.push(de)}else{let Z=cn(e.dtype,t.dtype),te=new e2(k,I,[P,h,f],n,s,F,W,T,z),J=[$,E];if(a!=null&&J.push(a),T&&J.push(i),z){let se=r.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));J.push(se),A.push(se)}X=r.runWebGLProgram(te,J,Z)}let Y=he({inputs:{x:X},backend:r,attrs:{shape:x}});A.push(X);for(let Z of A)r.disposeIntermediateTensorInfo(Z);return Y}function E8(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=s;return Wd({a:r,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:c})}var R8={kernelName:aa,backendName:"webgl",kernelFunc:E8},bw="return abs(x);";function D8(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),i=U1(a.values);return n.makeTensorInfo(s.shape,s.dtype,i)}let r;return K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Jr(s.shape,bw):r=new Gs(s.shape,bw),n.runWebGLProgram(r,[s],s.dtype)}var F8={kernelName:co,backendName:"webgl",kernelFunc:D8},O8=ss+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,P8=Ke({opSnippet:O8}),z8={kernelName:al,backendName:"webgl",kernelFunc:P8},M8=ss+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,L8=Ke({opSnippet:M8}),B8={kernelName:il,backendName:"webgl",kernelFunc:L8},yw="return a + b;",V8=jt({opSnippet:yw,packedOpSnippet:yw,supportsComplex:!0,cpuKernelImpl:tX}),W8={kernelName:Sr,backendName:"webgl",kernelFunc:V8},U8=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},G8=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function dd(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Rn({inputs:{x:s[0]},backend:n});if(s.length>K().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(s.length/2),l=dd({inputs:s.slice(0,u),backend:n}),c=dd({inputs:s.slice(u),backend:n});return dd({inputs:[l,c],backend:n})}let r=s.map(u=>u.dtype).reduce((u,l)=>cn(u,l)),a=s.map(u=>u.shape),o=K().getBool("WEBGL_PACK")?new G8(s[0].shape,a):new U8(s[0].shape,a);return n.runWebGLProgram(o,s,r)}var H8={kernelName:Sa,backendName:"webgl",kernelFunc:dd};function q8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=C.getAxesPermutation(l,o),p=r;c!=null&&(p=zt({inputs:{x:r},backend:n,attrs:{perm:c}}),l=C.getInnerMostAxes(l.length,o)),C.assertAxesAreInnerMostDims("all",l,o);let[d,h]=C.computeOutAndReduceShapes(p.shape,l),f=w.sizeFromShape(h),m=he({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=Ii(m,m.dtype,"all",n),b;if(i){let y=C.expandShapeToKeepDim(d,u);b=he({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),b}var j8={kernelName:ol,backendName:"webgl",kernelFunc:q8};function K8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=C.getAxesPermutation(l,o),p=r;c!=null&&(p=zt({inputs:{x:r},backend:n,attrs:{perm:c}}),l=C.getInnerMostAxes(l.length,o)),C.assertAxesAreInnerMostDims("any",l,o);let[d,h]=C.computeOutAndReduceShapes(p.shape,l),f=w.sizeFromShape(h),m=he({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=Ii(m,m.dtype,"any",n),b;if(i){let y=C.expandShapeToKeepDim(d,u);b=he({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),b}var X8={kernelName:ul,backendName:"webgl",kernelFunc:K8},Y8=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},Q8=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,u=ot(o),l=ln("coords",o),c,p;if(a===1){p=o+1;let $=ot(p);c=`
        ${$} sourceLocR = ${$}(${l.join()}, 0);
        ++${l[o-1]};
        ${$} sourceLocG = ${$}(${l.join()}, 0);
        ++${l[o-2]};
        ${$} sourceLocA = ${$}(${l.join()}, 0);
        --${l[o-1]};
        ${$} sourceLocB = ${$}(${l.join()}, 0);
        --${l[o-2]};`}else p=o,c=`
        ${u} sourceLocR = coords;
        ++${l[o-1]};
        ${u} sourceLocG = coords;
        ++${l[o-2]};
        ${u} sourceLocA = coords;
        --${l[o-1]};
        ${u} sourceLocB = coords;
        --${l[o-2]};`;let d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],f=d.map($=>"int "+$),m=ln("sourceLocR",p-1).concat("inIdx.r"),g=ln("sourceLocG",p-1).concat("inIdx.g"),b=ln("sourceLocB",p-1).concat("inIdx.b"),y=ln("sourceLocA",p-1).concat("inIdx.a"),v=n==="max"?"greaterThan":"lessThan",x=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${I}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${x}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function n2(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let i=C.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},u=new Y8(o,n,s==null),l=[t];s!=null&&l.push(s);let c=e.runWebGLProgram(u,l,"int32");if(c.shape[1]===1)return c;let p=n2(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function s2(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],i=C.computeOptimalWindowSize(a),o=new Q8(r,i,n,s==null),u=s==null?[t]:[t,s],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){let c=s2(e,t,n,l);return e.disposeIntermediateTensorInfo(l),c}return l}function r2(e,t,n,s){let r=[n];if(C.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!K().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,u=t;o&&(u=e.unpackTensor(t),a.push(u));let[l,c]=C.computeOutAndReduceShapes(u.shape,r),p=w.sizeFromShape(c),d=he({inputs:{x:u},backend:e,attrs:{shape:[-1,p]}});a.push(d);let h=n2(e,d,s);a.push(h);let f=he({inputs:{x:h},backend:e,attrs:{shape:l}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return s2(e,t,s)}function Z8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=zt({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let c=r2(n,u,i[0],"max");return l.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var J8={kernelName:Ia,backendName:"webgl",kernelFunc:Z8};function eY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=zt({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let c=r2(n,u,i[0],"min");return l.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var tY={kernelName:ll,backendName:"webgl",kernelFunc:eY},nY=ss+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,sY=Ke({opSnippet:nY}),rY={kernelName:cl,backendName:"webgl",kernelFunc:sY},aY=ss+"return log(x + sqrt(x * x + 1.0));",iY=Ke({opSnippet:aY}),oY={kernelName:dl,backendName:"webgl",kernelFunc:iY},uY=ss+`
  return atan(x);
`,lY=Ke({opSnippet:uY}),cY={kernelName:pl,backendName:"webgl",kernelFunc:lY},dY=y8+`
  return atan(a, b);
`,pY=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+v8+`
  return result;
`,hY=jt({opSnippet:dY,packedOpSnippet:pY}),fY={kernelName:fl,backendName:"webgl",kernelFunc:hY},mY=ss+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,gY=Ke({opSnippet:mY}),bY={kernelName:hl,backendName:"webgl",kernelFunc:gY},sl=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(f||(b="-1.0 / 1e-20"),n){let $=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let y="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let x=Math.floor(a/4)*4,k=a%4,I=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${h});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${I}
          }

          int xC = xCCorner + ${x};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${I}
          }
        }
        setOutput(${v});
      }
    `}},$v=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let y=t==="avg",v="0.0";if(y||(v="-1.0 / 1e-20"),n){let A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${u});
        const ivec3 pads = ivec3(${m}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let I=Math.floor(a/4)*4,$=a%4,E=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${u});
      const ivec3 pads = ivec3(${m}, ${g}, ${b});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${I}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${I};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${k});
        }
      }
    `}};function yY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;ru(r,"avgPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(C.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=C.computePool2DInfo(r.shape,a,i,l,o,u);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return Rn({inputs:{x:r},backend:n});let p=new sl(c,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var vY={kernelName:Ca,backendName:"webgl",kernelFunc:yY};function xY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s,c=[1,1,1],p=C.computePool3DInfo(r.shape,a,i,c,o,u,l),d=new $v(p,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var wY={kernelName:Qd,backendName:"webgl",kernelFunc:xY},kY=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${c});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},SY=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function IY(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s,p=[1,1,1],d=C.computePool3DInfo(i.shape,o,u,p,l,c),h=new SY(d);return n.runWebGLProgram(h,[r],i.dtype)}var CY={kernelName:dg,backendName:"webgl",kernelFunc:IY};function NY(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;ru([r,a],"avgPoolGrad");let{filterSize:o,strides:u,pad:l}=s,c=C.computePool2DInfo(i.shape,o,u,1,l),p=new kY(c);return n.runWebGLProgram(p,[r],i.dtype)}var TY={kernelName:cg,backendName:"webgl",kernelFunc:NY};function $Y(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return Wd({a:r,b:a,transposeA:i,transposeB:o,backend:n})}var _Y={kernelName:Na,backendName:"webgl",kernelFunc:$Y},AY=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let i="0.0";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";r!=null&&(C.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},EY=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";r!=null&&(C.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},RY=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:i,scale:o}=e;w.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);let l=[s,r,a],c=null;i!=null&&(c=i.shape,l.push(i));let p=null;o!=null&&(p=o.shape,l.push(o));let d=K().getBool("WEBGL_PACK_NORMALIZATION")?new EY(s.shape,r.shape,a.shape,c,p,u):new AY(s.shape,r.shape,a.shape,c,p,u);return t.runWebGLProgram(d,l,l[0].dtype)},DY={kernelName:Ba,backendName:"webgl",kernelFunc:RY},FY=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ot(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=OY(this.rank),s,r=e.map((a,i)=>`sourceLoc.${Xm[i]} = start[${i}] + coords.${Xm[i]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},Xm=["x","y","z","w","u","v"];function OY(e){if(e===1)return"sourceLoc";if(e<=6)return Xm.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var PY=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ot(this.rank),n=ln("coords",this.rank),s=ln("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,c)=>`start[${c}]`).join()});`:e.map((l,c)=>`${s[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function zY(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=wt.computeFlatOffset(t,w.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),a}function cu(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,u]=wt.parseSliceParams(r,a,i);if(wt.assertParamsValid(r,o,u),w.sizeFromShape(u)===0)return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.texData.get(r.dataId),d=TX(p.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,d)}let{isPacked:l}=n.texData.get(r.dataId),c=wt.isSliceContinous(r.shape,o,u);if(l||!c){let p=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PY(u):new FY(u),d=[o];return n.runWebGLProgram(p,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),zY(r,o,u,n)}var MY={kernelName:Lo,backendName:"webgl",kernelFunc:cu},LY=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=a.reduce((y,v)=>y*v),u=C.getReshaped(r.shape,a,o),l=C.getPermuted(u.length,a.length),c=C.getReshapedPermuted(r.shape,a,o),p=C.getSliceBeginCoords(i,a.length),d=C.getSliceSize(c,i,a.length),h=[],f=he({inputs:{x:r},backend:n,attrs:{shape:u}}),m=zt({inputs:{x:f},backend:n,attrs:{perm:l}}),g=he({inputs:{x:m},backend:n,attrs:{shape:c}}),b=cu({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach(y=>n.disposeIntermediateTensorInfo(y)),b},BY={kernelName:po,backendName:"webgl",kernelFunc:LY};function VY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=W1(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}var WY={kernelName:pg,backendName:"webgl",kernelFunc:VY};function UY(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=C.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var GY={kernelName:hg,backendName:"webgl",kernelFunc:UY},HY="return float(a != b);",a2=jt({opSnippet:HY,cpuKernelImpl:kX,dtype:"bool"}),qY={kernelName:$o,backendName:"webgl",kernelFunc:a2};function ec(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Rn({inputs:{x:r.complexTensorInfos.real},backend:n})}var jY={kernelName:op,backendName:"webgl",kernelFunc:ec},KY="return float(int(x));";function XY(e,t){let n=new Gs(e.shape,KY),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Ym(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Rn({inputs:{x:r},backend:n});let i=$t(r.shape),o=Ym({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Rr({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),u}if(r.dtype==="complex64"){let i=ec({inputs:{input:r},backend:n}),o=Ym({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=Rn({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32")return XY(r,n);if(a==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),u=a2({inputs:{a:r,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var YY={kernelName:Ta,backendName:"webgl",kernelFunc:Ym},vw="return ceil(x);",QY=Ke({opSnippet:vw,packedOpSnippet:vw,cpuKernelImpl:sX}),ZY={kernelName:$a,backendName:"webgl",kernelFunc:QY},JY=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},e9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function t9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o;K().getBool("WEBGL_PACK_CLIP")?o=new e9(r.shape):o=new JY(r.shape);let u=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,u)}var n9={kernelName:Ir,backendName:"webgl",kernelFunc:t9},s9=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function xw(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function r9(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new s9(s.shape),i=[xw(s,r.complexTensorInfos.real),xw(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}var a9={kernelName:Jd,backendName:"webgl",kernelFunc:r9},i9=class{constructor(e){this.outputShape=[],this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},o9=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=C.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=ot(s),a=ln("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let u=i[t],l=i.slice(-2),c=i.join(),p=`if (${u} < ${o[0]}) {
        return getChannel(
            getT0(${c}), vec2(${l.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];p+=`
        if (${u} < ${o[f]}  && ${u} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${td(i,u,m)}),
            vec2(${td(l,u,m)}));
        }`}let d=o.length,h=o[o.length-1];p+=`
        return getChannel(
          getT${d}(${td(i,u,h)}),
          vec2(${td(l,u,h)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${p}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function td(e,t,n){let s=e.indexOf(t);return e.map((a,i)=>i===s?`${a} - ${n}`:a).join()}function nh(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Rn({inputs:{x:r.complexTensorInfos.imag},backend:n})}var u9={kernelName:sp,backendName:"webgl",kernelFunc:nh};function Ki(e,t,n){let s=e[0].dtype;if(s==="complex64"){let c=e.map(m=>ec({inputs:{input:m},backend:n})),p=e.map(m=>nh({inputs:{input:m},backend:n})),d=Ki(c,t,n),h=Ki(p,t,n),f=Rr({inputs:{real:d,imag:h},backend:n});return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),p.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let c=e.map(b=>{let y=w.sizeFromShape(b.shape.slice(t));return he({inputs:{x:b},backend:n,attrs:{shape:[-1,y]}})}),p=c.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),d=C.computeOutShape(c.map(b=>b.shape),1),h=c[0].shape[0]===1,f=rX(p,d,s,h),m=C.computeOutShape(e.map(b=>b.shape),t),g=n.makeTensorInfo(m,s,f);return c.forEach(b=>n.disposeIntermediateTensorInfo(b)),g}if(e.length>K().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let c=Math.floor(e.length/2),p=Ki(e.slice(0,c),t,n),d=Ki(e.slice(c),t,n),h=Ki([p,d],t,n);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),h}if(K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let c=new o9(e.map(p=>p.shape),t);return n.runWebGLProgram(c,e,s)}let{tensors2D:a,outShape:i}=l9(e,t,n),o=new i9(a.map(c=>c.shape)),u=n.runWebGLProgram(o,a,s);a.forEach(c=>n.disposeIntermediateTensorInfo(c));let l=he({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function l9(e,t,n){let s=C.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>he({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function i2(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=C.computeOutShape(t.map(l=>l.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(l=>w.sizeFromShape(l.shape)>0);if(o.length===1)return Rn({inputs:{x:o[0]},backend:n});let u=o.map(l=>l.shape);return C.assertParamsConsistent(u,a),Ki(o,a,n)}var c9={kernelName:ho,backendName:"webgl",kernelFunc:i2},o2=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,b=m?2:3,y=m?3:1,v="",x="";n&&(s?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:v=`
          float activation(float x) {
            ${n}
          }
        `,x="result = activation(result);");let k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${o}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${x}
        setOutput(result);
      }
    `}},d9=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},p9=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length);let{dataFormat:n}=t,s=fn(),r=n==="channelsLast",a=r?0:1,i=r?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,u="";for(let l=0;l<=1;l++)for(let c=0;c<=1;c++)u+=`
          blockIndex = rc.y + ${c};
          pos = rc.x + ${l};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+c}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+c}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${s.output} = result;
      }
    `}};function u2(e,t,n,s){let r=e.shape;if(w.assert(r.length<=1||r.length===3,()=>`WebGL conv2d only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${r.length}.`),r.length===1){let a=n?t[3]:t[1];w.assert(r[0]===1||r[0]===a,()=>`WebGL conv2d PReLU activation weights (${r}) is not compatible with the number of output channels (${a}).`)}else if(r.length===3){try{bi.assertAndGetBroadcastShape(r,t)}catch(a){let i=`WebGL conv2d PReLU activation weights (${r}) is not compatible with the output shape of the conv2d (${t}).`;throw Error(i)}if(!n)return zt({inputs:{x:e},backend:s,attrs:{perm:[1,2,0]}})}return e}function l2({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=e.shape,l=s.texData.get(e.dataId),c=n.inChannels,p=u[0]*u[1]*u[2],d=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,b=[];if(r!=null&&(w.assert(r.shape.length<=1,()=>`WebGL conv2dByMatMul only supports 1-D Tensor bias but got the bias of rank-${r.shape.length}.`),w.assert(r.shape.length===0||r.shape[0]===n.outChannels,()=>`WebGL conv2dByMatMul bias shape (${r.shape}) is not compatible with the number of output channels (${n.outChannels})`)),a!=null){let x=u2(a,n.outShape,h,s);x.dataId!==a.dataId&&(b.push(x),a=x)}if(!((p===1||d===1)&&c>t2)&&l.isPacked&&h&&l.texture!=null&&u[2]%2!==0&&w.arraysEqual(l.shape.slice(-3),u.slice(-3))){let x=u[0]*u[1]*(u[2]+1),k={dataId:e.dataId,shape:[1,x,n.inChannels],dtype:e.dtype},I=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,w.assert(nl(l.shape,k.shape),()=>`packed reshape ${l.shape} to ${k.shape} isn't free`);let $=he({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push($);let E=Wd({a:k,b:$,backend:s,transposeA:f,transposeB:m,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),A=s.texData.get(E.dataId);w.assert(A.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=I,A.shape=n.outShape,g=Rn({inputs:{x:E},backend:s}),g.shape=n.outShape,b.push(E)}else{let x=h?e:zt({inputs:{x:e},backend:s,attrs:{perm:[0,2,3,1]}}),k=x.shape,I=k[0]*k[1]*k[2],$=he({inputs:{x},backend:s,attrs:{shape:[1,I,n.inChannels]}}),E=he({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),A=Wd({a:$,b:E,transposeA:f,transposeB:m,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),P=[n.batchSize,n.outHeight,n.outWidth,n.outChannels],R=he({inputs:{x:A},backend:s,attrs:{shape:P}});g=h?R:zt({inputs:{x:R},backend:s,attrs:{perm:[0,3,1,2]}}),h||(b.push(x),b.push(R)),b.push($),b.push(E),b.push(A)}for(let x of b)s.disposeIntermediateTensorInfo(x);return g}function c2({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:u,filterHeight:l,inChannels:c,outWidth:p,outHeight:d,dataFormat:h}=n,f=h==="channelsLast",m=u*l*c,g=d*p,b=[m,g],y=!0,v=!1,x=[];if(r!=null&&(w.assert(r.shape.length<=1,()=>`WebGL conv2dWithIm2Row only supports 1-D Tensor bias but got the bias of rank-${r.shape.length}.`),w.assert(r.shape.length===0||r.shape[0]===n.outChannels,()=>`WebGL conv2dWithIm2Row bias shape (${r.shape}) is not compatible with the number of output channels (${n.outChannels})`)),a!=null){let J=u2(a,n.outShape,f,s);J.dataId!==a.dataId&&(x.push(J),a=J)}let k=he({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),I=he({inputs:{x:t},backend:s,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});x.push(k),x.push(I);let $=new p9(b,n),E=[k.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],A=s.runWebGLProgram($,[k],"float32",E),P=he({inputs:{x:A},backend:s,attrs:{shape:[1,b[0],b[1]]}});x.push(A),x.push(P);let R=r!=null,F=a!=null,T=o==="leakyrelu",z=o?Jp(o,!0):null,W=new e2(P.shape,I.shape,[1,g,n.outChannels],y,v,R,z,F,T),j=[P,I];if(r&&j.push(r),F&&j.push(a),T){let J=s.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));j.push(J),x.push(J)}let X=s.runWebGLProgram(W,j,"float32"),Y=[1,d,p,n.outChannels],Z=he({inputs:{x:X},backend:s,attrs:{shape:Y}}),te=f?Z:zt({inputs:{x:Z},backend:s,attrs:{perm:[0,3,1,2]}});f||x.push(Z),x.push(X);for(let J of x)s.disposeIntermediateTensorInfo(J);return te}function h9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s,p=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,p),h;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))h=l2({x:r,filter:a,convInfo:d,backend:n});else if(K().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=c2({x:r,filter:a,convInfo:d,backend:n});else{let m=new o2(d);h=n.runWebGLProgram(m,[r,a],"float32")}let f=he({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),f}var f9={kernelName:_a,backendName:"webgl",kernelFunc:h9},m9=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},g9=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},b9=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},y9=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function v9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=s,p=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(r.shape,c,i,1,o,l,!1,p),h=new m9(d);return n.runWebGLProgram(h,[r,a],"float32")}var x9={kernelName:fg,backendName:"webgl",kernelFunc:v9};function w9(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,p=C.convertConv2DDataFormat(l),d=C.computeConv2DInfo(i,a.shape,o,1,u,c,!1,p),h=new g9(d);return n.runWebGLProgram(h,[r,a],"float32")}var k9={kernelName:Aa,backendName:"webgl",kernelFunc:w9};function S9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,l=C.computeConv3DInfo(r.shape,a.shape,i,u,o),c=new d9(l);return n.runWebGLProgram(c,[r,a],"float32")}var I9={kernelName:ep,backendName:"webgl",kernelFunc:S9};function C9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s,l=C.computeConv3DInfo(r.shape,u,i,1,o),c=new b9(l);return n.runWebGLProgram(c,[r,a],"float32")}var N9={kernelName:mg,backendName:"webgl",kernelFunc:C9};function T9(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s,l=C.computeConv3DInfo(u,a.shape,o,1,i),c=new y9(l);return n.runWebGLProgram(c,[r,a],"float32")}var $9={kernelName:gg,backendName:"webgl",kernelFunc:T9},_9=lu+`
  return cos(x);
`,A9=Ke({opSnippet:_9}),E9={kernelName:Ea,backendName:"webgl",kernelFunc:A9},R9=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,D9=Ke({opSnippet:R9}),F9={kernelName:Ra,backendName:"webgl",kernelFunc:D9},O9=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,i,o,u]=e,[l]=t,[c,p]=n;this.outputShape=[l,c,p,u];let d=s==="bilinear"?1:0,[h,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,b]=c>1?[`${(i-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,v,x]=p>1?[`${(o-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${v};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${x};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},P9=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,c=new O9(r.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[r,a,i],"float32")},z9={kernelName:mo,backendName:"webgl",kernelFunc:P9},ww=class{constructor(e,t,n,s){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.op=e,this.outputShape=t;let r=t.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${kw(r,"coords",this.op)})`,o=t[t.length-1],u="",l="";n?(u=s?`end != ${o-1}`:"end != 0",l=s?"end + 1":"end - 1"):(u=s?`end + pow2 < ${o}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ot(r)} coords = getOutputCoords();
        int end = ${Sw(r,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${Sw(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${kw(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function kw(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Sw(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function d2(e,t,n,s,r,a){let i=t.shape.length,o=C.getAxesPermutation([s],i),u=t;o!=null&&(u=zt({inputs:{x:t},backend:n,attrs:{perm:o}}));let l=C.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=u.shape[l],p=Rn({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let h=new ww(e,u.shape,!1,a),f=[[d]],m=p;p=n.runWebGLProgram(h,[p],p.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){let d=new ww(e,u.shape,r,a),h=p;p=n.runWebGLProgram(d,[p],p.dtype),n.disposeIntermediateTensorInfo(h)}if(o!=null){let d=C.getUndoAxesPermutation(o),h=zt({inputs:{x:p},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),h}return p}function M9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return d2("*",r,n,a,i,o)}var L9={kernelName:fo,backendName:"webgl",kernelFunc:M9};function B9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return d2("+",r,n,a,i,o)}var V9={kernelName:Da,backendName:"webgl",kernelFunc:B9};function W9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(r.shape.length===1){let u=n.readSync(r.dataId),l=n.readSync(a.dataId),c=W1(u,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,c)}else if(r.shape.length===2){let u=n.bufferSync(r),l=n.bufferSync(a),c=nX(u,l,i,o);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var U9={kernelName:bg,backendName:"webgl",kernelFunc:W9},G9=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function H9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],p=u*a,d=l*a,h=c/(a*a),f=i==="NHWC"?[o,p,d,h]:[o,h,p,d],m=new G9(f,a,i);return n.runWebGLProgram(m,[r],r.dtype)}var q9={kernelName:go,backendName:"webgl",kernelFunc:H9},p2=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Sn(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,u="",l="";n&&(s?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,l="result = activation(result);");let c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${c}
        ${l}
        setOutput(result);
      }
    `}},h2=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Sn(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,p=c,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;d+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let g=0;g<c;g++)d+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(p+1)/2;g++){let b=g*2;if(d+=`
          xC = xCCorner + ${b*u};
          `,o===1){if(b<c&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?d+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<c)){let y=i%2===0?w.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1&&(d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                      xTexelC${b} = getX(batch, xR, xCOffset, d1);
                      xTexelC${b}Ready = 1;
                    }
                    `),d+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                  `):y===1?d+=`
                    xC${b+1} = xTexelC${b};
                    `:d+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<c&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<c&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<c&&(d+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<c&&(d+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<c&&(d+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function j9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s,c=u;c==null&&(c=[1,1]),w.assert(C.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let p=C.computeConv2DInfo(r.shape,a.shape,i,c,o,l,!0),d;K().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?d=new h2(p):d=new p2(p);let h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",h)}var K9={kernelName:Fa,backendName:"webgl",kernelFunc:j9},X9=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Y9=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Q9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=s,p=C.computeConv2DInfo(r.shape,c,i,o,u,l,!0),d=new X9(p);return n.runWebGLProgram(d,[r,a],"float32")}var Z9={kernelName:yg,backendName:"webgl",kernelFunc:Q9};function J9(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=s,p=C.computeConv2DInfo(c,a.shape,i,o,u,l,!0),d=new Y9(p);return n.runWebGLProgram(d,[r,a],"float32")}var eQ={kernelName:vg,backendName:"webgl",kernelFunc:J9},tQ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function nQ(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=w.sizeFromShape(s.shape),i=he({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new tQ(a),u=n.runWebGLProgram(o,[i],i.dtype),l=he({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}var sQ={kernelName:xg,backendName:"webgl",kernelFunc:nQ},rQ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:p}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${c}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function aQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,l=C.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u),c,p=new rQ(l);c=n.runWebGLProgram(p,[r,a],"float32");let d=he({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}var iQ={kernelName:tp,backendName:"webgl",kernelFunc:aQ};function oQ(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=C.decodeEinsumEquation(r,a.length);C.checkEinsumDimSizes(i.length,u,a);let{path:l,steps:c}=C.getEinsumComputePath(o,u),p=c.length,d=null,h=i.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:b,expandDims:y}=C.getEinsumPermutation(h,u[g]),v;C.isIdentityPermutation(b)?v=a[g]:(v=zt({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=he({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),d===null?d=v:(d=Tv({inputs:{a:v,b:d},backend:n}),f.push(d))}m<p-1&&(l[m]>=0&&(d=th({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var uQ={kernelName:np,backendName:"webgl",kernelFunc:oQ},lQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",cQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,dQ=Ke({opSnippet:lQ,packedOpSnippet:cQ}),pQ={kernelName:Pa,backendName:"webgl",kernelFunc:dQ},hQ="return (b >= 1.0) ? a : a * (b + 1.0);",fQ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,mQ=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jl(fQ,s.shape,r.shape):new uo(hQ,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},gQ={kernelName:wg,backendName:"webgl",kernelFunc:mQ},bQ=`
  return vec4(equal(a, b));
`,yQ="return float(a == b);",vQ=jt({opSnippet:yQ,packedOpSnippet:bQ,dtype:"bool",cpuKernelImpl:aX}),xQ={kernelName:bo,backendName:"webgl",kernelFunc:vQ},wQ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${C.ERF_P};
  float a1 = ${C.ERF_A1};
  float a2 = ${C.ERF_A2};
  float a3 = ${C.ERF_A3};
  float a4 = ${C.ERF_A4};
  float a5 = ${C.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,kQ=Ke({opSnippet:wQ}),SQ={kernelName:ml,backendName:"webgl",kernelFunc:kQ},IQ=lu+`
  return exp(x);
`,CQ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,f2=Ke({opSnippet:IQ,packedOpSnippet:CQ,cpuKernelImpl:iX,dtype:"float32"}),NQ={kernelName:za,backendName:"webgl",kernelFunc:f2};function Qm(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice(),u=r;return r<0&&(w.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),o.splice(u,0,1),he({inputs:{x:a},backend:s,attrs:{shape:o}})}var TQ={kernelName:yo,backendName:"webgl",kernelFunc:Qm},Iw="return exp(x) - 1.0;",$Q=Ke({opSnippet:Iw,packedOpSnippet:Iw,cpuKernelImpl:oX}),_Q={kernelName:vo,backendName:"webgl",kernelFunc:$Q},Cw=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function m2(e,t,n){let s=n.texData.get(e.dataId),r=w.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],i=r/a,o=he({inputs:{x:e},backend:n,attrs:{shape:[i,a]}}),u=o.shape,l=new Cw("real",u,t),c=new Cw("imag",u,t),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],d=n.runWebGLProgram(l,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),f=Rr({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);let m=he({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}function AQ(e){let{inputs:t,backend:n}=e,{input:s}=t;return m2(s,!1,n)}var EQ={kernelName:kg,backendName:"webgl",kernelFunc:AQ},RQ=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function tc(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let i=w.getArrayFromDType(a,w.sizeFromShape(s));return i.fill(r),t.makeTensorInfo(s,a,i)}else{let i=new RQ(s,r),o=[[r]];return t.runWebGLProgram(i,[],a,o)}}var DQ={kernelName:gl,backendName:"webgl",kernelFunc:tc},FQ=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},OQ={kernelName:xo,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new FQ(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},Nw="return floor(x);",PQ=Ke({opSnippet:Nw,packedOpSnippet:Nw,cpuKernelImpl:uX}),zQ={kernelName:Ma,backendName:"webgl",kernelFunc:PQ},MQ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,LQ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,BQ=jt({opSnippet:MQ,packedOpSnippet:LQ,dtype:"int32"}),VQ={kernelName:La,backendName:"webgl",kernelFunc:BQ},WQ=class{constructor(e){this.variableNames=["A"];let t=fn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},UQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=fn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},GQ={kernelName:bd,backendName:"webgl",kernelFunc:HQ},Ui;function HQ(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[u,l]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[l,u],p=[l,u,a];(o||i)&&(Ui==null&&(Ui=document.createElement("canvas").getContext("2d")),Ui.canvas.width=u,Ui.canvas.height=l,Ui.drawImage(r,0,0,u,l),r=Ui.canvas);let d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=2,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);let h=K().getBool("WEBGL_PACK")?new UQ(p):new WQ(p),f=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),f}function qQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=C.convertConv2DDataFormat(c),g=C.computeConv2DInfo(r.shape,a.shape,u,p,l,d,!1,m),b,y=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=l2({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else if(K().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)b=c2({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else{let x=i!=null,k=o!=null,I=h==="leakyrelu",$=h?Jp(h,!1):null,E=new o2(g,x,$,k,I),A=[r,a];if(i&&A.push(i),o&&A.push(o),I){let P=n.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));A.push(P),y.push(P)}b=n.runWebGLProgram(E,A,"float32")}let v=he({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var jQ={kernelName:ia,backendName:"webgl",kernelFunc:qQ};function KQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=s,f=[],m=c;m==null&&(m=[1,1]),w.assert(C.eitherStridesOrDilationsAreOne(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);let g=C.computeConv2DInfo(r.shape,a.shape,u,m,l,p,!0),b=K().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=d?Jp(d,b):null,v=[r,a],x=i!=null,k=o!=null,I=d==="leakyrelu";if(x&&v.push(i),k&&v.push(o),I){let P=n.makeTensorInfo([],"float32",w.createScalarValue(h,"float32"));v.push(P),f.push(P)}let $;b?$=new h2(g,x,y,k,I):$=new p2(g,x,y,k,I);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=n.runWebGLProgram($,v,"float32",E);return f.forEach(P=>n.disposeIntermediateTensorInfo(P)),A}var XQ={kernelName:oa,backendName:"webgl",kernelFunc:KQ},YQ=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=ot(t.length),r=ot(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function QQ(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=w.sizeFromShape(s.shape),[u,l,c,p]=C.prepareAndValidate(s,r),d=he({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),h=he({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let b=n.readSync(r.dataId),y=n.bufferSync(s),v=lX(b,y,s.dtype,l,i,c,p,s.shape,o);return n.makeTensorInfo(u,s.dtype,v.values)}let f=new YQ(i,p,[l,c]),m=n.runWebGLProgram(f,[h,d],h.dtype),g=he({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var ZQ={kernelName:ko,backendName:"webgl",kernelFunc:QQ},JQ=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ot(this.rank),s=eZ(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}};function eZ(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}function g2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0];if(K().get("DEBUG")){let y=n.readSync(a.dataId),v=r.shape[u];for(let x=0;x<y.length;++x){let k=y[x];w.assert(k<=v-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${v-1}]`)}}let l=C.segment_util.collectGatherOpShapeInfo(r,a,u,o),c=w.sizeFromShape(a.shape),p=[],d=he({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),h=he({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});p.push(d),p.push(h);let f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let y=n.bufferSync(h),v=n.bufferSync(d),x=cX(v,y,f);return p.forEach(k=>n.disposeIntermediateTensorInfo(k)),n.makeTensorInfo(l.outputShape,x.dtype,x.values)}let m=new JQ(d.shape,f),g=n.runWebGLProgram(m,[d,h],d.dtype);p.push(g);let b=he({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach(y=>n.disposeIntermediateTensorInfo(y)),b}var tZ={kernelName:wo,backendName:"webgl",kernelFunc:g2},nZ="return float(a > b);",sZ=`
  return vec4(greaterThan(a, b));
`,rZ=jt({opSnippet:nZ,packedOpSnippet:sZ,cpuKernelImpl:dX,dtype:"bool"}),aZ={kernelName:So,backendName:"webgl",kernelFunc:rZ},iZ="return float(a >= b);",oZ=`
  return vec4(greaterThanEqual(a, b));
`,uZ=jt({opSnippet:iZ,packedOpSnippet:oZ,dtype:"bool",cpuKernelImpl:pX}),lZ={kernelName:Va,backendName:"webgl",kernelFunc:uZ};function cZ(e){let{inputs:t,backend:n}=e,{input:s}=t;return m2(s,!0,n)}var dZ={kernelName:Sg,backendName:"webgl",kernelFunc:cZ},pZ="return float(!isnan(x) && !isinf(x));",hZ=Ke({opSnippet:pZ,dtype:"bool"}),fZ={kernelName:bl,backendName:"webgl",kernelFunc:hZ},mZ="return float(isinf(x));",gZ=Ke({opSnippet:mZ,dtype:"bool"}),bZ={kernelName:yl,backendName:"webgl",kernelFunc:gZ},yZ="return float(isnan(x));",vZ=Ke({opSnippet:yZ,dtype:"bool"}),xZ={kernelName:vl,backendName:"webgl",kernelFunc:vZ},wZ="return float(a < b);",kZ=`
  return vec4(lessThan(a, b));
`,SZ=jt({opSnippet:wZ,packedOpSnippet:kZ,cpuKernelImpl:hX,dtype:"bool"}),IZ={kernelName:Io,backendName:"webgl",kernelFunc:SZ},CZ="return float(a <= b);",NZ=`
  return vec4(lessThanEqual(a, b));
`,TZ=jt({opSnippet:CZ,packedOpSnippet:NZ,cpuKernelImpl:fX,dtype:"bool"}),$Z={kernelName:Co,backendName:"webgl",kernelFunc:TZ};function _Z(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=mX(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}var AZ={kernelName:Ig,backendName:"webgl",kernelFunc:_Z},EZ=lu+`
  return x < 0.0 ? 0./0. : log(x);
`,RZ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,DZ=Ke({opSnippet:EZ,packedOpSnippet:RZ,cpuKernelImpl:gX}),FZ={kernelName:Ga,backendName:"webgl",kernelFunc:DZ},OZ=lu+`
  return log(1.0 + x);
`,PZ=Ke({opSnippet:OZ}),zZ={kernelName:xl,backendName:"webgl",kernelFunc:PZ},MZ="return float(a >= 1.0 && b >= 1.0);",LZ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,BZ=jt({opSnippet:MZ,packedOpSnippet:LZ,dtype:"bool"}),VZ={kernelName:No,backendName:"webgl",kernelFunc:BZ},WZ="return float(!(x >= 1.0));",UZ=Ke({opSnippet:WZ}),GZ={kernelName:wl,backendName:"webgl",kernelFunc:UZ},HZ="return float(a >= 1.0 || b >= 1.0);",qZ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,jZ=jt({opSnippet:HZ,packedOpSnippet:qZ,dtype:"bool"}),KZ={kernelName:rp,backendName:"webgl",kernelFunc:jZ},XZ=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${n}) + float(${s}) * sum`;r===.5?o=`inversesqrt(${u})`:r===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},YZ=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${n}) + float(${s}) * sum`;r===.5?o=`inversesqrt(${u})`:r===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},QZ=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s,l=K().getBool("WEBGL_PACK_NORMALIZATION")?new YZ(r.shape,a,i,o,u):new XZ(r.shape,a,i,o,u);return n.runWebGLProgram(l,[r],r.dtype)},ZZ={kernelName:ap,backendName:"webgl",kernelFunc:QZ},JZ=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},e7=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s,p=new JZ(r.shape,o,u,l,c);return n.runWebGLProgram(p,[r,a,i],r.dtype)},t7={kernelName:Cg,backendName:"webgl",kernelFunc:e7};function n7(e,t,n,s){let r=w.sizeFromShape(t),i=w.sizeFromShape(e.shape)/r,o=he({inputs:{x:e},attrs:{shape:[i,r]},backend:s}),u=Ii(o,e.dtype,"max",s),l=he({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(u),l}function b2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=C.getAxesPermutation(l,o),p=c!=null,d=n.shouldExecuteOnCPU([r]),h=r;if(p){if(d){let v=n.texData.get(h.dataId).values,x=new Array(o);for(let $=0;$<x.length;$++)x[$]=r.shape[c[$]];let k=Nv(v,r.shape,r.dtype,c,x);h=n.makeTensorInfo(x,r.dtype);let I=n.texData.get(h.dataId);I.values=k}else h=eh(r,c,n);l=C.getInnerMostAxes(l.length,o)}C.assertAxesAreInnerMostDims("max",l,o);let[f,m]=C.computeOutAndReduceShapes(h.shape,l),g=f;i&&(g=C.expandShapeToKeepDim(f,u));let b;if(d){let v=n.texData.get(h.dataId).values,x=bX(v,w.sizeFromShape(m),g,r.dtype);b=n.makeTensorInfo(g,r.dtype);let k=n.texData.get(b.dataId);k.values=x}else b=n7(h,m,g,n);return p&&n.disposeIntermediateTensorInfo(h),b}var s7={kernelName:Ha,backendName:"webgl",kernelFunc:b2},r7=X1+`
  return max(a, b);
`,a7=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Zp+`
  return result;
`,i7=jt({opSnippet:r7,packedOpSnippet:a7,cpuKernelImpl:yX}),o7={kernelName:qa,backendName:"webgl",kernelFunc:i7};function u7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;ru(r,"maxPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(C.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=C.computePool2DInfo(r.shape,a,i,l,o,u);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return Rn({inputs:{x:r},backend:n});let p=new sl(c,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var l7={kernelName:ja,backendName:"webgl",kernelFunc:u7};function c7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=s,c=[1,1,1],p=C.computePool3DInfo(r.shape,a,i,c,o,l,u),d=new $v(p,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var d7={kernelName:ip,backendName:"webgl",kernelFunc:c7},p7=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,u=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},h7=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,p=u-1-e.padInfo.top,d=l-1-e.padInfo.left,h=o*u*l-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function f7(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s,p=[1,1,1],d=C.computePool3DInfo(i.shape,o,u,p,l,c),h=new $v(d,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new h7(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}var m7={kernelName:Tg,backendName:"webgl",kernelFunc:f7};function g7(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;ru([a,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=s,d=C.computePool2DInfo(o.shape,u,l,1,c,p),h=!0,f=new sl(d,"max",h),m=n.runWebGLProgram(f,[o],o.dtype),g=new p7(d),b=n.runWebGLProgram(g,[r,m],o.dtype);return n.disposeIntermediateTensorInfo(m),b}var b7={kernelName:Ng,backendName:"webgl",kernelFunc:g7};function y7(e,t,n,s){let r=new sl(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new sl(n,"max",!0,!0,t);let i=s.runWebGLProgram(r,[e],"float32");return[a,i]}var v7={kernelName:$g,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;w.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let l=[1,1];w.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let c=C.computePool2DInfo(s.shape,r,a,l,i),[p,d]=y7(s,o,c,u);return[p,d]}};function x7(e,t,n,s){let r=w.sizeFromShape(t),i=w.sizeFromShape(e.shape)/r,o=he({inputs:{x:e},attrs:{shape:[i,r]},backend:s}),u=Ii(o,"float32","mean",s),l=he({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(u),l}var w7={kernelName:Ka,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,u=w.parseAxisParam(a,s.shape),l=u,c=C.getAxesPermutation(l,o),p=c!=null,d=i.shouldExecuteOnCPU([s]),h=[],f=s;if(p){if(d){let x=i.texData.get(f.dataId).values,k=new Array(o);for(let E=0;E<k.length;E++)k[E]=s.shape[c[E]];let I=Nv(x,s.shape,s.dtype,c,k);f=i.makeTensorInfo(k,s.dtype);let $=i.texData.get(f.dataId);$.values=I}else f=eh(s,c,i);h.push(f),l=C.getInnerMostAxes(l.length,o)}C.assertAxesAreInnerMostDims("sum",l,o);let[m,g]=C.computeOutAndReduceShapes(f.shape,l),b=m;r&&(b=C.expandShapeToKeepDim(m,u));let y=x7(f,g,b,i);for(let v of h)i.disposeIntermediateTensorInfo(v);return y}};function k7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=C.getAxesPermutation(l,o),p=r;c!=null&&(p=zt({inputs:{x:r},backend:n,attrs:{perm:c}}),l=C.getInnerMostAxes(l.length,r.shape.length)),C.assertAxesAreInnerMostDims("min",l,o);let[d,h]=C.computeOutAndReduceShapes(p.shape,l),f=w.sizeFromShape(h),m=he({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=Ii(m,m.dtype,"min",n),b;if(i){let y=C.expandShapeToKeepDim(d,u);b=he({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),b}var S7={kernelName:Xa,backendName:"webgl",kernelFunc:k7},I7=X1+`
  return min(a, b);
`,C7=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Zp+`
  return result;
`,N7=jt({opSnippet:I7,packedOpSnippet:C7,cpuKernelImpl:vX}),T7={kernelName:Ya,backendName:"webgl",kernelFunc:N7},$7=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let s=e.length,r=ot(s),a=t.map(l=>l[0]).join(","),i=t.map((l,c)=>l[0]+e[c]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},_7=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=ot(s),a=t.map(h=>h[0]).join(","),i=t.map((h,f)=>h[0]+e[f]).join(","),o=ln("rc",s),u=ln("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${u.slice(-2).join()})`,p=n==="reflect"?0:1,d="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${c});
        ${o[s-1]} += 1;
        if(${l}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${c});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${c});
        ${o[s-1]} += 1;
        if(${l}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${c});
        }
        rc = outputLoc;
        ${o[s-2]} += 1;
        if(${o[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${u.join()}), ${c});
          ${o[s-1]} += 1;
          if(${l}) {
            ${h}
            result[3] = getChannel(getX(${u.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},A7=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,i=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _7(s.shape,r,a):new $7(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)},E7={kernelName:Qa,backendName:"webgl",kernelFunc:A7},R7=`if (b == 0.0) return NAN;
  return mod(a, b);`,D7=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Zp+`
  return result;
`,F7=jt({opSnippet:R7,packedOpSnippet:D7}),O7={kernelName:kl,backendName:"webgl",kernelFunc:F7},P7=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},z7=`
if (a == b) {
  return 1.0;
};
return a / b;`,M7=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,y2=jt({opSnippet:z7,packedOpSnippet:M7,checkOutOfBounds:!0}),L7={kernelName:Oa,backendName:"webgl",kernelFunc:y2},Tw="return a - b;",v2=jt({opSnippet:Tw,packedOpSnippet:Tw,supportsComplex:!0,cpuKernelImpl:OX}),B7={kernelName:hi,backendName:"webgl",kernelFunc:v2};function x2(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=w.parseAxisParam([a],r.shape),o=b2({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=C.expandShapeToKeepDim(o.shape,i),l=he({inputs:{x:o},backend:n,attrs:{shape:u}}),c=v2({inputs:{a:r,b:l},backend:n}),p=f2({inputs:{x:c},backend:n}),d=th({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),h=he({inputs:{x:d},backend:n,attrs:{shape:u}}),f=y2({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}var V7={kernelName:di,backendName:"webgl",kernelFunc:x2};function W7(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,u=o?r:x2({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],p=new P7(l,c,a),d=[[i]],h=n.runWebGLProgram(p,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),h}var U7={kernelName:_g,backendName:"webgl",kernelFunc:W7},G7=ss+`
  return -x;
`,H7=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function q7(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[i,o]=wX(a.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}let r;return K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Jr(s.shape,H7):r=new Gs(s.shape,G7),n.runWebGLProgram(r,[s],s.dtype)}var j7={kernelName:To,backendName:"webgl",kernelFunc:q7},K7=ws.nonMaxSuppressionV3Impl;function X7(e){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s,l=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=K7(l,c,i,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var Y7={kernelName:_o,backendName:"webgl",kernelFunc:X7},Q7=ws.nonMaxSuppressionV4Impl;function Z7(e){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),{selectedIndices:d,validOutputs:h}=Q7(c,p,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var J7={kernelName:Sl,backendName:"webgl",kernelFunc:Z7},eJ=ws.nonMaxSuppressionV5Impl;function tJ(e){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),d=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=eJ(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var nJ={kernelName:Ao,backendName:"webgl",kernelFunc:tJ},sJ=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},rJ=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,u=w.sizeFromShape(r.shape),l=new sJ(u,a,i,o),c=he({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(l,[c],r.dtype);n.disposeIntermediateTensorInfo(c);let d=[...r.shape,a],h=he({inputs:{x:p},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(p),h},aJ={kernelName:Ro,backendName:"webgl",kernelFunc:rJ};function Ud(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=ec({inputs:{input:s},backend:n}),a=Ud({inputs:{x:r},backend:n}),i=nh({inputs:{input:s},backend:n}),o=Ud({inputs:{x:i},backend:n}),u=Rr({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return tc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var iJ={kernelName:Ko,backendName:"webgl",kernelFunc:Ud};function w2(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=ec({inputs:{input:s},backend:n}),a=w2({inputs:{x:r},backend:n}),i=nh({inputs:{input:s},backend:n}),o=Ud({inputs:{x:i},backend:n}),u=Rr({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return tc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var oJ={kernelName:Eo,backendName:"webgl",kernelFunc:w2};function uJ(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Qm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let p=Qm({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),l=i2({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}var lJ={kernelName:Do,backendName:"webgl",kernelFunc:uJ},cJ=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,l)=>u[0]+e[l]+u[1]);let s=e.length,r=ot(s),a=t.map(u=>u[0]).join(","),i=t.map((u,l)=>u[0]+e[l]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},dJ=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=ot(s),a=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=ln("rc",s),u=ln("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${u.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;
       if(${l}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${o[s-2]} += 1;
       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${o[s-1]} += 1;
         if(${l}) {`],d=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${p[f]}
        if (${d}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${u.join()}), ${c});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},k2=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(w.sizeFromShape(r.shape)===0){let l=a.map((c,p)=>c[0]+r.shape[p]+c[1]);return tc({backend:n,attrs:{shape:l,value:i,dtype:r.dtype}})}let o=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dJ(r.shape,a,i):new cJ(r.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[r],r.dtype,u)},pJ={kernelName:Ja,backendName:"webgl",kernelFunc:k2},hJ=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,fJ=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Zp+`
  return result;
`,mJ=jt({opSnippet:hJ,packedOpSnippet:fJ}),gJ={kernelName:ei,backendName:"webgl",kernelFunc:mJ};function bJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=[],l=w.parseAxisParam(a,r.shape),c=l,p=C.getAxesPermutation(c,o),d=r;p!=null&&(d=zt({inputs:{x:r},backend:n,attrs:{perm:p}}),c=C.getInnerMostAxes(c.length,o),u.push(d)),C.assertAxesAreInnerMostDims("prod",c,o);let h;if(n.shouldExecuteOnCPU([d])){let f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:b}=SX(d.shape,d.dtype,f,c);h=n.makeTensorInfo(g,b,m)}else{let[f,m]=C.computeOutAndReduceShapes(d.shape,c),g=w.sizeFromShape(m),b=he({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),y=mp(r.dtype),v=Ii(b,y,"prod",n);h=he({inputs:{x:v},backend:n,attrs:{shape:f}}),u.push(b),u.push(v)}if(i){u.push(h);let f=C.expandShapeToKeepDim(h.shape,l);h=he({inputs:{x:h},backend:n,attrs:{shape:f}})}return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var yJ={kernelName:ni,backendName:"webgl",kernelFunc:bJ},S2=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=IX(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},vJ={kernelName:Il,backendName:"webgl",kernelFunc:S2},xJ="return 1.0 / x;",wJ=Ke({opSnippet:xJ}),kJ={kernelName:Cl,backendName:"webgl",kernelFunc:wJ},SJ=ss+`
  return (x < 0.0) ? 0.0 : x;
`,IJ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CJ=Ke({opSnippet:SJ,packedOpSnippet:IJ}),NJ={kernelName:si,backendName:"webgl",kernelFunc:CJ},TJ=ss+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,$J=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_J=Ke({opSnippet:TJ,packedOpSnippet:$J}),AJ={kernelName:ai,backendName:"webgl",kernelFunc:_J},EJ=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p;r?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/c[0]},
          ${l[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},RJ=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p;r?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/c[0]},
          ${l[1]/c[1]},
          ${l[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function DJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new RJ(r.shape,u,l,a,i):new EJ(r.shape,u,l,a,i);return n.runWebGLProgram(c,[r],"float32")}var FJ={kernelName:ri,backendName:"webgl",kernelFunc:DJ},OJ=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],p=1/l,d=1/c,h=Math.ceil(p)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function PJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new OJ(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}var zJ={kernelName:Eg,backendName:"webgl",kernelFunc:PJ},MJ=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p=s?"0.5":"0.0",d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/c[0]},
          ${l[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},LJ=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p=s?"0.5":"0.0",d;r?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/c[0]},
          ${l[1]/c[1]},
          ${l[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function BJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new LJ(r.shape,u,l,a,i):new MJ(r.shape,u,l,a,i);return n.runWebGLProgram(c,[r],r.dtype)}var VJ={kernelName:Nl,backendName:"webgl",kernelFunc:BJ},WJ=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],p=1/l,d=1/c,h=Math.ceil(p)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function UJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new WJ(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}var GJ={kernelName:Ag,backendName:"webgl",kernelFunc:UJ},HJ=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,o)=>s(o)).join(","),a=ot(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},qJ=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=ln("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ot(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(s.slice())};
          if(${r}){
            result.g = ${u(s.slice())};
          }
          if(${a}) {
            result.b = ${l(s.slice())};
            if(${r}) {
              result.a = ${c(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(h){return p(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",p(h)}function l(h){return h[n-2]="("+h[n-2]+" + 1)",p(h)}function c(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",p(h)}function p(h){let f=e.map((b,y)=>d(y,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function d(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function jJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=w.parseAxisParam(a,r.shape);if(i===0)return Rn({inputs:{x:r},backend:n});let u=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qJ(r.shape,o):new HJ(r.shape,o);return n.runWebGLProgram(u,[r],r.dtype)}var KJ={kernelName:Oo,backendName:"webgl",kernelFunc:jJ},XJ=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},YJ={kernelName:Xo,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new XJ(s.shape,a),[l,c]=C.getImageCenter(i,s.shape[1],s.shape[2]),p=[[l,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(u,[s],s.dtype,p)}},QJ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,ZJ=Ke({opSnippet:QJ}),JJ={kernelName:Po,backendName:"webgl",kernelFunc:ZJ},eee="return inversesqrt(x);",tee=Ke({opSnippet:eee,cpuKernelImpl:CX}),nee={kernelName:ii,backendName:"webgl",kernelFunc:tee},I2=class{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let o=ot(r.length),u=ot(a.length),l="";n===1?l="i":n===2&&(l="i, j");let c=`getIndices(${l})`,p="";s===1?p="i":s===2&&(p="i, coords[1]");let d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function see(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=C.calculateShapes(a,r,i),d=[p/l,l];if(p===0)return n.makeTensorInfo(i,r.dtype);let h=he({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=he({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new I2(u,o,h.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,h,m],f.dtype),y=he({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}var ree={kernelName:zo,backendName:"webgl",kernelFunc:see},aee=class{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=K().getNumber("WEBGL_VERSION")===2?r:a,o=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function iee(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=new aee(r.shape[0],r.shape[1],a.shape[1],i),u=[[r.shape[1]]];return n.runWebGLProgram(o,[r,a],"int32",u)}var oee={kernelName:Rg,backendName:"webgl",kernelFunc:iee},uee=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],u=[];for(let l=0;l<t.length;l++)u.push(`${i[l]}`),l<e&&o.push(`${i[l]}`);s=o.join(),r=u.join()}let a=ot(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function lee(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new uee(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],cn(r.dtype,a.dtype))}var cee={kernelName:Mo,backendName:"webgl",kernelFunc:lee},dee=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${C.SELU_SCALEALPHA};
  float scale = ${C.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,pee=Ke({opSnippet:dee}),hee={kernelName:Tl,backendName:"webgl",kernelFunc:pee},fee=lu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,mee=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gee=Ke({opSnippet:fee,packedOpSnippet:mee,cpuKernelImpl:NX}),bee={kernelName:ui,backendName:"webgl",kernelFunc:gee},yee=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,vee=Ke({opSnippet:yee}),xee={kernelName:$l,backendName:"webgl",kernelFunc:vee},wee=lu+`
  return sin(x);
`,kee=Ke({opSnippet:wee}),See={kernelName:oi,backendName:"webgl",kernelFunc:kee},Iee=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Cee=Ke({opSnippet:Iee}),Nee={kernelName:Bo,backendName:"webgl",kernelFunc:Cee},Tee=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,$ee=Ke({opSnippet:Tee}),_ee={kernelName:_l,backendName:"webgl",kernelFunc:$ee},Aee=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=a.reduce((b,y)=>b*y),u=[[0,0]];u.push(...i);for(let b=1+a.length;b<r.shape.length;++b)u.push([0,0]);let l=[],c=k2({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(c.shape,a,o,!1),d=C.getPermuted(p.length,a.length,!1),h=C.getReshapedPermuted(c.shape,a,o,!1),f=he({inputs:{x:c},backend:n,attrs:{shape:p}}),m=zt({inputs:{x:f},backend:n,attrs:{perm:d}}),g=he({inputs:{x:m},backend:n,attrs:{shape:h}});return l.push(c),l.push(f),l.push(m),l.forEach(b=>n.disposeIntermediateTensorInfo(b)),g},Eee={kernelName:Vo,backendName:"webgl",kernelFunc:Aee};function Ree(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(s.dataId),u=n.readSync(r.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[p,d,h,f,m]=$X(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var Dee={kernelName:up,backendName:"webgl",kernelFunc:Ree};function Fee(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,p]=_X(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}var Oee={kernelName:Al,backendName:"webgl",kernelFunc:Fee};function Pee(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=G1(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}var zee={kernelName:lp,backendName:"webgl",kernelFunc:Pee};function Mee(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=G1(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}var Lee={kernelName:cp,backendName:"webgl",kernelFunc:Mee};function Bee(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,strides:c,outputSize:p}=C.calculateShapes(a,r,o),d=!1,h=new I2(l,u,r.shape.length,a.shape.length,c,[p,1],d),f=n.runWebGLProgram(h,[a,r,i],a.dtype),m=he({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}var Vee={kernelName:dp,backendName:"webgl",kernelFunc:Bee};function Wee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=C.prepareSplitSize(r,a,o),l=r.shape.length,c=new Array(l).fill(0),p=r.shape.slice();return u.map(d=>{let h=[...p];h[o]=d;let f=cu({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[o]+=d,f})}var Uee={kernelName:Wo,backendName:"webgl",kernelFunc:Wee},$w="return sqrt(x);",Gee=Ke({opSnippet:$w,packedOpSnippet:$w,cpuKernelImpl:AX}),Hee={kernelName:li,backendName:"webgl",kernelFunc:Gee},qee="return x * x;",jee=Ke({opSnippet:qee}),Kee={kernelName:El,backendName:"webgl",kernelFunc:jee},_w="return (a - b) * (a - b);",Xee=jt({opSnippet:_w,packedOpSnippet:_w}),Yee={kernelName:pi,backendName:"webgl",kernelFunc:Xee};function Qee({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=ss+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Gs(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var Zee={kernelName:gi,backendName:"webgl",kernelFunc:Qee},Jee=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=ot(n.length),a=ot(n.length),i="";if(s===1)i="coords * strides + begin";else{let o=0;i=n.map((u,l)=>(o++,n.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${o-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function ete(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=wt.sliceInfo(r.shape,a,i,o,u,l,c,p,d),k;if(m)k=he({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let $=wt.computeOutShape(y,v,x),E=cu({inputs:{x:r},backend:n,attrs:{begin:y,size:$}});k=he({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([r])){let E=n.readSync(r.dataId),A=De(r.shape,r.dtype,E),P=EX(h,A,x,y);k=n.makeTensorInfo(f,r.dtype,P.values)}else{let E=new Jee(y,x,h);k=n.runWebGLProgram(E,[r],r.dtype)}let I=he({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),I}var tte={kernelName:Uo,backendName:"webgl",kernelFunc:ete};function nte(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=RX(d,h,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var ste={kernelName:pp,backendName:"webgl",kernelFunc:nte};function rte(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,p]=DX(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var ate={kernelName:Dg,backendName:"webgl",kernelFunc:rte};function ite(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(a.dataId),o=FX(i,r);return n.makeTensorInfo(a.shape,"int32",o)}var ote={kernelName:Fg,backendName:"webgl",kernelFunc:ite},ute="return tan(x);",lte=Ke({opSnippet:ute}),cte={kernelName:Go,backendName:"webgl",kernelFunc:lte},dte=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,pte=Ke({opSnippet:dte}),hte={kernelName:fi,backendName:"webgl",kernelFunc:pte},fte=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=ot(this.rank),r=mte(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function mte(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function C2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let u=n.readSync(r.dataId),l=r.dtype==="string"?u.map(d=>w.decodeString(d)):u,c=De(r.shape,r.dtype,l),p=PX(c,a);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new fte(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}var gte={kernelName:Cr,backendName:"webgl",kernelFunc:C2},bte=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},yte=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Gr(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function Aw(e){let t=1;for(;t<e;)t*=2;return t}function vte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=K().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=K().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>u){let P=n.readSync(r.dataId),[R,F]=zX(P,l,r.dtype,a,i);return[n.makeTensorInfo(R.shape,R.dtype,R.values),n.makeTensorInfo(F.shape,F.dtype,F.values)]}if(a===0)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(c===1)return[r,tc({attrs:{shape:l,dtype:"int32",value:0},backend:n})];let p=n.texData.get(r.dataId),d=p!==null&&p.isPacked,h=d?n.unpackTensor(r):r,m=w.sizeFromShape(l)/c,g=he({inputs:{x:h},attrs:{shape:[m,c]},backend:n});d&&Gr(n,h);let b=Aw(a),y=Aw(c),v=null,x=()=>v===null?[g,g]:[g,v],k=(P,R,F)=>{let T=x(),z=new bte(F),j=[[c],[v===null?1:0],[Number.NEGATIVE_INFINITY],[P],[R]],X=v;v=n.runWebGLProgram(z,T,"int32",j),Gr(n,X)};for(let P=1;P<b;P*=2){let R=P*2;for(let F=P;F>=1;F/=2)k(R,F,[m,y])}for(let P=y;P>b;P/=2){let R=x(),F=new yte([m,P/2]),z=[[c],[v===null?1:0],[b]],W=v;v=n.runWebGLProgram(F,R,"int32",z),Gr(n,W);let j=b/2,X=j*2;for(let Y=j;Y>=1;Y/=2)k(X,Y,v.shape)}let I=v;v=cu({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,a]}}),Gr(n,I);let $=g2({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});Gr(n,g);let E=l.slice(0,-1);E.push(a),I=v,v=he({inputs:{x:v},attrs:{shape:E},backend:n}),Gr(n,I);let A=$;return $=he({inputs:{x:$},attrs:{shape:E},backend:n}),Gr(n,A),[$,v]}var xte={kernelName:Ho,backendName:"webgl",kernelFunc:vte},wte=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let i=n==="nearest"?1:2,o;switch(s){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function kte(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,p,d,h]=r.shape,[f,m]=l!=null?l:[p,d],g=[c,f,m,h],b=new wte(p,d,i,o,u,g);return n.runWebGLProgram(b,[r,a],"float32")}var Ste={kernelName:qo,backendName:"webgl",kernelFunc:kte};function Ite(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;ru(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=s.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=MX(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}var Cte={kernelName:Og,backendName:"webgl",kernelFunc:Ite};function Nte(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r,o=i.shape.length,u=r.shape[a],l=new Array(o-1),c=0;for(let m=0;m<o;m++)m!==a&&(l[c++]=i.shape[m]);let p=[],d=new Array(o).fill(0),h=i.shape.slice();h[a]=1;let f=new Array(u);for(let m=0;m<f.length;m++){d[a]=m;let g=cu({inputs:{x:i},backend:n,attrs:{begin:d,size:h}}),b=he({inputs:{x:g},backend:n,attrs:{shape:l}});f[m]=b,p.push(g)}return p.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Tte={kernelName:jo,backendName:"webgl",kernelFunc:Nte},$te=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];let o="0.0",u="sumValue",l=Math.floor(n/4)*4,c=n%4,p=`
        sumValue += dot(values, segFilter);
    `,d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${l};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${u});
      }
    `}};function _te(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,u=[],l=0,c=C.getAxesPermutation([l],o),p=r;c!=null&&(p=zt({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(p),l=C.getInnerMostAxes(1,o)[0]);let d=C.segment_util.computeOutShape(p.shape,l,i),h=w.sizeFromShape([p.shape[l]]),f=he({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});u.push(f);let m=mp(r.dtype),g=(x,k,I,$,E)=>{let A=x.shape[0],P=x.shape[1],R=C.segment_util.segOpComputeOptimalWindowSize(P,E),F={windowSize:R,inSize:P,batchSize:A,numSegments:E},T=new $te(F,k),z=n.compileAndRun(T,[x,I],$);if(u.push(z),z.shape[1]===E)return z;let W=S2({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),j=C2({inputs:{x:W},backend:n,attrs:{reps:[P/R]}});return u.push(W),u.push(j),g(z,k,j,$,E)},b=g(f,"unsortedSegmentSum",a,m,i),y=he({inputs:{x:b},backend:n,attrs:{shape:d}}),v=y;if(c!=null){u.push(y);let x=C.getUndoAxesPermutation(c);v=zt({inputs:{x:v},backend:n,attrs:{perm:x}})}return u.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var Ate={kernelName:hp,backendName:"webgl",kernelFunc:_te},Ete=[R8,F8,z8,B8,W8,H8,j8,X8,J8,tY,rY,oY,cY,fY,bY,vY,wY,CY,TY,_Y,DY,BY,WY,GY,YY,ZY,n9,h8,a9,c9,f9,x9,k9,I9,N9,$9,E9,F9,z9,L9,V9,U9,q9,K9,Z9,eQ,sQ,iQ,uQ,pQ,gQ,xQ,SQ,NQ,TQ,_Q,EQ,DQ,OQ,zQ,VQ,GQ,jQ,XQ,ZQ,tZ,aZ,lZ,p8,dZ,u9,fZ,bZ,xZ,m8,IZ,$Z,AZ,FZ,zZ,VZ,GZ,KZ,ZZ,t7,s7,o7,l7,d7,m7,b7,v7,w7,S7,T7,E7,O7,U7,x8,j7,Y7,J7,nJ,qY,aJ,oJ,lJ,pJ,gJ,b8,yJ,vJ,jY,L7,kJ,NJ,AJ,k8,FJ,zJ,VJ,GJ,KJ,YJ,JJ,nee,ree,oee,cee,hee,bee,xee,See,Nee,MY,V7,_ee,Eee,Dee,Oee,zee,Lee,Vee,Uee,Hee,Kee,Yee,Zee,tte,ste,ate,ote,B7,_8,cte,hte,gte,xte,Ste,A8,Cte,Tte,Ate,iJ];for(let e of Ete)Rl(e);var Dr=K();Dr.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Dr.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Dr.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Dr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Dr.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Dr.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Dr.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Dr.registerFlag("WEBGPU_USE_IMPORT",()=>!1);var Rte="return a + b;",Dte="return areal * breal - aimag * bimag;",Fte="return areal * bimag + aimag * breal;",Ote="return a / b;",Pte="return a * b;",zte="return (a - b) * (a - b);",Mte="return a - b;",Lte="return f32(a == b);",Bte="return vec4<f32>(a == b);",Vte="return f32(a > b);",Wte="return vec4<f32>(a > b);",Ute="return f32(a >= b);",Gte="return vec4<f32>(a >= b);",Hte="return f32(a < b);",qte="return vec4<f32>(a < b);",jte="return f32(a <= b);",Kte="return vec4<f32>(a <= b);",Xte="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Yte=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Qte=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,N2=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Zte=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Jte=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,ene="return f32(a != b);",tne="return vec4<f32>(a != b);",nne=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,sne=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${N2}
  return resultTemp;
  `,rne="if (a < 0.0) { return b * a; }  return a;",ane=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function Ew(e,t){let n=t?N2:Qte;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function nc(e,t){switch(e){case 0:return Pte;case 1:return Rte;case 2:return Mte;case 3:return Ote;case 4:return t?Bte:Lte;case 5:return t?Wte:Vte;case 6:return t?Gte:Ute;case 7:return t?qte:Hte;case 8:return t?Kte:jte;case 9:return t?Yte:Xte;case 10:return t?tne:ene;case 11:return zte;case 12:return t?Jte:Zte;case 14:return t?ane:rne;case 15:return Ew("max",t);case 16:return Ew("min",t);case 13:return t?sne:nne;case 17:return Dte;case 18:return Fte;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var ine="return abs(a);",one="return ceil(a);",une="return cos(a);",lne=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,cne="return exp(a) - 1.0;",dne="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",pne=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,hne="return exp(a);",fne="return floor(a);",mne="return a;",gne=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,bne="return f32(!(a >= 1.0));",yne="return -a;",vne="if (a < 0.0) { return uniforms.alpha * a; } return a;",xne=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,wne="return select(a, 0.0, a < 0.0);",kne="return clamp(a, 0.0, 6.0);",Sne="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Ine=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Cne="return 1.0/sqrt(a);",Nne="return 1.0 / (1.0 + exp(-1.0 * a));",Tne="return sin(a);",$ne=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,_ne="return sqrt(a);",Ane="return a * a;",Ene=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Rne="return f32(i32((a)));";function qr(e,t){switch(e){case 0:return ine;case 2:return une;case 3:return lne;case 1:return one;case 4:return t?pne:dne;case 5:return hne;case 6:return cne;case 7:return fne;case 8:return mne;case 9:return gne;case 10:return bne;case 11:return yne;case 14:return t?xne:vne;case 12:return t?Ine:wne;case 13:return t?Sne:kne;case 15:return Cne;case 18:return Nne;case 16:return Tne;case 17:return $ne;case 19:return _ne;case 20:return Ane;case 21:return Ene;case 22:return Rne;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function Fr(e,t=!1){if(e===null)return null;if(e==="linear")return qr(8);if(e==="relu")return qr(12,t);if(e==="elu")return qr(4,t);if(e==="relu6")return qr(13,t);if(e==="prelu")return nc(14,t);if(e==="sigmoid")return qr(18,t);if(e==="leakyrelu")return qr(14,t);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function Dne(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function Ut(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";if(e===5)return"vec5";if(e===6)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function pr(e){if(e===0)return"x";if(e===1)return"y";if(e===2)return"z";if(e===3)return"w";if(e===4)return"u";if(e===5)return"v";throw Error(`Index ${e} is not yet supported`)}function pd(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function _v(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function Ci(){return`
  ${_v()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Ue(){return`
    ${Ci()}
      let index = getGlobalIndex();
`}function Fne(e,t,n,s=!1){let r=[];if(r.push(`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),s===!0)return r.push(`
      struct Uniform {
        size            : i32,
        numChannels     : i32,
        outShapeStrides : vec2<i32>,
        dispatchSize    : vec3<u32>,
      };

      @group(0) @binding(0) var<storage, write> result: array<${pd(t.dtype,n.isVec4)}>;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[Rw,r.join(`
`),Dw(t.shape),n.getUserCode()].join(`
`);let a=!1,i=!1,o="struct Uniforms { NAN : f32, ";n.variableNames.forEach((m,g)=>{let b=Ut(e[g].shape.length);(b==="vec5"||b==="vec6")&&(i=!0),(a||i)&&(o+="@align(16) "),a=i,o+=`${m.charAt(0).toLowerCase()+m.slice(1)}Shape : ${b}, `});let u=Ut(t.shape.length);i=u==="vec5"||u==="vec6",(a||i)&&(o+="@align(16) "),a=i,o+=`outShape : ${u}, `;let l=t.shape.length-1,c=Ut(l);i=c==="vec5"||c==="vec6",(a||i)&&(o+="@align(16) "),a=i,o+=`
       outShapeStrides: ${c}, `,n.size&&(a&&(o+="@align(16) "),a=!1,o+="size : i32, "),n.uniforms&&(a&&(o+="@align(16) "),o+=n.uniforms),o+="};",r.push(o),n.atomic?r.push(`
    @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
  `):r.push(`
    @group(0) @binding(0) var<storage, write> result: array<${pd(t.dtype,n.isVec4)}>;
  `),n.variableNames.forEach((m,g)=>{r.push(`
    @group(0) @binding(${1+g}) var<storage, read> ${m}: array<${pd(e[g].dtype,n.isVec4)}>;
    `)}),o!==""&&r.push(`
    @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
    `);let[p,d]=Bne(t.shape,n.dispatchLayout),h=[Rw,r.join(`
`),Dw(t.shape),p,One(t.shape.length)];if(n.atomic||h.push(Pne(t.shape,t.dtype,n.isVec4)),d===t.shape.length){let m=e.map(g=>zne(g,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);h.push(m)}return h.push(n.getUserCode()),h.join(`
`)}var Rw=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function One(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function Pne(e,t,n){let s=e.length,r=pd(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${r}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${r}(value);
    }`,s>=2){let i=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=Ut(s);n?a+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}function zne(e,t,n,s){let r=Mne(e,n);return e.shape.length<=t.length&&(r+=Lne(e,t,n,s)),r}function Mne(e,t){let n=e.name,s=e.shape.length,r=Ut(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=i.map(c=>`${c} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}[0]);
      }
    `;let u=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,l=`${s}D`;return s===0&&(l="1D"),t?`
      fn ${a}(${o}) -> vec4<f32> {
        return vec4<f32>(${n}[getIndexFromCoords${l}(${r}(${i.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${a}(${o}) -> f32 {
      return f32(${n}[getIndexFromCoords${l}(${r}(${i.join(",")}),
        ${u})]);
    }
   `}function Lne(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),i="get"+a+"ByOutput",o=e.shape.length,u=t.length,l=Ut(u);if(w.arraysEqual(e.shape,t)&&s)return n?`
        fn ${i}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}[globalIndex]);
        }

        fn ${i}Coords(coords : ${l}) -> vec4<f32> {
          return vec4<f32>(${r}[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${i}Index(globalIndex : i32) -> f32 {
        return f32(${r}[globalIndex]);
      }

      fn ${i}Coords(coords : ${l}) -> f32 {
        return f32(${r}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let c=C.getBroadcastDims(e.shape,t),p=u-o,d="";if(o===0)return n?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${i}Coords(coords : ${l}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${i}Index(globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${i}Coords(coords : ${l}) -> f32{
        return get${a}();
      }
    `;u<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${pr(g+p)} = 0;`).join(`
`);let h="";if(u<2&&o>0)h="coords";else if(u>1){let g=Ut(o),b=e.shape.map((y,v)=>`coords.${pr(v+p)}`).join(", ");h=`${g}(${b})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;return n?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${d}
        return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }

      fn ${i}Coords(coordsIn : ${l}) -> vec4<f32> {
        var coords = coordsIn;
        ${d}
        return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }
    `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${d}
      return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
    }

    fn ${i}Coords(coordsIn : ${l}) -> f32 {
      var coords = coordsIn;
      ${d}
      return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
    }
  `}function Bne(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords() -> ${Ut(a)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,a];let i="",o=[n,s,r],u=0;for(let d=0;d<o.length;d++){let h=o[d];if(h.length!==0)if(u+=h.length,h.length===1)i+=`let d${h[0]} = i32(globalId[${d}]);`;else{let f=Dne(h,"uniforms.outShape");i+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)i+=`let d${h[m]} = index${d} / ${f[m]};`,m===f.length-1?i+=`let d${h[m+1]} = index${d} - d${h[m]} * ${f[m]};`:i+=`index${d} = index${d} - d${h[m]} * ${f[m]};`}}let l=[];for(let d=0;d<u;d++)l.push(`d${d}`);let c=Ut(u),p=`fn getOutputCoords() -> ${c} {
    ${i}
  `;return l.length===0?p+=`return ${c}(0); }`:p+=`return ${c}(${l.join(",")}); }`,[p,u]}function Dw(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=w.computeStrides(e),s=Ut(t),r=[];for(let i=0;i<t;i++)r.push(`d${i}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a;return a="var index2 = index;"+n.map((i,o)=>{let u=`let ${r[o]} = index2 / uniforms.outShapeStrides.${pr(o)}`,l=o===n.length-1?`let ${r[o+1]} = index2 - ${r[o]} * uniforms.outShapeStrides.${pr(o)}`:`index2 = index2 - ${r[o]} * uniforms.outShapeStrides.${pr(o)}`;return`${u}; ${l};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var T2={};Ae(T2,{ArrayBufferToTypedArray:()=>_2,GPUBytesPerElement:()=>hd,computeDispatch:()=>_e,computeWorkGroupSizeForConv2d:()=>Av,computeWorkGroupSizeForMatMul:()=>$2,computeWorkPerThreadForConv2d:()=>Ev,flatDispatchLayout:()=>Be,isWebGPUSupported:()=>Rv,tilesFitEvenlyIntoShape:()=>js});var sa=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function js(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]===0)}function _e(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,i]=[Math.ceil(sa(e.x.map(o=>t[o]))/(n[0]*s[0])),e.y?Math.ceil(sa(e.y.map(o=>t[o]))/(n[1]*s[1])):1,e.z?Math.ceil(sa(e.z.map(o=>t[o]))/(n[2]*s[2])):1];return[r,a,i]}function Av(e,t){let n=sa(e.x.map(r=>t[r])),s=sa(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function $2(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function Ev(e,t){let n=sa(e.x.map(r=>t[r])),s=sa(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function Be(e){return{x:e.map((t,n)=>n)}}function hd(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function _2(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Rv(){return(typeof window!="undefined"||typeof WorkerGlobalScope!="undefined")&&!!navigator.gpu}function A2(e,t,n,s){return w.assert(s%4===0&&e[0]===4,()=>"tileInner must be divisible by 4. And ColPerThread must be 4"),`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${s/e[0]}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${s}>;

  let RowPerThread = ${e[1]};
  let ColPerThread = ${e[0]};
  let TileInner = ${s};

  ${Ci()}

    let tileRow = ${t===1?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var Vne=class{constructor(e,t,n,s,r,a=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let u=a!=null,l=o!=null;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=s,this.batchBEqualOne=r,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=[this.tileAOuter,this.tileInner],r=[this.tileInner,this.tileBOuter];return[js(s,this.aShape.slice(1)),js(r,n.slice(1))]}getUserCode(){let e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let i=Fr(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${i}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${i}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
        `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
          let batch = i32(globalId.z);
        `}

        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchBEqualOne?`
          let batchBSize = 0;
          let batch = 0;
          `:`
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
          let batch = i32(globalId.z);
       `}
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${A2(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};function Dv(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${Ci()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function Wne(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Ci()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var Une=class{constructor(e,t,n,s,r,a=!1,i=!1,o=null,u=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let c=a?e[1]:e[2];this.workGroupSize=$2(t[1],c,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let p=o!=null,d=l!=null;p&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=a,this.transposeB=i,this.addBias=p,this.activation=u,this.hasPreluActivationWeights=d,this.batchAEqualOne=s,this.batchBEqualOne=r;let h=this.outputShape[2],f=this.transposeB?[this.outputShape[0],h,c]:[this.outputShape[0],c,h];[this.fitA,this.fitB]=this.getShapeFit(f),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${i}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),w.assert(s%this.workGroupSize[0]===0&&s%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[js(r,this.aShape.slice(1)),js(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let i=Fr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
        let batch = 0;
        let batchASize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        `}
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
        let batch = 0;
        let batchBSize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        `}
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?Dv([this.workPerThread,this.workPerThread,1],this.workGroupSize):Wne(this.workGroupSize)}
    `}};function Gne(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Ci()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var Hne=class{constructor(e,t,n,s=!1,r=!1,a=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize);let u=a!=null,l=o!=null;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e;this.transposeA===!1?e="return f32(A[batch * batchASize + row * uniforms.dimInner + col]);":e="return f32(A[batch * batchASize + col * uniforms.dimAOuter + row]);";let t;this.transposeB===!1?t="return f32(B[batch * batchBSize + row * uniforms.dimBOuter + col]);":t="return f32(B[batch * batchBSize + col * uniforms.dimInner + row]);";let n="",s="";if(this.activation){let i=Fr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = batchIn;
          `}
        ${e}
      }

      fn mm_readB(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = batchIn;
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${Gne()}
    `}};function qne(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${Ci()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var jne=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,16,1],w.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let i=s!=null;i&&this.variableNames.push("bias");let o=a!=null;o&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=r,this.hasPreluActivationWeights=o,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let i=Fr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${i}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${i}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
          let batch = 0;
          let batchASize = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = i32(globalId.z);
          `}
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = i32(globalId.z);
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${qne(this.workGroupSize)}
    `}};function We(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),i=w.inferFromImplicitShape(r,a),o=w.sizeFromShape(i);return w.assert(a===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}var Kne={kernelName:Fo,backendName:"webgpu",kernelFunc:We};function Fv({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let l=e.shape.length,c=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],d=s?t.shape[c-1]:t.shape[c-2],h=n?e.shape[l-1]:e.shape[l-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),x=bi.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[b,p,h]:[b,h,p],I=s?[y,f,d]:[y,d,f],$=We({inputs:{x:e},backend:r,attrs:{shape:k}}),E=We({inputs:{x:t},backend:r,attrs:{shape:I}}),A=[$,E],P=Math.max(b,y),R=b===1,F=y===1,T=p%4===0&&f%4===0&&!n&&!s,z;h*f<=32?z=new Hne([P,h,f],R,F,n,s,a,u,i):!n&&!s&&(h<=16&&(f<=512||d>=2*f)||f<=16&&(h<=512||p>=2*h))?z=new jne(k,I,[P,h,f],a,u,i):T?z=new Vne(k,[P,h,f],K().get("WEBGPU_MATMUL_WORK_PER_THREAD"),R,F,a,u,i):z=new Une(k,[P,h,f],K().get("WEBGPU_MATMUL_WORK_PER_THREAD"),R,F,n,s,a,u,i);let W=[$,E];a&&W.push(a),i&&W.push(i);let j=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[p]}];u==="leakyrelu"&&(j.push({type:"float32",data:[o]}),z.uniforms+=" alpha : f32,");let X=r.runWebGPUProgram(z,W,e.dtype,j),Y=We({inputs:{x:X},backend:r,attrs:{shape:x}});A.push(X);for(let Z of A)r.disposeData(Z.dataId);return Y}function Xne(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=s;return Fv({a:r,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:c})}var Yne={kernelName:aa,backendName:"webgpu",kernelFunc:Xne},Fw=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${nc(this.op,!1)}
      }

      ${Ue()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Qne=class{constructor(e,t,n,s){this.variableNames=["A","B"],this.size=!0;let r=256;this.workGroupSize=[r,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Be(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${nc(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ue()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},Zne=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${nc(this.op,this.isVec4)}
      }
      ${Ue()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}},E2=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${nc(this.op,!1)}
      }
      ${Ue()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function Ow(e,t,n){if(w.arraysEqual(t,n)&&w.sizeFromShape(t)%4===0)return new Zne(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new Qne(e,t,n,a):new E2(e,t,n)}function Wn(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Jne={kernelName:Wa,backendName:"webgpu",kernelFunc:Wn};function du(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.tensorMap.get(a.dataId),o=Wn({inputs:{x:s},backend:n}),u=Wn({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}var ese={kernelName:Zd,backendName:"webgpu",kernelFunc:du},sc=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${qr(this.op,!1)}
      }
      ${Ue()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function Kt({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,i=r,o=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let l=i.tensorMap.get(a.dataId),c=t(l.values,o);return i.makeTensorInfo(a.shape,o,c)}let u=new sc(a.shape,e);return i.runWebGPUProgram(u,[a],o)}}function mn({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;if(n&&i.dtype==="complex64"){let p=u.tensorMap.get(i.dataId),d=u.tensorMap.get(o.dataId),h,f;if(e!==0)[h,f]=[[p.complexTensorInfos.real,d.complexTensorInfos.real],[p.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{let[b,y]=g,v={dataId:b.dataId,dtype:b.dtype,shape:i.shape},x={dataId:y.dataId,dtype:y.dtype,shape:o.shape},k=Ow(e,i.shape,o.shape);return u.runWebGPUProgram(k,[v,x],cn(b.dtype,y.dtype))});else{let g=new Fw(17,i.shape,o.shape),b=new Fw(18,i.shape,o.shape),y=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape}];h=u.runWebGPUProgram(g,y,"float32"),f=u.runWebGPUProgram(b,y,"float32")}let m=du({inputs:{real:h,imag:f},backend:u});return u.disposeData(h.dataId),u.disposeData(f.dataId),m}let l=s||cn(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||u.shouldExecuteOnCPU([i,o]))&&t!=null){let p=u.tensorMap.get(i.dataId).values,d=u.tensorMap.get(o.dataId).values,h=i.dtype==="string"?C.fromUint8ToStringArray(p):p,f=i.dtype==="string"?C.fromUint8ToStringArray(d):d,[m,g]=t(i.shape,o.shape,h,f,l);return u.makeTensorInfo(g,l,m)}let c=Ow(e,i.shape,o.shape);return u.runWebGPUProgram(c,[i,o],l)}}var{addImpl:tse,ceilImpl:nse,concatImpl:sse,equalImpl:rse,expImpl:ase,expm1Impl:ise,floorImpl:ose,gatherNdImpl:use,gatherV2Impl:lse,greaterEqualImpl:cse,greaterImpl:dse,lessEqualImpl:pse,lessImpl:hse,logImpl:fse,maxImpl:mse,maximumImpl:gse,minimumImpl:bse,multiplyImpl:yse,negImpl:vse,notEqualImpl:xse,prodImpl:wse,rangeImpl:kse,rsqrtImpl:Sse,simpleAbsImpl:Ise,sliceImpl:Cse,stridedSliceImpl:Nse,stringNGramsImpl:Tse,subImpl:$se,tileImpl:_se,topKImpl:Ase,transposeImpl:Ese,uniqueImpl:hhe}=sv,Rse=Kt({opType:0,cpuKernelImpl:Ise}),Dse={kernelName:co,backendName:"webgpu",kernelFunc:Rse},Fse=mn({opSnippet:1,cpuKernelImpl:tse,supportsComplex:!0}),Ose={kernelName:Sr,backendName:"webgpu",kernelFunc:Fse},Pse=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Ue()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function zse(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Wn({inputs:{x:s[0]},backend:n});let r=s.map(o=>o.dtype).reduce((o,u)=>cn(o,u)),a=s.map(o=>o.shape),i=new Pse(a);return n.runWebGPUProgram(i,s,r)}var Mse={kernelName:Sa,backendName:"webgpu",kernelFunc:zse},R2=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let s=[t];C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=C.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${pr(this.inputShape.length-1)}`,n=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let a=0;a<this.outputShape.length;a++)r+=`outputCoords.${pr(a)},`;return r};return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      ${Ue()}
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},Lse=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${_v()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},Bse=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Ut(this.outputShape.length),t=Vse(this.newDim);return`
      ${Ue()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function Vse(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC.${pr(s)}`;return n.join()}function Ks(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let c=0;c<u.length;c++)u[c]=r.shape[a[c]];if(n.shouldExecuteOnCPU([r])){let p=i.tensorMap.get(r.dataId).values,d=Ese(p,r.shape,r.dtype,a,u);return n.makeTensorInfo(u,r.dtype,d)}if(r.shape.length===2&&w.arraysEqual(a,[1,0])){let c=new Lse(r.shape,a);return i.runWebGPUProgram(c,[r],r.dtype)}let l=new Bse(r.shape,a);return i.runWebGPUProgram(l,[r],r.dtype)}var Wse={kernelName:mi,backendName:"webgpu",kernelFunc:Ks};function Use(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=Ks({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let c=new R2(u.shape,i[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[u],"int32",p);return l.forEach(h=>n.disposeData(h.dataId)),d}var Gse={kernelName:Ia,backendName:"webgpu",kernelFunc:Use};function Hse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=Ks({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let c=new R2(u.shape,i[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[u],"int32",p);return l.forEach(h=>n.disposeData(h.dataId)),d}var qse={kernelName:ll,backendName:"webgpu",kernelFunc:Hse},D2=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Ue()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},F2=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ue()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function jse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1,c=C.computePool2DInfo(r.shape,a,i,l,o,u);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return Wn({inputs:{x:r},backend:n});let p,d=[{type:"int32",data:[c.strideHeight,c.strideWidth]}];return c.filterHeight===1&&c.filterWidth===1?p=new F2(c):(p=new D2(c,"avg"),d.push({type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]})),n.runWebGPUProgram(p,[r],r.dtype,d)}var Kse={kernelName:Ca,backendName:"webgpu",kernelFunc:jse};function Xse(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return Fv({a:r,b:a,transposeA:i,transposeB:o,backend:n})}var Yse={kernelName:Na,backendName:"webgpu",kernelFunc:Xse},Qse=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Ut(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=Ut(this.rank),t=Zse(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${Zm[a]} = uniforms.start[${a}] + coords.${Zm[a]};`),`
      ${Ue()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},Zm=["x","y","z","w","u","v"];function Zse(e){if(e===1)return"sourceLoc";if(e<=6)return Zm.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function pu(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,u]=wt.parseSliceParams(r,a,i);if(wt.assertParamsValid(r,o,u),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.tensorMap.get(r.dataId),d=Cse(p.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,d)}if(w.sizeFromShape(u)===0)return n.makeTensorInfo(u,r.dtype,[]);let l=new Qse(o,u),c=[{type:"int32",data:o}];return n.runWebGPUProgram(l,[r],r.dtype,c)}var Jse={kernelName:Lo,backendName:"webgpu",kernelFunc:pu},ere=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=a.reduce((y,v)=>y*v),u=C.getReshaped(r.shape,a,o),l=C.getPermuted(u.length,a.length),c=C.getReshapedPermuted(r.shape,a,o),p=C.getSliceBeginCoords(i,a.length),d=C.getSliceSize(c,i,a.length),h=[],f=We({inputs:{x:r},backend:n,attrs:{shape:u}}),m=Ks({inputs:{x:f},backend:n,attrs:{perm:l}}),g=We({inputs:{x:m},backend:n,attrs:{shape:c}}),b=pu({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach(y=>n.disposeData(y.dataId)),b},tre={kernelName:po,backendName:"webgpu",kernelFunc:ere},O2=mn({opSnippet:10,dtype:"bool",cpuKernelImpl:xse}),nre={kernelName:$o,backendName:"webgpu",kernelFunc:O2};function rc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Wn({inputs:{x:r.complexTensorInfos.real},backend:n})}var sre={kernelName:op,backendName:"webgpu",kernelFunc:rc};function rre(e,t){let n=new sc(e.shape,22),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Jm(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Wn({inputs:{x:r},backend:n});let i=$t(r.shape),o=Jm({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=du({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeData(o.dataId),u}if(r.dtype==="complex64"){let i=rc({inputs:{input:r},backend:n}),o=Jm({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeData(i.dataId),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=Wn({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32")return rre(r,n);if(a==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),u=O2({inputs:{a:r,b:i},backend:n});return n.disposeData(i.dataId),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var are={kernelName:Ta,backendName:"webgpu",kernelFunc:Jm},ire=Kt({opType:1,cpuKernelImpl:nse}),ore={kernelName:$a,backendName:"webgpu",kernelFunc:ire},ure=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ue()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},lre=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ue()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function cre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o,u=[{type:"float32",data:[a]},{type:"float32",data:[i]}];return w.sizeFromShape(r.shape)%4===0?o=new ure(r.shape):o=new lre(r.shape),n.runWebGPUProgram(o,[r],r.dtype,u)}var dre={kernelName:Ir,backendName:"webgpu",kernelFunc:cre},pre=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ue()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function sh(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Wn({inputs:{x:r.complexTensorInfos.imag},backend:n})}var hre={kernelName:sp,backendName:"webgpu",kernelFunc:sh};function eg(e,t,n){let s=e[0].dtype;if(s==="complex64"){let h=e.map(y=>rc({inputs:{input:y},backend:n})),f=e.map(y=>sh({inputs:{input:y},backend:n})),m=eg(h,t,n),g=eg(f,t,n),b=du({inputs:{real:m,imag:g},backend:n});return h.forEach(y=>n.disposeData(y.dataId)),f.forEach(y=>n.disposeData(y.dataId)),n.disposeData(m.dataId),n.disposeData(g.dataId),b}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let h=e.map(x=>{let k=w.sizeFromShape(x.shape.slice(t));return We({inputs:{x},backend:n,attrs:{shape:[-1,k]}})}),f=h.map(x=>({vals:n.readSync(x.dataId),shape:x.shape})),m=C.computeOutShape(h.map(x=>x.shape),1),g=h[0].shape[0]===1,b=sse(f,m,s,g),y=C.computeOutShape(e.map(x=>x.shape),t),v=n.makeTensorInfo(y,s,b);return h.forEach(x=>n.disposeData(x.dataId)),v}let{tensors2D:a,outShape:i}=fre(e,t,n),o=a.map(h=>h.shape),u=new pre(o),l=[],c=new Array(o.length-1);if(c.length>0){c[0]=o[0][1],l.push({type:"int32",data:[c[0]]});for(let h=1;h<c.length;h++)c[h]=c[h-1]+o[h][1],l.push({type:"int32",data:[c[h]]})}let p=n.runWebGPUProgram(u,a,a[0].dtype,l);a.forEach(h=>n.disposeData(h.dataId));let d=We({inputs:{x:p},backend:n,attrs:{shape:i}});return n.disposeData(p.dataId),d}function fre(e,t,n){let s=C.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>We({inputs:{x:a},backend:n,attrs:{shape:[w.sizeFromShape(a.shape.slice(0,t)),w.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function P2(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=C.computeOutShape(t.map(l=>l.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(l=>w.sizeFromShape(l.shape)>0);if(o.length===1)return Wn({inputs:{x:o[0]},backend:n});let u=o.map(l=>l.shape);return C.assertParamsConsistent(u,a),eg(o,a,n)}var mre={kernelName:ho,backendName:"webgpu",kernelFunc:P2},gre=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      dimAOuter : i32, dimBOuter : i32, dimInner : i32,`,this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.outputShape[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=this.outputShape[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.remainder=this.convInfo.inChannels%4===0,this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}_${this.remainder}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],s=this.outputShape[3],r=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[js(e,[n,r]),js(t,[r,s])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let e=A2(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),n=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.remainder?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,s=this.fitA?`${n}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${n}
         }
         return vec4<f32>(0.0);
        `,r=this.fitB?"return W[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,a="",i="";if(this.activation){let l=Fr(this.activation,this.isVec4);this.hasPreluActivationWeights?a=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${l}
        }`:a=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${l}
        }`,i="value = activation(value, outCoord);"}let o=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${a}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${s}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${r}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${o}
            ${i}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}},bre=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[1],y:[2,3],z:[0]},this.workGroupSize=Av(this.dispatchLayout,this.outputShape),this.elementsPerThread=Ev(this.dispatchLayout,this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}_${this.isChannelsLast}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;w.assert(n%this.workGroupSize[0]===0&&n%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.convInfo.outHeight*this.convInfo.outWidth,i=this.convInfo.outChannels,o=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[js(s,[a,o]),js(r,[o,i])]}getUserCode(){let e=this.isChannelsLast?`
    let coord = vec4<i32>(batch, xRow, xCol, col % inChannels);
    `:`
    let coord = vec4<i32>(batch, col % inChannels, xRow, xCol);
    `,t=this.isChannelsLast?`
    let outCoord = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let outCoord = vec4<i32>(
      batch,
      col,
      row / outWidth,
      row % outWidth);
    `,n=Dv(this.elementsPerThread,this.workGroupSize),s=`
    let inChannels = uniforms.wShape[2];
    let outWidth = ${this.isChannelsLast?"uniforms.outShape[2]":"uniforms.outShape[3]"};
    let outRow = row / outWidth;
    let outCol = row % outWidth;

    let WRow = col / (uniforms.filterDims[1] * inChannels);
    let WCol = col / inChannels % uniforms.filterDims[1];
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    ${e}
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,r=this.fitA?`${s}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${s}
    }
    return 0.0;
    `,a=this.fitB?"return W[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,i="",o="";if(this.activation){let c=Fr(this.activation,!1);this.hasPreluActivationWeights?i=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${c}
                }`:i=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${c}
                  }
                `,o="value = activation(value, outCoord);"}let u=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${i}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${r}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${a}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outWidth = ${this.isChannelsLast?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      ${t}
      ${u}
      ${o}
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${n}
  `}};function yre({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=n.dataFormat==="channelsLast",l=!u,c=!1,p=u&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d,h;if(p){let g=n.inHeight*n.inWidth*n.inChannels;d=We({inputs:{x:e},backend:s,attrs:{shape:[1,n.batchSize,g]}}),h=We({inputs:{x:t},backend:s,attrs:{shape:[1,g,n.outChannels]}})}else d=We({inputs:{x:e},backend:s,attrs:{shape:u?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),h=We({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});let f=Fv({a:u?d:h,b:u?h:d,transposeA:l,transposeB:c,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),m=We({inputs:{x:f},backend:s,attrs:{shape:n.outShape}});return s.disposeData(d.dataId),s.disposeData(h.dataId),s.disposeData(f.dataId),m}function z2({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=r!=null,l=a!=null,c=n.dataFormat==="channelsLast",p;if(c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID"||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID"))return yre({x:e,filter:t,convInfo:n,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});let h=(n.inChannels%4===0||n.inChannels===3&&n.padInfo.type==="VALID")&&n.outChannels%4===0&&c,f=[n.padInfo.top,n.padInfo.left],m=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];h?p=new gre(n,u,o,l):p=new bre(n,u,o,l);let g=n.outHeight*n.outWidth,b=n.outChannels,y=n.filterHeight*n.filterWidth*n.inChannels;m.push({type:"int32",data:[g]},{type:"int32",data:[b]},{type:"int32",data:[y]});let v=[e,t];return u&&v.push(r),l&&v.push(a),o==="leakyrelu"&&(m.push({type:"float32",data:[i]}),p.uniforms+=" alpha : f32,"),s.runWebGPUProgram(p,v,e.dtype,m)}function vre(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=n,p=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,p);return z2({x:r,filter:a,convInfo:d,backend:s})}var xre={kernelName:_a,backendName:"webgpu",kernelFunc:vre},wre=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Av(this.dispatchLayout,this.outputShape),this.elementsPerThread=Ev(this.dispatchLayout,this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${Dv(this.elementsPerThread,this.workGroupSize)}
  `}},kre=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Ue()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Sre(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,p=C.convertConv2DDataFormat(l),d=C.computeConv2DInfo(i,a.shape,o,1,u,c,!1,p),h=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(K().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new kre(d);else{f=new wre(d);let m=d.inShape[1]*d.inShape[2],g=d.inShape[3],b=d.filterHeight*d.filterWidth*d.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var Ire={kernelName:Aa,backendName:"webgpu",kernelFunc:Sre},Cre=Kt({opType:2}),Nre={kernelName:Ea,backendName:"webgpu",kernelFunc:Cre},Tre=Kt({opType:3}),$re={kernelName:Ra,backendName:"webgpu",kernelFunc:Tre},_re=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Ue()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${i};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},Are=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,c=new _re(r.shape[3],a.shape,o,u),p=[{type:"float32",data:[l]}];return n.runWebGPUProgram(c,[r,a,i],"float32",p)},Ere={kernelName:mo,backendName:"webgpu",kernelFunc:Are},Pw=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=t,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=s,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",n=this.exclusive?t:`getX(${zw(e,"coords",this.op)})`,s=this.outputShape[this.outputShape.length-1],r="",a="";return this.exclusive?(r=this.reverse?`end != ${s-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${s}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${Ue()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${Mw(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${a};
           ${Mw(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${zw(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function zw(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Mw(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function M2(e,t,n,s,r,a){let i=t.shape.length,o=C.getAxesPermutation([s],i),u=t;o!=null&&(u=Ks({inputs:{x:t},backend:n,attrs:{perm:o}}));let l=C.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=u.shape[l],p=Wn({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let h=new Pw(e,u.shape,!1,a),f=p,m=[{type:"float32",data:[d]}];p=n.runWebGPUProgram(h,[p],p.dtype,m),n.disposeData(f.dataId)}if(r){let d=new Pw(e,u.shape,r,a),h=p,f=[{type:"float32",data:[0]}];p=n.runWebGPUProgram(d,[p],p.dtype,f),n.disposeData(h.dataId)}if(o!=null){let d=C.getUndoAxesPermutation(o),h=Ks({inputs:{x:p},backend:n,attrs:{perm:d}});return n.disposeData(p.dataId),n.disposeData(u.dataId),h}return p}function Rre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return M2("*",r,n,a,i,o)}var Dre={kernelName:fo,backendName:"webgpu",kernelFunc:Rre};function Fre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return M2("+",r,n,a,i,o)}var Ore={kernelName:Da,backendName:"webgpu",kernelFunc:Fre},Pre=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Ue()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function zre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],p=u*a,d=l*a,h=c/(a*a),f=i==="NHWC"?[o,p,d,h]:[o,h,p,d],m=[{type:"int32",data:[a]}],g=new Pre(f,i);return n.runWebGPUProgram(g,[r],r.dtype,m)}var Mre={kernelName:go,backendName:"webgpu",kernelFunc:zre},L2=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=Fr(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${_v()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},B2=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      inDims : vec2<i32>, filterHeight : i32, filterWidth : i32,
      channelMul : i32,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=Fr(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${r}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Ci()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Lre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s,c=u;c==null&&(c=[1,1]);let p=C.computeConv2DInfo(r.shape,a.shape,i,c,o,l,!0),d=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]}],h;return p.batchSize===1&&p.inHeight===p.outHeight&&p.inWidth===p.outWidth&&p.strideHeight===1&&p.strideWidth===1&&p.filterHeight===p.filterWidth&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.filterHeight===3&&p.inChannels%4===0?h=new L2(p):(h=new B2(p),d.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.outChannels/p.inChannels]})),n.runWebGPUProgram(h,[r,a],r.dtype,d)}var Bre={kernelName:Fa,backendName:"webgpu",kernelFunc:Lre},V2=mn({opSnippet:0,cpuKernelImpl:yse,supportsComplex:!0}),Vre={kernelName:Za,backendName:"webgpu",kernelFunc:V2},Wre=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=C.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ue()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function ac(e,t,n,s,r){let a=e.shape.length,i=[],o=w.parseAxisParam(t,e.shape),u=o,l=C.getAxesPermutation(u,a),c=e;l!=null&&(c=Ks({inputs:{x:e},attrs:{perm:l},backend:r}),u=C.getInnerMostAxes(u.length,a),i.push(c)),C.assertAxesAreInnerMostDims(s,u,a);let[p,d]=C.computeOutAndReduceShapes(c.shape,u),h=p;n&&(h=C.expandShapeToKeepDim(p,o));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){let m=r.tensorMap.get(c.dataId).values;switch(s){case"max":let g=mse(m,w.sizeFromShape(d),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:b,outShape:y,outDtype:v}=wse(c.shape,c.dtype,m,u);f=r.makeTensorInfo(y,v,b);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=w.sizeFromShape(d),b=w.sizeFromShape(c.shape)/m,y={windowSize:m,inSize:m,batchSize:b,outSize:1},v=s==="mean"?"float32":mp(e.dtype),x=[{type:"int32",data:[m]}],k=new Wre(y,s),I=r.runWebGPUProgram(k,[c],v,x);i.push(I),f=We({inputs:{x:I},attrs:{shape:h},backend:r})}return i.forEach(m=>r.disposeData(m.dataId)),f}function Ov(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return ac(r,a,i,"sum",n)}var Ure={kernelName:ci,backendName:"webgpu",kernelFunc:Ov};function Gre(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=C.decodeEinsumEquation(r,a.length);C.checkEinsumDimSizes(i.length,u,a);let{path:l,steps:c}=C.getEinsumComputePath(o,u),p=c.length,d=null,h=i.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:b,expandDims:y}=C.getEinsumPermutation(h,u[g]),v;C.isIdentityPermutation(b)?v=a[g]:(v=Ks({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=We({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),d===null?d=v:(d=V2({inputs:{a:v,b:d},backend:n}),f.push(d))}m<p-1&&(l[m]>=0&&(d=Ov({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeData(m.dataId);return d}var Hre={kernelName:np,backendName:"webgpu",kernelFunc:Gre},qre=Kt({opType:4}),jre={kernelName:Pa,backendName:"webgpu",kernelFunc:qre},Kre=mn({opSnippet:4,dtype:"bool",cpuKernelImpl:rse}),Xre={kernelName:bo,backendName:"webgpu",kernelFunc:Kre},W2=Kt({opType:5,cpuKernelImpl:ase,dtype:"float32"}),Yre={kernelName:za,backendName:"webgpu",kernelFunc:W2};function tg(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice(),u=r;return r<0&&(w.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),o.splice(u,0,1),We({inputs:{x:a},backend:s,attrs:{shape:o}})}var Qre={kernelName:yo,backendName:"webgpu",kernelFunc:tg},Zre=Kt({opType:6,cpuKernelImpl:ise}),Jre={kernelName:vo,backendName:"webgpu",kernelFunc:Zre},eae=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ue()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function hu(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let i=w.getArrayFromDType(a,w.sizeFromShape(s));return i.fill(r),t.makeTensorInfo(s,a,i)}else{let i=new eae(s),o=[{type:"float32",data:[r]}];return t.runWebGPUProgram(i,[],a,o)}}var tae={kernelName:gl,backendName:"webgpu",kernelFunc:hu},nae=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ue()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},sae={kernelName:xo,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new nae(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},rae=Kt({opType:7,cpuKernelImpl:ose}),aae={kernelName:Ma,backendName:"webgpu",kernelFunc:rae},iae=mn({opSnippet:12,dtype:"int32"}),oae={kernelName:La,backendName:"webgpu",kernelFunc:iae},uae=class{constructor(e,t=!1){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.useImport=t,this.shaderKey=`fromPixels_${this.useImport}`}getUserCode(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Ue()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},lae={kernelName:bd,backendName:"webgpu",kernelFunc:cae},Gi;function cae(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,u=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,l=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[c,p]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[p,c,a];if(K().getBool("WEBGPU_USE_IMPORT")&&i)return Lw({externalImage:r,backend:n,attrs:s,outShape:d,useImport:!0});if((i||o)&&(Gi==null&&(Gi=document.createElement("canvas").getContext("2d")),Gi.canvas.width=c,Gi.canvas.height=p,Gi.drawImage(r,0,0,c,p),r=Gi.canvas),l||u||i||o)return Lw({externalImage:r,backend:n,attrs:s,outShape:d,useImport:!1});let h=r.data,f=h;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let b=h.length,y=0;for(let v=0;v<b;v++)v%4<a&&(f[y++]=h[v])}let m=n.makeTensorInfo(d,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}function Lw(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:i}=s,o=w.sizeFromShape(r),u=w.computeStrides(r),l=new uae(r,a),c=[{type:"uint32",data:[o]},{type:"uint32",data:[i]},{type:"uint32",data:[...u]},{type:"uint32",data:[...l.dispatch]}];return n.runFromPixelsProgram(l,r,c,a,t)}var dae=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(C.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Ue()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},pae={kernelName:Ba,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:i,variance:o}=e,{varianceEpsilon:u}=t,l=n,c=[s,i,o],p=null;a!=null&&(p=a.shape,c.push(a));let d=null;r!=null&&(d=r.shape,c.push(r));let h=new dae(s.shape,i.shape,o.shape,p,d),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(h,c,s.dtype,f)}};function hae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=C.convertConv2DDataFormat(c),g=C.computeConv2DInfo(r.shape,a.shape,u,p,l,d,!1,m);return z2({x:r,filter:a,convInfo:g,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:h})}var fae={kernelName:ia,backendName:"webgpu",kernelFunc:hae};function mae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=s,f=c;f==null&&(f=[1,1]),w.assert(C.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let m=C.computeConv2DInfo(r.shape,a.shape,u,f,l,p,!0),g=[r,a],b=i!=null,y=o!=null;b&&g.push(i),y&&g.push(o);let v=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}],x;return m.batchSize===1&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&m.strideHeight===1&&m.strideWidth===1&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.filterHeight===3&&m.inChannels%4===0?x=new L2(m,b,d,y):(x=new B2(m,b,d,y),v.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),d==="leakyrelu"&&(v.push({type:"float32",data:[h]}),x.uniforms+=" alpha : f32,"),n.runWebGPUProgram(x,g,"float32",v)}var gae={kernelName:oa,backendName:"webgpu",kernelFunc:mae},bae=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Ut(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Ue()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function yae(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=w.sizeFromShape(s.shape),[u,l,c,p]=C.prepareAndValidate(s,r),d=We({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),h=We({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),v=n.bufferSync(s),x=use(y,v,s.dtype,l,i,c,p,s.shape,o);return n.makeTensorInfo(u,s.dtype,x.values)}let f=new bae(i,[l,c]),m=[{type:"int32",data:[i]},{type:"int32",data:p}],g=n.runWebGPUProgram(f,[h,d],h.dtype,m),b=We({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeData(d.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),b}var vae={kernelName:ko,backendName:"webgpu",kernelFunc:yae},xae=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=wae(this.aShape);return`
      ${Ue()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function wae(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<e.length;s++)s===2?n.push("indexZ"):n.push(`${t[s]}`);return n.join()}function U2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0],l=C.segment_util.collectGatherOpShapeInfo(r,a,u,o),c=w.sizeFromShape(a.shape),p=[],d=We({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),h=We({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});p.push(d),p.push(h);let f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let v=n.tensorMap.get(h.dataId).values,x=De(h.shape,h.dtype,v),I=n.tensorMap.get(d.dataId).values,$=De(d.shape,d.dtype,I),E=lse($,x,f);return p.forEach(A=>n.disposeData(A.dataId)),n.makeTensorInfo(l.outputShape,E.dtype,E.values)}let m=new xae(d.shape,f),g=n.runWebGPUProgram(m,[d,h],d.dtype);p.push(g);let b=We({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach(y=>n.disposeData(y.dataId)),b}var kae={kernelName:wo,backendName:"webgpu",kernelFunc:U2},Sae=mn({opSnippet:5,cpuKernelImpl:dse,dtype:"bool"}),Iae={kernelName:So,backendName:"webgpu",kernelFunc:Sae},Cae=mn({opSnippet:6,dtype:"bool",cpuKernelImpl:cse}),Nae={kernelName:Va,backendName:"webgpu",kernelFunc:Cae};function Tae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=[{type:"float32",data:[a]}],o=new sc(r.shape,14);return o.uniforms="alpha : f32,",n.runWebGPUProgram(o,[r],"float32",i)}var $ae={kernelName:Ua,backendName:"webgpu",kernelFunc:Tae},_ae=mn({opSnippet:7,dtype:"bool",cpuKernelImpl:hse}),Aae={kernelName:Io,backendName:"webgpu",kernelFunc:_ae},Eae=mn({opSnippet:8,dtype:"bool",cpuKernelImpl:pse}),Rae={kernelName:Co,backendName:"webgpu",kernelFunc:Eae},Dae=Kt({opType:9,cpuKernelImpl:fse}),Fae={kernelName:Ga,backendName:"webgpu",kernelFunc:Dae},Oae=mn({opSnippet:9,dtype:"bool"}),Pae={kernelName:No,backendName:"webgpu",kernelFunc:Oae},zae=Kt({opType:10}),Mae={kernelName:wl,backendName:"webgpu",kernelFunc:zae};function G2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s;return ac(r,a,i,"max",n)}var Lae={kernelName:Ha,backendName:"webgpu",kernelFunc:G2},Bae=mn({opSnippet:15,cpuKernelImpl:gse}),Vae={kernelName:qa,backendName:"webgpu",kernelFunc:Bae};function Wae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1,c=C.computePool2DInfo(r.shape,a,i,l,o,u),p,d=[];if(c.filterHeight===1&&c.filterWidth===1){if(w.arraysEqual(c.inShape,c.outShape))return Wn({inputs:{x:r},backend:n});p=new F2(c),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]})}else p=new D2(c,"max"),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]});return n.runWebGPUProgram(p,[r],r.dtype,d)}var Uae={kernelName:ja,backendName:"webgpu",kernelFunc:Wae};function Gae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:i}=s;return ac(r,i,a,"mean",n)}var Hae={kernelName:Ka,backendName:"webgpu",kernelFunc:Gae};function qae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return ac(r,a,i,"min",n)}var jae={kernelName:Xa,backendName:"webgpu",kernelFunc:qae},Kae=mn({opSnippet:16,cpuKernelImpl:bse}),Xae={kernelName:Ya,backendName:"webgpu",kernelFunc:Kae},Yae=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((u,l)=>`uniforms.pad${l}[0]`).join(","),n=this.xShape.map((u,l)=>`uniforms.pad${l}[0] + uniforms.xShape${e>1?`[${l}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=Ut(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ue()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}},Qae={kernelName:Qa,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,i=n,o=r.map(c=>({type:"int32",data:[c[0],c[1]]})),u=new Yae(s.shape,r,a);return i.runWebGPUProgram(u,[s],s.dtype,o)}};function Zae(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[i,o]=vse(a.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}let r=new sc(s.shape,11);return n.runWebGPUProgram(r,[s],s.dtype)}var Jae={kernelName:To,backendName:"webgpu",kernelFunc:Zae};function eie(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s,l=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=ws.nonMaxSuppressionV3Impl(l,c,i,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var tie={kernelName:_o,backendName:"webgpu",kernelFunc:eie};function nie(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),d=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=ws.nonMaxSuppressionV5Impl(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var sie={kernelName:Ao,backendName:"webgpu",kernelFunc:nie};function Gd(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=rc({inputs:{input:s},backend:n}),a=Gd({inputs:{x:r},backend:n}),i=sh({inputs:{input:s},backend:n}),o=Gd({inputs:{x:i},backend:n}),u=du({inputs:{real:a,imag:o},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),u}else return hu({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var rie={kernelName:Ko,backendName:"webgpu",kernelFunc:Gd};function H2(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=rc({inputs:{input:s},backend:n}),a=H2({inputs:{x:r},backend:n}),i=sh({inputs:{input:s},backend:n}),o=Gd({inputs:{x:i},backend:n}),u=du({inputs:{real:a,imag:o},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),u}else return hu({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var aie={kernelName:Eo,backendName:"webgpu",kernelFunc:H2};function iie(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return tg({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let p=tg({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),l=P2({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeData(c.dataId)),l}var oie={kernelName:Do,backendName:"webgpu",kernelFunc:iie},uie=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Ut(e),n=this.xShape.map((c,p)=>`uniforms.pad${p}[0]`).join(","),s=this.xShape.map((c,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,i=e>1?"any(outC < start)":"outC < start",o=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ue()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${o}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${u}));
          }
        }
      }
    `}},q2=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(a.every(l=>w.arraysEqual(l,[0,0])))return Wn({inputs:{x:r},backend:n});if(w.sizeFromShape(r.shape)===0){let l=a.map((c,p)=>c[0]+r.shape[p]+c[1]);return hu({backend:n,attrs:{shape:l,value:i,dtype:r.dtype}})}let o=[{type:"float32",data:[i]}];a.map(l=>o.push({type:"int32",data:[l[0],l[1]]}));let u=new uie(r.shape,a);return n.runWebGPUProgram(u,[r],r.dtype,o)},lie={kernelName:Ja,backendName:"webgpu",kernelFunc:q2},cie=mn({opSnippet:13}),die={kernelName:ei,backendName:"webgpu",kernelFunc:cie};function pie(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new E2(14,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var hie={kernelName:ti,backendName:"webgpu",kernelFunc:pie};function fie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return ac(r,a,i,"prod",n)}var mie={kernelName:ni,backendName:"webgpu",kernelFunc:fie},gie=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=kse(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},bie={kernelName:Il,backendName:"webgpu",kernelFunc:gie},j2=mn({opSnippet:3}),yie={kernelName:Oa,backendName:"webgpu",kernelFunc:j2},vie=Kt({opType:12}),xie={kernelName:si,backendName:"webgpu",kernelFunc:vie},wie=Kt({opType:13}),kie={kernelName:ai,backendName:"webgpu",kernelFunc:wie},Sie=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Ue()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Iie(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:i,halfPixelCenters:o}=s,[u,l]=i,c=a&&u>1?1:0,p=a&&l>1?1:0,h=[{type:"float32",data:[c,p]},{type:"float32",data:[o?.5:0]}],f=new Sie(r.shape,u,l);return n.runWebGPUProgram(f,[r],"float32",h)}var Cie={kernelName:ri,backendName:"webgpu",kernelFunc:Iie},Nie=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Ue()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Tie(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=a&&u>1?1:0,p=a&&l>1?1:0,h=[{type:"float32",data:[c,p]},{type:"float32",data:[a?.5:0]}],f=new Nie(r.shape,u,l,i);return n.runWebGPUProgram(f,[r],r.dtype,h)}var $ie={kernelName:Nl,backendName:"webgpu",kernelFunc:Tie},_ie=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ue()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},Aie={kernelName:Xo,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new _ie(s.shape,a),[l,c]=C.getImageCenter(i,s.shape[1],s.shape[2]),p=[{type:"float32",data:[l]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?p.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):p.push({type:"float32",data:a}),o.runWebGPUProgram(u,[s],s.dtype,p)}},Eie=Kt({opType:15,cpuKernelImpl:Sse}),Rie={kernelName:ii,backendName:"webgpu",kernelFunc:Eie},Die=class{constructor(e,t,n,s,r,a,i){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=i,this.dispatchLayout=Be(e),this.dispatch=_e(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${i}`;let o=Ut(r.length);this.uniforms=`sliceDim : i32, strides: ${o}, size: i32,`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="",a="";this.updatesRank===1?(s="coords[0]",r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(s="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${s})`,o=this.type==="int32"?"atomicAdd(&(result[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${Ue()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${i};
          let flatIndex = getOutputIndexFromCoords(${r});

         ${o}
        }
      }`}};function Fie(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=C.calculateShapes(a,r,i),d=[p/l,l];if(p===0)return n.makeTensorInfo(i,r.dtype);let h=We({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=We({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=f.dtype,g=hu({backend:n,attrs:{shape:d,value:0,dtype:m}}),b=w.sizeFromShape(f.shape),y=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[b]}],v=new Die(f.shape,o,h.shape.length,f.shape.length,c,d,m),x=n.runWebGPUProgram(v,[f,h],m,y,g),k=We({inputs:{x},backend:n,attrs:{shape:i}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(x.dataId),k}var Oie={kernelName:zo,backendName:"webgpu",kernelFunc:Fie},Pie=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${s[i]}`),i<this.cRank&&r.push(`${s[i]}`);e=r.join(),t=a.join()}return`
      ${Ue()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function zie(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new Pie(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(i,[s,r,a],cn(r.dtype,a.dtype))}var Mie={kernelName:Mo,backendName:"webgpu",kernelFunc:zie},Lie=Kt({opType:18}),Bie={kernelName:ui,backendName:"webgpu",kernelFunc:Lie},Vie=Kt({opType:16}),Wie={kernelName:oi,backendName:"webgpu",kernelFunc:Vie},Uie=Kt({opType:17}),Gie={kernelName:Bo,backendName:"webgpu",kernelFunc:Uie},K2=mn({opSnippet:2,cpuKernelImpl:$se,supportsComplex:!0}),Hie={kernelName:hi,backendName:"webgpu",kernelFunc:K2};function qie(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=w.parseAxisParam([a],r.shape),o=G2({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=C.expandShapeToKeepDim(o.shape,i),l=We({inputs:{x:o},backend:n,attrs:{shape:u}}),c=K2({inputs:{a:r,b:l},backend:n}),p=W2({inputs:{x:c},backend:n}),d=Ov({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),h=We({inputs:{x:d},backend:n,attrs:{shape:u}}),f=j2({inputs:{a:p,b:h},backend:n});return n.disposeData(o.dataId),n.disposeData(l.dataId),n.disposeData(c.dataId),n.disposeData(p.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),f}var jie={kernelName:di,backendName:"webgpu",kernelFunc:qie},Kie=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=a.reduce((b,y)=>b*y),u=[[0,0]];u.push(...i);for(let b=1+a.length;b<r.shape.length;++b)u.push([0,0]);let l=[],c=q2({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(c.shape,a,o,!1),d=C.getPermuted(p.length,a.length,!1),h=C.getReshapedPermuted(c.shape,a,o,!1),f=We({inputs:{x:c},backend:n,attrs:{shape:p}}),m=Ks({inputs:{x:f},backend:n,attrs:{perm:d}}),g=We({inputs:{x:m},backend:n,attrs:{shape:h}});return l.push(c),l.push(f),l.push(m),l.forEach(b=>n.disposeData(b.dataId)),g},Xie={kernelName:Vo,backendName:"webgpu",kernelFunc:Kie},Yie=class{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=a,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let o=t>1;this.shaderKey=`scatter_${n}_${s}_${o}`;let u=Ut(r.length);this.uniforms=`updateSize : i32, sliceDim : i32, strides: ${u},`;let l="";n===1?l="i":n===2&&(l="i, j"),this.indicesSnippet=`getIndices(${l})`;let c="";s===1?c="i":s===2&&(c="i, coords[1]"),this.updatesSnippet=`getUpdates(${c})`,this.strideString=o?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Ue()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function Qie(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,strides:c,outputSize:p}=C.calculateShapes(a,r,o),d=!1,h=[{type:"int32",data:[l]},{type:"int32",data:[u]},{type:"int32",data:c}],f=new Yie(l,u,r.shape.length,a.shape.length,c,[p,1],d),m=n.runWebGPUProgram(f,[a,r,i],a.dtype,h),g=We({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),g}var Zie={kernelName:dp,backendName:"webgpu",kernelFunc:Qie};function Jie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=C.prepareSplitSize(r,a,o),l=r.shape.length,c=new Array(l).fill(0),p=r.shape.slice();return u.map(d=>{let h=[...p];h[o]=d;let f=pu({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[o]+=d,f})}var eoe={kernelName:Wo,backendName:"webgpu",kernelFunc:Jie},toe=Kt({opType:19}),noe={kernelName:li,backendName:"webgpu",kernelFunc:toe},soe={kernelName:El,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new sc(n.shape,20);return s.runWebGPUProgram(r,[n],n.dtype)}},roe=mn({opSnippet:11}),aoe={kernelName:pi,backendName:"webgpu",kernelFunc:roe},ioe=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Ut(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Ue()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function ooe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=wt.sliceInfo(r.shape,a,i,o,u,l,c,p,d),k;if(m)k=We({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let I=wt.computeOutShape(y,v,x),$=pu({inputs:{x:r},backend:n,attrs:{begin:y,size:I}});k=We({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeData($.dataId)}else if(n.shouldExecuteOnCPU([r])){let $=n.readSync(r.dataId),E=De(r.shape,r.dtype,$),A=Nse(h,E,x,y);k=n.makeTensorInfo(f,r.dtype,A.values)}else{let $=new ioe(h),E=[{type:"int32",data:y},{type:"int32",data:x}],A=n.runWebGPUProgram($,[r],r.dtype,E);k=We({inputs:{x:A},backend:n,attrs:{shape:f}}),n.disposeData(A.dataId)}return k}var uoe={kernelName:Uo,backendName:"webgpu",kernelFunc:ooe};function loe(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=Tse(d,h,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var coe={kernelName:pp,backendName:"webgpu",kernelFunc:loe},doe=Kt({opType:21}),poe={kernelName:fi,backendName:"webgpu",kernelFunc:doe},hoe=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=foe(this.rank,"uniforms.");return`
      ${Ue()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function foe(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function moe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let u=n.readSync(r.dataId),l=r.dtype==="string"?u.map(d=>w.decodeString(d)):u,c=De(r.shape,r.dtype,l),p=_se(c,a);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new hoe(r.shape,a);return n.runWebGPUProgram(i,[r],r.dtype)}var goe={kernelName:Cr,backendName:"webgpu",kernelFunc:moe},boe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Ue()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},yoe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Ue()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Hi(e,t){t!==null&&e.disposeData(t.dataId)}function Bw(e){let t=1;for(;t<e;)t*=2;return t}function voe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=r.shape,u=o[o.length-1];if(n.shouldExecuteOnCPU([r])){let k=n.readSync(r.dataId),[I,$]=Ase(k,o,r.dtype,a,i);return[n.makeTensorInfo(I.shape,I.dtype,I.values),n.makeTensorInfo($.shape,$.dtype,$.values)]}if(a===0)return o[o.length-1]=0,[n.makeTensorInfo(o,r.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(u===1)return[r,hu({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let c=w.sizeFromShape(o)/u,p=We({inputs:{x:r},attrs:{shape:[c,u]},backend:n}),d=Bw(a),h=Bw(u),f=null,m=()=>f===null?[p,p]:[p,f],g=(k,I,$)=>{let E=m(),A=new boe($),R=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[I]}],F=f;f=n.runWebGPUProgram(A,E,"int32",R),Hi(n,F)};for(let k=1;k<d;k*=2){let I=k*2;for(let $=k;$>=1;$/=2)g(I,$,[c,h])}for(let k=h;k>d;k/=2){let I=m(),$=new yoe([c,k/2]),A=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],P=f;f=n.runWebGPUProgram($,I,"int32",A),Hi(n,P);let R=d/2,F=R*2;for(let T=R;T>=1;T/=2)g(F,T,f.shape)}let b=f;f=pu({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,a]}}),Hi(n,b);let y=U2({inputs:{x:p,indices:f},backend:n,attrs:{axis:1,batchDims:1}});Hi(n,p);let v=o.slice(0,-1);v.push(a),b=f,f=We({inputs:{x:f},attrs:{shape:v},backend:n}),Hi(n,b);let x=y;return y=We({inputs:{x:y},attrs:{shape:v},backend:n}),Hi(n,x),[y,f]}var xoe={kernelName:Ho,backendName:"webgpu",kernelFunc:voe},woe=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ue()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function koe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,p,d,h]=r.shape,[f,m]=l!=null?l:[p,d],g=[c,f,m,h],b=new woe(g),y=i==="nearest"?1:2,v;switch(o){case"constant":v=1;break;case"reflect":v=2;break;case"wrap":v=3;break;case"nearest":v=4;break;default:v=1;break}let x=[{type:"int32",data:[y]},{type:"int32",data:[v]},{type:"float32",data:[u]}];return n.runWebGPUProgram(b,[r,a],"float32",x)}var Soe={kernelName:qo,backendName:"webgpu",kernelFunc:koe};function Ioe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r,o=i.shape.length,u=r.shape[a],l=new Array(o-1),c=0;for(let m=0;m<o;m++)m!==a&&(l[c++]=i.shape[m]);let p=[],d=new Array(o).fill(0),h=i.shape.slice();h[a]=1;let f=new Array(u);for(let m=0;m<f.length;m++){d[a]=m;let g=pu({inputs:{x:i},backend:n,attrs:{begin:d,size:h}}),b=We({inputs:{x:g},backend:n,attrs:{shape:l}});f[m]=b,p.push(g)}return p.forEach(m=>n.disposeData(m.dataId)),f}var Coe={kernelName:jo,backendName:"webgpu",kernelFunc:Ioe},Noe=[Yne,Dse,Ose,Mse,Gse,qse,Kse,Yse,tre,are,ore,dre,ese,mre,xre,Ire,Nre,$re,Ere,Dre,Ore,Mre,Bre,Hre,jre,Xre,Yre,Qre,Jre,tae,sae,lae,aae,oae,pae,fae,gae,vae,kae,Iae,Nae,Jne,hre,$ae,Aae,Rae,Fae,Pae,Mae,Lae,Vae,Uae,Hae,jae,Xae,Qae,Vre,Jae,tie,sie,nre,aie,oie,lie,die,hie,mie,bie,sre,yie,xie,kie,Kne,Cie,$ie,Aie,Rie,Oie,Mie,Bie,Wie,Gie,Jse,uoe,coe,jie,Xie,Zie,eoe,noe,soe,aoe,Hie,Ure,poe,goe,xoe,Soe,Wse,Coe,rie];for(let e of Noe)Rl(e);var Toe=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let s=Vw(e,t);if(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(s).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(s).shift();return this.usedBuffers.get(s).push(a),a}this.numBytesAllocated+=e;let r=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(s).push(r),r}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let s=Vw(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},s=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Vw(e,t){return`${e}_${t}`}var $oe=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,s){let r=Uw(n),a=e*t*r,i=Ww(e,t,n,s);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let u=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(u),u}this.numBytesAllocated+=a;let o=this.device.createTexture({size:[e,t],format:n,usage:s});return this.usedTextures.get(i).push(o),o}releaseTexture(e,t,n,s,r){if(this.freeTextures.size===0)return;let a=Ww(t,n,s,r);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),o=i.indexOf(e);if(o<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(o,1);let u=Uw(s),l=t*n*u;this.numBytesUsed-=l}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Ww(e,t,n,s){return`${e}_${t}_${n}_${s}`}function Uw(e){if(e==="rgba8unorm")return 16;throw new Error(`${e} is not supported!`)}var _oe=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((i,o)=>({binding:o,resource:i}))})},Gw=(e,t,n,s,r,a=!1)=>{let i={dtype:r.dtype,shape:r.shape},o=Fne(s,i,t,a),u=e.createShaderModule({code:o,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:u,entryPoint:"main"},label:t.constructor.name})};function Hw(e,t,n=[],s="",r=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(i=>i.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r}var Aoe=K().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),qw=(e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,s=t.dispatchLayout,r=t.dispatch;if(r.every(i=>i<=n))return r;w.assert(r[0]>n&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(r[0]));return a>n?(a=Math.ceil(Math.cbrt(r[0])),w.assert(a<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]},X2=class extends rl{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.textureDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,this.fromPixelTextureLayout=null,this.fromPixelImportTextureLayout=null,!Rv())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new Toe(this.device),this.textureManager=new $oe(this.device),this.tensorMap=new Kd(this,ds()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),K().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return X2.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.textureDisposalQueue.forEach(e=>this.textureManager.releaseTexture(e.texture,e.width,e.height,e.format,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.textureDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}getTextureManager(){return this.textureManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=w.sizeFromShape(t)*hd(n);return this.tensorMap.set(s,{dtype:n,shape:t,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=w.sizeFromShape(n)*hd(s);this.tensorMap.set(e,{dtype:s,shape:n,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let n=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),K().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],i=r[1];s=C.mergeRealAndImagArrays(a,i)}else{let r=t.values!=null?t.values:await this.getBufferData(t.bufferInfo.buffer,t.bufferInfo.byteSize);s=_2(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}readToGPU(e,t={}){let n=this.tensorMap.get(e),{values:s,dtype:r,shape:a,bufferInfo:i}=n;if(r==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i.buffer==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let o=w.sizeFromShape(a)*hd(r);t.customBufSize!=null&&w.assert(t.customBufSize>=o,()=>`customBufSize should be equal or larger than the source tensor size ${o} bytes.`);let u=t.customBufSize!=null?t.customBufSize:o,l=this.acquireBuffer(u);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(i.buffer,0,l,0,o),this.submitQueue();let c=this.makeTensorInfo(a,r),p=ds().makeTensorFromTensorInfo(c),d=this.tensorMap.get(c.dataId);return d.bufferInfo.buffer=l,d.bufferInfo.byteSize=u,{tensorRef:p,buffer:l,bufSize:u}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return De(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=w.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(r);return i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),s=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(s).set(t.values):new Float32Array(s).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let r={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(r)}}makeUniforms(e){let t=0,n=0,s=[];e.forEach(o=>{o.data.length===0&&(o.data=[1]);let u;switch(o.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:w.assert(!1,()=>`Unsupported ${o.data.length}D shape`)}(n===5||n===6)&&(u=16),t=Math.ceil(t/u)*u,n=o.data.length,s.push(t),t+=o.data.length*4});let r=new ArrayBuffer(t);e.forEach((o,u)=>{let l=s[u];o.type==="int32"?new Int32Array(r,l,o.data.length).set(o.data):o.type==="uint32"?new Uint32Array(r,l,o.data.length).set(o.data):new Float32Array(r,l,o.data.length).set(o.data)});let a=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(a,0,r,0,t);let i={byteSize:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:a};return this.uniformDisposalQueue.push(i),{offset:0,size:t,buffer:a}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),w.sizeFromShape(r.shape)===0){let I=this.tensorMap.get(r.dataId);return I.values=w.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}e.dispatch=qw(this.device,e);let a=[{type:"float32",data:[NaN]}],i=t.concat(r).map(I=>I.shape),o="int32";i.map(I=>{a.push({type:o,data:I})});let u=w.computeStrides(r.shape);if(a.push({type:o,data:u}),e.size){let I=w.sizeFromShape(e.outputShape);a.push({type:o,data:[e.isVec4?I/4:I]})}s&&(a=[...a,...s]);let l=this.makeUniforms(a),c=t.map((I,$)=>{if(I.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(I.dataId),{dtype:this.tensorMap.get(I.dataId).dtype,shape:I.shape,name:e.variableNames[$]}}),p=c.map(I=>I.dtype).concat(r.dtype),d=c.map(I=>C.getBroadcastDims(I.shape,r.shape)),h=c.map(I=>w.arraysEqual(I.shape,r.shape)).join("_"),f=d.map(I=>I.join("_")).join(";"),m=Hw(e,i,p,f,h),{bindGroupLayout:g,pipelineLayout:b}=this.getCachedOrCreateLayout(e.variableNames.length),y=this.getAndSavePipeline(m,()=>Gw(this.device,e,b,c,r)),v=this.activeTimers!=null,x=_oe(this.device,g,t.map(I=>this.tensorToBinding(I)),this.tensorToBinding(r),l);this.ensureCommandEncoderReady();let k=this.getComputePass();return v&&this.supportTimeQuery&&k.writeTimestamp(this.querySet,0),k.setPipeline(y),k.setBindGroup(0,x),k.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),v&&this.supportTimeQuery&&k.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(I=>{this.commandQueueOwnedIds.add(I.dataId)}),this.commandQueueOwnedIds.add(r.dataId),K().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),v&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}getFromPixelTextureLayout(e){return e?(this.fromPixelImportTextureLayout===null&&(this.fromPixelImportTextureLayout=this.createFromPixelTextureLayout(!0)),this.fromPixelImportTextureLayout):(this.fromPixelTextureLayout===null&&(this.fromPixelTextureLayout=this.createFromPixelTextureLayout(!1)),this.fromPixelTextureLayout)}createFromPixelTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),e?t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}):t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}copyExternalImageToTexture(e,t){let n=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,s="rgba8unorm",r=this.textureManager.acquireTexture(t[1],t[0],s,n),a=r.createView();this.queue.copyExternalImageToTexture({source:e},{texture:r},[t[1],t[0]]);let i={width:t[1],height:t[0],format:s,usage:n,texture:r};return this.textureDisposalQueue.push(i),a}runFromPixelsProgram(e,t,n,s,r){e.dispatch=qw(this.device,e);let a=this.makeTensorInfo(t,"int32");if(w.sizeFromShape(a.shape)===0){let m=this.tensorMap.get(a.dataId);return m.values=w.getTypedArrayFromDType(a.dtype,0),a}this.uploadToGPU(a.dataId);let i=Hw(e,[a.shape]),o=this.getFromPixelTextureLayout(s),u=this.getAndSavePipeline(i,()=>Gw(this.device,e,o.pipelineLayout,[],a,!0)),l;if(s){let m={source:r};l=this.device.importExternalTexture(m)}else l=this.copyExternalImageToTexture(r,a.shape);let c=this.tensorToBinding(a),p=this.makeUniforms(n),d=this.device.createBindGroup({layout:o.bindGroupLayout,entries:[{binding:0,resource:{buffer:c.buffer}},{binding:1,resource:l},{binding:2,resource:{buffer:p.buffer}}]});this.ensureCommandEncoderReady();let h=this.getComputePass(),f=this.activeTimers!=null;return f&&this.supportTimeQuery&&h.writeTimestamp(this.querySet,0),h.setPipeline(u),h.setBindGroup(0,d),h.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),f&&this.supportTimeQuery&&h.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(a.dataId),this.dispatchNumberInEncoder++,K().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),f&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=Aoe){return K().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&w.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},Pv=X2;Pv.nextDataId=0;var Eoe={};Ae(Eoe,{WebGPUBackend:()=>Pv,webgpu_util:()=>T2});Rv()&&bp("webgpu",async()=>{K().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:K().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,s={},r=t.features.has("timestamp-query");s.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension},r?s.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let a=await t.requestDevice(s);return new Pv(a,r)},3);var St=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(St||{}),rh=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(rh||{}),Y2;function Roe(e){Y2=e.wasm.cwrap(aa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Doe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=s,d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(i!=null){let E=n.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=o==null?0:n.dataIdMap.get(o.dataId).id,g=rh[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let b=u?r.shape[2]:r.shape[1],y=l?a.shape[1]:a.shape[2],v=bi.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),x=n.makeOutput([...v,b,y],r.dtype),k=n.dataIdMap.get(x.dataId).id,I=new Uint8Array(new Int32Array(r.shape).buffer),$=new Uint8Array(new Int32Array(a.shape).buffer);return Y2(d,I,r.shape.length,h,$,a.shape.length,u,l,g,f,m,p||0,k),x}var Foe={kernelName:aa,backendName:"wasm",setupFunc:Roe,kernelFunc:Doe};function Xt(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:i,inputs:{x:o}}=a,u=i.dataIdMap.get(o.dataId).id,l=i.makeOutput(o.shape,t||o.dtype),c=i.dataIdMap.get(l.dataId).id;return w.sizeFromShape(l.shape)===0||n(u,St[o.dtype],c),l}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var Ooe=Xt(co);function gn(e,t,n){let s;function r(i){s=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(i){let{backend:o,inputs:u}=i,{a:l,b:c}=u,p=o.dataIdMap.get(l.dataId).id,d=o.dataIdMap.get(c.dataId).id,h=n!=null?n:l.dtype,f=C.assertAndGetBroadcastShape(l.shape,c.shape),m=o.makeOutput(f,h);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(l.shape).buffer),b=new Uint8Array(new Int32Array(c.shape).buffer),y=o.dataIdMap.get(m.dataId).id;return(()=>s(p,g,l.shape.length,d,b,c.shape.length,St[l.dtype],y))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var Poe=!0,zoe=gn(Sr,Poe),Q2;function Moe(e){Q2=e.wasm.cwrap(Sa,null,["array","number","number","number"])}function Loe(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(s.shape)===0)return s;let r=t.map(o=>n.dataIdMap.get(o.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(s.dataId).id;return Q2(a,r.length,St[s.dtype],i),s}var Boe={kernelName:Sa,backendName:"wasm",setupFunc:Moe,kernelFunc:Loe};function ah(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var Voe={kernelName:Wa,backendName:"wasm",kernelFunc:ah},Z2;function Woe(e){Z2=e.wasm.cwrap(mi,null,["number","array","number","number","number","array","number"])}function wr(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=Goe(t.x.shape,s.perm),i=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(i=!1);let o=Uoe(t.x.shape,s.perm),u={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let f=ah({inputs:t,backend:n});return f.shape=o,f}let l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(u.shape).buffer);return Z2(c,h,u.shape.length,St[u.dtype],p,d,a.length),l}function Uoe(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function Goe(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let i=0;i<s.length;++i)s[i]>=r&&(a===-1||s[a]>s[i])&&(a=i);s[a]=r}return[n,s]}var Hoe={kernelName:mi,backendName:"wasm",kernelFunc:wr,setupFunc:Woe};function Or(e,t,n){let s=e.shape,r=e.shape.length,a=w.parseAxisParam(t,s),i=a,o=C.getAxesPermutation(i,r),u=null,l=!1;if(o!=null){let c=new Array(r);for(let h=0;h<c.length;h++)c[h]=s[o[h]];i=C.getInnerMostAxes(i.length,r),u=wr({inputs:{x:e},attrs:{perm:o},backend:n});let p=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==p&&(l=!0)}return{transposed:u,originalAxes:a,axes:i,inputWasTransposed:l}}var J2;function qoe(e){J2=e.wasm.cwrap(ol,null,["number, number, number"])}function joe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Or(i,r,t);if(h){let v=t.dataIdMap.get(c.dataId).id;l=c,u=v}let f=l.shape.length;C.assertAxesAreInnerMostDims("all",p,f);let[m,g]=C.computeOutAndReduceShapes(l.shape,p),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;J2(u,b,v)}if(h&&t.disposeData(c.dataId),a){let v=C.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var Koe={kernelName:ol,backendName:"wasm",setupFunc:qoe,kernelFunc:joe},eN;function Xoe(e){eN=e.wasm.cwrap(ul,null,["number, number, number"])}function Yoe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Or(i,r,t);if(h){let v=t.dataIdMap.get(c.dataId).id;l=c,u=v}let f=l.shape.length;C.assertAxesAreInnerMostDims("any",p,f);let[m,g]=C.computeOutAndReduceShapes(l.shape,p),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;eN(u,b,v)}if(h&&t.disposeData(c.dataId),a){let v=C.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var Qoe={kernelName:ul,backendName:"wasm",setupFunc:Xoe,kernelFunc:Yoe},tN;function Zoe(e){tN=e.wasm.cwrap(Ia,null,["number","number","number","number","number"])}function Joe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,i=t.dataIdMap.get(a.dataId).id,o=i,u=a,{transposed:l,axes:c,inputWasTransposed:p}=Or(a,r,t);if(p){let b=t.dataIdMap.get(l.dataId).id;b!==i&&(u=l,o=b)}let d=u.shape.slice(0,-1),h=t.makeOutput(d,"int32"),f=t.dataIdMap.get(h.dataId).id,m=w.sizeFromShape(h.shape),g=u.shape[c[0]];return tN(o,St[u.dtype],m,g,f),p&&t.disposeData(l.dataId),h}var eue={kernelName:Ia,backendName:"wasm",kernelFunc:Joe,setupFunc:Zoe},nN;function tue(e){nN=e.wasm.cwrap(Ca,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function nue(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=C.computePool2DInfo(r.shape,i,o,1,u,l),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,b=c.strideHeight,y=c.strideWidth,v=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let x=s.makeOutput(c.outShape,"float32"),k=s.dataIdMap.get(x.dataId).id;return nN(a,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,b,y,v,k),x}var sue={kernelName:Ca,backendName:"wasm",setupFunc:tue,kernelFunc:nue};function yn(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),i=w.inferFromImplicitShape(r,a);return w.assert(a===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}var rue={kernelName:Fo,backendName:"wasm",kernelFunc:yn},sN;function aue(e){sN=e.wasm.cwrap(Na,null,["number","array","number","number","array","number","number","number","number"])}function iue(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=r.shape.length,l=a.shape.length,c=i?r.shape[u-2]:r.shape[u-1],p=o?a.shape[l-1]:a.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],h=o?a.shape[l-2]:a.shape[l-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),v=bi.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);w.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,c,d]:[g,d,c],k=o?[b,h,p]:[b,p,h],I=yn({inputs:{x:r},backend:n,attrs:{shape:x}}),$=yn({inputs:{x:a},backend:n,attrs:{shape:k}}),E=n.dataIdMap.get(I.dataId).id,A=n.dataIdMap.get($.dataId).id,P=i?I.shape[2]:I.shape[1],R=o?$.shape[1]:$.shape[2],F=Math.max(g,b),T=n.makeOutput([F,P,R],I.dtype),z=n.dataIdMap.get(T.dataId).id,W=new Uint8Array(new Int32Array(I.shape).buffer),j=new Uint8Array(new Int32Array($.shape).buffer);return sN(E,W,I.shape.length,A,j,$.shape.length,i,o,z),n.disposeData(I.dataId),n.disposeData($.dataId),T.shape=v,T}var oue={kernelName:Na,backendName:"wasm",setupFunc:aue,kernelFunc:iue};function xa(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,i]=wt.parseSliceParams(t,n,s),o=wt.isSliceContinous(t.shape,a,i),u=r.readSync(t.dataId),l=r.makeOutput(i,t.dtype),c=w.computeStrides(t.shape),p=r.dataIdMap.get(l.dataId);if(o){let f=wt.computeFlatOffset(a,c);return t.dtype==="string"?p.stringBytes=u.slice(f,f+w.sizeFromShape(i)):r.typedArrayFromHeap(l).set(u.subarray(f,f+w.sizeFromShape(i))),l}if(t.dtype==="string"){let f=Ld(u,a,i,t.shape,t.dtype);return p.stringBytes=f,l}let d=r.typedArrayFromHeap(l),h=t.shape.length;if(h===2)uue(u,c[0],d,a,i);else if(h===3)lue(u,c[0],c[1],d,a,i);else if(h===4)cue(u,c[0],c[1],c[2],d,a,i);else{let f=Ld(u,a,i,t.shape,t.dtype);d.set(f)}return l}function uue(e,t,n,s,r){let a=0,i=s[0],o=s[1],u=i+r[0];for(let l=i;l<u;l++){let c=l*t+o;n.set(e.subarray(c,c+r[1]),a),a+=r[1]}}function lue(e,t,n,s,r,a){let i=0,o=r[0],u=r[1],l=r[2],c=o+a[0],p=u+a[1];for(let d=o;d<c;d++)for(let h=u;h<p;h++){let f=d*t+h*n+l;s.set(e.subarray(f,f+a[2]),i),i+=a[2]}}function cue(e,t,n,s,r,a,i){let o=0,u=a[0],l=a[1],c=a[2],p=u+i[0],d=l+i[1],h=c+i[2],f=a[3];for(let m=u;m<p;m++)for(let g=l;g<d;g++)for(let b=c;b<h;b++){let y=m*t+g*n+b*s+f;r.set(e.subarray(y,y+i[3]),o),o+=i[3]}}var due={kernelName:Lo,backendName:"wasm",kernelFunc:xa};function pue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s,o=a.reduce((b,y)=>b*y),u=C.getReshaped(r.shape,a,o),l=C.getPermuted(u.length,a.length),c=C.getReshapedPermuted(r.shape,a,o),p=C.getSliceBeginCoords(i,a.length),d=C.getSliceSize(c,i,a.length),h=yn({inputs:{x:r},backend:n,attrs:{shape:u}}),f=wr({inputs:{x:h},backend:n,attrs:{perm:l}}),m=yn({inputs:{x:f},backend:n,attrs:{shape:c}}),g=xa({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var hue={kernelName:po,backendName:"wasm",kernelFunc:pue};function ic(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var fue={kernelName:Ta,backendName:"wasm",kernelFunc:ic},mue=Xt($a),rN;function gue(e){rN=e.wasm.cwrap(Ir,null,["number","number","number","number"])}function bue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o=n.dataIdMap.get(r.dataId).id,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(u.dataId).id;return rN(o,a,i,l),u}var yue={kernelName:Ir,backendName:"wasm",setupFunc:gue,kernelFunc:bue};function aN(e){let{inputs:t,backend:n}=e,s=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=C.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>w.sizeFromShape(h.shape)>0);if(a.length===1)return ah({inputs:{x:a[0]},backend:n});let i=n.makeOutput(r,t[0].dtype);if(w.sizeFromShape(r)===0)return i;let o=a.map(h=>h.shape);if(C.assertParamsConsistent(o,s),a[0].dtype==="string"){let h=a.map(v=>{let x=w.sizeFromShape(v.shape.slice(s));return yn({inputs:{x:v},backend:n,attrs:{shape:[-1,x]}})}),f=h.map(v=>({vals:n.readSync(v.dataId),shape:v.shape}));r=C.computeOutShape(h.map(v=>v.shape),1);let m=h[0].shape[0]===1,g=iv(f,r,t[0].dtype,m),b=C.computeOutShape(a.map(v=>v.shape),s);i.shape=b;let y=n.dataIdMap.get(i.dataId);return y.stringBytes=C.fromStringArrayToUint8(g),h.forEach(v=>n.disposeData(v.dataId)),i}let u=w.sizeFromShape(a[0].shape.slice(0,s)),l=0,c=a.map(h=>{let f=w.sizeFromShape(h.shape.slice(s));return l+=f,f}),p=a.map(h=>n.typedArrayFromHeap(h)),d=n.typedArrayFromHeap(i);for(let h=0;h<u;h++){let f=h*l;for(let m=0;m<p.length;m++){let g=c[m],b=h*g,y=p[m].subarray(b,b+g);d.set(y,f),f+=g}}return i}var vue={kernelName:ho,backendName:"wasm",kernelFunc:aN},iN;function xue(e){iN=e.wasm.cwrap(_a,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wue(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,i=s.dataIdMap.get(r.dataId).id,o=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:p,dataFormat:d}=n,h=C.convertConv2DDataFormat(d),f=C.computeConv2DInfo(r.shape,a.shape,u,l,c,p,!1,h),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,y=f.padInfo.right,v=f.padInfo.bottom,x=f.padInfo.left,k=f.dilationHeight,I=f.dilationWidth,$=f.strideHeight,E=f.strideWidth,A=f.inChannels,P=f.outChannels,R=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let F=s.makeOutput(f.outShape,"float32"),T=s.dataIdMap.get(F.dataId).id;return iN(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,b,y,v,x,R,k,I,$,E,A,P,T),F}var kue={kernelName:_a,backendName:"wasm",setupFunc:xue,kernelFunc:wue},oN;function Sue(e){oN=e.wasm.cwrap(Aa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Iue(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=s,p=1,d=C.convertConv2DDataFormat(u),h=C.computeConv2DInfo(c,a.shape,i,p,o,l,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:y,inWidth:v,outChannels:x,outHeight:k,outWidth:I,strideHeight:$,strideWidth:E}=h,A=m-1-h.padInfo.top,P=g-1-h.padInfo.left,R=h.dataFormat==="channelsLast",F=w.computeStrides(h.inShape),T=w.computeStrides(r.shape),[z,W,j]=w.computeStrides(a.shape),X=F[0],Y=R?F[1]:F[2],Z=R?F[2]:1,te=R?1:F[1],J=T[0],se=R?T[1]:T[2],ne=R?T[2]:1,oe=R?1:T[1],ae=t.makeOutput(h.inShape,"float32"),de=t.dataIdMap.get(ae.dataId).id,me=t.dataIdMap.get(r.dataId).id,ke=t.dataIdMap.get(a.dataId).id;return oN(me,ke,f,m,g,y,v,b,k,I,x,$,E,A,P,z,W,j,X,Y,Z,te,J,se,ne,oe,de),ae}var Cue={kernelName:Aa,backendName:"wasm",setupFunc:Sue,kernelFunc:Iue},Nue=Xt(Ea),Tue=Xt(Ra),uN=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(uN||{}),lN;function $ue(e){lN=e.wasm.cwrap(mo,null,["number","number","number","number","array","number","number","number","number","number"])}function _ue(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:i}=s,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[p,d]=i,h=[c,p,d,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=ic({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,b=t.dataIdMap.get(u.dataId).id,y=t.dataIdMap.get(l.dataId).id,v=t.makeOutput(h,"float32"),x=t.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(o.shape).buffer);return lN(g,b,y,c,k,p,d,uN[r],a,x),m!=null&&t.disposeData(m.dataId),v}var Aue={kernelName:mo,backendName:"wasm",setupFunc:$ue,kernelFunc:_ue},cN;function Eue(e){cN=e.wasm.cwrap(fo,null,["number","number","number","number","number","number"])}function Rue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,u=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);let l=C.getAxesPermutation([a],u),c=r;l!==null&&(c=wr({inputs:{x:r},attrs:{perm:l},backend:n}));let p=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumprod",[p],u);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;cN(f,i?1:0,o?1:0,h,m,St[r.dtype]);let g=d;if(l!==null){let b=C.getUndoAxesPermutation(l);g=wr({inputs:{x:d},attrs:{perm:b},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var Due={kernelName:fo,backendName:"wasm",setupFunc:Eue,kernelFunc:Rue},dN;function Fue(e){dN=e.wasm.cwrap(Da,null,["number","number","number","number","number","number"])}function Oue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,u=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let l=C.getAxesPermutation([a],u),c=r;l!==null&&(c=wr({inputs:{x:r},attrs:{perm:l},backend:n}));let p=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumsum",[p],u);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;dN(f,i?1:0,o?1:0,h,m,St[r.dtype]);let g=d;if(l!==null){let b=C.getUndoAxesPermutation(l);g=wr({inputs:{x:d},attrs:{perm:b},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var Pue={kernelName:Da,backendName:"wasm",setupFunc:Fue,kernelFunc:Oue},pN;function zue(e){pN=e.wasm.cwrap(go,null,["number","number","number","array","number","array","array","number","number"])}function Mue(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],p=u*a,d=l*a,h=c/(a*a),f=i==="NHWC"?[o,p,d,h]:[o,h,p,d],m=t.makeOutput(f,"float32"),b=t.dataIdMap.get(r.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),v=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),k=t.dataIdMap.get(m.dataId).id;return pN(b,a,i==="NHWC"?1:0,y,r.shape.length-1,v,x,f.length,k),m}var Lue={kernelName:go,backendName:"wasm",setupFunc:zue,kernelFunc:Mue},hN;function Bue(e){hN=e.wasm.cwrap(Fa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vue(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,i=s.dataIdMap.get(r.dataId).id,o=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:p}=n,d=l==null?[1,1]:l,h=C.computeConv2DInfo(r.shape,a.shape,u,d,c,p,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,b=h.padInfo.right,y=h.padInfo.bottom,v=h.padInfo.left,x=h.dilationHeight,k=h.dilationWidth,I=h.strideHeight,$=h.strideWidth,E=h.inChannels,A=h.outChannels,P=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let R=s.makeOutput(h.outShape,"float32"),F=s.dataIdMap.get(R.dataId).id;return hN(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,b,y,v,P,x,k,I,$,E,A,F),R}var Wue={kernelName:Fa,backendName:"wasm",setupFunc:Bue,kernelFunc:Vue},Uue=Xt(Pa),Gue=!1,Hue=gn(bo,Gue,"bool"),que=Xt(za,"float32");function ng(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,i=r.shape.length,o=r.shape.slice(),u=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),yn({inputs:{x:r},backend:s,attrs:{shape:o}})}var jue={kernelName:yo,backendName:"wasm",kernelFunc:ng};function fN(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var Kue={kernelName:gl,backendName:"wasm",kernelFunc:fN},mN;function Xue(e){mN=e.wasm.cwrap(xo,null,["number","number","number","number","number","number"])}function Yue(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,u,l,c]=s.shape;return mN(a,o,u,l,c,i),r}var Que={kernelName:xo,backendName:"wasm",kernelFunc:Yue,setupFunc:Xue},Zue=Xt(Ma),Jue=!1,ele=gn(La,Jue),gN;function tle(e){gN=e.wasm.cwrap(Ba,null,["number","number","number","number","number","number","number"])}function nle(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,h=u!=null?t.dataIdMap.get(u.dataId).id:0,f=l!=null?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return gN(c,p,d,h,f,r,g),m}var sle={kernelName:Ba,backendName:"wasm",setupFunc:tle,kernelFunc:nle},bN;function rle(e){bN=e.wasm.cwrap(ia,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ale(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=C.computeConv2DInfo(r.shape,a.shape,u,c,l,d),g=rh[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let b=s.dataIdMap.get(r.dataId).id,y=s.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(i!=null){let ne=s.dataIdMap.get(i.dataId);if(ne.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ne.shape.length}.`);if(ne.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${ne.shape}) does not match the number of output channels (${v})`);x=ne.id}let k=m.filterHeight,I=m.filterWidth,$=m.padInfo.top,E=m.padInfo.right,A=m.padInfo.bottom,P=m.padInfo.left,R=m.dilationHeight,F=m.dilationWidth,T=m.strideHeight,z=m.strideWidth,W=m.inChannels,j=m.padInfo.type==="SAME"?1:0,X=m.batchSize,Y=m.inHeight,Z=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let te=s.makeOutput(m.outShape,"float32"),J=s.dataIdMap.get(te.dataId).id,se=o==null?0:s.dataIdMap.get(o.dataId).id;return bN(b,X,Y,Z,y,k,I,x,$,E,A,P,j,R,F,T,z,W,v,g,se,f||0,J),te}var ile={kernelName:ia,backendName:"wasm",setupFunc:rle,kernelFunc:ale},yN;function ole(e){yN=e.wasm.cwrap(oa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ule(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=C.computeConv2DInfo(r.shape,a.shape,u,c,l,d,!0),g=rh[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=s.dataIdMap.get(r.dataId).id,y=s.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(i!=null){let ne=s.dataIdMap.get(i.dataId);if(ne.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ne.shape.length}.`);if(ne.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${ne.shape}) does not match the number of output channels (${v})`);x=ne.id}let k=m.filterHeight,I=m.filterWidth,$=m.padInfo.top,E=m.padInfo.right,A=m.padInfo.bottom,P=m.padInfo.left,R=m.dilationHeight,F=m.dilationWidth,T=m.strideHeight,z=m.strideWidth,W=m.inChannels,j=m.padInfo.type==="SAME"?1:0,X=m.batchSize,Y=m.inHeight,Z=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let te=s.makeOutput(m.outShape,"float32"),J=s.dataIdMap.get(te.dataId).id,se=o==null?0:s.dataIdMap.get(o.dataId).id;return yN(b,X,Y,Z,y,k,I,x,$,E,A,P,j,R,F,T,z,W,v,g,se,f||0,J),te}var lle={kernelName:oa,backendName:"wasm",setupFunc:ole,kernelFunc:ule},vN;function cle(e){vN=e.wasm.cwrap(ko,null,["number","number","number","number","number","number","array","number"])}function dle(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,i,o,u]=Pk.prepareAndValidate(s,r),l=t.makeOutput(a,s.dtype);if(i===0)return l;let c=r.shape,p=c[c.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),b=t.dataIdMap.get(l.dataId).id;return vN(h,St[s.dtype],m,i,p,o,g,b),l}var ple={kernelName:ko,backendName:"wasm",setupFunc:cle,kernelFunc:dle},xN;function hle(e){xN=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function fle(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0],l=t.readSync(a.dataId),c=r.shape[u];for(let A=0;A<l.length;++A){let P=l[A];w.assert(P<=c-1&&P>=0,()=>`GatherV2: the index value ${P} is not in [0, ${c-1}]`)}let p=C.segment_util.collectGatherOpShapeInfo(r,a,u,o),d=yn({inputs:{x:r},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),h=w.sizeFromShape(a.shape),f=yn({inputs:{x:a},attrs:{shape:[p.batchSize,h/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],g=t.makeOutput(m,r.dtype);if(w.sizeFromShape(r.shape)===0)return g;let b=d.shape.length-1,v=t.dataIdMap.get(d.dataId).id,k=t.dataIdMap.get(f.dataId).id,I=t.dataIdMap.get(g.dataId).id,$=new Uint8Array(new Int32Array(w.computeStrides(d.shape)).buffer),E=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return xN(v,St[r.dtype],$,b,k,p.batchSize,E,I),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}var mle={kernelName:wo,backendName:"wasm",setupFunc:hle,kernelFunc:fle},gle=!1,ble=gn(So,gle,"bool"),yle=!1,vle=gn(Va,yle,"bool"),wN;function xle(e){wN=e.wasm.cwrap(Ua,null,["number","number","number","number"])}function wle(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let i=s.dataIdMap.get(a.dataId).id;wN(r,St[t.dtype],n,i)}return a}var kle={kernelName:Ua,backendName:"wasm",setupFunc:xle,kernelFunc:wle},Sle=!1,Ile=gn(Io,Sle,"bool"),Cle=!1,Nle=gn(Co,Cle,"bool"),Tle=Xt(Ga),$le=!1,_le=gn(No,$le,"bool"),kN;function Ale(e){kN=e.wasm.cwrap(Ha,null,["number","number","number","number"])}function Ele(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Or(i,r,t);if(h){let v=t.dataIdMap.get(c.dataId).id;l=c,u=v}let f=l.shape.length;C.assertAxesAreInnerMostDims("max",p,f);let[m,g]=C.computeOutAndReduceShapes(l.shape,p),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;kN(u,St[i.dtype],b,v)}if(h&&t.disposeData(c.dataId),a){let v=C.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var Rle={kernelName:Ha,backendName:"wasm",setupFunc:Ale,kernelFunc:Ele},Dle=!1,Fle=gn(qa,Dle),SN;function Ole(e){SN=e.wasm.cwrap(ja,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ple(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;w.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=C.computePool2DInfo(r.shape,i,o,1,u,l),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,b=c.dilationHeight,y=c.dilationWidth,v=c.strideHeight,x=c.strideWidth,k=c.inChannels,I=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let $=s.makeOutput(c.outShape,"float32"),E=s.dataIdMap.get($.dataId).id;return SN(a,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,b,y,v,x,k,I,E),$}var zle={kernelName:ja,backendName:"wasm",setupFunc:Ole,kernelFunc:Ple},IN;function Mle(e){IN=e.wasm.cwrap(Ka,null,["number, number, number"])}function Lle(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Or(i,r,t),f=p;if(h){let x=t.dataIdMap.get(c.dataId).id;x!==o&&(l=c,u=x,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("mean",f,l.shape.length);let[m,g]=C.computeOutAndReduceShapes(l.shape,f),b=w.sizeFromShape(g),y=l;l.dtype!=="float32"&&(y=ic({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(y.dataId).id);let v=t.makeOutput(m,"float32");if(w.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(v.dataId).id;IN(u,b,x)}if(h&&t.disposeData(c.dataId),a){let x=C.expandShapeToKeepDim(v.shape,d);v.shape=x}return l.dtype!=="float32"&&t.disposeData(y.dataId),v}var Ble={kernelName:Ka,backendName:"wasm",setupFunc:Mle,kernelFunc:Lle},CN;function Vle(e){CN=e.wasm.cwrap(Xa,null,["number","number","number","number"])}function Wle(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Or(i,r,t);if(h){let v=t.dataIdMap.get(c.dataId).id;v!==o&&(l=c,u=v)}let f=l.shape.length;C.assertAxesAreInnerMostDims("min",p,f);let[m,g]=C.computeOutAndReduceShapes(l.shape,p),b=w.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;CN(u,St[i.dtype],b,v)}if(h&&t.disposeData(c.dataId),a){let v=C.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var Ule={kernelName:Xa,backendName:"wasm",setupFunc:Vle,kernelFunc:Wle},Gle=!1,Hle=gn(Ya,Gle),NN=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(NN||{}),TN;function qle(e){TN=e.wasm.cwrap(Qa,null,["number","array","number","number","array","array","number","number"])}function jle(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=s.map(f=>f[0]),p=s.map(f=>f[1]),d=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(p).buffer);return TN(i,l,t.shape.length,St[t.dtype],d,h,NN[r],u),o}var Kle={kernelName:Qa,backendName:"wasm",kernelFunc:jle,setupFunc:qle},Xle=!0,Yle=gn(Za,Xle),Qle=Xt(To);function zv(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:i}}var $N;function Zle(e){$N=e.wasm.cwrap(_o,"number",["number","number","number","number","number"])}function Jle(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i}=s,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=$N(l,c,a,r,i),{pSelectedIndices:d,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=zv(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",d)}var ece={kernelName:_o,backendName:"wasm",setupFunc:Zle,kernelFunc:Jle},_N;function tce(e){_N=e.wasm.cwrap(Sl,"number",["number","number","number","number","number","bool"])}function nce(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i,padToMaxOutputSize:o}=s,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,d=_N(c,p,a,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=zv(t,d);t.wasm._free(m);let b=t.makeOutput([f],"int32",h),y=t.makeOutput([],"int32",g);return[b,y]}var sce={kernelName:Sl,backendName:"wasm",setupFunc:tce,kernelFunc:nce},AN;function rce(e){AN=e.wasm.cwrap(Ao,"number",["number","number","number","number","number","number"])}function ace(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i,softNmsSigma:o}=s,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,d=AN(c,p,a,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=zv(t,d);t.wasm._free(g);let b=t.makeOutput([f],"int32",h),y=t.makeOutput([f],"float32",m);return[b,y]}var ice={kernelName:Ao,backendName:"wasm",setupFunc:rce,kernelFunc:ace},oce=!1,uce=gn($o,oce,"bool"),EN;function lce(e){EN=e.wasm.cwrap(Ro,null,["number","number","number","number","number"])}function cce(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,u=n.makeOutput([...r.shape,a],"int32"),l=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(r.dataId).id;return EN(p,a,i,o,l),u}var dce={kernelName:Ro,backendName:"wasm",setupFunc:lce,kernelFunc:cce};function pce(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var hce={kernelName:Eo,backendName:"wasm",kernelFunc:pce};function fce(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return ng({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let p=ng({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),l=aN({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeData(c.dataId)),l}var mce={kernelName:Do,backendName:"wasm",kernelFunc:fce},RN;function gce(e){RN=e.wasm.cwrap(Ja,null,["number","array","number","number","array","array","number","number"])}function bce(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(w.sizeFromShape(t.shape)===0)return fN({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),p=s.map(m=>m[0]),d=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(p).buffer),f=new Uint8Array(new Int32Array(d).buffer);return RN(i,c,t.shape.length,St[t.dtype],h,f,r,l),o}var DN={kernelName:Ja,backendName:"wasm",kernelFunc:bce,setupFunc:gce},yce=!1,vce=gn(ei,yce),FN;function xce(e){FN=e.wasm.cwrap(ti,null,["number","number","number"])}function wce(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,o=a,u=s,l=u;u.dtype!=="float32"&&(l=ic({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);let c=n.makeOutput(s.shape,"float32"),p=n.dataIdMap.get(c.dataId).id;return FN(o,i,p),u.dtype!=="float32"&&n.disposeData(l.dataId),c}var kce={kernelName:ti,backendName:"wasm",setupFunc:xce,kernelFunc:wce},ON;function Sce(e){ON=e.wasm.cwrap(ni,null,["number","number","number","number"])}function Ice(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Or(i,r,t),f=p;if(h){let v=t.dataIdMap.get(c.dataId).id;v!==o&&(l=c,u=v,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("prod",f,l.shape.length);let[m,g]=C.computeOutAndReduceShapes(l.shape,f),b=w.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;ON(u,b,St[y.dtype],v)}if(h&&t.disposeData(c.dataId),a){let v=C.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var Cce={kernelName:ni,backendName:"wasm",setupFunc:Sce,kernelFunc:Ice},Nce=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=lv(s,r,a,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u},Tce={kernelName:Il,backendName:"wasm",kernelFunc:Nce},$ce=!0,_ce=gn(Oa,$ce),Ace=Xt(si),Ece=Xt(ai),PN;function Rce(e){PN=e.wasm.cwrap(ri,null,["number","number","number","number","number","number","number","number","number","number"])}function Dce(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,[c,p,d,h]=r.shape,f=[c,u,l,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=ic({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let b=m.id,y=t.makeOutput(f,"float32");if(w.sizeFromShape(r.shape)===0)return y;let v=t.dataIdMap.get(y.dataId).id;return PN(b,c,p,d,h,u,l,a?1:0,i?1:0,v),g!=null&&t.disposeData(g.dataId),y}var Fce={kernelName:ri,backendName:"wasm",setupFunc:Rce,kernelFunc:Dce},zN;function Oce(e){zN=e.wasm.cwrap(Oo,null,["number","array","number","array","number","number"])}function Pce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=w.parseAxisParam(a,r.shape);if(r.shape.length===0)return ah({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);zN(u,c,i.length,p,r.shape.length,l);let d=yn({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),d}var zce={kernelName:Oo,backendName:"wasm",kernelFunc:Pce,setupFunc:Oce},MN;function Mce(e){MN=e.wasm.cwrap(Xo,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Lce(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:i,center:o}=s,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(u.dataId).id,[p,d,h,f]=r.shape,[m,g]=C.getImageCenter(o,d,h),b=i===0,y=255,v=typeof i=="number"?[i,i,i,b?0:y]:[...i,y],x=new Uint8Array(new Int32Array(v).buffer);return MN(l,p,d,h,f,a,m,g,x,v.length,c),u}var Bce={kernelName:Xo,backendName:"wasm",kernelFunc:Lce,setupFunc:Mce},Vce=Xt(Po),Wce=Xt(ii),LN;function Uce(e){LN=e.wasm.cwrap(zo,null,["number","number","number","number","number","number","array","number","number"])}function Gce(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:i}=s,o=t.makeOutput(i,a.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=Mk.calculateShapes(a,r,i),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(p).buffer),y=t.dataIdMap.get(o.dataId).id;return LN(f,g,St[a.dtype],u,l,c,b,d,y),o}var Hce={kernelName:zo,backendName:"wasm",setupFunc:Uce,kernelFunc:Gce},BN;function qce(e){BN=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function jce(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id,p=s.shape.length,d=r.shape.length,h=p===0||p>1||d===1?1:w.sizeFromShape(r.shape.slice(1));return BN(i,o,u,h,c),l}var Kce={kernelName:Mo,backendName:"wasm",kernelFunc:jce,setupFunc:qce},VN;function Xce(e){VN=e.wasm.cwrap(ui,null,["number","number"])}function Yce(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return w.sizeFromShape(r.shape)===0||VN(s,a),r}var Qce={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Xce,kernelFunc:Yce},Zce=Xt(oi),WN;function Jce(e){WN=e.wasm.cwrap(di,null,["number","number","number","number"])}function ede(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(a.dataId).id,o=n.shape[s],u=w.sizeFromShape(n.shape)/o;return w.sizeFromShape(a.shape)===0||WN(r,i,o,u),a}var tde={kernelName:di,backendName:"wasm",setupFunc:Jce,kernelFunc:ede};function nde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s,o=w.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let I=1+a.length;I<r.shape.length;++I)u.push([0,0]);let l=DN.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=C.getReshaped(l.shape,a,o,!1),p=C.getPermuted(c.length,a.length,!1),d=C.getReshapedPermuted(l.shape,a,o,!1),m=yn({inputs:{x:l},backend:n,attrs:{shape:c}}),y=wr({inputs:{x:m},backend:n,attrs:{perm:p}}),k=yn({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeData(l.dataId),n.disposeData(m.dataId),n.disposeData(y.dataId),k}var sde={kernelName:Vo,backendName:"wasm",kernelFunc:nde},UN;function rde(e){UN=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function ade(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=n,o=s.shape[0],u=s.shape[1],l=t.readSync(a.dataId)[0],c=[o+l,u],p=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(c,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),r.dtype),b=t.dataIdMap.get(g.dataId).id,y=t.makeOutput([l],"bool"),v=t.dataIdMap.get(y.dataId).id,x=t.makeOutput([o],s.dtype),k=t.dataIdMap.get(x.dataId).id,I=t.makeOutput([4],"int32"),$=t.dataIdMap.get(I.dataId).id,E=UN(p,d,St[r.dtype],o,l,u,h,m,b,v,k,$),A=t.readSync(I.dataId),P;switch(A[0]){case 1:{P=C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(A[1]);break}case 2:{P=C.getSparseFillEmptyRowsNegativeIndexErrorMessage(A[1],A[2]);break}case 3:P=C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(A[1],A[2],A[3]);break;default:P=""}if(t.disposeData(I.dataId),P)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(x.dataId),new Error(P);let R=f,F=g;return E!==c[0]&&(R=xa({inputs:{x:f},attrs:{begin:0,size:[E,u]},backend:t}),F=xa({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[R,F,y,x]}var ide={kernelName:up,backendName:"wasm",setupFunc:rde,kernelFunc:ade},GN;function ode(e){GN=e.wasm.cwrap(Al,null,["number","number","number","number","number","number","number"])}function ude(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=t.dataIdMap.get(s.dataId).id,o=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(a.dataId).id,l=s.shape[0],c=w.sizeFromShape(a.shape),p=t.makeOutput([l,c],s.dtype),d=t.dataIdMap.get(p.dataId).id,h=t.makeOutput([c],a.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;GN(i,o,u,l,d,f,g);let b=t.readSync(m.dataId),y;switch(b[0]){case 0:{y=C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{y=C.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:y=C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let v=Array.from(t.readSync(r.dataId)),x=Array.from(t.readSync(h.dataId));y=C.getSparseReshapeInputOutputMultipleErrorMessage(v,x);break}case 4:{let v=Array.from(t.readSync(r.dataId)),x=Array.from(t.readSync(h.dataId));y=C.getSparseReshapeInputOutputMismatchErrorMessage(v,x);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(p.dataId),t.disposeData(h.dataId),new Error(y);return[p,h]}var lde={kernelName:Al,backendName:"wasm",setupFunc:ode,kernelFunc:ude},HN;function qN(e){HN=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function jN(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:i}=s,o=a.shape[0],u=n.readSync(i.dataId,o-1,o)[0],c=o>0?u+1:0;if(c<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=r.shape.slice();p[0]=c;let d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(i.dataId).id,m=n.makeOutput(p,r.dtype),g=n.dataIdMap.get(m.dataId).id,b=n.makeOutput([4],"int32"),y=n.dataIdMap.get(b.dataId).id;HN(d,St[r.dtype],r.shape[0],h,f,g,y,t,0);let v=n.readSync(b.dataId),x;switch(v[0]){case 0:{x=C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(v[1],v[2]);break;case 3:x=C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(v[1],v[2],v[3]);break;default:x=""}if(n.disposeData(b.dataId),x)throw n.disposeData(m.dataId),new Error(x);return m}function cde(e){return jN(e,!0)}var dde={kernelName:lp,backendName:"wasm",setupFunc:qN,kernelFunc:cde};function pde(e){return jN(e,!1)}var hde={kernelName:cp,backendName:"wasm",setupFunc:qN,kernelFunc:pde};function fde(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=n,o=w.parseAxisParam(i,r.shape)[0],u=C.prepareSplitSize(r,a,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map(p=>{let d=[...c];d[o]=p;let h=xa({inputs:{x:r},attrs:{begin:l,size:d},backend:s});return l[o]+=p,h})}var mde={kernelName:Wo,backendName:"wasm",kernelFunc:fde},gde=Xt(li),bde=Xt(El),yde=!0,vde=gn(pi,yde),KN;function xde(e){KN=e.wasm.cwrap(gi,null,["number","number","number","number"])}function wde(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,i=t.dataIdMap.get(a.dataId).id,o=t.makeOutput(a.shape,a.dtype),u=t.dataIdMap.get(o.dataId).id;return KN(i,r,St[a.dtype],u),o}var kde={kernelName:gi,backendName:"wasm",setupFunc:xde,kernelFunc:wde},XN;function Sde(e){XN=e.wasm.cwrap(Uo,null,["number","array","number","array","array","array","array","array","number","number"])}function Ide(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=wt.sliceInfo(r.shape,a,i,o,u,l,c,p,d),k;if(m)k=yn({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let I=wt.computeOutShape(y,v,x),$=xa({inputs:{x:r},backend:t,attrs:{begin:y,size:I}});k=yn({inputs:{x:$},backend:t,attrs:{shape:f}}),t.disposeData($.dataId)}else{let I=t.makeOutput(h,"float32"),$=t.dataIdMap.get(r.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),A=new Uint8Array(new Int32Array(y).buffer),P=new Uint8Array(new Int32Array(v).buffer),R=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(h).buffer),T=new Uint8Array(new Int32Array(w.computeStrides(h)).buffer),z=t.dataIdMap.get(I.dataId).id;XN($,E,r.shape.length,A,P,R,F,T,h.length,z),k=yn({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeData(I.dataId)}return k}var Cde={kernelName:Uo,backendName:"wasm",setupFunc:Sde,kernelFunc:Ide},Nde=!0,Tde=gn(hi,Nde),YN;function $de(e){YN=e.wasm.cwrap(ci,null,["number","number","number","number"])}function _de(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Or(i,r,t),f=p;if(h){let v=t.dataIdMap.get(c.dataId).id;v!==o&&(l=c,u=v,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("sum",f,l.shape.length);let[m,g]=C.computeOutAndReduceShapes(l.shape,f),b=w.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;YN(u,b,St[y.dtype],v)}if(h&&t.disposeData(c.dataId),a){let v=C.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var Ade={kernelName:ci,backendName:"wasm",setupFunc:$de,kernelFunc:_de},Ede=Xt(Go),Rde=Xt(fi),QN;function Dde(e){QN=e.wasm.cwrap(Cr,null,["number","array","number","array","number","number"])}function Fde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:i}=s,o=new Array(r.shape.length);for(let d=0;d<o.length;d++)o[d]=r.shape[d]*i[d];let u=new Uint8Array(new Int32Array(r.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,r.dtype),p=n.dataIdMap.get(c.dataId).id;return QN(a,u,r.shape.length,l,o.length,St[c.dtype],p),c}var Ode={kernelName:Cr,backendName:"wasm",setupFunc:Dde,kernelFunc:Fde},ZN;function Pde(e){ZN=e.wasm.cwrap(Ho,null,["number","array","number","number","number","bool","number","number"])}var zde=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,i=t.dataIdMap.get(s.dataId).id,o=new Uint8Array(new Int32Array(s.shape).buffer),u=s.shape.slice();u[u.length-1]=r;let l=t.makeOutput(u,s.dtype),c=t.dataIdMap.get(l.dataId).id,p=t.makeOutput(u,"int32"),d=t.dataIdMap.get(p.dataId).id;return ZN(i,o,s.shape.length,St[s.dtype],r,a,c,d),[l,p]},Mde={kernelName:Ho,backendName:"wasm",setupFunc:Pde,kernelFunc:zde},JN;function Lde(e){JN=e.wasm.cwrap(qo,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Bde(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,p,d,h]=r.shape,[f,m]=l!=null?l:[p,d],g=[c,f,m,h],b=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),y=t.makeOutput(g,r.dtype),v=t.dataIdMap.get(y.dataId).id,k=t.dataIdMap.get(r.dataId).id,$=t.dataIdMap.get(a.dataId).id,E=i==="nearest"?1:2,A;switch(o){case"constant":A=1;break;case"reflect":A=2;break;case"wrap":A=3;break;case"nearest":A=4;break;default:A=1;break}return JN(k,$,a.shape[0]>1,c,f,m,h,d,p,b,r.shape.length-1,E,A,u,v),y}var Vde={kernelName:qo,backendName:"wasm",setupFunc:Lde,kernelFunc:Bde};function Wde(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r.shape[a],o=r.shape.length,u=new Array(o-1),l=0;for(let h=0;h<o;h++)h!==a&&(u[l++]=r.shape[h]);let c=new Array(i),p=new Array(o).fill(0),d=r.shape.slice();d[a]=1;for(let h=0;h<c.length;h++)p[a]=h,c[h]=xa({inputs:{x:r},attrs:{begin:p,size:d},backend:n});return c.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:u}))}var Ude={kernelName:jo,backendName:"wasm",kernelFunc:Wde};function Gde(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var Hde={kernelName:Ko,backendName:"wasm",kernelFunc:Gde},qde=[Foe,Ooe,zoe,Boe,Koe,Qoe,eue,sue,oue,hue,fue,mue,yue,vue,kue,Cue,Nue,Tue,Aue,Due,Pue,Lue,Wue,Uue,Hue,que,jue,Kue,Que,Zue,ele,sle,ile,lle,ple,mle,ble,vle,Voe,kle,Ile,Nle,Tle,_le,Rle,Fle,zle,Ble,Ule,Hle,Kle,Yle,Qle,ece,sce,ice,uce,dce,hce,mce,DN,vce,kce,Cce,Tce,_ce,Ace,Ece,rue,Fce,zce,Bce,Vce,Wce,Hce,Kce,Qce,Zce,due,tde,sde,ide,lde,dde,hde,mde,gde,bde,vde,kde,Cde,Tde,Ade,Ede,Rde,Ode,Mde,Vde,Hoe,Ude,Hde];for(let e of qde)Rl(e);var sg=K();sg.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));sg.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(sg.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var jw=wa(f$()),jde=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});`,Kde=wa(m$()),Xde=class extends rl{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(eT),rg=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Kd(this,ds())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let l=t;this.dataIdMap.set(e,{id:a,stringBytes:l,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let i=w.sizeFromShape(n),o=i*w.bytesPerElement(s),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:i}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||w.sizeFromShape(a);let o=w.bytesPerElement(r),u=this.wasm.HEAPU8.slice(s+t*o,s+n*o);return Zde(u.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Yde(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function Kw(e,t,n){if(Hd!=null)return Hd;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),Vu!=null&&Vu[s]!=null?Vu[s]:n+s}async function Qde(){let[e,t]=await Promise.all([K().getAsync("WASM_HAS_SIMD_SUPPORT"),K().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(o,u)=>{if(o.endsWith(".worker.js")){let l=jde.replace(/\n/g,"\\n"),c=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(c)}return o.endsWith(".wasm")?Kw(e,t,Mu!=null?Mu:u):u+o},Mv&&(r.instantiateWasm=Yde(Kw(e,t,Mu!=null?Mu:"")));let a=!1;r.onAbort=()=>{if(a||Wu)return;Wu=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let i;t&&e&&Hd==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+jw.default.toString()],{type:"text/javascript"}),i=(0,jw.default)(r)):i=(0,Kde.default)(r),i.then(o=>{a=!0,Wu=!1;let u=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",u,["number"]),dispose:o.cwrap("dispose",u,[])},n({wasm:o})})})}function Zde(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Jde=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Hd=null,Mu=null,Vu={},Wu=!1,Mv=!1;function fhe(e,t=!1){if(Zk("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Wu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Hd=e,Mv=t}function mhe(e,t=!1){if(Wu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Mu=e;else{Vu=e;let n=Jde.filter(s=>Vu[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Mv=t}var eT=-1,rg=-1;function ghe(e){eT=e}function bhe(){if(rg===-1)throw new Error("WASM backend not initialized.");return rg}var yhe="0.0.0",epe=2;bp("wasm",async()=>{let{wasm:e}=await Qde();return new Xde(e)},epe);var nr="3.16.0-20220509",vhe={tfjs:nr,"tfjs-core":nr,"tfjs-data":nr,"tfjs-layers":nr,"tfjs-converter":nr,"tfjs-backend-cpu":nr,"tfjs-backend-webgl":nr,"tfjs-backend-wasm":nr};export{co as Abs,al as Acos,il as Acosh,vb as AdadeltaOptimizer,xb as AdagradOptimizer,wb as AdamOptimizer,kb as AdamaxOptimizer,Sr as Add,Sa as AddN,ol as All,ul as Any,Ia as ArgMax,ll as ArgMin,cl as Asin,dl as Asinh,pl as Atan,fl as Atan2,hl as Atanh,Ca as AvgPool,Qd as AvgPool3D,dg as AvgPool3DGrad,cg as AvgPoolGrad,Xde as BackendWasm,Na as BatchMatMul,po as BatchToSpaceND,pg as Bincount,hg as BroadcastArgs,L$ as BroadcastTo,VW as Callback,sB as CallbackList,Ta as Cast,$a as Ceil,Ir as ClipByValue,Zd as Complex,Jd as ComplexAbs,ho as Concat,_a as Conv2D,fg as Conv2DBackpropFilter,Aa as Conv2DBackpropInput,ep as Conv3D,mg as Conv3DBackpropFilterV2,gg as Conv3DBackpropInputV2,Ea as Cos,Ra as Cosh,mo as CropAndResize,fo as Cumprod,Da as Cumsum,iB as CustomCallback,Kd as DataStorage,bg as DenseBincount,go as DepthToSpace,Fa as DepthwiseConv2dNative,yg as DepthwiseConv2dNativeBackpropFilter,vg as DepthwiseConv2dNativeBackpropInput,xg as Diag,tp as Dilation2D,tm as Dilation2DBackpropFilter,em as Dilation2DBackpropInput,ok as ENV,WW as EarlyStopping,np as Einsum,Pa as Elu,wg as EluGrad,D$ as Environment,bo as Equal,ml as Erf,za as Exp,yo as ExpandDims,vo as Expm1,kg as FFT,gl as Fill,xo as FlipLeftRight,Ma as Floor,La as FloorDiv,bd as FromPixels,Ba as FusedBatchNorm,ia as FusedConv2D,oa as FusedDepthwiseConv2D,Zf as GPGPUContext,ko as GatherNd,wo as GatherV2,j4 as GraphModel,So as Greater,Va as GreaterEqual,aB as History,Sg as IFFT,Wa as Identity,sp as Imag,Dt as InputSpec,bl as IsFinite,yl as IsInf,vl as IsNan,rl as KernelBackend,ap as LRN,Cg as LRNGrad,yz as LayerVariable,dr as LayersModel,Ua as LeakyRelu,Io as Less,Co as LessEqual,Ig as LinSpace,Ga as Log,xl as Log1p,B$ as LogSoftmax,No as LogicalAnd,wl as LogicalNot,rp as LogicalOr,tpe as LowerBound,X0 as MathBackendCPU,K1 as MathBackendWebGL,Ha as Max,ja as MaxPool,ip as MaxPool3D,Tg as MaxPool3DGrad,Ng as MaxPoolGrad,$g as MaxPoolWithArgmax,qa as Maximum,Ka as Mean,Xa as Min,Ya as Minimum,Qa as MirrorPad,kl as Mod,Sb as MomentumOptimizer,_g as Multinomial,Za as Multiply,To as Neg,_o as NonMaxSuppressionV3,Sl as NonMaxSuppressionV4,Ao as NonMaxSuppressionV5,$o as NotEqual,y_ as OP_SCOPE_SUFFIX,Ro as OneHot,Eo as OnesLike,_r as Optimizer,Ur as OptimizerConstructors,Do as Pack,Ja as PadV2,npe as Pool,ei as Pow,ti as Prelu,ni as Prod,Ib as RMSPropOptimizer,Ar as RNN,Il as Range,l_ as Rank,op as Real,Oa as RealDiv,Cl as Reciprocal,yO as Reduction,si as Relu,ai as Relu6,Fo as Reshape,ri as ResizeBilinear,Eg as ResizeBilinearGrad,Nl as ResizeNearestNeighbor,Ag as ResizeNearestNeighborGrad,Oo as Reverse,Xo as RotateWithOffset,Po as Round,ii as Rsqrt,$p as SGDOptimizer,zo as ScatterNd,Rg as SearchSorted,Mo as Select,Tl as Selu,Kb as Sequential,ui as Sigmoid,$l as Sign,oi as Sin,Bo as Sinh,Lo as Slice,di as Softmax,_l as Softplus,Vo as SpaceToBatchND,up as SparseFillEmptyRows,Al as SparseReshape,lp as SparseSegmentMean,cp as SparseSegmentSum,dp as SparseToDense,Wo as SplitV,li as Sqrt,El as Square,pi as SquaredDifference,gi as Step,Uo as StridedSlice,pp as StringNGrams,Dg as StringSplit,Fg as StringToHashBucketFast,hi as Sub,ci as Sum,$s as SymbolicTensor,Go as Tan,fi as Tanh,et as Tensor,Wt as TensorBuffer,Cr as Tile,Ho as TopK,qo as Transform,mi as Transpose,Og as Unique,jo as Unpack,hp as UnsortedSegmentSum,spe as UpperBound,vd as Variable,Ko as ZerosLike,aa as _FusedMatMul,Lt as abs,JA as acos,tE as acosh,ie as add,sE as addN,eS as all,gm as any,ju as argMax,uE as argMin,cE as asin,pE as asinh,fE as atan,gE as atan2,yE as atanh,Xg as avgPool,rS as avgPool3d,qA as backend,C as backend_util,wpe as basicLSTMCell,Xu as batchNorm,zE as batchNorm2d,LE as batchNorm3d,VE as batchNorm4d,Yg as batchToSpaceND,aS as bincount,Xpe as booleanMaskAsync,GE as broadcastArgs,rd as broadcastTo,bi as broadcast_util,Fk as browser,De as buffer,ahe as callbacks,le as cast,jE as ceil,Vn as clipByValue,ur as clone,ua as complex,Ft as concat,YE as concat1d,ZE as concat2d,eR as concat3d,nR as concat4d,FL as constraints,iS as conv1d,da as conv2d,oS as conv2dTranspose,uS as conv3d,cR as conv3dTranspose,ipe as copyRegisteredKernels,Zg as cos,cS as cosh,PS as cosineWindow,ym as cumprod,dS as cumsum,qs as customGrad,K4 as data,gR as denseBincount,Zk as deprecationWarn,yR as depthToSpace,yp as depthwiseConv2d,ohe as deregisterOp,gp as device_util,kpe as diag,kR as dilation2d,cpe as disableDeprecationWarnings,Re as dispose,dpe as disposeVariables,xe as div,TR as divNoNan,Spe as dot,hF as dropout,AR as einsum,vp as elu,lpe as enableDebugMode,upe as enableProdMode,fF as enclosingPowerOfTwo,ds as engine,K as env,Xn as equal,DR as erf,Yn as exp,Pn as expandDims,zR as expm1,pS as eye,fb as fft,zl as fill,ype as findBackend,vpe as findBackendFactory,xp as floor,Jk as floorDiv,d8 as forceHalfFloat,fa as fused,Yu as gather,cF as gatherND,Pk as gather_util,gpe as getBackend,ox as getGradient,nm as getKernel,sm as getKernelsForBackend,bhe as getThreadsCount,JK as gpgpu_util,Npe as grad,Tpe as grads,Un as greater,Yo as greaterEqual,Nd as ifft,Jg as imag,jn as image,Qpe as inTopKAsync,LL as initializers,QB as input,An as io,_S as irfft,Ipe as isFinite,Cpe as isInf,KR as isNaN,qt as keep,ws as kernel_impls,tB as layers,eb as leakyRelu,hS as less,Qo as lessEqual,ZO as linalg,ZR as linspace,uhe as loadGraphModel,she as loadLayersModel,eD as localResponseNormalization,Qn as log,tb as log1p,Ape as logSigmoid,fS as logSoftmax,fD as logSumExp,Ds as logicalAnd,rb as logicalNot,yS as logicalOr,Epe as logicalXor,ehe as losses,xD as lowerBound,Ve as matMul,mA as math,As as max,ab as maxPool,xS as maxPool3d,ID as maxPoolWithArgmax,$r as maximum,It as mean,mm as memory,Rpe as meshgrid,xW as metrics,vm as min,kp as minimum,AD as mirrorPad,RD as mod,the as model,PW as models,ib as moments,Ype as movingAverage,V as mul,Dpe as multiRNNCell,zD as multinomial,kt as neg,GS as nextFrame,FS as norm,Qu as notEqual,kd as oneHot,Mn as ones,Zn as onesLike,L as op,Fpe as outerProduct,yi as pad,Ope as pad1d,Ppe as pad2d,zpe as pad3d,Mpe as pad4d,Lpe as pool,ha as pow,ub as prelu,Z_ as print,wS as prod,ppe as profile,Bpe as rand,Vpe as randomGamma,r3 as randomNormal,Ll as randomUniform,Zu as range,mpe as ready,Id as real,u3 as reciprocal,bp as registerBackend,rhe as registerCallbackConstructor,W$ as registerGradient,Rl as registerKernel,ihe as registerOp,zW as regularizers,Xs as relu,kS as relu6,bpe as removeBackend,U as reshape,Jn as reverse,Wpe as reverse1d,Upe as reverse2d,Gpe as reverse3d,Hpe as reverse4d,mb as rfft,SS as round,IS as rsqrt,we as scalar,iF as scatterND,Mk as scatter_util,vS as searchSorted,CS as selu,x3 as separableConv2d,nhe as sequential,re as serialization,fpe as setBackend,xpe as setPlatform,ghe as setThreadsCount,fhe as setWasmPath,mhe as setWasmPaths,H5 as setWebGLContext,k3 as setdiff1dAsync,sv as shared,Hs as sigmoid,I3 as sign,Jpe as signal,NS as sin,TS as sinh,qe as slice,db as slice1d,$S as slice2d,pb as slice3d,Cd as slice4d,wt as slice_util,hb as softmax,Ml as softplus,ob as spaceToBatchND,Gc as sparse,OS as sparseToDense,Zpe as spectral,Bn as split,dn as sqrt,ct as square,AS as squaredDifference,mr as squeeze,es as stack,Sp as step,U3 as stridedSlice,Uf as string,ge as sub,ve as sum,mp as sumOutType,H3 as tan,Ku as tanh,ms as tensor,Zt as tensor1d,Zi as tensor2d,wA as tensor3d,qpe as tensor4d,jpe as tensor5d,Kpe as tensor6d,_s as tensor_util,MA as test_util,q as tidy,hs as tile,hpe as time,j3 as topk,Bi as train,Ge as transpose,gb as truncatedNormal,yx as unique,ape as unregisterGradient,rpe as unregisterKernel,Q3 as unsortedSegmentSum,Fs as unstack,cn as upcastType,J3 as upperBound,w as util,$pe as valueAndGrad,_pe as valueAndGrads,eF as variable,sD as variableGrads,vhe as version,lhe as version_converter,ope as version_core,che as version_cpu,yI as version_layers,yhe as version_wasm,dhe as version_webgl,phe as webgl,G5 as webgl_util,Eoe as webgpu,vn as where,RS as whereAsync,$t as zeros,je as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
