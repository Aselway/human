
  /*
  Human library
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
  */

var eV=Object.create,Wh=Object.defineProperty,tV=Object.getPrototypeOf,rV=Object.prototype.hasOwnProperty,nV=Object.getOwnPropertyNames,oV=Object.getOwnPropertyDescriptor;var DI=r=>Wh(r,"__esModule",{value:!0});var bt=(r,e)=>()=>(e||(e={exports:{}},r(e.exports,e)),e.exports),Ye=(r,e)=>{DI(r);for(var t in e)Wh(r,t,{get:e[t],enumerable:!0})},sV=(r,e,t)=>{if(DI(r),e&&typeof e=="object"||typeof e=="function")for(let n of nV(e))!rV.call(r,n)&&n!=="default"&&Wh(r,n,{get:()=>e[n],enumerable:!(t=oV(e,n))||t.enumerable});return r},Ac=r=>r&&r.__esModule?r:sV(Wh(r!=null?eV(tV(r)):{},"default",{value:r,enumerable:!0}),r);var _S=bt(()=>{});var eN=bt((QS,Vw)=>{(function(r,e,t){function n(i){var l=this,u=a();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(i),l.s0<0&&(l.s0+=1),l.s1-=u(i),l.s1<0&&(l.s1+=1),l.s2-=u(i),l.s2<0&&(l.s2+=1),u=null}function o(i,l){return l.c=i.c,l.s0=i.s0,l.s1=i.s1,l.s2=i.s2,l}function s(i,l){var u=new n(i),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,u),p.state=function(){return o(u,{})}),p}function a(){var i=4022871197,l=function(u){u=u.toString();for(var c=0;c<u.length;c++){i+=u.charCodeAt(c);var p=.02519603282416938*i;i=p>>>0,p-=i,p*=i,i=p>>>0,p-=i,i+=p*4294967296}return(i>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(QS,typeof Vw=="object"&&Vw,typeof define=="function"&&define)});var rN=bt((tN,Ww)=>{(function(r,e,t){function n(a){var i=this,l="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var c=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^c^c>>>8},a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(tN,typeof Ww=="object"&&Ww,typeof define=="function"&&define)});var oN=bt((nN,jw)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(c^c<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,u==l.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(nN,typeof jw=="object"&&jw,typeof define=="function"&&define)});var iN=bt((sN,Gw)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,c=i.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,i.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(sN,typeof Gw=="object"&&Gw,typeof define=="function"&&define)});var lN=bt((aN,Uw)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,c=i.X,p=i.i,m,f;return i.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,i.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,h,g=[],y=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,y=Math.max(y,c.length)),f=0,d=-32;d<y;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=h,u.X=g,u.i=f}l(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(aN,typeof Uw=="object"&&Uw,typeof define=="function"&&define)});var cN=bt((uN,qw)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.b,p=i.c,m=i.d,f=i.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,i.b=c=c<<20^c>>>12^p,i.c=p=p-m|0,i.d=m<<16^p>>>16^f,i.a=f-c|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)i.b^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(uN,typeof qw=="object"&&qw,typeof define=="function"&&define)});var cg=bt(()=>{});var pN=bt((Rbe,pg)=>{(function(r,e){var t=this,n=256,o=6,s=52,a="random",i=e.pow(n,o),l=e.pow(2,s),u=l*2,c=n-1,p;function m(w,_,k){var E=[];_=_==!0?{entropy:!0}:_||{};var N=g(h(_.entropy?[w,b(r)]:w==null?y():w,3),E),F=new f(E),O=function(){for(var P=F.g(o),W=i,G=0;P<l;)P=(P+G)*n,W*=n,G=F.g(1);for(;P>=u;)P/=2,W/=2,G>>>=1;return(P+G)/W};return O.int32=function(){return F.g(4)|0},O.quick=function(){return F.g(4)/4294967296},O.double=O,g(b(F.S),r),(_.pass||k||function(P,W,G,j){return j&&(j.S&&d(j,F),P.state=function(){return d(F,{})}),G?(e[a]=P,W):P})(O,N,"global"in _?_.global:this==e,_.state)}e["seed"+a]=m;function f(w){var _,k=w.length,E=this,N=0,F=E.i=E.j=0,O=E.S=[];for(k||(w=[k++]);N<n;)O[N]=N++;for(N=0;N<n;N++)O[N]=O[F=c&F+w[N%k]+(_=O[N])],O[F]=_;(E.g=function(P){for(var W,G=0,j=E.i,X=E.j,K=E.S;P--;)W=K[j=c&j+1],G=G*n+K[c&(K[j]=K[X=c&X+W])+(K[X]=W)];return E.i=j,E.j=X,G})(n)}function d(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function h(w,_){var k=[],E=typeof w,N;if(_&&E=="object")for(N in w)try{k.push(h(w[N],_-1))}catch(F){}return k.length?k:E=="string"?w:w+"\0"}function g(w,_){for(var k=w+"",E,N=0;N<k.length;)_[c&N]=c&(E^=_[c&N]*19)+k.charCodeAt(N++);return b(_)}function y(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(t.crypto||t.msCrypto).getRandomValues(w)),b(w)}catch(E){var _=t.navigator,k=_&&_.plugins;return[+new Date,t,k,t.screen,b(r)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(e.random(),r),typeof pg=="object"&&pg.exports){pg.exports=m;try{p=cg()}catch(w){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)});var fN=bt((Fbe,mN)=>{var T4=eN(),E4=rN(),A4=oN(),D4=iN(),$4=lN(),R4=cN(),Pu=pN();Pu.alea=T4;Pu.xor128=E4;Pu.xorwow=A4;Pu.xorshift7=D4;Pu.xor4096=$4;Pu.tychei=R4;mN.exports=Pu});var i2=bt((s2,X_)=>{(function(r,e,t){function n(i){var l=this,u=a();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(i),l.s0<0&&(l.s0+=1),l.s1-=u(i),l.s1<0&&(l.s1+=1),l.s2-=u(i),l.s2<0&&(l.s2+=1),u=null}function o(i,l){return l.c=i.c,l.s0=i.s0,l.s1=i.s1,l.s2=i.s2,l}function s(i,l){var u=new n(i),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,u),p.state=function(){return o(u,{})}),p}function a(){var i=4022871197,l=function(u){u=u.toString();for(var c=0;c<u.length;c++){i+=u.charCodeAt(c);var p=.02519603282416938*i;i=p>>>0,p-=i,p*=i,i=p>>>0,p-=i,i+=p*4294967296}return(i>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(s2,typeof X_=="object"&&X_,typeof define=="function"&&define)});var l2=bt((a2,Y_)=>{(function(r,e,t){function n(a){var i=this,l="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var c=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^c^c>>>8},a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(a2,typeof Y_=="object"&&Y_,typeof define=="function"&&define)});var c2=bt((u2,Z_)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(c^c<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,u==l.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(u2,typeof Z_=="object"&&Z_,typeof define=="function"&&define)});var m2=bt((p2,J_)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,c=i.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,i.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(p2,typeof J_=="object"&&J_,typeof define=="function"&&define)});var d2=bt((f2,Q_)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,c=i.X,p=i.i,m,f;return i.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,i.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,h,g=[],y=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,y=Math.max(y,c.length)),f=0,d=-32;d<y;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=h,u.X=g,u.i=f}l(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(f2,typeof Q_=="object"&&Q_,typeof define=="function"&&define)});var g2=bt((h2,ev)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.b,p=i.c,m=i.d,f=i.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,i.b=c=c<<20^c>>>12^p,i.c=p=p-m|0,i.d=m<<16^p>>>16^f,i.a=f-c|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)i.b^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(h2,typeof ev=="object"&&ev,typeof define=="function"&&define)});var x2=bt((Iet,Ag)=>{(function(r,e){var t=this,n=256,o=6,s=52,a="random",i=e.pow(n,o),l=e.pow(2,s),u=l*2,c=n-1,p;function m(w,_,k){var E=[];_=_==!0?{entropy:!0}:_||{};var N=g(h(_.entropy?[w,b(r)]:w==null?y():w,3),E),F=new f(E),O=function(){for(var P=F.g(o),W=i,G=0;P<l;)P=(P+G)*n,W*=n,G=F.g(1);for(;P>=u;)P/=2,W/=2,G>>>=1;return(P+G)/W};return O.int32=function(){return F.g(4)|0},O.quick=function(){return F.g(4)/4294967296},O.double=O,g(b(F.S),r),(_.pass||k||function(P,W,G,j){return j&&(j.S&&d(j,F),P.state=function(){return d(F,{})}),G?(e[a]=P,W):P})(O,N,"global"in _?_.global:this==e,_.state)}e["seed"+a]=m;function f(w){var _,k=w.length,E=this,N=0,F=E.i=E.j=0,O=E.S=[];for(k||(w=[k++]);N<n;)O[N]=N++;for(N=0;N<n;N++)O[N]=O[F=c&F+w[N%k]+(_=O[N])],O[F]=_;(E.g=function(P){for(var W,G=0,j=E.i,X=E.j,K=E.S;P--;)W=K[j=c&j+1],G=G*n+K[c&(K[j]=K[X=c&X+W])+(K[X]=W)];return E.i=j,E.j=X,G})(n)}function d(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function h(w,_){var k=[],E=typeof w,N;if(_&&E=="object")for(N in w)try{k.push(h(w[N],_-1))}catch(F){}return k.length?k:E=="string"?w:w+"\0"}function g(w,_){for(var k=w+"",E,N=0;N<k.length;)_[c&N]=c&(E^=_[c&N]*19)+k.charCodeAt(N++);return b(_)}function y(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(t.crypto||t.msCrypto).getRandomValues(w)),b(w)}catch(E){var _=t.navigator,k=_&&_.plugins;return[+new Date,t,k,t.screen,b(r)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(e.random(),r),typeof Ag=="object"&&Ag.exports){Ag.exports=m;try{p=cg()}catch(w){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)});var b2=bt((Net,y2)=>{var $6=i2(),R6=l2(),F6=c2(),O6=m2(),P6=d2(),M6=g2(),Yu=x2();Yu.alea=$6;Yu.xor128=R6;Yu.xorwow=F6;Yu.xorshift7=O6;Yu.xor4096=P6;Yu.tychei=M6;y2.exports=Yu});var Ip=bt(()=>{});var GM=bt(()=>{});var UM=bt(()=>{});var qM=bt((cx,T0)=>{var E0=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};function t(){return Q.buffer!=ot&&kr(Q.buffer),hn}function n(){return Q.buffer!=ot&&kr(Q.buffer),Qt}function o(){return Q.buffer!=ot&&kr(Q.buffer),Un}function s(){return Q.buffer!=ot&&kr(Q.buffer),Gr}function a(){return Q.buffer!=ot&&kr(Q.buffer),An}var i=typeof e!="undefined"?e:{},l=void 0,u={},c;for(c in i)i.hasOwnProperty(c)&&(u[c]=i[c]);var p=[],m="./this.program",f=function(I,$){throw $},d=!1,h=!1,g=!1,y=!1;d=typeof window=="object",h=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y=!d&&!g&&!h;var b=i.ENVIRONMENT_IS_PTHREAD||!1;b&&(ot=i.buffer,$n=i.DYNAMIC_BASE,Fl=i.DYNAMICTOP_PTR);var w="";function _(I){return i.locateFile?i.locateFile(I,w):w+I}var k,E,N,F,O,P;if(g){h?w=Ip().dirname(w)+"/":w=__dirname+"/",k=function($,L){return O||(O=require("fs")),P||(P=Ip()),$=P.normalize($),O.readFileSync($,L?null:"utf8")},N=function($){var L=k($,!0);return L.buffer||(L=new Uint8Array(L)),ye(L.buffer),L},process.argv.length>1&&(m=process.argv[1].replace(/\\/g,"/")),p=process.argv.slice(2),process.on("uncaughtException",function(I){if(!(I instanceof EI))throw I}),process.on("unhandledRejection",ea),f=function(I){process.exit(I)},i.inspect=function(){return"[Emscripten Module object]"};var W;try{W=GM()}catch(I){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),I}Worker=W.Worker}else y?(typeof read!="undefined"&&(k=function($){return read($)}),N=function($){var L;return typeof readbuffer=="function"?new Uint8Array(readbuffer($)):(L=read($,"binary"),ye(typeof L=="object"),L)},typeof scriptArgs!="undefined"?p=scriptArgs:typeof arguments!="undefined"&&(p=arguments),typeof quit=="function"&&(f=function(I){quit(I)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(d||h)&&(h?w=self.location.href:document.currentScript&&(w=document.currentScript.src),l&&(w=l),w.indexOf("blob:")!==0?w=w.substr(0,w.lastIndexOf("/")+1):w="",g?(k=function($,L){return O||(O=require("fs")),P||(P=Ip()),$=P.normalize($),O.readFileSync($,L?null:"utf8")},N=function($){var L=k($,!0);return L.buffer||(L=new Uint8Array(L)),ye(L.buffer),L}):(k=function($){var L=new XMLHttpRequest;return L.open("GET",$,!1),L.send(null),L.responseText},h&&(N=function($){var L=new XMLHttpRequest;return L.open("GET",$,!1),L.responseType="arraybuffer",L.send(null),new Uint8Array(L.response)}),E=function($,L,q){var de=new XMLHttpRequest;de.open("GET",$,!0),de.responseType="arraybuffer",de.onload=function(){if(de.status==200||de.status==0&&de.response){L(de.response);return}q()},de.onerror=q,de.send(null)}),F=function(I){document.title=I});g&&typeof performance=="undefined"&&(performance=UM().performance);var G=i.print||console.log.bind(console),j=i.printErr||console.warn.bind(console);for(c in u)u.hasOwnProperty(c)&&(i[c]=u[c]);u=null,i.arguments&&(p=i.arguments),i.thisProgram&&(m=i.thisProgram),i.quit&&(f=i.quit);var X=Atomics.load,K=Atomics.store,Y=Atomics.compareExchange,ne;i.wasmBinary&&(ne=i.wasmBinary);var J;i.noExitRuntime&&(J=i.noExitRuntime),typeof WebAssembly!="object"&&j("no native wasm support detected");var Q,ie=new WebAssembly.Table({initial:169,maximum:169+0,element:"anyfunc"}),ae,ue=0,le=0,ge=!1,_e=0;function ye(I,$){I||ea("Assertion failed: "+$)}function ke(I){var $=i["_"+I];return ye($,"Cannot call unknown function "+I+", make sure it is exported"),$}function Ae(I,$,L,q,de){var xe={string:function(yn){var Qa=0;if(yn!=null&&yn!==0){var fm=(yn.length<<2)+1;Qa=Sc(fm),gt(yn,Qa,fm)}return Qa},array:function(yn){var Qa=Sc(yn.length);return xt(yn,Qa),Qa}};function he(yn){return $==="string"?ze(yn):$==="boolean"?Boolean(yn):yn}var Ee=ke(I),ft=[],fr=0;if(q)for(var Fr=0;Fr<q.length;Fr++){var Tc=xe[L[Fr]];Tc?(fr===0&&(fr=cm()),ft[Fr]=Tc(q[Fr])):ft[Fr]=q[Fr]}var mm=Ee.apply(null,ft);return mm=he(mm),fr!==0&&Nc(fr),mm}function Re(I,$,L,q){L=L||[];var de=L.every(function(he){return he==="number"}),xe=$!=="string";return xe&&de&&!q?ke(I):function(){return Ae(I,$,L,arguments,q)}}function Pe(I,$,L){for(var q=$+L,de="";!($>=q);){var xe=I[$++];if(!xe)return de;if(!(xe&128)){de+=String.fromCharCode(xe);continue}var he=I[$++]&63;if((xe&224)==192){de+=String.fromCharCode((xe&31)<<6|he);continue}var Ee=I[$++]&63;if((xe&240)==224?xe=(xe&15)<<12|he<<6|Ee:xe=(xe&7)<<18|he<<12|Ee<<6|I[$++]&63,xe<65536)de+=String.fromCharCode(xe);else{var ft=xe-65536;de+=String.fromCharCode(55296|ft>>10,56320|ft&1023)}}return de}function ze(I,$){return I?Pe(n(),I,$):""}function mt(I,$,L,q){if(!(q>0))return 0;for(var de=L,xe=L+q-1,he=0;he<I.length;++he){var Ee=I.charCodeAt(he);if(Ee>=55296&&Ee<=57343){var ft=I.charCodeAt(++he);Ee=65536+((Ee&1023)<<10)|ft&1023}if(Ee<=127){if(L>=xe)break;$[L++]=Ee}else if(Ee<=2047){if(L+1>=xe)break;$[L++]=192|Ee>>6,$[L++]=128|Ee&63}else if(Ee<=65535){if(L+2>=xe)break;$[L++]=224|Ee>>12,$[L++]=128|Ee>>6&63,$[L++]=128|Ee&63}else{if(L+3>=xe)break;$[L++]=240|Ee>>18,$[L++]=128|Ee>>12&63,$[L++]=128|Ee>>6&63,$[L++]=128|Ee&63}}return $[L]=0,L-de}function gt(I,$,L){return mt(I,n(),$,L)}function It(I){for(var $=0,L=0;L<I.length;++L){var q=I.charCodeAt(L);q>=55296&&q<=57343&&(q=65536+((q&1023)<<10)|I.charCodeAt(++L)&1023),q<=127?++$:q<=2047?$+=2:q<=65535?$+=3:$+=4}return $}function xt(I,$){t().set(I,$)}var yt=65536;function St(I,$){return I%$>0&&(I+=$-I%$),I}var ot,hn,Qt,gn,Rr,Un,Gr,En,An;function kr(I){ot=I,i.HEAP8=hn=new Int8Array(I),i.HEAP16=gn=new Int16Array(I),i.HEAP32=Un=new Int32Array(I),i.HEAPU8=Qt=new Uint8Array(I),i.HEAPU16=Rr=new Uint16Array(I),i.HEAPU32=Gr=new Uint32Array(I),i.HEAPF32=En=new Float32Array(I),i.HEAPF64=An=new Float64Array(I)}var Dn=5256464,rn=Dn,Zi=13584,$n=5256464,Fl=12656,Ji=i.INITIAL_MEMORY||16777216;if(b)Q=i.wasmMemory,ot=i.buffer;else if(i.wasmMemory)Q=i.wasmMemory;else if(Q=new WebAssembly.Memory({initial:Ji/yt,maximum:2147483648/yt,shared:!0}),!(Q.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),g&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Q&&(ot=Q.buffer),Ji=ot.byteLength,kr(ot),b||(o()[Fl>>2]=$n);function ns(I){for(;I.length>0;){var $=I.shift();if(typeof $=="function"){$(i);continue}var L=$.func;typeof L=="number"?$.arg===void 0?i.dynCall_v(L):i.dynCall_vi(L,$.arg):L($.arg===void 0?null:$.arg)}}var Ol=[],yh=[],bh=[],wh=[],em=[],Rn=!1;b&&(Rn=!0);function _h(){if(!b){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;)Pl(i.preRun.shift());ns(Ol)}}function gy(){Rn=!0,ns(yh)}function xy(){b||ns(bh)}function yy(){if(!b){if(i.postRun)for(typeof i.postRun=="function"&&(i.postRun=[i.postRun]);i.postRun.length;)bc(i.postRun.shift());ns(em)}}function Pl(I){Ol.unshift(I)}function bc(I){em.unshift(I)}var by=Math.ceil,wy=Math.floor,Qi=0,tm=null,Ml=null;function _y(I){ye(!b,"addRunDependency cannot be used in a pthread worker"),Qi++,i.monitorRunDependencies&&i.monitorRunDependencies(Qi)}function vh(I){if(Qi--,i.monitorRunDependencies&&i.monitorRunDependencies(Qi),Qi==0&&(tm!==null&&(clearInterval(tm),tm=null),Ml)){var $=Ml;Ml=null,$()}}i.preloadedImages={},i.preloadedAudios={};function ea(I){throw i.onAbort&&i.onAbort(I),b&&console.error("Pthread aborting at "+new Error().stack),I+="",G(I),j(I),ge=!0,_e=1,I="abort("+I+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(I)}function kh(I,$){return String.prototype.startsWith?I.startsWith($):I.indexOf($)===0}var vy="data:application/octet-stream;base64,";function Ch(I){return kh(I,vy)}var ky="file://";function Ih(I){return kh(I,ky)}var qn="tfjs-backend-wasm-threaded-simd.wasm";Ch(qn)||(qn=_(qn));function Sh(){try{if(ne)return new Uint8Array(ne);if(N)return N(qn);throw"both async and sync fetching of the wasm failed"}catch(I){ea(I)}}function Cy(){return!ne&&(d||h)&&typeof fetch=="function"&&!Ih(qn)?fetch(qn,{credentials:"same-origin"}).then(function(I){if(!I.ok)throw"failed to load wasm binary file at '"+qn+"'";return I.arrayBuffer()}).catch(function(){return Sh()}):new Promise(function(I,$){I(Sh())})}function Iy(){var I={a:Mh};function $(he,Ee){var ft=he.exports;if(i.asm=ft,ae=Ee,!b){var fr=ve.unusedWorkers.length;ve.unusedWorkers.forEach(function(Fr){ve.loadWasmModuleToWorker(Fr,function(){--fr||vh("wasm-instantiate")})})}}b||_y("wasm-instantiate");function L(he){$(he.instance,he.module)}function q(he){return Cy().then(function(Ee){return WebAssembly.instantiate(Ee,I)}).then(he,function(Ee){j("failed to asynchronously prepare wasm: "+Ee),ea(Ee)})}function de(){if(!ne&&typeof WebAssembly.instantiateStreaming=="function"&&!Ch(qn)&&!Ih(qn)&&typeof fetch=="function")fetch(qn,{credentials:"same-origin"}).then(function(he){var Ee=WebAssembly.instantiateStreaming(he,I);return Ee.then(L,function(ft){j("wasm streaming compile failed: "+ft),j("falling back to ArrayBuffer instantiation"),q(L)})});else return q(L)}if(i.instantiateWasm)try{var xe=i.instantiateWasm(I,$);return xe}catch(he){return j("Module.instantiateWasm callback failed with error: "+he),!1}return de(),{}}var Sy={};function Ny(){ve.initRuntime()}b||yh.push({func:function(){om()}});var Nh=0,Th=0,Eh=0;function wc(I,$,L){I=I|0,$=$|0,L=L|0,Nh=I,Eh=$,Th=L}i.__register_pthread_ptr=wc;var rm={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},_c=13568;function vc(I,$){if(I<=0||I>t().length||I&!0||$<0)return-28;if($==0)return 0;$>=2147483647&&($=Infinity);var L=Atomics.load(o(),_c>>2),q=0;if(L==I){var de=Atomics.compareExchange(o(),_c>>2,L,0);if(de==L&&(--$,q=1,$<=0))return 1}var xe=Atomics.notify(o(),I>>2,$);if(xe>=0)return xe+q;throw"Atomics.notify returned an unexpected value "+xe}i._emscripten_futex_wake=vc;function Ty(I){if(b)throw"Internal Error! _kill_thread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in _kill_thread!";o()[I+12>>2]=0;var $=ve.pthreads[I];$.worker.terminate(),ve.freeThreadData($),ve.runningWorkers.splice(ve.runningWorkers.indexOf($.worker),1),$.worker.pthread=void 0}function Ey(I){if(b)throw"Internal Error! _cancel_thread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in _cancel_thread!";var $=ve.pthreads[I];$.worker.postMessage({cmd:"cancel"})}function Ay(I){if(b)throw"Internal Error! _cleanup_thread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in _cleanup_thread!";o()[I+12>>2]=0;var $=ve.pthreads[I];if($){var L=$.worker;ve.returnWorkerToPool(L)}}var ve={MAIN_THREAD_ID:1,mainThreadInfo:{schedPolicy:0,schedPrio:0},unusedWorkers:[],runningWorkers:[],initRuntime:function(){wc(ve.mainThreadBlock,!h,1),II(ve.mainThreadBlock)},initMainThreadBlock:function(){for(var I=8,$=0;$<I;++$)ve.allocateUnusedWorker();ve.mainThreadBlock=12816;for(var $=0;$<232/4;++$)s()[ve.mainThreadBlock/4+$]=0;o()[ve.mainThreadBlock+12>>2]=ve.mainThreadBlock;var L=ve.mainThreadBlock+156;o()[L>>2]=L;for(var q=13056,$=0;$<128;++$)s()[q/4+$]=0;Atomics.store(s(),ve.mainThreadBlock+104>>2,q),Atomics.store(s(),ve.mainThreadBlock+40>>2,ve.mainThreadBlock),Atomics.store(s(),ve.mainThreadBlock+44>>2,42)},initWorker:function(){},pthreads:{},exitHandlers:null,setThreadStatus:function(){},runExitHandlers:function(){if(ve.exitHandlers!==null){for(;ve.exitHandlers.length>0;)ve.exitHandlers.pop()();ve.exitHandlers=null}b&&ue&&CI()},threadExit:function(I){var $=Ws();$&&(Atomics.store(s(),$+4>>2,I),Atomics.store(s(),$+0>>2,1),Atomics.store(s(),$+60>>2,1),Atomics.store(s(),$+64>>2,0),ve.runExitHandlers(),vc($+0,2147483647),wc(0,0,0),ue=0,b&&postMessage({cmd:"exit"}))},threadCancel:function(){ve.runExitHandlers(),Atomics.store(s(),ue+4>>2,-1),Atomics.store(s(),ue+0>>2,1),vc(ue+0,2147483647),ue=le=0,wc(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var I in ve.pthreads){var $=ve.pthreads[I];$&&$.worker&&ve.returnWorkerToPool($.worker)}ve.pthreads={};for(var L=0;L<ve.unusedWorkers.length;++L){var q=ve.unusedWorkers[L];q.terminate()}ve.unusedWorkers=[];for(var L=0;L<ve.runningWorkers.length;++L){var q=ve.runningWorkers[L],$=q.pthread;ve.freeThreadData($),q.terminate()}ve.runningWorkers=[]},freeThreadData:function(I){if(!!I){if(I.threadInfoStruct){var $=o()[I.threadInfoStruct+104>>2];o()[I.threadInfoStruct+104>>2]=0,um($),um(I.threadInfoStruct)}I.threadInfoStruct=0,I.allocatedOwnStack&&I.stackBase&&um(I.stackBase),I.stackBase=0,I.worker&&(I.worker.pthread=null)}},returnWorkerToPool:function(I){delete ve.pthreads[I.pthread.thread],ve.unusedWorkers.push(I),ve.runningWorkers.splice(ve.runningWorkers.indexOf(I),1),ve.freeThreadData(I.pthread),I.pthread=void 0},receiveObjectTransfer:function(I){},loadWasmModuleToWorker:function(I,$){I.onmessage=function(L){var q=L.data,de=q.cmd;if(I.pthread&&(ve.currentProxiedOperationCallerThread=I.pthread.threadInfoStruct),q.targetThread&&q.targetThread!=Ws()){var xe=ve.pthreads[q.targetThread];xe?xe.worker.postMessage(L.data,q.transferList):console.error('Internal error! Worker sent a message "'+de+'" to target pthread '+q.targetThread+", but that thread no longer exists!"),ve.currentProxiedOperationCallerThread=void 0;return}if(de==="processQueuedMainThreadWork")yb();else if(de==="spawnThread")Oh(L.data);else if(de==="cleanupThread")Ay(q.thread);else if(de==="killThread")Ty(q.thread);else if(de==="cancelThread")Ey(q.thread);else if(de==="loaded")I.loaded=!0,$&&$(I),I.runPthread&&(I.runPthread(),delete I.runPthread);else if(de==="print")G("Thread "+q.threadId+": "+q.text);else if(de==="printErr")j("Thread "+q.threadId+": "+q.text);else if(de==="alert")alert("Thread "+q.threadId+": "+q.text);else if(de==="exit"){var he=I.pthread&&Atomics.load(s(),I.pthread.thread+68>>2);he&&ve.returnWorkerToPool(I)}else de==="cancelDone"?ve.returnWorkerToPool(I):de==="objectTransfer"?ve.receiveObjectTransfer(L.data):L.data.target==="setimmediate"?I.postMessage(L.data):j("worker sent an unknown command "+de);ve.currentProxiedOperationCallerThread=void 0},I.onerror=function(L){j("pthread sent an error! "+L.filename+":"+L.lineno+": "+L.message)},g&&(I.on("message",function(L){I.onmessage({data:L})}),I.on("error",function(L){I.onerror(L)}),I.on("exit",function(L){console.log("worker exited - TODO: update the worker queue?")})),I.postMessage({cmd:"load",urlOrBlob:i.mainScriptUrlOrBlob||l,wasmMemory:Q,wasmModule:ae,DYNAMIC_BASE:$n,DYNAMICTOP_PTR:Fl})},allocateUnusedWorker:function(){var I=_("tfjs-backend-wasm-threaded-simd.worker.js");ve.unusedWorkers.push(new Worker(I))},getNewWorker:function(){return ve.unusedWorkers.length==0&&(ve.allocateUnusedWorker(),ve.loadWasmModuleToWorker(ve.unusedWorkers[0])),ve.unusedWorkers.length>0?ve.unusedWorkers.pop():null},busySpinWait:function(I){for(var $=performance.now()+I;performance.now()<$;);}};function Dy(I,$){Dn=rn=I,Zi=$,Nc(I)}i.establishStackSpace=Dy;function $y(){return J}i.getNoExitRuntime=$y;function Ry(I,$,L,q){ea("Assertion failed: "+ze(I)+", at: "+[$?ze($):"unknown filename",L,q?ze(q):"unknown function"])}function Fy(I,$){var L=_main(I,$)}var Ll;g?Ll=function(){var I=process.hrtime();return I[0]*1e3+I[1]/1e6}:b?Ll=function(){return performance.now()-i.__performance_now_clock_drift}:typeof dateNow!="undefined"?Ll=dateNow:Ll=function(){return performance.now()};function Oy(I){return o()[vI()>>2]=I,I}function Py(I,$){if(b)return Ya(1,1,I,$);wh.unshift({func:I,arg:$})}function My(I,$){if(I==$)postMessage({cmd:"processQueuedMainThreadWork"});else if(b)postMessage({targetThread:I,cmd:"processThreadQueue"});else{var L=ve.pthreads[I],q=L&&L.worker;if(!q)return;q.postMessage({cmd:"processThreadQueue"})}return 1}function Ly(){ea()}function zy(I,$){I=I|0,$=$|0}function By(I,$,L){if(I<=0||I>t().length||I&!0)return-28;if(h){var q=Atomics.wait(o(),I>>2,$,L);if(q==="timed-out")return-73;if(q==="not-equal")return-6;if(q==="ok")return 0;throw"Atomics.wait returned an unexpected value "+q}else{var de=Atomics.load(o(),I>>2);if($!=de)return-6;var xe=performance.now(),he=xe+L;Atomics.store(o(),_c>>2,I);for(var Ee=I;I==Ee;){if(xe=performance.now(),xe>he)return-73;yb(),I=Atomics.load(o(),_c>>2)}return 0}}function Vy(){return Eh|0}function Wy(){return Th|0}function jy(I,$,L){n().copyWithin(I,$,$+L)}function Gy(){return navigator.hardwareConcurrency}function Ya(I,$){for(var L=arguments.length-2,q=cm(),de=Sc(L*8),xe=de>>3,he=0;he<L;he++)a()[xe+he]=arguments[2+he];var Ee=NI(I,L,de,$);return Nc(q),Ee}var zl=[];function kc(I,$){kc.array||(kc.array=[]);var L=kc.array;L.length=0;for(var q;q=n()[I++];)q===100||q===102?($=$+7&~7,L.push(a()[$>>3]),$+=8):($=$+3&~3,L.push(o()[$>>2]),$+=4);return L}function Uy(I,$,L){zl.length=$;for(var q=L>>3,de=0;de<$;de++)zl[de]=a()[q+de];var xe=I<0,he=xe?Sy[-I-1]:hb[I];if(xe){var Ee=zl[1],ft=zl[2],fr=kc(Ee,ft);return he.apply(null,fr)}return he.apply(null,zl)}function qy(){return n().length}function Hy(I){try{return Q.grow(I-ot.byteLength+65535>>>16),kr(Q.buffer),1}catch($){}}function Ky(I){I=I>>>0;var $=qy();if(I<=$)return!1;var L=65536,q=2147483648;if(I>q)return!1;for(var de=16777216,xe=1;xe<=4;xe*=2){var he=$*(1+.2/xe);he=Math.min(he,I+100663296);var Ee=Math.min(q,St(Math.max(de,I,he),L)),ft=Hy(Ee);if(ft)return!0}return!1}var Je={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:!1,removeAllEventListeners:function(){for(var I=Je.eventHandlers.length-1;I>=0;--I)Je._removeHandler(I);Je.eventHandlers=[],Je.deferredCalls=[]},registerRemoveEventListeners:function(){Je.removeEventListenersRegistered||(wh.push(Je.removeAllEventListeners),Je.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(I,$,L){function q(he,Ee){if(he.length!=Ee.length)return!1;for(var ft in he)if(he[ft]!=Ee[ft])return!1;return!0}for(var de in Je.deferredCalls){var xe=Je.deferredCalls[de];if(xe.targetFunction==I&&q(xe.argsList,L))return}Je.deferredCalls.push({targetFunction:I,precedence:$,argsList:L}),Je.deferredCalls.sort(function(he,Ee){return he.precedence<Ee.precedence})},removeDeferredCalls:function(I){for(var $=0;$<Je.deferredCalls.length;++$)Je.deferredCalls[$].targetFunction==I&&(Je.deferredCalls.splice($,1),--$)},canPerformEventHandlerRequests:function(){return Je.inEventHandler&&Je.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Je.canPerformEventHandlerRequests())for(var I=0;I<Je.deferredCalls.length;++I){var $=Je.deferredCalls[I];Je.deferredCalls.splice(I,1),--I,$.targetFunction.apply(null,$.argsList)}},inEventHandler:0,currentEventHandler:null,eventHandlers:[],removeAllHandlersOnTarget:function(I,$){for(var L=0;L<Je.eventHandlers.length;++L)Je.eventHandlers[L].target==I&&(!$||$==Je.eventHandlers[L].eventTypeString)&&Je._removeHandler(L--)},_removeHandler:function(I){var $=Je.eventHandlers[I];$.target.removeEventListener($.eventTypeString,$.eventListenerFunc,$.useCapture),Je.eventHandlers.splice(I,1)},registerOrRemoveHandler:function(I){var $=function(de){++Je.inEventHandler,Je.currentEventHandler=I,Je.runDeferredCalls(),I.handlerFunc(de),Je.runDeferredCalls(),--Je.inEventHandler};if(I.callbackfunc)I.eventListenerFunc=$,I.target.addEventListener(I.eventTypeString,$,I.useCapture),Je.eventHandlers.push(I),Je.registerRemoveEventListeners();else for(var L=0;L<Je.eventHandlers.length;++L)Je.eventHandlers[L].target==I.target&&Je.eventHandlers[L].eventTypeString==I.eventTypeString&&Je._removeHandler(L--)},queueEventHandlerOnThread_iiii:function(I,$,L,q,de){var xe=cm(),he=Sc(12);o()[he>>2]=L,o()[he+4>>2]=q,o()[he+8>>2]=de,bb(I,637534208,$,q,he),Nc(xe)},getTargetThreadForEventCallback:function(I){switch(I){case 1:return 0;case 2:return ve.currentProxiedOperationCallerThread;default:return I}},getNodeNameForTarget:function(I){return I?I==window?"#window":I==screen?"#screen":I&&I.nodeName?I.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Xy(I){var $=It(I)+1,L=lm($);return gt(I,L,$),L}function Yy(I,$,L,q){var de=cm(),xe=Sc(12),he=0;$&&(he=Xy($)),o()[xe>>2]=he,o()[xe+4>>2]=L,o()[xe+8>>2]=q,bb(I,657457152,0,he,xe),Nc(de)}function Zy(I,$,L,q){$=$?ze($):"",Yy(I,$,L,q)}function Jy(I){return I>2?ze(I):I}var Qy=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function eb(I){I=Jy(I);var $=Qy[I]||(typeof document!="undefined"?document.querySelector(I):void 0);return $}function nm(I){return eb(I)}function Ah(I,$,L){var q=nm(I);if(!q)return-4;if(q.canvasSharedPtr&&(o()[q.canvasSharedPtr>>2]=$,o()[q.canvasSharedPtr+4>>2]=L),q.offscreenCanvas||!q.controlTransferredOffscreen){q.offscreenCanvas&&(q=q.offscreenCanvas);var de=!1;if(q.GLctxObject&&q.GLctxObject.GLctx){var xe=q.GLctxObject.GLctx.getParameter(2978);de=xe[0]===0&&xe[1]===0&&xe[2]===q.width&&xe[3]===q.height}q.width=$,q.height=L,de&&q.GLctxObject.GLctx.viewport(0,0,$,L)}else if(q.canvasSharedPtr){var he=o()[q.canvasSharedPtr+8>>2];return Zy(he,I,$,L),1}else return-4;return 0}function Dh(I,$,L){return b?Ya(2,1,I,$,L):Ah(I,$,L)}function tb(I,$,L){var q=nm(I);return q?Ah(I,$,L):Dh(I,$,L)}function rb(I){I=I|0}function nb(I,$){I=I|0,$=$|0}function ob(I){var $=I.getExtension("ANGLE_instanced_arrays");if($)return I.vertexAttribDivisor=function(L,q){$.vertexAttribDivisorANGLE(L,q)},I.drawArraysInstanced=function(L,q,de,xe){$.drawArraysInstancedANGLE(L,q,de,xe)},I.drawElementsInstanced=function(L,q,de,xe,he){$.drawElementsInstancedANGLE(L,q,de,xe,he)},1}function sb(I){var $=I.getExtension("OES_vertex_array_object");if($)return I.createVertexArray=function(){return $.createVertexArrayOES()},I.deleteVertexArray=function(L){$.deleteVertexArrayOES(L)},I.bindVertexArray=function(L){$.bindVertexArrayOES(L)},I.isVertexArray=function(L){return $.isVertexArrayOES(L)},1}function ib(I){var $=I.getExtension("WEBGL_draw_buffers");if($)return I.drawBuffers=function(L,q){$.drawBuffersWEBGL(L,q)},1}var rt={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,init:function(){for(var I=new Float32Array(rt.MINI_TEMP_BUFFER_SIZE),$=0;$<rt.MINI_TEMP_BUFFER_SIZE;$++)rt.miniTempBufferFloatViews[$]=I.subarray(0,$+1);for(var L=new Int32Array(rt.MINI_TEMP_BUFFER_SIZE),$=0;$<rt.MINI_TEMP_BUFFER_SIZE;$++)rt.miniTempBufferIntViews[$]=L.subarray(0,$+1)},recordError:function($){rt.lastError||(rt.lastError=$)},getNewId:function(I){for(var $=rt.counter++,L=I.length;L<$;L++)I[L]=null;return $},MINI_TEMP_BUFFER_SIZE:256,miniTempBufferFloatViews:[0],miniTempBufferIntViews:[0],getSource:function(I,$,L,q){for(var de="",xe=0;xe<$;++xe){var he=q?o()[q+xe*4>>2]:-1;de+=ze(o()[L+xe*4>>2],he<0?void 0:he)}return de},createContext:function(I,$){var L=I.getContext("webgl",$);if(!L)return 0;var q=rt.registerContext(L,$);return q},registerContext:function(I,$){var L=lm(8);o()[L+4>>2]=Ws();var q={handle:L,attributes:$,version:$.majorVersion,GLctx:I};return I.canvas&&(I.canvas.GLctxObject=q),rt.contexts[L]=q,(typeof $.enableExtensionsByDefault=="undefined"||$.enableExtensionsByDefault)&&rt.initExtensions(q),L},makeContextCurrent:function(I){return rt.currentContext=rt.contexts[I],i.ctx=Za=rt.currentContext&&rt.currentContext.GLctx,!(I&&!Za)},getContext:function(I){return rt.contexts[I]},deleteContext:function(I){rt.currentContext===rt.contexts[I]&&(rt.currentContext=null),typeof Je=="object"&&Je.removeAllHandlersOnTarget(rt.contexts[I].GLctx.canvas),rt.contexts[I]&&rt.contexts[I].GLctx.canvas&&(rt.contexts[I].GLctx.canvas.GLctxObject=void 0),um(rt.contexts[I].handle),rt.contexts[I]=null},initExtensions:function(I){if(I||(I=rt.currentContext),!I.initExtensionsDone){I.initExtensionsDone=!0;var $=I.GLctx;ob($),sb($),ib($),$.disjointTimerQueryExt=$.getExtension("EXT_disjoint_timer_query");var L=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","EXT_texture_norm16","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2","WEBKIT_WEBGL_compressed_texture_pvrtc"],q=$.getSupportedExtensions()||[];q.forEach(function(de){L.indexOf(de)!=-1&&$.getExtension(de)})}},populateUniformTable:function(I){for(var $=rt.programs[I],L=rt.programInfos[I]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},q=L.uniforms,de=Za.getProgramParameter($,35718),xe=0;xe<de;++xe){var he=Za.getActiveUniform($,xe),Ee=he.name;L.maxUniformLength=Math.max(L.maxUniformLength,Ee.length+1),Ee.slice(-1)=="]"&&(Ee=Ee.slice(0,Ee.lastIndexOf("[")));var ft=Za.getUniformLocation($,Ee);if(ft){var fr=rt.getNewId(rt.uniforms);q[Ee]=[he.size,fr],rt.uniforms[fr]=ft;for(var Fr=1;Fr<he.size;++Fr){var Tc=Ee+"["+Fr+"]";ft=Za.getUniformLocation($,Tc),fr=rt.getNewId(rt.uniforms),rt.uniforms[fr]=ft}}}}},ab=["default","low-power","high-performance"];function lb(I,$){var L={},q=$>>2;L.alpha=!!o()[q+(0>>2)],L.depth=!!o()[q+(4>>2)],L.stencil=!!o()[q+(8>>2)],L.antialias=!!o()[q+(12>>2)],L.premultipliedAlpha=!!o()[q+(16>>2)],L.preserveDrawingBuffer=!!o()[q+(20>>2)];var de=o()[q+(24>>2)];L.powerPreference=ab[de],L.failIfMajorPerformanceCaveat=!!o()[q+(28>>2)],L.majorVersion=o()[q+(32>>2)],L.minorVersion=o()[q+(36>>2)],L.enableExtensionsByDefault=o()[q+(40>>2)],L.explicitSwapControl=o()[q+(44>>2)],L.proxyContextToMainThread=o()[q+(48>>2)],L.renderViaOffscreenBackBuffer=o()[q+(52>>2)];var xe=nm(I);if(!xe)return-4;if(L.explicitSwapControl)return-1;var he=rt.createContext(xe,L);return he}function ub(I,$){return lb(I,$)}var Bl={splitPath:function(I){var $=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return $.exec(I).slice(1)},normalizeArray:function(I,$){for(var L=0,q=I.length-1;q>=0;q--){var de=I[q];de==="."?I.splice(q,1):de===".."?(I.splice(q,1),L++):L&&(I.splice(q,1),L--)}if($)for(;L;L--)I.unshift("..");return I},normalize:function(I){var $=I.charAt(0)==="/",L=I.substr(-1)==="/";return I=Bl.normalizeArray(I.split("/").filter(function(q){return!!q}),!$).join("/"),!I&&!$&&(I="."),I&&L&&(I+="/"),($?"/":"")+I},dirname:function(I){var $=Bl.splitPath(I),L=$[0],q=$[1];return!L&&!q?".":(q&&(q=q.substr(0,q.length-1)),L+q)},basename:function(I){if(I==="/")return"/";var $=I.lastIndexOf("/");return $===-1?I:I.substr($+1)},extname:function(I){return Bl.splitPath(I)[3]},join:function(){var I=Array.prototype.slice.call(arguments,0);return Bl.normalize(I.join("/"))},join2:function(I,$){return Bl.normalize(I+"/"+$)}},Cc={mappings:{},buffers:[null,[],[]],printChar:function(I,$){var L=Cc.buffers[I];$===0||$===10?((I===1?G:j)(Pe(L,0)),L.length=0):L.push($)},varargs:void 0,get:function(){Cc.varargs+=4;var I=o()[Cc.varargs-4>>2];return I},getStr:function(I){var $=ze(I);return $},get64:function(I,$){return I}};function $h(I){return b?Ya(3,1,I):0}function Rh(I,$,L,q,de){if(b)return Ya(4,1,I,$,L,q,de)}function Fh(I,$,L,q){if(b)return Ya(5,1,I,$,L,q);for(var de=0,xe=0;xe<L;xe++){for(var he=o()[$+xe*8>>2],Ee=o()[$+(xe*8+4)>>2],ft=0;ft<Ee;ft++)Cc.printChar(I,n()[he+ft]);de+=Ee}return o()[q>>2]=de,0}function cb(I){var $=ve.exitHandlers.pop();I&&$()}function pb(I,$){ve.exitHandlers===null&&(ve.exitHandlers=[]),ve.exitHandlers.push(function(){TI(I,$)})}function Oh(I){if(b)throw"Internal Error! _spawn_thread() can only ever be called from main application thread!";var $=ve.getNewWorker();if($.pthread!==void 0)throw"Internal error!";if(!I.pthread_ptr)throw"Internal error, no pthread ptr!";ve.runningWorkers.push($);for(var L=lm(128*4),q=0;q<128;++q)o()[L+q*4>>2]=0;var de=I.stackBase+I.stackSize,xe=ve.pthreads[I.pthread_ptr]={worker:$,stackBase:I.stackBase,stackSize:I.stackSize,allocatedOwnStack:I.allocatedOwnStack,thread:I.pthread_ptr,threadInfoStruct:I.pthread_ptr},he=xe.threadInfoStruct>>2;Atomics.store(s(),he+(0>>2),0),Atomics.store(s(),he+(4>>2),0),Atomics.store(s(),he+(8>>2),0),Atomics.store(s(),he+(68>>2),I.detached),Atomics.store(s(),he+(104>>2),L),Atomics.store(s(),he+(48>>2),0),Atomics.store(s(),he+(40>>2),xe.threadInfoStruct),Atomics.store(s(),he+(44>>2),42),Atomics.store(s(),he+(108>>2),I.stackSize),Atomics.store(s(),he+(84>>2),I.stackSize),Atomics.store(s(),he+(80>>2),de),Atomics.store(s(),he+(108+8>>2),de),Atomics.store(s(),he+(108+12>>2),I.detached),Atomics.store(s(),he+(108+20>>2),I.schedPolicy),Atomics.store(s(),he+(108+24>>2),I.schedPrio);var Ee=_I(),ft=Ee+40;Atomics.store(s(),he+(176>>2),ft),$.pthread=xe;var fr={cmd:"run",start_routine:I.startRoutine,arg:I.arg,threadInfoStruct:I.pthread_ptr,selfThreadId:I.pthread_ptr,parentThreadId:I.parent_pthread_ptr,stackBase:I.stackBase,stackSize:I.stackSize};$.runPthread=function(){fr.time=performance.now(),$.postMessage(fr,I.transferList)},$.loaded&&($.runPthread(),delete $.runPthread)}function mb(I,$,L){if(!$&&!L)return rm.EINVAL;if(!I)return j("pthread_getschedparam called with a null thread pointer!"),rm.ESRCH;var q=o()[I+12>>2];if(q!==I)return j("pthread_getschedparam attempted on thread "+I+", which does not point to a valid thread, or does not exist anymore!"),rm.ESRCH;var de=Atomics.load(s(),I+108+20>>2),xe=Atomics.load(s(),I+108+24>>2);return $&&(o()[$>>2]=de),L&&(o()[L>>2]=xe),0}function Ws(){return Nh|0}i._pthread_self=Ws;function fb(I,$,L,q){if(typeof SharedArrayBuffer=="undefined")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!I)return j("pthread_create called with a null thread pointer!"),28;var de=[],xe=0;if(b&&(de.length===0||xe))return SI(687865856,I,$,L,q);if(xe)return xe;var he=0,Ee=0,ft=0,fr=0,Fr=0;if($){he=o()[$>>2],he+=81920,Ee=o()[$+8>>2],ft=o()[$+12>>2]!==0;var Tc=o()[$+16>>2]===0;if(Tc){var mm=o()[$+20>>2],yn=o()[$+24>>2],Qa=ve.currentProxiedOperationCallerThread?ve.currentProxiedOperationCallerThread:Ws();mb(Qa,$+20,$+24),fr=o()[$+20>>2],Fr=o()[$+24>>2],o()[$+20>>2]=mm,o()[$+24>>2]=yn}else fr=o()[$+20>>2],Fr=o()[$+24>>2]}else he=2097152;var fm=Ee==0;fm?Ee=kI(16,he):(Ee-=he,ye(Ee>0));for(var Ec=lm(232),_b=0;_b<232>>2;++_b)s()[(Ec>>2)+_b]=0;o()[I>>2]=Ec,o()[Ec+12>>2]=Ec;var AI=Ec+156;o()[AI>>2]=AI;var vb={stackBase:Ee,stackSize:he,allocatedOwnStack:fm,schedPolicy:fr,schedPrio:Fr,detached:ft,startRoutine:L,pthread_ptr:Ec,parent_pthread_ptr:Ws(),arg:q,transferList:de};return b?(vb.cmd="spawnThread",postMessage(vb,de)):Oh(vb),0}function db(I){return I=+I,I>=0?+wy(I+.5):+by(I-.5)}function Ph(I){if(b)return Ya(6,1,I);switch(I){case 30:return 16384;case 85:var $=2147483648;return $/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return Oy(28),-1}b?ve.initWorker():ve.initMainThreadBlock();var Za;rt.init();var hb=[null,Py,Dh,$h,Rh,Fh,Ph],Mh={e:Ry,r:Fy,w:My,a:Ly,l:zy,d:By,c:vc,h:Ll,g:Vy,x:Wy,q:jy,B:Gy,t:Uy,A:Ky,u:tb,k:rb,s:nb,v:ub,m:$h,o:Rh,i:Fh,p:Ny,memory:Q||i.wasmMemory,y:cb,z:pb,j:fb,b:Ws,f:db,n:Ph,table:ie},Ic=Iy();i.asm=Ic;var om=i.___wasm_call_ctors=function(){return(om=i.___wasm_call_ctors=i.asm.C).apply(null,arguments)},Vl=i._init=function(){return(Vl=i._init=i.asm.D).apply(null,arguments)},sm=i._register_tensor=function(){return(sm=i._register_tensor=i.asm.E).apply(null,arguments)},gb=i._dispose_data=function(){return(gb=i._dispose_data=i.asm.F).apply(null,arguments)},xb=i._dispose=function(){return(xb=i._dispose=i.asm.G).apply(null,arguments)},im=i._Abs=function(){return(im=i._Abs=i.asm.H).apply(null,arguments)},Lh=i._Add=function(){return(Lh=i._Add=i.asm.I).apply(null,arguments)},zh=i._AddN=function(){return(zh=i._AddN=i.asm.J).apply(null,arguments)},H=i._ArgMax=function(){return(H=i._ArgMax=i.asm.K).apply(null,arguments)},se=i._AvgPool=function(){return(se=i._AvgPool=i.asm.L).apply(null,arguments)},we=i._BatchMatMul=function(){return(we=i._BatchMatMul=i.asm.M).apply(null,arguments)},Ke=i._ClipByValue=function(){return(Ke=i._ClipByValue=i.asm.N).apply(null,arguments)},Xe=i._Conv2D=function(){return(Xe=i._Conv2D=i.asm.O).apply(null,arguments)},Xt=i._Conv2DBackpropInput=function(){return(Xt=i._Conv2DBackpropInput=i.asm.P).apply(null,arguments)},lt=i._Cos=function(){return(lt=i._Cos=i.asm.Q).apply(null,arguments)},st=i._CropAndResize=function(){return(st=i._CropAndResize=i.asm.R).apply(null,arguments)},br=i._Cumsum=function(){return(br=i._Cumsum=i.asm.S).apply(null,arguments)},ta=i._DepthToSpace=function(){return(ta=i._DepthToSpace=i.asm.T).apply(null,arguments)},ra=i._DepthwiseConv2dNative=function(){return(ra=i._DepthwiseConv2dNative=i.asm.U).apply(null,arguments)},Bh=i._Equal=function(){return(Bh=i._Equal=i.asm.V).apply(null,arguments)},am=i._Exp=function(){return(am=i._Exp=i.asm.W).apply(null,arguments)},xn=i._FlipLeftRight=function(){return(xn=i._FlipLeftRight=i.asm.X).apply(null,arguments)},Ja=i._Floor=function(){return(Ja=i._Floor=i.asm.Y).apply(null,arguments)},Vh=i._FloorDiv=function(){return(Vh=i._FloorDiv=i.asm.Z).apply(null,arguments)},z3=i._FusedBatchNorm=function(){return(z3=i._FusedBatchNorm=i.asm._).apply(null,arguments)},B3=i._FusedConv2D=function(){return(B3=i._FusedConv2D=i.asm.$).apply(null,arguments)},V3=i._FusedDepthwiseConv2D=function(){return(V3=i._FusedDepthwiseConv2D=i.asm.aa).apply(null,arguments)},W3=i._Gather=function(){return(W3=i._Gather=i.asm.ba).apply(null,arguments)},j3=i._GatherNd=function(){return(j3=i._GatherNd=i.asm.ca).apply(null,arguments)},G3=i._Greater=function(){return(G3=i._Greater=i.asm.da).apply(null,arguments)},U3=i._GreaterEqual=function(){return(U3=i._GreaterEqual=i.asm.ea).apply(null,arguments)},q3=i._LeakyRelu=function(){return(q3=i._LeakyRelu=i.asm.fa).apply(null,arguments)},H3=i._Less=function(){return(H3=i._Less=i.asm.ga).apply(null,arguments)},K3=i._LessEqual=function(){return(K3=i._LessEqual=i.asm.ha).apply(null,arguments)},X3=i._Log=function(){return(X3=i._Log=i.asm.ia).apply(null,arguments)},Y3=i._LogicalAnd=function(){return(Y3=i._LogicalAnd=i.asm.ja).apply(null,arguments)},Z3=i._Max=function(){return(Z3=i._Max=i.asm.ka).apply(null,arguments)},J3=i._MaxPool=function(){return(J3=i._MaxPool=i.asm.la).apply(null,arguments)},Q3=i._Maximum=function(){return(Q3=i._Maximum=i.asm.ma).apply(null,arguments)},eB=i._Mean=function(){return(eB=i._Mean=i.asm.na).apply(null,arguments)},tB=i._Min=function(){return(tB=i._Min=i.asm.oa).apply(null,arguments)},rB=i._Minimum=function(){return(rB=i._Minimum=i.asm.pa).apply(null,arguments)},nB=i._Multiply=function(){return(nB=i._Multiply=i.asm.qa).apply(null,arguments)},oB=i._Neg=function(){return(oB=i._Neg=i.asm.ra).apply(null,arguments)},sB=i._NonMaxSuppressionV3=function(){return(sB=i._NonMaxSuppressionV3=i.asm.sa).apply(null,arguments)},iB=i._NonMaxSuppressionV4=function(){return(iB=i._NonMaxSuppressionV4=i.asm.ta).apply(null,arguments)},aB=i._NonMaxSuppressionV5=function(){return(aB=i._NonMaxSuppressionV5=i.asm.ua).apply(null,arguments)},lB=i._NotEqual=function(){return(lB=i._NotEqual=i.asm.va).apply(null,arguments)},uB=i._OneHot=function(){return(uB=i._OneHot=i.asm.wa).apply(null,arguments)},cB=i._PadV2=function(){return(cB=i._PadV2=i.asm.xa).apply(null,arguments)},pB=i._Pow=function(){return(pB=i._Pow=i.asm.ya).apply(null,arguments)},mB=i._Prelu=function(){return(mB=i._Prelu=i.asm.za).apply(null,arguments)},fB=i._Prod=function(){return(fB=i._Prod=i.asm.Aa).apply(null,arguments)},dB=i._RealDiv=function(){return(dB=i._RealDiv=i.asm.Ba).apply(null,arguments)},hB=i._Relu=function(){return(hB=i._Relu=i.asm.Ca).apply(null,arguments)},gB=i._Relu6=function(){return(gB=i._Relu6=i.asm.Da).apply(null,arguments)},xB=i._ResizeBilinear=function(){return(xB=i._ResizeBilinear=i.asm.Ea).apply(null,arguments)},yB=i._Reverse=function(){return(yB=i._Reverse=i.asm.Fa).apply(null,arguments)},bB=i._RotateWithOffset=function(){return(bB=i._RotateWithOffset=i.asm.Ga).apply(null,arguments)},wB=i._Round=function(){return(wB=i._Round=i.asm.Ha).apply(null,arguments)},_B=i._Rsqrt=function(){return(_B=i._Rsqrt=i.asm.Ia).apply(null,arguments)},vB=i._ScatterNd=function(){return(vB=i._ScatterNd=i.asm.Ja).apply(null,arguments)},kB=i._SelectV2=function(){return(kB=i._SelectV2=i.asm.Ka).apply(null,arguments)},CB=i._Sigmoid=function(){return(CB=i._Sigmoid=i.asm.La).apply(null,arguments)},IB=i._Sin=function(){return(IB=i._Sin=i.asm.Ma).apply(null,arguments)},SB=i._Softmax=function(){return(SB=i._Softmax=i.asm.Na).apply(null,arguments)},NB=i._Sqrt=function(){return(NB=i._Sqrt=i.asm.Oa).apply(null,arguments)},TB=i._Square=function(){return(TB=i._Square=i.asm.Pa).apply(null,arguments)},EB=i._SquaredDifference=function(){return(EB=i._SquaredDifference=i.asm.Qa).apply(null,arguments)},AB=i._StridedSlice=function(){return(AB=i._StridedSlice=i.asm.Ra).apply(null,arguments)},DB=i._Sub=function(){return(DB=i._Sub=i.asm.Sa).apply(null,arguments)},$B=i._Sum=function(){return($B=i._Sum=i.asm.Ta).apply(null,arguments)},RB=i._Tanh=function(){return(RB=i._Tanh=i.asm.Ua).apply(null,arguments)},FB=i._Tile=function(){return(FB=i._Tile=i.asm.Va).apply(null,arguments)},OB=i._TopK=function(){return(OB=i._TopK=i.asm.Wa).apply(null,arguments)},PB=i._Transpose=function(){return(PB=i._Transpose=i.asm.Xa).apply(null,arguments)},MB=i.__FusedMatMul=function(){return(MB=i.__FusedMatMul=i.asm.Ya).apply(null,arguments)},lm=i._malloc=function(){return(lm=i._malloc=i.asm.Za).apply(null,arguments)},um=i._free=function(){return(um=i._free=i.asm._a).apply(null,arguments)},_I=i._emscripten_get_global_libc=function(){return(_I=i._emscripten_get_global_libc=i.asm.$a).apply(null,arguments)},vI=i.___errno_location=function(){return(vI=i.___errno_location=i.asm.ab).apply(null,arguments)},LB=i.___em_js__initPthreadsJS=function(){return(LB=i.___em_js__initPthreadsJS=i.asm.bb).apply(null,arguments)},kI=i._memalign=function(){return(kI=i._memalign=i.asm.cb).apply(null,arguments)},CI=i.___pthread_tsd_run_dtors=function(){return(CI=i.___pthread_tsd_run_dtors=i.asm.db).apply(null,arguments)},yb=i._emscripten_main_thread_process_queued_calls=function(){return(yb=i._emscripten_main_thread_process_queued_calls=i.asm.eb).apply(null,arguments)},zB=i._emscripten_current_thread_process_queued_calls=function(){return(zB=i._emscripten_current_thread_process_queued_calls=i.asm.fb).apply(null,arguments)},II=i._emscripten_register_main_browser_thread_id=function(){return(II=i._emscripten_register_main_browser_thread_id=i.asm.gb).apply(null,arguments)},BB=i._emscripten_main_browser_thread_id=function(){return(BB=i._emscripten_main_browser_thread_id=i.asm.hb).apply(null,arguments)},VB=i._emscripten_async_run_in_main_thread=function(){return(VB=i._emscripten_async_run_in_main_thread=i.asm.ib).apply(null,arguments)},WB=i._emscripten_sync_run_in_main_thread=function(){return(WB=i._emscripten_sync_run_in_main_thread=i.asm.jb).apply(null,arguments)},jB=i._emscripten_sync_run_in_main_thread_0=function(){return(jB=i._emscripten_sync_run_in_main_thread_0=i.asm.kb).apply(null,arguments)},GB=i._emscripten_sync_run_in_main_thread_1=function(){return(GB=i._emscripten_sync_run_in_main_thread_1=i.asm.lb).apply(null,arguments)},UB=i._emscripten_sync_run_in_main_thread_2=function(){return(UB=i._emscripten_sync_run_in_main_thread_2=i.asm.mb).apply(null,arguments)},qB=i._emscripten_sync_run_in_main_thread_xprintf_varargs=function(){return(qB=i._emscripten_sync_run_in_main_thread_xprintf_varargs=i.asm.nb).apply(null,arguments)},HB=i._emscripten_sync_run_in_main_thread_3=function(){return(HB=i._emscripten_sync_run_in_main_thread_3=i.asm.ob).apply(null,arguments)},SI=i._emscripten_sync_run_in_main_thread_4=function(){return(SI=i._emscripten_sync_run_in_main_thread_4=i.asm.pb).apply(null,arguments)},KB=i._emscripten_sync_run_in_main_thread_5=function(){return(KB=i._emscripten_sync_run_in_main_thread_5=i.asm.qb).apply(null,arguments)},XB=i._emscripten_sync_run_in_main_thread_6=function(){return(XB=i._emscripten_sync_run_in_main_thread_6=i.asm.rb).apply(null,arguments)},YB=i._emscripten_sync_run_in_main_thread_7=function(){return(YB=i._emscripten_sync_run_in_main_thread_7=i.asm.sb).apply(null,arguments)},NI=i._emscripten_run_in_main_runtime_thread_js=function(){return(NI=i._emscripten_run_in_main_runtime_thread_js=i.asm.tb).apply(null,arguments)},bb=i._emscripten_async_queue_on_thread_=function(){return(bb=i._emscripten_async_queue_on_thread_=i.asm.ub).apply(null,arguments)},ZB=i._emscripten_tls_init=function(){return(ZB=i._emscripten_tls_init=i.asm.vb).apply(null,arguments)},cm=i.stackSave=function(){return(cm=i.stackSave=i.asm.wb).apply(null,arguments)},Sc=i.stackAlloc=function(){return(Sc=i.stackAlloc=i.asm.xb).apply(null,arguments)},Nc=i.stackRestore=function(){return(Nc=i.stackRestore=i.asm.yb).apply(null,arguments)},TI=i.dynCall_vi=function(){return(TI=i.dynCall_vi=i.asm.zb).apply(null,arguments)},JB=i.dynCall_v=function(){return(JB=i.dynCall_v=i.asm.Ab).apply(null,arguments)},QB=i.dynCall_ii=function(){return(QB=i.dynCall_ii=i.asm.Bb).apply(null,arguments)};i.asm=Ic,i.cwrap=Re,i.PThread=ve,i.PThread=ve,i._pthread_self=Ws,i.wasmMemory=Q,i.ExitStatus=EI;var pm;i.then=function(I){if(pm)I(i);else{var $=i.onRuntimeInitialized;i.onRuntimeInitialized=function(){$&&$(),I(i)}}return i};function EI(I){this.name="ExitStatus",this.message="Program terminated with exit("+I+")",this.status=I}Ml=function I(){pm||wb(),pm||(Ml=I)};function wb(I){if(I=I||p,Qi>0||(_h(),Qi>0))return;function $(){pm||(pm=!0,i.calledRun=!0,!ge&&(gy(),xy(),i.onRuntimeInitialized&&i.onRuntimeInitialized(),yy()))}i.setStatus?(i.setStatus("Running..."),setTimeout(function(){setTimeout(function(){i.setStatus("")},1),$()},1)):$()}if(i.run=wb,i.preInit)for(typeof i.preInit=="function"&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();return b||(J=!0),b||wb(),e}}();typeof cx=="object"&&typeof T0=="object"?T0.exports=E0:typeof define=="function"&&define.amd?define([],function(){return E0}):typeof cx=="object"&&(cx.WasmBackendModuleThreadedSimd=E0)});var KM=bt((px,A0)=>{var D0=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};var t=typeof e!="undefined"?e:{},n={},o;for(o in t)t.hasOwnProperty(o)&&(n[o]=t[o]);var s=[],a="./this.program",i=function(H,se){throw se},l=!1,u=!1,c=!1,p=!1;l=typeof window=="object",u=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p=!l&&!c&&!u;var m="";function f(H){return t.locateFile?t.locateFile(H,m):m+H}var d,h,g,y,b,w;c?(u?m=Ip().dirname(m)+"/":m=__dirname+"/",d=function(se,we){return b||(b=require("fs")),w||(w=Ip()),se=w.normalize(se),b.readFileSync(se,we?null:"utf8")},g=function(se){var we=d(se,!0);return we.buffer||(we=new Uint8Array(we)),G(we.buffer),we},process.argv.length>1&&(a=process.argv[1].replace(/\\/g,"/")),s=process.argv.slice(2),process.on("uncaughtException",function(H){if(!(H instanceof sm))throw H}),process.on("unhandledRejection",ns),i=function(H){process.exit(H)},t.inspect=function(){return"[Emscripten Module object]"}):p?(typeof read!="undefined"&&(d=function(se){return read(se)}),g=function(se){var we;return typeof readbuffer=="function"?new Uint8Array(readbuffer(se)):(we=read(se,"binary"),G(typeof we=="object"),we)},typeof scriptArgs!="undefined"?s=scriptArgs:typeof arguments!="undefined"&&(s=arguments),typeof quit=="function"&&(i=function(H){quit(H)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(l||u)&&(u?m=self.location.href:document.currentScript&&(m=document.currentScript.src),r&&(m=r),m.indexOf("blob:")!==0?m=m.substr(0,m.lastIndexOf("/")+1):m="",d=function(se){var we=new XMLHttpRequest;return we.open("GET",se,!1),we.send(null),we.responseText},u&&(g=function(se){var we=new XMLHttpRequest;return we.open("GET",se,!1),we.responseType="arraybuffer",we.send(null),new Uint8Array(we.response)}),h=function(se,we,Ke){var Xe=new XMLHttpRequest;Xe.open("GET",se,!0),Xe.responseType="arraybuffer",Xe.onload=function(){if(Xe.status==200||Xe.status==0&&Xe.response){we(Xe.response);return}Ke()},Xe.onerror=Ke,Xe.send(null)},y=function(H){document.title=H});var _=t.print||console.log.bind(console),k=t.printErr||console.warn.bind(console);for(o in n)n.hasOwnProperty(o)&&(t[o]=n[o]);n=null,t.arguments&&(s=t.arguments),t.thisProgram&&(a=t.thisProgram),t.quit&&(i=t.quit);var E;t.wasmBinary&&(E=t.wasmBinary);var N;t.noExitRuntime&&(N=t.noExitRuntime),typeof WebAssembly!="object"&&k("no native wasm support detected");var F,O=new WebAssembly.Table({initial:151,maximum:151+0,element:"anyfunc"}),P=!1,W=0;function G(H,se){H||ns("Assertion failed: "+se)}function j(H){var se=t["_"+H];return G(se,"Cannot call unknown function "+H+", make sure it is exported"),se}function X(H,se,we,Ke,Xe){var Xt={string:function(xn){var Ja=0;if(xn!=null&&xn!==0){var Vh=(xn.length<<2)+1;Ja=Ic(Vh),ie(xn,Ja,Vh)}return Ja},array:function(xn){var Ja=Ic(xn.length);return ae(xn,Ja),Ja}};function lt(xn){return se==="string"?J(xn):se==="boolean"?Boolean(xn):xn}var st=j(H),br=[],ta=0;if(Ke)for(var ra=0;ra<Ke.length;ra++){var Bh=Xt[we[ra]];Bh?(ta===0&&(ta=Mh()),br[ra]=Bh(Ke[ra])):br[ra]=Ke[ra]}var am=st.apply(null,br);return am=lt(am),ta!==0&&om(ta),am}function K(H,se,we,Ke){we=we||[];var Xe=we.every(function(lt){return lt==="number"}),Xt=se!=="string";return Xt&&Xe&&!Ke?j(H):function(){return X(H,se,we,arguments,Ke)}}var Y=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function ne(H,se,we){for(var Ke=se+we,Xe=se;H[Xe]&&!(Xe>=Ke);)++Xe;if(Xe-se>16&&H.subarray&&Y)return Y.decode(H.subarray(se,Xe));for(var Xt="";se<Xe;){var lt=H[se++];if(!(lt&128)){Xt+=String.fromCharCode(lt);continue}var st=H[se++]&63;if((lt&224)==192){Xt+=String.fromCharCode((lt&31)<<6|st);continue}var br=H[se++]&63;if((lt&240)==224?lt=(lt&15)<<12|st<<6|br:lt=(lt&7)<<18|st<<12|br<<6|H[se++]&63,lt<65536)Xt+=String.fromCharCode(lt);else{var ta=lt-65536;Xt+=String.fromCharCode(55296|ta>>10,56320|ta&1023)}}return Xt}function J(H,se){return H?ne(ge,H,se):""}function Q(H,se,we,Ke){if(!(Ke>0))return 0;for(var Xe=we,Xt=we+Ke-1,lt=0;lt<H.length;++lt){var st=H.charCodeAt(lt);if(st>=55296&&st<=57343){var br=H.charCodeAt(++lt);st=65536+((st&1023)<<10)|br&1023}if(st<=127){if(we>=Xt)break;se[we++]=st}else if(st<=2047){if(we+1>=Xt)break;se[we++]=192|st>>6,se[we++]=128|st&63}else if(st<=65535){if(we+2>=Xt)break;se[we++]=224|st>>12,se[we++]=128|st>>6&63,se[we++]=128|st&63}else{if(we+3>=Xt)break;se[we++]=240|st>>18,se[we++]=128|st>>12&63,se[we++]=128|st>>6&63,se[we++]=128|st&63}}return se[we]=0,we-Xe}function ie(H,se,we){return Q(H,ge,se,we)}function ae(H,se){le.set(H,se)}var ue,le,ge,_e,ye,ke,Ae,Re,Pe;function ze(H){ue=H,t.HEAP8=le=new Int8Array(H),t.HEAP16=_e=new Int16Array(H),t.HEAP32=ke=new Int32Array(H),t.HEAPU8=ge=new Uint8Array(H),t.HEAPU16=ye=new Uint16Array(H),t.HEAPU32=Ae=new Uint32Array(H),t.HEAPF32=Re=new Float32Array(H),t.HEAPF64=Pe=new Float64Array(H)}var mt=t.INITIAL_MEMORY||16777216;function gt(H){for(;H.length>0;){var se=H.shift();if(typeof se=="function"){se(t);continue}var we=se.func;typeof we=="number"?se.arg===void 0?t.dynCall_v(we):t.dynCall_vi(we,se.arg):we(se.arg===void 0?null:se.arg)}}var It=[],xt=[],yt=[],St=[],ot=!1,hn=!1;function Qt(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)En(t.preRun.shift());gt(It)}function gn(){ot=!0,gt(xt)}function Rr(){gt(yt)}function Un(){hn=!0}function Gr(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)An(t.postRun.shift());gt(St)}function En(H){It.unshift(H)}function An(H){St.unshift(H)}var kr=Math.ceil,Dn=Math.floor,rn=0,Zi=null,$n=null;function Fl(H){rn++,t.monitorRunDependencies&&t.monitorRunDependencies(rn)}function Ji(H){if(rn--,t.monitorRunDependencies&&t.monitorRunDependencies(rn),rn==0&&(Zi!==null&&(clearInterval(Zi),Zi=null),$n)){var se=$n;$n=null,se()}}t.preloadedImages={},t.preloadedAudios={};function ns(H){throw t.onAbort&&t.onAbort(H),H+="",_(H),k(H),P=!0,W=1,H="abort("+H+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(H)}function Ol(H,se){return String.prototype.startsWith?H.startsWith(se):H.indexOf(se)===0}var yh="data:application/octet-stream;base64,";function bh(H){return Ol(H,yh)}var wh="file://";function em(H){return Ol(H,wh)}var Rn="tfjs-backend-wasm.wasm";bh(Rn)||(Rn=f(Rn));function _h(){try{if(E)return new Uint8Array(E);if(g)return g(Rn);throw"both async and sync fetching of the wasm failed"}catch(H){ns(H)}}function gy(){return!E&&(l||u)&&typeof fetch=="function"&&!em(Rn)?fetch(Rn,{credentials:"same-origin"}).then(function(H){if(!H.ok)throw"failed to load wasm binary file at '"+Rn+"'";return H.arrayBuffer()}).catch(function(){return _h()}):new Promise(function(H,se){H(_h())})}function xy(){var H={env:vh,wasi_snapshot_preview1:vh};function se(lt,st){var br=lt.exports;t.asm=br,F=br.memory,ze(F.buffer),Ji("wasm-instantiate")}Fl("wasm-instantiate");function we(lt){se(lt.instance)}function Ke(lt){return gy().then(function(st){return WebAssembly.instantiate(st,H)}).then(lt,function(st){k("failed to asynchronously prepare wasm: "+st),ns(st)})}function Xe(){if(!E&&typeof WebAssembly.instantiateStreaming=="function"&&!bh(Rn)&&!em(Rn)&&typeof fetch=="function")fetch(Rn,{credentials:"same-origin"}).then(function(lt){var st=WebAssembly.instantiateStreaming(lt,H);return st.then(we,function(br){k("wasm streaming compile failed: "+br),k("falling back to ArrayBuffer instantiation"),Ke(we)})});else return Ke(we)}if(t.instantiateWasm)try{var Xt=t.instantiateWasm(H,se);return Xt}catch(lt){return k("Module.instantiateWasm callback failed with error: "+lt),!1}return Xe(),{}}xt.push();function yy(H){ze(F.buffer)}var Pl={splitPath:function(H){var se=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return se.exec(H).slice(1)},normalizeArray:function(H,se){for(var we=0,Ke=H.length-1;Ke>=0;Ke--){var Xe=H[Ke];Xe==="."?H.splice(Ke,1):Xe===".."?(H.splice(Ke,1),we++):we&&(H.splice(Ke,1),we--)}if(se)for(;we;we--)H.unshift("..");return H},normalize:function(H){var se=H.charAt(0)==="/",we=H.substr(-1)==="/";return H=Pl.normalizeArray(H.split("/").filter(function(Ke){return!!Ke}),!se).join("/"),!H&&!se&&(H="."),H&&we&&(H+="/"),(se?"/":"")+H},dirname:function(H){var se=Pl.splitPath(H),we=se[0],Ke=se[1];return!we&&!Ke?".":(Ke&&(Ke=Ke.substr(0,Ke.length-1)),we+Ke)},basename:function(H){if(H==="/")return"/";var se=H.lastIndexOf("/");return se===-1?H:H.substr(se+1)},extname:function(H){return Pl.splitPath(H)[3]},join:function(){var H=Array.prototype.slice.call(arguments,0);return Pl.normalize(H.join("/"))},join2:function(H,se){return Pl.normalize(H+"/"+se)}},bc={mappings:{},buffers:[null,[],[]],printChar:function(H,se){var we=bc.buffers[H];se===0||se===10?((H===1?_:k)(ne(we,0)),we.length=0):we.push(se)},varargs:void 0,get:function(){bc.varargs+=4;var H=ke[bc.varargs-4>>2];return H},getStr:function(H){var se=J(H);return se},get64:function(H,se){return H}};function by(H){return 0}function wy(H,se,we,Ke,Xe){}function Qi(H,se,we,Ke){for(var Xe=0,Xt=0;Xt<we;Xt++){for(var lt=ke[se+Xt*8>>2],st=ke[se+(Xt*8+4)>>2],br=0;br<st;br++)bc.printChar(H,ge[lt+br]);Xe+=st}return ke[Ke>>2]=Xe,0}function tm(H){Lh(H)}function Ml(H){tm(H)}function _y(H){return H=+H,H>=0?+Dn(H+.5):+kr(H-.5)}var vh={emscripten_notify_memory_growth:yy,fd_close:by,fd_seek:wy,fd_write:Qi,proc_exit:Ml,roundf:_y},ea=xy();t.asm=ea;var kh=t._init=function(){return(kh=t._init=t.asm.init).apply(null,arguments)},vy=t._register_tensor=function(){return(vy=t._register_tensor=t.asm.register_tensor).apply(null,arguments)},Ch=t._dispose_data=function(){return(Ch=t._dispose_data=t.asm.dispose_data).apply(null,arguments)},ky=t._dispose=function(){return(ky=t._dispose=t.asm.dispose).apply(null,arguments)},Ih=t._Abs=function(){return(Ih=t._Abs=t.asm.Abs).apply(null,arguments)},qn=t._Add=function(){return(qn=t._Add=t.asm.Add).apply(null,arguments)},Sh=t._AddN=function(){return(Sh=t._AddN=t.asm.AddN).apply(null,arguments)},Cy=t._ArgMax=function(){return(Cy=t._ArgMax=t.asm.ArgMax).apply(null,arguments)},Iy=t._AvgPool=function(){return(Iy=t._AvgPool=t.asm.AvgPool).apply(null,arguments)},Sy=t._BatchMatMul=function(){return(Sy=t._BatchMatMul=t.asm.BatchMatMul).apply(null,arguments)},Ny=t._ClipByValue=function(){return(Ny=t._ClipByValue=t.asm.ClipByValue).apply(null,arguments)},Nh=t._Conv2D=function(){return(Nh=t._Conv2D=t.asm.Conv2D).apply(null,arguments)},Th=t._Conv2DBackpropInput=function(){return(Th=t._Conv2DBackpropInput=t.asm.Conv2DBackpropInput).apply(null,arguments)},Eh=t._Cos=function(){return(Eh=t._Cos=t.asm.Cos).apply(null,arguments)},wc=t._CropAndResize=function(){return(wc=t._CropAndResize=t.asm.CropAndResize).apply(null,arguments)},rm=t._Cumsum=function(){return(rm=t._Cumsum=t.asm.Cumsum).apply(null,arguments)},_c=t._DepthToSpace=function(){return(_c=t._DepthToSpace=t.asm.DepthToSpace).apply(null,arguments)},vc=t._DepthwiseConv2dNative=function(){return(vc=t._DepthwiseConv2dNative=t.asm.DepthwiseConv2dNative).apply(null,arguments)},Ty=t._Equal=function(){return(Ty=t._Equal=t.asm.Equal).apply(null,arguments)},Ey=t._Exp=function(){return(Ey=t._Exp=t.asm.Exp).apply(null,arguments)},Ay=t._FlipLeftRight=function(){return(Ay=t._FlipLeftRight=t.asm.FlipLeftRight).apply(null,arguments)},ve=t._Floor=function(){return(ve=t._Floor=t.asm.Floor).apply(null,arguments)},Dy=t._FloorDiv=function(){return(Dy=t._FloorDiv=t.asm.FloorDiv).apply(null,arguments)},$y=t._FusedBatchNorm=function(){return($y=t._FusedBatchNorm=t.asm.FusedBatchNorm).apply(null,arguments)},Ry=t._FusedConv2D=function(){return(Ry=t._FusedConv2D=t.asm.FusedConv2D).apply(null,arguments)},Fy=t._FusedDepthwiseConv2D=function(){return(Fy=t._FusedDepthwiseConv2D=t.asm.FusedDepthwiseConv2D).apply(null,arguments)},Ll=t._Gather=function(){return(Ll=t._Gather=t.asm.Gather).apply(null,arguments)},Oy=t._GatherNd=function(){return(Oy=t._GatherNd=t.asm.GatherNd).apply(null,arguments)},Py=t._Greater=function(){return(Py=t._Greater=t.asm.Greater).apply(null,arguments)},My=t._GreaterEqual=function(){return(My=t._GreaterEqual=t.asm.GreaterEqual).apply(null,arguments)},Ly=t._LeakyRelu=function(){return(Ly=t._LeakyRelu=t.asm.LeakyRelu).apply(null,arguments)},zy=t._Less=function(){return(zy=t._Less=t.asm.Less).apply(null,arguments)},By=t._LessEqual=function(){return(By=t._LessEqual=t.asm.LessEqual).apply(null,arguments)},Vy=t._Log=function(){return(Vy=t._Log=t.asm.Log).apply(null,arguments)},Wy=t._LogicalAnd=function(){return(Wy=t._LogicalAnd=t.asm.LogicalAnd).apply(null,arguments)},jy=t._Max=function(){return(jy=t._Max=t.asm.Max).apply(null,arguments)},Gy=t._MaxPool=function(){return(Gy=t._MaxPool=t.asm.MaxPool).apply(null,arguments)},Ya=t._Maximum=function(){return(Ya=t._Maximum=t.asm.Maximum).apply(null,arguments)},zl=t._Mean=function(){return(zl=t._Mean=t.asm.Mean).apply(null,arguments)},kc=t._Min=function(){return(kc=t._Min=t.asm.Min).apply(null,arguments)},Uy=t._Minimum=function(){return(Uy=t._Minimum=t.asm.Minimum).apply(null,arguments)},qy=t._Multiply=function(){return(qy=t._Multiply=t.asm.Multiply).apply(null,arguments)},Hy=t._Neg=function(){return(Hy=t._Neg=t.asm.Neg).apply(null,arguments)},Ky=t._NonMaxSuppressionV3=function(){return(Ky=t._NonMaxSuppressionV3=t.asm.NonMaxSuppressionV3).apply(null,arguments)},Je=t._NonMaxSuppressionV4=function(){return(Je=t._NonMaxSuppressionV4=t.asm.NonMaxSuppressionV4).apply(null,arguments)},Xy=t._NonMaxSuppressionV5=function(){return(Xy=t._NonMaxSuppressionV5=t.asm.NonMaxSuppressionV5).apply(null,arguments)},Yy=t._NotEqual=function(){return(Yy=t._NotEqual=t.asm.NotEqual).apply(null,arguments)},Zy=t._OneHot=function(){return(Zy=t._OneHot=t.asm.OneHot).apply(null,arguments)},Jy=t._PadV2=function(){return(Jy=t._PadV2=t.asm.PadV2).apply(null,arguments)},Qy=t._Pow=function(){return(Qy=t._Pow=t.asm.Pow).apply(null,arguments)},eb=t._Prelu=function(){return(eb=t._Prelu=t.asm.Prelu).apply(null,arguments)},nm=t._Prod=function(){return(nm=t._Prod=t.asm.Prod).apply(null,arguments)},Ah=t._RealDiv=function(){return(Ah=t._RealDiv=t.asm.RealDiv).apply(null,arguments)},Dh=t._Relu=function(){return(Dh=t._Relu=t.asm.Relu).apply(null,arguments)},tb=t._Relu6=function(){return(tb=t._Relu6=t.asm.Relu6).apply(null,arguments)},rb=t._ResizeBilinear=function(){return(rb=t._ResizeBilinear=t.asm.ResizeBilinear).apply(null,arguments)},nb=t._Reverse=function(){return(nb=t._Reverse=t.asm.Reverse).apply(null,arguments)},ob=t._RotateWithOffset=function(){return(ob=t._RotateWithOffset=t.asm.RotateWithOffset).apply(null,arguments)},sb=t._Round=function(){return(sb=t._Round=t.asm.Round).apply(null,arguments)},ib=t._Rsqrt=function(){return(ib=t._Rsqrt=t.asm.Rsqrt).apply(null,arguments)},rt=t._ScatterNd=function(){return(rt=t._ScatterNd=t.asm.ScatterNd).apply(null,arguments)},ab=t._SelectV2=function(){return(ab=t._SelectV2=t.asm.SelectV2).apply(null,arguments)},lb=t._Sigmoid=function(){return(lb=t._Sigmoid=t.asm.Sigmoid).apply(null,arguments)},ub=t._Sin=function(){return(ub=t._Sin=t.asm.Sin).apply(null,arguments)},Bl=t._Softmax=function(){return(Bl=t._Softmax=t.asm.Softmax).apply(null,arguments)},Cc=t._Sqrt=function(){return(Cc=t._Sqrt=t.asm.Sqrt).apply(null,arguments)},$h=t._Square=function(){return($h=t._Square=t.asm.Square).apply(null,arguments)},Rh=t._SquaredDifference=function(){return(Rh=t._SquaredDifference=t.asm.SquaredDifference).apply(null,arguments)},Fh=t._StridedSlice=function(){return(Fh=t._StridedSlice=t.asm.StridedSlice).apply(null,arguments)},cb=t._Sub=function(){return(cb=t._Sub=t.asm.Sub).apply(null,arguments)},pb=t._Sum=function(){return(pb=t._Sum=t.asm.Sum).apply(null,arguments)},Oh=t._Tanh=function(){return(Oh=t._Tanh=t.asm.Tanh).apply(null,arguments)},mb=t._Tile=function(){return(mb=t._Tile=t.asm.Tile).apply(null,arguments)},Ws=t._TopK=function(){return(Ws=t._TopK=t.asm.TopK).apply(null,arguments)},fb=t._Transpose=function(){return(fb=t._Transpose=t.asm.Transpose).apply(null,arguments)},db=t.__FusedMatMul=function(){return(db=t.__FusedMatMul=t.asm._FusedMatMul).apply(null,arguments)},Ph=t._malloc=function(){return(Ph=t._malloc=t.asm.malloc).apply(null,arguments)},Za=t._free=function(){return(Za=t._free=t.asm.free).apply(null,arguments)},hb=t.__start=function(){return(hb=t.__start=t.asm._start).apply(null,arguments)},Mh=t.stackSave=function(){return(Mh=t.stackSave=t.asm.stackSave).apply(null,arguments)},Ic=t.stackAlloc=function(){return(Ic=t.stackAlloc=t.asm.stackAlloc).apply(null,arguments)},om=t.stackRestore=function(){return(om=t.stackRestore=t.asm.stackRestore).apply(null,arguments)};t.asm=ea,t.cwrap=K;var Vl;t.then=function(H){if(Vl)H(t);else{var se=t.onRuntimeInitialized;t.onRuntimeInitialized=function(){se&&se(),H(t)}}return t};function sm(H){this.name="ExitStatus",this.message="Program terminated with exit("+H+")",this.status=H}var gb=!1;$n=function H(){Vl||im(),Vl||($n=H)};function xb(H){var se=t.__start;try{se();var we=0;Lh(we,!0)}catch(Xe){if(Xe instanceof sm)return;if(Xe=="unwind"){N=!0;return}else{var Ke=Xe;Xe&&typeof Xe=="object"&&Xe.stack&&(Ke=[Xe,Xe.stack]),k("exception thrown: "+Ke),i(1,Xe)}}finally{gb=!0}}function im(H){if(H=H||s,rn>0||(Qt(),rn>0))return;function se(){Vl||(Vl=!0,t.calledRun=!0,!P&&(gn(),Rr(),t.onRuntimeInitialized&&t.onRuntimeInitialized(),zh&&xb(H),Gr()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),se()},1)):se()}t.run=im;function Lh(H,se){se&&N&&H===0||(N||(P=!0,W=H,Un(),t.onExit&&t.onExit(H)),i(H,new sm(H)))}if(t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();var zh=!0;return t.noInitialRun&&(zh=!1),N=!0,im(),e}}();typeof px=="object"&&typeof A0=="object"?A0.exports=D0:typeof define=="function"&&define.amd?define([],function(){return D0}):typeof px=="object"&&(px.WasmBackendModule=D0)});var Wz=bt((Vz,aI)=>{(function(r,e,t){function n(i){var l=this,u=a();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(i),l.s0<0&&(l.s0+=1),l.s1-=u(i),l.s1<0&&(l.s1+=1),l.s2-=u(i),l.s2<0&&(l.s2+=1),u=null}function o(i,l){return l.c=i.c,l.s0=i.s0,l.s1=i.s1,l.s2=i.s2,l}function s(i,l){var u=new n(i),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,u),p.state=function(){return o(u,{})}),p}function a(){var i=4022871197,l=function(u){u=String(u);for(var c=0;c<u.length;c++){i+=u.charCodeAt(c);var p=.02519603282416938*i;i=p>>>0,p-=i,p*=i,i=p>>>0,p-=i,i+=p*4294967296}return(i>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(Vz,typeof aI=="object"&&aI,typeof define=="function"&&define)});var Gz=bt((jz,lI)=>{(function(r,e,t){function n(a){var i=this,l="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var c=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^c^c>>>8},a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(jz,typeof lI=="object"&&lI,typeof define=="function"&&define)});var qz=bt((Uz,uI)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(c^c<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,u==l.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(Uz,typeof uI=="object"&&uI,typeof define=="function"&&define)});var Kz=bt((Hz,cI)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,c=i.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,i.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(Hz,typeof cI=="object"&&cI,typeof define=="function"&&define)});var Yz=bt((Xz,pI)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,c=i.X,p=i.i,m,f;return i.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,i.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,h,g=[],y=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,y=Math.max(y,c.length)),f=0,d=-32;d<y;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=h,u.X=g,u.i=f}l(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(Xz,typeof pI=="object"&&pI,typeof define=="function"&&define)});var Jz=bt((Zz,mI)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.b,p=i.c,m=i.d,f=i.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,i.b=c=c<<20^c>>>12^p,i.c=p=p-m|0,i.d=m<<16^p>>>16^f,i.a=f-c|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)i.b^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(Zz,typeof mI=="object"&&mI,typeof define=="function"&&define)});var e3=bt((Qz,ly)=>{(function(r,e,t){var n=256,o=6,s=52,a="random",i=t.pow(n,o),l=t.pow(2,s),u=l*2,c=n-1,p;function m(w,_,k){var E=[];_=_==!0?{entropy:!0}:_||{};var N=g(h(_.entropy?[w,b(e)]:w==null?y():w,3),E),F=new f(E),O=function(){for(var P=F.g(o),W=i,G=0;P<l;)P=(P+G)*n,W*=n,G=F.g(1);for(;P>=u;)P/=2,W/=2,G>>>=1;return(P+G)/W};return O.int32=function(){return F.g(4)|0},O.quick=function(){return F.g(4)/4294967296},O.double=O,g(b(F.S),e),(_.pass||k||function(P,W,G,j){return j&&(j.S&&d(j,F),P.state=function(){return d(F,{})}),G?(t[a]=P,W):P})(O,N,"global"in _?_.global:this==t,_.state)}function f(w){var _,k=w.length,E=this,N=0,F=E.i=E.j=0,O=E.S=[];for(k||(w=[k++]);N<n;)O[N]=N++;for(N=0;N<n;N++)O[N]=O[F=c&F+w[N%k]+(_=O[N])],O[F]=_;(E.g=function(P){for(var W,G=0,j=E.i,X=E.j,K=E.S;P--;)W=K[j=c&j+1],G=G*n+K[c&(K[j]=K[X=c&X+W])+(K[X]=W)];return E.i=j,E.j=X,G})(n)}function d(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function h(w,_){var k=[],E=typeof w,N;if(_&&E=="object")for(N in w)try{k.push(h(w[N],_-1))}catch(F){}return k.length?k:E=="string"?w:w+"\0"}function g(w,_){for(var k=w+"",E,N=0;N<k.length;)_[c&N]=c&(E^=_[c&N]*19)+k.charCodeAt(N++);return b(_)}function y(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(w)),b(w)}catch(E){var _=r.navigator,k=_&&_.plugins;return[+new Date,r,k,r.screen,b(e)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(t.random(),e),typeof ly=="object"&&ly.exports){ly.exports=m;try{p=cg()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return m}):t["seed"+a]=m})(typeof self!="undefined"?self:Qz,[],Math)});var fI=bt((JMt,t3)=>{var are=Wz(),lre=Gz(),ure=qz(),cre=Kz(),pre=Yz(),mre=Jz(),yc=e3();yc.alea=are;yc.xor128=lre;yc.xorwow=ure;yc.xorshift7=cre;yc.xor4096=pre;yc.tychei=mre;t3.exports=yc});var E3=bt(()=>{});var $I="2.8.3";var RI="2.8.3";var FI="2.8.3";var OI="2.8.3";var PI="2.8.3";var iV=1e-7,aV=1e-4,el=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},js=class{time(e){return Z("time")}read(e){return Z("read")}readSync(e){return Z("readSync")}numDataIds(){return Z("numDataIds")}disposeData(e){return Z("disposeData")}write(e,t,n){return Z("write")}move(e,t,n,o){return Z("move")}memory(){return Z("memory")}floatPrecision(){return Z("floatPrecision")}epsilon(){return this.floatPrecision()===32?iV:aV}batchMatMul(e,t,n,o){return Z("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:o,bias:s,activation:a,preluActivationWeights:i}){return Z("fusedBatchMatMul")}slice(e,t,n){return Z("slice")}stridedSlice(e,t,n,o){return Z("stridedSlice")}unstack(e,t){return Z("unstack")}reverse(e,t){return Z("reverse")}concat(e,t){return Z("concat")}neg(e){return Z("neg")}add(e,t){return Z("add")}addN(e){return Z("addN")}subtract(e,t){return Z("subtract")}multiply(e,t){return Z("multiply")}realDivide(e,t){return Z("realDivide")}floorDiv(e,t){return Z("floorDiv")}sum(e,t){return Z("sum")}prod(e,t){return Z("prod")}unsortedSegmentSum(e,t,n){return Z("unsortedSegmentSum")}argMin(e,t){return Z("argMin")}argMax(e,t){return Z("argMax")}equal(e,t){return Z("equal")}notEqual(e,t){return Z("notEqual")}less(e,t){return Z("less")}lessEqual(e,t){return Z("lessEqual")}greater(e,t){return Z("greater")}greaterEqual(e,t){return Z("greaterEqual")}logicalNot(e){return Z("logicalNot")}logicalAnd(e,t){return Z("logicalAnd")}logicalOr(e,t){return Z("logicalOr")}where(e){return Z("where")}select(e,t,n){return Z("select")}topk(e,t,n){return Z("topk")}min(e,t){return Z("min")}minimum(e,t){return Z("minimum")}mod(e,t){return Z("mod")}max(e,t){return Z("max")}maximum(e,t){return Z("maximum")}all(e,t){return Z("all")}any(e,t){return Z("any")}squaredDifference(e,t){return Z("squaredDifference")}ceil(e){return Z("ceil")}floor(e){return Z("floor")}round(e){return Z("round")}sign(e){return Z("sign")}isNaN(e){return Z("isNaN")}isInf(e){return Z("isInf")}isFinite(e){return Z("isFinite")}pow(e,t){return Z("pow")}exp(e){return Z("exp")}expm1(e){return Z("expm1")}softmax(e,t){return Z("softmax")}log(e){return Z("log")}log1p(e){return Z("log1p")}sqrt(e){return Z("sqrt")}rsqrt(e){return Z("rsqrt")}square(e){return Z("square")}reciprocal(e){return Z("reciprocal")}relu(e){return Z("relu")}relu6(e){return Z("relu6")}prelu(e,t){return Z("prelu")}elu(e){return Z("elu")}eluDer(e,t){return Z("eluDer")}selu(e){return Z("selu")}int(e){return Z("int")}clip(e,t,n){return Z("clip")}abs(e){return Z("abs")}complexAbs(e){return Z("complexAbs")}sigmoid(e){return Z("sigmoid")}softplus(e){return Z("softplus")}sin(e){return Z("sin")}cos(e){return Z("cos")}tan(e){return Z("tan")}asin(e){return Z("asin")}acos(e){return Z("acos")}atan(e){return Z("atan")}atan2(e,t){return Z("atan2")}sinh(e){return Z("sinh")}cosh(e){return Z("cosh")}tanh(e){return Z("tanh")}asinh(e){return Z("asinh")}acosh(e){return Z("acosh")}atanh(e){return Z("atanh")}erf(e){return Z("erf")}step(e,t){return Z("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:o,activation:s,preluActivationWeights:a}){return Z("fusedConv2d")}conv2d(e,t,n){return Z("conv2d")}conv2dDerInput(e,t,n){return Z("conv2dDerInput")}conv2dDerFilter(e,t,n){return Z("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:o,activation:s,preluActivationWeights:a}){return Z("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return Z("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return Z("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return Z("depthwiseConv2DDerFilter")}conv3d(e,t,n){return Z("conv3d")}conv3dDerInput(e,t,n){return Z("conv3dDerInput")}conv3dDerFilter(e,t,n){return Z("conv3dDerFilter")}maxPool(e,t){return Z("maxPool")}maxPoolBackprop(e,t,n,o){return Z("maxPoolBackprop")}avgPool(e,t){return Z("avgPool")}avgPoolBackprop(e,t,n){return Z("avgPoolBackprop")}avgPool3d(e,t){return Z("avgPool3d")}avgPool3dBackprop(e,t,n){return Z("avgPool3dBackprop")}maxPool3d(e,t){return Z("maxPool3d")}maxPool3dBackprop(e,t,n,o){return Z("maxPool3dBackprop")}reshape(e,t){return Z("reshape")}cast(e,t){return Z("cast")}tile(e,t){return Z("tile")}pad(e,t,n){return Z("pad")}transpose(e,t){return Z("transpose")}gather(e,t,n,o=0){return Z("gather")}gatherND(e,t){return Z("gatherND")}scatterND(e,t,n){return Z("scatterND")}batchToSpaceND(e,t,n){return Z("batchToSpaceND")}spaceToBatchND(e,t,n){return Z("spaceToBatchND")}resizeBilinear(e,t,n,o,s){return Z("resizeBilinear")}resizeBilinearBackprop(e,t,n){return Z("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,o,s){return Z("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return Z("resizeNearestNeighborBackprop")}batchNorm(e,t,n,o,s,a){return Z("batchNorm")}localResponseNormalization4D(e,t,n,o,s){return Z("localResponseNormalization4D")}LRNGrad(e,t,n,o,s,a,i){return Z("LRNGrad")}multinomial(e,t,n,o){return Z("multinomial")}oneHot(e,t,n,o){return Z("oneHot")}cumsum(e,t,n,o){return Z("cumsum")}nonMaxSuppression(e,t,n,o,s){return Z("nonMaxSuppression")}fft(e){return Z("fft")}ifft(e){return Z("ifft")}complex(e,t){return Z("complex")}real(e){return Z("real")}imag(e){return Z("imag")}cropAndResize(e,t,n,o,s,a){return Z("cropAndResize")}depthToSpace(e,t,n){return Z("depthToSpace")}split(e,t,n){return Z("split")}sparseToDense(e,t,n,o){return Z("sparseToDense")}diag(e){return Z("diag")}fill(e,t,n){return Z("fill")}onesLike(e){return Z("onesLike")}zerosLike(e){return Z("zerosLike")}linspace(e,t,n){return Z("linspace")}dispose(){return Z("dispose")}};function Z(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function MI(r){let e=r.length,t=0,n=0;for(;e>0;)n=Math.random()*e|0,e--,t=r[e],r[e]=r[n],r[n]=t}function Dc(r,e,t){return Math.max(r,Math.min(e,t))}function lV(r){return r%2==0?r:r+1}function uV(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function cV(r,e){let t=Math.random();return e*t+(1-t)*r}function pV(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function A(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function je(r,e,t=""){A(Ur(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function Fn(r){A(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function os(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||sr(r)&&!t)for(let n=0;n<r.length;++n)os(r[n],e,t);else e.push(r);return e}function dt(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function mV(r){return r.length===0}function Ur(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function it(r){return r%1==0}function fV(r){if(Math.tanh!=null)return Math.tanh(r);if(r===Infinity)return 1;if(r===-Infinity)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function dV(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function hV(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return MI(e),e}function Wl(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function gV(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=e(s);if(t!=null&&s>=t){o();return}setTimeout(a,i)};a()})}function xV(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function rr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),A(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),A(r.every(n=>it(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function kb(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:rr(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),n.push(i))}return{newShape:t,keptDims:n}}function Cb(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function Ib(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function Sb(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function Nb(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function Tb(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function sr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array}function Eb(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function Ab(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function ss(r){return typeof r=="string"||r instanceof String}function LI(r){return typeof r=="boolean"}function zI(r){return typeof r=="number"}function $c(r){return Array.isArray(r)?$c(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array?"int32":zI(r)?"float32":ss(r)?"string":LI(r)?"bool":"float32"}function Gs(r){return!!(r&&r.constructor&&r.call&&r.apply)}function Rc(r,e){for(let t=e;t<r;++t)if(r%t==0)return t;return r}function Us(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function BI(r,e,t){let n=new Array;if(e.length===1){let o=e[0];for(let s=0;s<o;s++)n[s]=t[r+s]}else{let o=e[0],s=e.slice(1),a=s.reduce((i,l)=>i*l);for(let i=0;i<o;i++)n[i]=BI(r+i*a,s,t)}return n}function jl(r,e){if(r.length===0)return e[0];let t=r.reduce((n,o)=>n*o);if(t===0)return[];if(t!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}.`);return BI(0,r,e)}function dm(r,e){let t=Fc(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function Fc(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function yV(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return jl(r,new Float32Array(t));if(e==="int32")return jl(r,new Int32Array(t));if(e==="bool")return jl(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function hm(r){r.forEach(e=>{A(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function bV(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function wV(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function gm(r){return r&&r.then&&typeof r.then=="function"}var VI="tfjsflags",jh=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(gm(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=_V(this.global.location.search);VI in e&&e[VI].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=vV(o,s)})}};function _V(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(kV(e,n[0],n[1]),n.join("="))),e}function kV(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function vV(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function U(){return Db}var Db=null;function WI(r){Db=r}var $b;function Rb(){if($b==null){let r;if(typeof window!="undefined")r=window;else if(typeof global!="undefined")r=global;else if(typeof process!="undefined")r=process;else if(typeof self!="undefined")r=self;else throw new Error("Could not find a global object");$b=r}return $b}function CV(){let r=Rb();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function Fb(r,e){let t=CV();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var is="Abs",qs="Acos",Hs="Acosh",bn="Add",Hn="AddN",Gl="All",Ul="Any",Kn="ArgMax",na="ArgMin",Ks="Asin",Xs="Asinh",Ys="Atan",Zs="Atanh",Js="Atan2",Xn="AvgPool",ql="AvgPoolGrad",oa="AvgPool3D",Hl="AvgPool3DGrad",Yn="BatchMatMul",sa="BatchToSpaceND",Kl="Bincount",Ob="BroadcastTo",On="Cast",Qs="Ceil",Pn="ClipByValue",Xl="Complex",ia="ComplexAbs",as="Concat",Zn="Conv2D",Yl="Conv2DBackpropFilter",Jn="Conv2DBackpropInput",aa="Conv3D",Zl="Conv3DBackpropFilterV2",Jl="Conv3DBackpropInputV2",Qn="Cos",ei="Cosh",eo="Cumsum",ti="CropAndResize",Ql="DenseBincount",ri="DepthToSpace",to="DepthwiseConv2dNative",eu="DepthwiseConv2dNativeBackpropFilter",tu="DepthwiseConv2dNativeBackpropInput",ru="Diag",la="Dilation2D",Oc="Dilation2DBackpropInput",Pc="Dilation2DBackpropFilter",ro="RealDiv",ni="Elu",nu="EluGrad",oi="Erf",si="Equal",no="Exp",ls="ExpandDims",ii="Expm1",ou="FFT",ua="Fill",ai="FlipLeftRight",oo="Floor",so="FloorDiv",io="FusedBatchNorm",us="GatherV2",li="GatherNd",ui="Greater",ao="GreaterEqual",cs="Identity",su="IFFT",iu="Imag",ci="IsFinite",pi="IsInf",mi="IsNan",lo="LeakyRelu",fi="Less",di="LessEqual",au="LinSpace",uo="Log",hi="Log1p",gi="LogicalAnd",tl="LogicalNot",rl="LogicalOr",Pb="LogSoftmax",ca="LRN",lu="LRNGrad",co="Max",po="Maximum",mo="MaxPool",uu="MaxPoolGrad",pa="MaxPool3D",cu="MaxPool3DGrad",pu="MaxPoolWithArgmax",fo="Mean",ho="Min",go="Minimum",ma="MirrorPad",xi="Mod",mu="Multinomial",xo="Multiply",ps="Neg",yi="NotEqual",bi="NonMaxSuppressionV3",wi="NonMaxSuppressionV4",_i="NonMaxSuppressionV5",ms="OnesLike",yo="OneHot",fs="Pack",bo="PadV2",IV="Pool",wo="Pow",_o="Prelu",vi="Prod",fa="Range",fu="Real",ki="Reciprocal",vo="Relu",ds="Reshape",da="ResizeNearestNeighbor",du="ResizeNearestNeighborGrad",ko="ResizeBilinear",hu="ResizeBilinearGrad",Co="Relu6",Io="Reverse",So="Round",No="Rsqrt",Ci="ScatterNd",hs="Select",Ii="Selu",gs="Slice",To="Sin",Si="Sinh",Ni="Sign",Eo="Sigmoid",Ti="Softplus",Ao="Sqrt",Do="Sum",ha="SpaceToBatchND",xs="SplitV",$o="Softmax",Ro="SquaredDifference",ga="Square",Fo="Sub",gu="SparseToDense",Ei="StridedSlice",Ai="Tan",Oo="Tanh",wn="Tile",Di="TopK",Po="Transpose",xu="Unique",ys="Unpack",xa="UnsortedSegmentSum",bs="ZerosLike",$i="Step",Mc="FromPixels",Ri="RotateWithOffset",ws="_FusedMatMul",_s="FusedConv2D",vs="FusedDepthwiseConv2D";var Lc=Fb("kernelRegistry",()=>new Map),xm=Fb("gradRegistry",()=>new Map);function ym(r,e){let t=Mb(r,e);return Lc.get(t)}function Gh(r){return xm.get(r)}function bm(r){let e=Lc.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&t.push(a)}return t}function nl(r){let{kernelName:e,backendName:t}=r,n=Mb(e,t);Lc.has(n)&&console.warn(`The kernel '${e}' for backend '${t}' is already registered`),Lc.set(n,r)}function Lb(r){let{kernelName:e}=r;xm.has(e)&&U().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),xm.set(e,r)}function SV(r,e){let t=Mb(r,e);if(!Lc.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);Lc.delete(t)}function NV(r){if(!xm.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);xm.delete(r)}function TV(r,e){bm(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});nl(o)})}function Mb(r,e){return`${e}_${r}`}var x={};Ye(x,{arraysEqual:()=>Ur,assert:()=>A,assertNonNegativeIntegerDimensions:()=>hm,assertNonNull:()=>Fn,assertShapesMatch:()=>je,bytesFromStringArray:()=>Ab,bytesPerElement:()=>Eb,checkConversionForErrors:()=>Sb,clamp:()=>Dc,computeStrides:()=>Us,createScalarValue:()=>EV,createShuffledIndices:()=>hV,decodeString:()=>Bc,distSquared:()=>pV,encodeString:()=>ol,fetch:()=>DV,flatten:()=>os,getArrayFromDType:()=>Ib,getTypedArrayFromDType:()=>Cb,hasEncodingLoss:()=>Tb,indexToLoc:()=>wV,inferDtype:()=>$c,inferFromImplicitShape:()=>xV,isBoolean:()=>LI,isFunction:()=>Gs,isInt:()=>it,isNumber:()=>zI,isPromise:()=>gm,isScalarShape:()=>mV,isString:()=>ss,isTypedArray:()=>sr,isValidDtype:()=>Nb,locToIndex:()=>bV,makeOnesTypedArray:()=>dm,makeZerosNestedTypedArray:()=>yV,makeZerosTypedArray:()=>Fc,nearestDivisor:()=>Rc,nearestLargerEven:()=>lV,now:()=>Uh,parseAxisParam:()=>rr,randUniform:()=>cV,repeatedTry:()=>gV,rightPad:()=>Wl,shuffle:()=>MI,sizeFromShape:()=>dt,sizeToSquarishShape:()=>dV,squeezeShape:()=>kb,sum:()=>uV,tanh:()=>fV,toNestedArray:()=>jl,toTypedArray:()=>zc});function EV(r,e){return e==="string"?ol(r):zc([r],e)}function AV(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function zc(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=os(r)),U().getBool("DEBUG")&&Sb(r,e),AV(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Uh(){return U().platform.now()}function DV(r,e){return U().platform.fetch(r,e)}function ol(r,e="utf-8"){return e=e||"utf-8",U().platform.encode(r,e)}function Bc(r,e="utf-8"){return e=e||"utf-8",U().platform.decode(r,e)}var zb=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new jI)}profileKernel(e,t,n){let o,s=()=>{o=n()},a=this.backendTimer.time(s);if(U().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let u=o[l];u.data().then(c=>{$V(c,u.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(l=>{this.logger.logKernelProfile(t,i,l[0],l[1],s,l[2])})})}};function $V(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var jI=class{logKernelProfile(e,t,n,o,s,a){let i=typeof o=="number"?Wl(`${o}ms`,9):o.error,l=Wl(e,25),u=t.rank,c=t.size,p=Wl(t.shape.toString(),14),m="";for(let f in s){let d=s[f];if(d!=null){let h=d.shape||t.shape,g=h.length;m+=`${f}: ${g}D ${g>0?h:""} `}}console.log(`%c${l}	%c${i}	%c${u}D ${p}	%c${c}	%c${m}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function GI(r,e,t){let n={},o={};for(let l=0;l<e.length;l++)n[e[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let m=c[p],f=!1;for(let d=0;d<e.length;d++)if(n[m.id]){u.outputs.forEach(h=>n[h.id]=!0),f=!0,o[u.id]=!0;break}if(f)break}}let s={};s[t.id]=!0;let a={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(s[u.outputs[p].id]){for(let m in c)s[c[m].id]=!0,a[u.id]=!0;break}}let i=[];for(let l=0;l<r.length;l++){let u=r[l];if(o[u.id]&&a[u.id]){let c={};for(let m in u.inputs){let f=u.inputs[m];n[f.id]&&(c[m]=f)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,i.push(p)}}return i}function UI(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],a=[];if(s.outputs.forEach(l=>{let u=r[l.id];u!=null?a.push(u):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let l in s.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let u=t(()=>i[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=s.inputs[l];if(!Ur(u.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=n(p,u),p.dispose()}}}}var qI=20,wm=3,Bb=7;function HI(r,e,t,n){let o=Us(e),s=RV(r,e,t,o),a=e.length,i=qh(r,e,t,o,s),l=["Tensor"];return n&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join(`
`)),l.join(`
`)}function RV(r,e,t,n){let o=dt(e),s=n[n.length-1],a=new Array(s).fill(0),i=e.length,l=t==="complex64"?vm(r):r;if(i>1)for(let u=0;u<o/s;u++){let c=u*s;for(let p=0;p<s;p++)a[p]=Math.max(a[p],_m(l[c+p],0,t).length)}return a}function _m(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(Bb))} + ${parseFloat(r[1].toFixed(Bb))}j`:ss(r)?n=`'${r}'`:t==="bool"?n=KI(r):n=parseFloat(r.toFixed(Bb)).toString(),Wl(n,e)}function KI(r){return r===0?"false":"true"}function qh(r,e,t,n,o,s=!0){let a=t==="complex64"?2:1,i=e[0],l=e.length;if(l===0){if(t==="complex64"){let h=vm(r);return[_m(h[0],0,t)]}return t==="bool"?[KI(r[0])]:[r[0].toString()]}if(l===1){if(i>qI){let g=wm*a,y=Array.from(r.slice(0,g)),b=Array.from(r.slice((i-wm)*a,i*a));return t==="complex64"&&(y=vm(y),b=vm(b)),["["+y.map((w,_)=>_m(w,o[_],t)).join(", ")+", ..., "+b.map((w,_)=>_m(w,o[i-wm+_],t)).join(", ")+"]"]}let h=t==="complex64"?vm(r):Array.from(r);return["["+h.map((g,y)=>_m(g,o[y],t)).join(", ")+"]"]}let u=e.slice(1),c=n.slice(1),p=n[0]*a,m=[];if(i>qI){for(let h=0;h<wm;h++){let g=h*p,y=g+p;m.push(...qh(r.slice(g,y),u,t,c,o,!1))}m.push("...");for(let h=i-wm;h<i;h++){let g=h*p,y=g+p;m.push(...qh(r.slice(g,y),u,t,c,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*p,y=g+p;m.push(...qh(r.slice(g,y),u,t,c,o,h===i-1))}let f=l===2?",":"";m[0]="["+m[0]+f;for(let h=1;h<m.length-1;h++)m[h]=" "+m[h]+f;let d=`,
`;for(let h=2;h<l;h++)d+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":d),m}function vm(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var ct=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=dt(e),n!=null){let o=n.length;A(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Ib(t,this.size),this.strides=Us(e)}set(e,...t){t.length===0&&(t=[0]),A(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Fi().makeTensor(this.values,this.shape,this.dtype)}},Fi=null,Vc=null,FV=null;function XI(r){Fi=r}function YI(r){Vc=r}function ZI(r){FV=r}var R=class{constructor(e,t,n,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=dt(e),this.strides=Us(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Vc.buffer(this.shape,this.dtype,e)}bufferSync(){return Vc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return jl(this.shape,e)}arraySync(){return jl(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let e=Fi().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Bc(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Fi().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Bc(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Fi().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Fi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Vc.print(this,e)}clone(){return this.throwIfDisposed(),Vc.clone(this)}toString(e=!1){let t=this.dataSync();return HI(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Vc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Fi().makeVariable(this,e,t,n)}};Object.defineProperty(R,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});var sl=class extends R{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ur(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Fi().disposeTensor(this),this.dataId=e.dataId,Fi().incRef(this,null)}dispose(){Fi().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(sl,Symbol.hasInstance,{value:r=>r instanceof R&&r.assign!=null&&r.assign instanceof Function});var Mo={};Ye(Mo,{assertTypesMatch:()=>qb,getTensorsInContainer:()=>km,isTensorInList:()=>PV,makeTypesMatch:()=>Ge});var Vb;(function(r){r.R0="R0",r.R1="R1",r.R2="R2",r.R3="R3",r.R4="R4",r.R5="R5",r.R6="R6"})(Vb||(Vb={}));var Wb;(function(r){r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64"})(Wb||(Wb={}));var jb;(function(r){r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64"})(jb||(jb={}));var Gb;(function(r){r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64"})(Gb||(Gb={}));var Ub;(function(r){r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64"})(Ub||(Ub={}));var OV={float32:Gb,int32:Wb,bool:jb,complex64:Ub};function dr(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return OV[r][e]}function yu(r){return dr(r,"int32")}function Ge(r,e){if(r.dtype===e.dtype)return[r,e];let t=dr(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function qb(r,e){A(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function PV(r,e){return e.some(t=>t.id===r.id)}function km(r){let e=[],t=new Set;return JI(r,e,t),e}function JI(r,e,t){if(r==null)return;if(r instanceof R){e.push(r);return}if(!MV(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),JI(s,e,t))}}function MV(r){return Array.isArray(r)||typeof r=="object"}var Hb=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},bu=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Hb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new zb(this.backendInstance),!0}setupRegisteredKernels(){bm(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){bm(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof js)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t);o.disposeData(t),n.backend=e,e.move(t,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return bu.nextTensorId++}nextVariableId(){return bu.nextVariableId++}clone(e){let t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e},o=a=>({x:()=>{let i="float32",l={x:a},u={dtype:i};return D.runKernelFunc(c=>c.cast(a,i),l,null,On,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n,o,s){let a=null,i=null;return this.runKernelFunc(a,t,i,e,n,o,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(l=>{s+=l.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e,t,n,o,s,a,i){let l,u=[],c=this.isTapeOn();o==null&&(o=this.state.activeScope!=null?this.state.activeScope.name:"");let p=this.state.numBytes,m=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let f;this.backendName==null&&this.backend;let d=ym(o,this.backendName),h;if(d!=null)f=()=>{let y=this.backend.numDataIds();h=d.kernelFunc({inputs:t,attrs:s,backend:this.backend});let b=Array.isArray(h)?h:[h];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(o,y,b);let w=b.map(_=>{if(_.rank!=null)return _;let{dataId:k,shape:E,dtype:N}=_;return this.makeTensorFromDataId(k,E,N)});if(c){let _=this.getTensorsForGradient(o,t,w);if(_==null){i==null&&(i=[]);let k=w.filter((E,N)=>i[N]);_=(a||[]).slice().concat(k)}u=this.saveTensorsForBackwardMode(_)}return w};else{if(e==null)throw new Error(`Error running ${o}: Neither modular kernel nor forward func passed`);let y=b=>{!c||(u=b.map(w=>this.keep(this.clone(w))))};f=()=>{let b=this.backend.numDataIds();h=this.tidy(()=>e(this.backend,y));let w=Array.isArray(h)?h:[h];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(o,b,w),w}}let g;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?l=f():(g=this.profiler.profileKernel(o,t,()=>f()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),l=g.outputs)}),c&&this.addTapeNode(o,t,l,n,u,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:o,bytesAdded:this.state.numBytes-p,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-m,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(y=>t[y]!=null?t[y].shape:null),outputShapes:l.map(y=>y.shape),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(h)?l:l[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=Gh(e);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(A(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=s.map(u=>t[u]);let l=n.filter((u,c)=>a[c]);return i.concat(l)}return null}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&ss(e[0])&&(s=e.map(l=>ol(l)));let a=o.write(s,t,n),i=new R(t,n,a,this.nextTensorId());if(this.incRef(i,o),n==="string"){let l=this.state.tensorInfo.get(a),u=Ab(s);this.state.numBytes+=u-l.bytes,l.bytes=u}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s=new R(t,n,e,this.nextTensorId());return this.incRef(s,o),s}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new sl(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(e,t){let n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++,n===0){this.state.numDataBuffers++;let o=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(o=e.size*Eb(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:o,refCount:0}),this.state.numBytes+=o}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof sl||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,e.dtype==="string"&&this.state.numStringTensors--;let t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?(e.dtype!=="complex64"&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},l=Gh(e);l!=null&&(o=l.gradFunc),o!=null&&(i.gradient=u=>(u=u.map((c,p)=>{if(c==null){let m=n[p],f=Fc(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return c}),o(u.length>1?u:u[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=km(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(A(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(s instanceof R,()=>"The result y returned by f() must be a tensor.");let a=GI(this.state.activeTape,t,s);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n==null?LV(s.shape):n,UI(i,a,u=>this.tidy(u),zV);let l=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let c of u.saved)c.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(e){return A(Gs(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{A(t.every(s=>s instanceof R),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};return t.forEach((s,a)=>{o[a]=s}),this.runKernelFunc((s,a)=>(n=e(...t,a),A(n.value instanceof R,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(Gs(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),o,(s,a)=>{let i=n.gradFunc(s,a),l=Array.isArray(i)?i:[i];A(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(l.every(c=>c instanceof R),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return l.forEach((c,p)=>{u[p]=()=>c}),u})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=Uh(),n=await this.backend.time(e);return n.wallMs=Uh()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Hb;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};bu.nextTensorId=0;bu.nextVariableId=0;function LV(r){let e=dm(dt(r),"float32");return D.makeTensor(e,r,"float32")}function Kb(){let r=Rb();if(r._tfengine==null){let e=new jh(r);r._tfengine=new bu(e)}return WI(r._tfengine.ENV),XI(()=>r._tfengine),r._tfengine}var D=Kb();function zV(r,e){let t={a:r,b:e};return D.runKernel(bn,t)}var Wc={};Ye(Wc,{isBrowser:()=>Xb,isMobile:()=>VV});function BV(){return typeof navigator!="undefined"&&navigator!=null}function VV(){if(BV()){let r=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(r)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(r.substr(0,4))}return!1}function Xb(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Oi=U();Oi.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Oi.registerFlag("IS_BROWSER",()=>Xb());Oi.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Oi.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Oi.registerFlag("PROD",()=>!1);Oi.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Oi.getBool("DEBUG"));Oi.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Oi.registerFlag("IS_TEST",()=>!1);Oi.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);function Cr(r,e){let t=r;if(sr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||sr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&U().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&QI(r,n,[]),n}function QI(r,e,t){if(t=t||[],!Array.isArray(r)&&!sr(r)){A(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}A(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),A(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)QI(r[o],n,t.concat(o))}function eS(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function v(r,e,t,n="numeric"){if(r instanceof R)return eS(n,r.dtype,e,t),r;let o=$c(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),eS(n,o,e,t),r==null||!sr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}let s=Cr(r,o);!sr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?zc(r,o):os(r,[],!0);return D.makeTensor(i,s,o)}function ya(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>v(s,`${e}[${a}]`,t,n))}var tS="__op";function S(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+tS;let o=(...s)=>{D.startScope(t);try{let a=n(...s);return gm(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function WV(r,e){let t=v(r,"real","complex"),n=v(e,"imag","complex");je(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return D.runKernel(Xl,o)}var _n=S({complex_:WV});function qr(r,e,t,n){if(n==null&&(n=$c(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!sr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){hm(e);let o=dt(e),s=dt(t);A(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],l=a===t.length-1?i!==dt(e.slice(a)):!0;A(t[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!sr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?zc(r,n):os(r,[],!0),D.makeTensor(r,e,n)}function Or(r,e,t){let n=Cr(r,t);return qr(r,e,n,t)}var Cm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Hh=4;async function rS(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],l=Array.isArray(r)?r[a].tensor:r[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let u={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(async p=>{let m=await l.bytes(),f=m.reduce((g,y)=>g+y.length,0)+Hh*m.length,d=new Uint8Array(f),h=0;for(let g=0;g<m.length;g++){let y=m[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);d.set(b,h),h+=Hh,d.set(y,h),h+=y.length}p(d)});n.push(c)}else n.push(l.data());e!=null&&(u.group=e),t.push(u)}let s=await Promise.all(n);return{data:jV(s),specs:t}}function Kh(r,e){let t={},n,o=0;for(let s of e){let a=s.name,i=s.dtype,l=s.shape,u=dt(l),c;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let m=Cm[p.dtype],f=r.slice(o,o+u*m),d=p.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(i==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];c[h]=g*p.scale+p.min}}else if(p.dtype==="float16")n===void 0&&(n=GV()),c=n(d);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(i==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];c[h]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*m}else if(i==="string"){let p=dt(s.shape);c=[];for(let m=0;m<p;m++){let f=new Uint32Array(r.slice(o,o+Hh))[0];o+=Hh;let d=new Uint8Array(r.slice(o,o+f));c.push(d),o+=f}}else{let p=Cm[i],m=r.slice(o,o+u*p);if(i==="float32")c=new Float32Array(m);else if(i==="int32")c=new Int32Array(m);else if(i==="bool")c=new Uint8Array(m);else if(i==="complex64"){c=new Float32Array(m);let f=new Float32Array(c.length/2),d=new Float32Array(c.length/2);for(let y=0;y<f.length;y++)f[y]=c[y*2],d[y]=c[y*2+1];let h=Or(f,l,"float32"),g=Or(d,l,"float32");t[a]=_n(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*p}i!=="complex64"&&(t[a]=Or(c,l,i))}return t}function jV(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var Yb=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function nS(r){return Yb?Buffer.byteLength(r):new Blob([r]).size}function oS(r){if(Yb)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function sS(r){if(Yb){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function jc(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function Zb(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function Pi(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:nS(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:nS(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function UV(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)==0;)o-=8388608,n<<=1;return n&=~8388608,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function qV(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function HV(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function GV(){let r=UV(),e=qV(),t=HV();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],l=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=l}return new Float32Array(o)}}var Et=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Et.instance==null&&(Et.instance=new Et),Et.instance}static registerSaveRouter(e){Et.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Et.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Et.getHandlers(e,"save")}static getLoadHandlers(e,t){return Et.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Et.getInstance().loadRouters:Et.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&o.push(i)}),o}},iS=r=>Et.registerSaveRouter(r),aS=r=>Et.registerLoadRouter(r),lS=r=>Et.getSaveHandlers(r),uS=(r,e)=>Et.getLoadHandlers(r,e);var Jb="tensorflowjs",Qb=1,wu="models_store",il="model_info_store";function cS(){if(!U().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window=="undefined"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ew(r){let e=r.result;e.createObjectStore(wu,{keyPath:"modelPath"}),e.createObjectStore(il,{keyPath:"modelPath"})}var ba=class{constructor(e){if(this.indexedDB=cS(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(Jb,Qb);s.onupgradeneeded=()=>ew(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(wu,"readonly"),u=i.objectStore(wu).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=c=>(a.close(),o(u.error)),i.oncomplete=()=>a.close()}else{let i=Pi(t),l=a.transaction(il,"readwrite"),u=l.objectStore(il),c=u.put({modelPath:this.modelPath,modelArtifactsInfo:i}),p;c.onsuccess=()=>{p=a.transaction(wu,"readwrite");let f=p.objectStore(wu).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});f.onsuccess=()=>n({modelArtifactsInfo:i}),f.onerror=d=>{u=l.objectStore(il);let h=u.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(f.error)),h.onerror=g=>(a.close(),o(f.error))}},c.onerror=m=>(a.close(),o(c.error)),l.oncomplete=()=>{p==null?a.close():p.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};ba.URL_SCHEME="indexeddb://";var pS=r=>U().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ba.URL_SCHEME)?KV(r.slice(ba.URL_SCHEME.length)):null;Et.registerSaveRouter(pS);Et.registerLoadRouter(pS);function KV(r){return new ba(r)}function XV(r){return r.startsWith(ba.URL_SCHEME)?r.slice(ba.URL_SCHEME.length):r}var tw=class{constructor(){this.indexedDB=cS()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(Jb,Qb);n.onupgradeneeded=()=>ew(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(il,"readonly"),i=s.objectStore(il).getAll();i.onsuccess=()=>{let l={};for(let u of i.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},i.onerror=l=>(o.close(),t(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=XV(e),new Promise((t,n)=>{let o=this.indexedDB.open(Jb,Qb);o.onupgradeneeded=()=>ew(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(il,"readwrite"),i=a.objectStore(il),l=i.get(e),u;l.onsuccess=()=>{if(l.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=i.delete(e),p=()=>{u=s.transaction(wu,"readwrite");let f=u.objectStore(wu).delete(e);f.onsuccess=()=>t(l.result.modelArtifactsInfo),f.onerror=d=>n(l.error)};c.onsuccess=p,c.onerror=m=>(p(),s.close(),n(l.error))}},l.onerror=c=>(s.close(),n(l.error)),a.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var wa="/",Gc="tensorflowjs_models",mS="info",YV="model_topology",ZV="weight_specs",JV="weight_data",QV="model_metadata";function fS(r){return{info:[Gc,r,mS].join(wa),topology:[Gc,r,YV].join(wa),weightSpecs:[Gc,r,ZV].join(wa),weightData:[Gc,r,JV].join(wa),modelMetadata:[Gc,r,QV].join(wa)}}function eW(r){let e=r.split(wa);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(wa)}function tW(r){return r.startsWith(_a.URL_SCHEME)?r.slice(_a.URL_SCHEME.length):r}var _a=class{constructor(e){if(!U().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=fS(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=Pi(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,oS(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return e.signature!=null&&(s.signature=e.signature),e.userDefinedMetadata!=null&&(s.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch(s){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=sS(a),t}};_a.URL_SCHEME="localstorage://";var dS=r=>U().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(_a.URL_SCHEME)?rW(r.slice(_a.URL_SCHEME.length)):null;Et.registerSaveRouter(dS);Et.registerLoadRouter(dS);function rW(r){return new _a(r)}var rw=class{constructor(){A(U().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Gc+wa,n=wa+mS;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let a=eW(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=tW(e);let t=fS(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}};var Uc="://",Hr=class{constructor(){this.managers={}}static getInstance(){return Hr.instance==null&&(Hr.instance=new Hr),Hr.instance}static registerManager(e,t){A(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Uc)&&(e=e.slice(0,e.indexOf(Uc))),A(e.length>0,()=>"scheme must not be an empty string.");let n=Hr.getInstance();A(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Xh(r){if(r.indexOf(Uc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Hr.getSchemes().join(",")}`);return{scheme:r.split(Uc)[0],path:r.split(Uc)[1]}}async function hS(r,e,t=!1){A(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Et.getLoadHandlers(r);A(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),A(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Et.getSaveHandlers(e);A(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),A(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let a=s[0],i=Xh(r).scheme,l=Xh(r).path,u=i===Xh(r).scheme,c=await o.load();t&&u&&await Hr.getManager(i).removeModel(l);let p=await a.save(c);return t&&!u&&await Hr.getManager(i).removeModel(l),p.modelArtifactsInfo}async function gS(){let r=Hr.getSchemes(),e={};for(let t of r){let n=await Hr.getManager(t).listModels();for(let o in n){let s=t+Uc+o;e[s]=n[o]}}return e}async function xS(r){let e=Xh(r);return Hr.getManager(e.scheme).removeModel(e.path)}async function yS(r,e){return hS(r,e,!1)}async function bS(r,e){return hS(r,e,!0)}var wS=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(U().get("IS_BROWSER")){U().setPlatform("browser",new wS);try{Hr.registerManager(_a.URL_SCHEME,new rw)}catch(r){}try{Hr.registerManager(ba.URL_SCHEME,new tw)}catch(r){}}var nW={importFetch:()=>_S()},nw;var vS=class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return U().global.fetch!=null?U().global.fetch(e,t):(nw==null&&(nw=nW.importFetch()),nw(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};U().get("IS_NODE")&&U().setPlatform("node",new vS);function Ie(r,e="float32",t){return e=e||"float32",hm(r),new ct(r,e,t)}function oW(r,e){let t=v(r,"x","cast");if(!Nb(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return D.runKernel(On,n,o)}var oe=S({cast_:oW});function sW(r){let t={x:v(r,"x","clone","string_or_numeric")};return D.runKernel(cs,t)}var Mn=S({clone_:sW});function ow(r,e=!1){console.log(r.toString(e))}Kb();var iW={buffer:Ie,cast:oe,clone:Mn,print:ow};YI(iW);var Ir={};Ye(Ir,{browserFiles:()=>IS,browserHTTPRequest:()=>TS,concatenateArrayBuffers:()=>jc,copyModel:()=>yS,decodeWeights:()=>Kh,encodeWeights:()=>rS,fromMemory:()=>AS,getLoadHandlers:()=>uS,getModelArtifactsInfoForJSON:()=>Pi,getSaveHandlers:()=>lS,http:()=>Jh,isHTTPScheme:()=>Zh,listModels:()=>gS,loadWeights:()=>SS,moveModel:()=>bS,registerLoadRouter:()=>aS,registerSaveRouter:()=>iS,removeModel:()=>xS,weightsLoaderFactory:()=>aw,withSaveHandler:()=>DS});var aW="model",lW=".json",uW=".weights.bin";function kS(r){return new Promise(e=>setTimeout(e)).then(r)}var al=class{constructor(e){if(!U().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(al.URL_SCHEME)&&(e=e.slice(al.URL_SCHEME.length)),(e==null||e.length===0)&&(e=aW),this.modelTopologyFileName=e+lW,this.weightDataFileName=e+uW}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(o.signature=e.signature),e.userDefinedMetadata!=null&&(o.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(o.modelInitializer=e.modelInitializer);let s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await kS(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await kS(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Pi(e)}}}};al.URL_SCHEME="downloads://";var CS=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){let e=this.files[0],t=this.files.slice(1);return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=JSON.parse(a.target.result),l=i.modelTopology;if(l==null){o(new Error(`modelTopology field is missing from file ${e.name}`));return}t.length===0&&n({modelTopology:l});let u=i.weightsManifest;if(u==null){o(new Error(`weightManifest field is missing from file ${e.name}`));return}let c;try{c=this.checkManifestAndWeightFiles(u,t)}catch(d){o(d);return}let p=[],m=[],f=[];u.forEach(d=>{d.paths.forEach(h=>{m.push(h),f.push(null)}),p.push(...d.weights)}),u.forEach(d=>{d.paths.forEach(h=>{let g=new FileReader;g.onload=y=>{let b=y.target.result,w=m.indexOf(h);if(f[w]=b,f.indexOf(null)===-1){let _={modelTopology:l,weightSpecs:p,weightData:jc(f),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy};i.signature!=null&&(_.signature=i.signature),i.userDefinedMetadata!=null&&(_.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(_.modelInitializer=i.modelInitializer),n(_)}},g.onerror=y=>o(`Failed to weights data from file of path '${h}'.`),g.readAsArrayBuffer(c[h])})})},s.onerror=a=>o(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)})}checkManifestAndWeightFiles(e,t){let n=[],o=t.map(a=>Zb(a.name)),s={};for(let a of e)a.paths.forEach(i=>{let l=Zb(i);if(n.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(n.push(l),o.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);s[i]=t[o.indexOf(l)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return s}},pW=r=>U().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(al.URL_SCHEME)?cW(r.slice(al.URL_SCHEME.length)):null;Et.registerSaveRouter(pW);function cW(r="model"){return new al(r)}function IS(r){return new CS(r)}function sw(r,e,t,n){a(r),t=t==null?0:t,n=n==null?1:n,i(t,n);let o=0,s=l=>(l.then(u=>{let c=t+ ++o/r.length*(n-t);return e(c),u}),l);function a(l){A(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,u){A(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),A(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),A(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(s))}async function iw(r,e){e==null&&(e={});let t=e.fetchFunc==null?U().platform.fetch:e.fetchFunc,n=r.map(p=>t(p,e.requestInit,{isBinary:!0})),o=0,s=.5,i=(e.onProgress==null?await Promise.all(n):await sw(n,e.onProgress,o,s)).map(p=>p.arrayBuffer()),l=.5,u=1;return e.onProgress==null?await Promise.all(i):await sw(i,e.onProgress,l,u)}async function SS(r,e="",t,n){return aw(a=>iw(a,{requestInit:n}))(r,e,t)}function aw(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((f,d)=>{let h=0;f.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=Cm[y]*dt(g.shape),w=()=>{o[d]=!0,s[d]==null&&(s[d]=[]),s[d].push({manifestEntry:g,groupOffset:h,sizeBytes:b})};n!=null?n.forEach((_,k)=>{_===g.name&&(w(),a[k]=!0)}):w(),i.push(g.name),h+=b})}),!a.every(f=>f)){let f=n.filter((d,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=o.reduce((f,d,h)=>(d&&f.push(h),f),[]),u=[];l.forEach(f=>{e[f].paths.forEach(d=>{let h=t+(t.endsWith("/")?"":"/")+d;u.push(h)})});let c=await r(u),p={},m=0;return l.forEach(f=>{let d=e[f].paths.length,h=0;for(let _=0;_<d;_++)h+=c[m+_].byteLength;let g=new ArrayBuffer(h),y=new Uint8Array(g),b=0;for(let _=0;_<d;_++){let k=new Uint8Array(c[m+_]);y.set(k,b),b+=k.byteLength}s[f].forEach(_=>{let k=g.slice(_.groupOffset,_.groupOffset+_.sizeBytes),E=Kh(k,[_.manifestEntry]);for(let N in E)p[N]=E[N]}),m+=d}),p}}var mW="application/octet-stream",fW="application/json",Yh=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(A(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=U().platform.fetch,A(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&A(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(o.signature=e.signature),e.userDefinedMetadata!=null&&(o.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(o.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(o)],{type:fW}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:mW}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Pi(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(d){let h=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?h+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":h+=" Please make sure the server is serving valid JSON for this request.",new Error(h)}let n=t.modelTopology,o=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,l=t.signature,u=t.userDefinedMetadata;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,p;o!=null&&([c,p]=await this.loadWeights(o));let m={modelTopology:n,weightSpecs:c,weightData:p,generatedBy:s,convertedBy:a,format:i};l!=null&&(m.signature=l),u!=null&&(m.userDefinedMetadata=u);let f=t.modelInitializer;return f&&(m.modelInitializer=f),m}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=dW(t),s=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let i=[],l=[];for(let c of e)for(let p of c.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(p)):i.push(s+p+o);this.weightUrlConverter&&i.push(...await Promise.all(l));let u=await iw(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,jc(u)]}};Yh.URL_SCHEME_REGEX=/^https?:\/\//;function dW(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function Zh(r){return r.match(Yh.URL_SCHEME_REGEX)!=null}var NS=(r,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>Zh(n)):t=Zh(r),t)return Jh(r,e)}return null};Et.registerSaveRouter(NS);Et.registerLoadRouter(NS);function Jh(r,e){return new Yh(r,e)}function TS(r,e){return Jh(r,e)}var Qh=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},ES=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function AS(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Qh(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Qh({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Qh({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function DS(r){return new ES(r)}var $S={};Ye($S,{confusionMatrix:()=>bW});function hW(r,e,t=!1,n=!1){let o=v(r,"a","matMul"),s=v(e,"b","matMul");[o,s]=Ge(o,s);let a={a:o,b:s},i={transposeA:t,transposeB:n};return D.runKernel(Yn,a,i)}var Ue=S({matMul_:hW});function gW(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:v(r,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:n};return D.runKernel(yo,s,a)}var ks=S({oneHot_:gW});function xW(r,e){let t=v(r,"x","transpose");if(e==null&&(e=t.shape.map((s,a)=>a).reverse()),A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(s=>{A(s>=0&&s<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();let n={x:t},o={perm:e};return D.runKernel(Po,n,o)}var qe=S({transpose_:xW});function yW(r,e,t){let n=v(r,"labels","confusionMatrix"),o=v(e,"predictions","confusionMatrix");A(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),A(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),A(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),A(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),A(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=ks(oe(n,"int32"),t),a=ks(oe(o,"int32"),t),i=qe(s),l=Ue(i,a);return oe(l,"int32")}var bW=S({confusionMatrix_:yW});var eg={};Ye(eg,{fromPixels:()=>vW,toPixels:()=>_W});function lw(r,e,t){if(Fn(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Cr(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return qr(r,e,n,t)}var qc;function wW(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData!="undefined"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o){let d=2;if(o&&r.readyState<d)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(ym(Mc,D.backendName)!=null){let d={pixels:r},h={numChannels:e};return D.runKernel(Mc,d,h)}let[u,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;a?p=r.getContext("2d").getImageData(0,0,u,c).data:n||t?p=r.data:(s||o||i)&&(qc==null&&(qc=document.createElement("canvas").getContext("2d")),qc.canvas.width=u,qc.canvas.height=c,qc.drawImage(r,0,0,u,c),p=qc.getImageData(0,0,u,c).data);let m;if(e===4)m=new Int32Array(p);else{let d=u*c;m=new Int32Array(d*e);for(let h=0;h<d;h++)for(let g=0;g<e;++g)m[h*e+g]=p[h*4+g]}return lw(m,[c,u,e],"int32")}async function _W(r,e){let t=v(r,"img","toPixels");if(!(r instanceof R)){let u=t;t=oe(u,"int32"),u.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(o*n*4);for(let u=0;u<n*o;++u){let c=[0,0,0,255];for(let m=0;m<s;m++){let f=a[u*s+m];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(c[0]=f*i,c[1]=f*i,c[2]=f*i):c[m]=f*i}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(e!=null){e.width=o,e.height=n;let u=e.getContext("2d"),c=new ImageData(l,o,n);u.putImageData(c,0,0)}return t!==r&&t.dispose(),l}var vW=S({fromPixels_:wW});var tg={};Ye(tg,{prepareAndValidate:()=>RS});function RS(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(dt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],a=1;for(let p=0;p<o.length-1;++p)a*=o[p];let i=r.shape,l=o.slice();l.pop();let u=1;for(let p=s;p<t;++p)u*=i[p],l.push(i[p]);let c=[...Us(r.shape).map(p=>p/u),1].slice(0,s);return[l,a,u,c]}var rg={};Ye(rg,{calculateShapes:()=>FS,validateInput:()=>ng,validateUpdateShape:()=>uw});function uw(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function ng(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}uw(t,e,r)}function FS(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,a=1;for(let p=o;p<s;++p)a*=t[p];let i=o<1?1:o,l=dt(e.shape)/i,u=[...Us(t.slice(0,o)),1],c=dt(t);return{sliceRank:o,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}var ir={};Ye(ir,{assertParamsValid:()=>kW,computeFlatOffset:()=>IW,computeOutShape:()=>OS,getNormalizedAxes:()=>GS,isSliceContinous:()=>CW,maskToAxes:()=>og,parseSliceParams:()=>cw,sliceInfo:()=>SW,startForAxis:()=>WS,startIndicesWithElidedDims:()=>zS,stopForAxis:()=>jS,stopIndicesWithElidedDims:()=>BS,stridesForAxis:()=>VS,stridesWithElidedDims:()=>PS});function kW(r,e,t){let n=r.shape.length;A(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),A(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)A(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function og(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function OS(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function PS(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function MS(r,e,t){return t<=r?t:t-(e-1)}function LS(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function GS(r,e,t,n,o,s,a,i,l){let u=r.length,c=new Array(u),p=new Array(u),m=new Array(u);if(e.length&&t>0){let f=e[0],d=t+1;c=zS(a,f,d,n,r),p=BS(i,f,d,o,r),m=PS(s,f,d,r)}else for(let f=0;f<u;f++)c[f]=WS(a,n,s,r,f,l),p[f]=jS(i,o,s,r,f,l),m[f]=VS(s,f,l);return{begin:c,end:p,strides:m}}function zS(r,e,t,n,o){let s=[...o],a=LS(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let l=MS(e,t,i),u=n[l];r&1<<l&&(u=0),s[i]=u}return s}function BS(r,e,t,n,o){let s=[...o],a=LS(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let l=MS(e,t,i),u=n[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[i]=u}for(let i=0;i<s.length;i++){let l=o[i];s[i]<0&&(s[i]+=l),s[i]=Dc(0,s[i],o[i])}return s}function VS(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function WS(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let l=n[o];return a<0&&(a+=l),a=Dc(0,a,l-1),a}function jS(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let l=n[o];return a<0&&(a+=l),i>0?a=Dc(0,a,l):a=Dc(-1,a,l-1),a}function CW(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function IW(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function cw(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{A(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(A(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function SW(r,e,t,n,o,s,a,i,l){let u=e.slice(),c=t.slice(),p=n;n==null&&(p=new Array(u.length));let m=og(a);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(a!==0&&i!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(a!==0&&l!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let f=r.length-u.length,d=og(i),h=r.slice();d.forEach(N=>{u[N]=0,c[N]=1,h.splice(N,0,1)});let{begin:g,end:y,strides:b}=GS(h,m,f,u,c,p,o,s,a);u=g,c=y,p=b;let w=og(l);w.forEach(N=>{c[N]=u[N]+1,p[N]=1});let _=OS(u,c,p),k=_.filter((N,F)=>w.indexOf(F)===-1);return{nonStrided:p.every(N=>N===1),$begin:u,$end:c,$strides:p,size:_,newShape:h,outShape:k}}var te={};Ye(te,{Serializable:()=>sg,SerializationMap:()=>va,registerClass:()=>nn});var sg=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},va=class{constructor(){this.classNameMap={}}static getMap(){return va.instance==null&&(va.instance=new va),va.instance}static register(e){va.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function nn(r){A(r.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),A(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),va.register(r)}var US={};Ye(US,{TEST_EPSILON_FLOAT16:()=>qS,encodeStrings:()=>HS,expectArrayBuffersEqual:()=>RW,expectArraysClose:()=>TW,expectArraysEqual:()=>AW,expectNumbersClose:()=>DW,expectPromiseToFail:()=>EW,expectValuesInRange:()=>$W,testEpsilon:()=>pw});var NW=.001,qS=.1;function TW(r,e,t){return t==null&&(t=pw()),mw(r,e,(n,o)=>fw(n,o,t))}function pw(){return D.backend.floatPrecision()===32?NW:qS}function mw(r,e,t){let n=!0;if((sr(r)||sr(e))&&(n=!1),sr(r)&&sr(e)&&(n=!0),n){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=Cr(r),i=Cr(e);if(!Ur(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=sr(r)?r:os(r),s=sr(e)?e:os(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],l=s[a];if(!t(i,l))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${l}.
Actual:   ${o}.
Expected: ${s}.`)}}function EW(r,e){r().then(()=>e.fail(),()=>e())}function AW(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return ss(r)||ss(r[0])||ss(e)||ss(e[0])?mw(r,t,(n,o)=>n==o):mw(r,e,(n,o)=>fw(n,o,0))}function DW(r,e,t){if(t==null&&(t=pw()),!fw(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function fw(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function $W(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function RW(r,e){expect(new Float32Array(r)).toEqual(new Float32Array(e))}function HS(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?HS(t):r[e]=ol(t)}return r}var FW="2.8.3";function OW(){U().set("PROD",!0)}function PW(){U().set("DEBUG",!0)}function MW(){U().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Pt(r){U().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}ZI(Pt);function LW(){D.disposeVariables()}function Cs(){return D}function Hc(){return D.memory()}function zW(r){return D.profile(r)}function V(r,e){return D.tidy(r,e)}function De(r){km(r).forEach(t=>t.dispose())}function $t(r){return D.keep(r)}function BW(r){return D.time(r)}function KS(r){return D.setBackend(r)}function VW(){return D.ready()}function WW(){return D.backendName}function jW(r){D.removeBackend(r)}function GW(r){return D.findBackend(r)}function UW(r){return D.findBackendFactory(r)}function _u(r,e,t=1){return D.registerBackend(r,e,t)}function dw(){return D.backend}function qW(r,e){U().setPlatform(r,e)}function HW(r,e){let t=v(r,"a","add"),n=v(e,"b","add");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(bn,o)}var ee=S({add_:HW});function KW(r,e){let t=v(r,"a","floorDiv"),n=v(e,"b","floorDiv");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(so,o)}var vu=S({floorDiv_:KW});function XW(r,e){let t=v(r,"a","div"),n=v(e,"b","div");if([t,n]=Ge(t,n),t.dtype==="int32"&&n.dtype==="int32")return vu(t,n);let o={a:t,b:n},s={};return D.runKernel(ro,o,s)}var fe=S({div_:XW});function YW(r,e){let t=v(r,"a","mul"),n=v(e,"b","mul");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(xo,o)}var M=S({mul_:YW});function ZW(r){let e=v(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return D.runKernel(ia,t)}else{let t={x:e};return D.runKernel(is,t)}}var At=S({abs_:ZW});function JW(r){let t={x:v(r,"x","acos")};return D.runKernel(qs,t)}var Im=S({acos_:JW});function QW(r){let t={x:v(r,"x","acosh")};return D.runKernel(Hs,t)}var Sm=S({acosh_:QW});function ej(r){A(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),A(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>v(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!Ur(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return D.runKernel(Hn,n)}var hw=S({addN_:ej});function tj(r,e=null,t=!1){let o={x:v(r,"x","all","bool")},s={axis:e,keepDims:t};return D.runKernel(Gl,o,s)}var ku=S({all_:tj});function rj(r,e=null,t=!1){let o={x:v(r,"x","any","bool")},s={axis:e,keepDims:t};return D.runKernel(Ul,o,s)}var ll=S({any_:rj});function nj(r,e=0){let n={x:v(r,"x","argMax")},o={axis:e};return D.runKernel(Kn,n,o)}var ul=S({argMax_:nj});function oj(r,e=0){let n={x:v(r,"x","argMin")},o={axis:e};return D.runKernel(na,n,o)}var Nm=S({argMin_:oj});function sj(r){let t={x:v(r,"x","asin")};return D.runKernel(Ks,t)}var Tm=S({asin_:sj});function ij(r){let t={x:v(r,"x","asinh")};return D.runKernel(Xs,t)}var Em=S({asinh_:ij});function aj(r){let t={x:v(r,"x","atan")};return D.runKernel(Ys,t)}var Am=S({atan_:aj});function lj(r,e){let t=v(r,"a","atan2"),n=v(e,"b","atan2");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(Js,o)}var Dm=S({atan2_:lj});function uj(r){let t={x:v(r,"x","atanh")};return D.runKernel(Zs,t)}var $m=S({atanh_:uj});function cj(r,e,t,n,o="NHWC",s){let a=r[3],i=[...e,a],l=XS(o);return Cu(r,i,t,s,n,null,null,l)}function gw(r,e,t,n,o,s,a="channelsLast"){let[i,l]=ig(e),u;if(a==="channelsLast")u=[i,l,r[3],r[3]];else if(a==="channelsFirst")u=[i,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Cu(r,u,t,n,o,s,!1,a)}function pj(r,e,t,n,o,s,a="NDHWC"){let[i,l,u]=xw(e),c,p;if(a==="NDHWC")p="channelsLast",c=[i,l,u,r[4],r[4]];else if(a==="NCDHW")p="channelsFirst",c=[i,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return YS(r,c,t,n,o,!1,p,s)}function Cu(r,e,t,n,o,s,a=!1,i="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p]=r;else if(i==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${i}`);let[m,f,,d]=e,[h,g]=ig(t),[y,b]=ig(n),w=Kc(m,y),_=Kc(f,b),{padInfo:k,outHeight:E,outWidth:N}=mj(o,u,c,h,g,w,_,s,i),F=a?d*p:d,O;return i==="channelsFirst"?O=[l,F,E,N]:i==="channelsLast"&&(O=[l,E,N,F]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:p,outHeight:E,outWidth:N,outChannels:F,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:_,dilationHeight:y,dilationWidth:b,inShape:r,outShape:O,filterShape:e}}function YS(r,e,t,n,o,s=!1,a="channelsLast",i){let[l,u,c,p,m]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p,m]=r;else if(a==="channelsFirst")[l,m,u,c,p]=r;else throw new Error(`Unknown dataFormat ${a}`);let[f,d,h,,g]=e,[y,b,w]=xw(t),[_,k,E]=xw(n),N=Kc(f,_),F=Kc(d,k),O=Kc(h,E),{padInfo:P,outDepth:W,outHeight:G,outWidth:j}=fj(o,u,c,p,y,b,w,N,F,O,i),X=s?g*m:g,K;return a==="channelsFirst"?K=[l,X,W,G,j]:a==="channelsLast"&&(K=[l,W,G,j,X]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:p,inChannels:m,outDepth:W,outHeight:G,outWidth:j,outChannels:X,padInfo:P,strideDepth:y,strideHeight:b,strideWidth:w,filterDepth:f,filterHeight:d,filterWidth:h,effectiveFilterDepth:N,effectiveFilterHeight:F,effectiveFilterWidth:O,dilationDepth:_,dilationHeight:k,dilationWidth:E,inShape:r,outShape:K,filterShape:e}}function dj(r,e,t,n,o){n==null&&(n=yw(r,e,t));let s=r[0],a=r[1],i=Iu((s-e+2*n)/t+1,o),l=Iu((a-e+2*n)/t+1,o);return[i,l]}function hj(r,e,t,n,o,s){o==null&&(o=yw(r,e,n));let a=r[0],i=r[1],l=r[2],u=Iu((a-e+2*o)/n+1,s),c=Iu((i-e+2*o)/n+1,s),p=Iu((l-e+2*o)/n+1,s);return[u,c,p,t]}function yw(r,e,t,n=1){let o=Kc(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function ig(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function xw(r){return typeof r=="number"?[r,r,r]:r}function Kc(r,e){return e<=1?r:r+(r-1)*(e-1)}function mj(r,e,t,n,o,s,a,i,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=dj([e,t],s,n,r,i);c=f[0],p=f[1]}else if(r==="same"){c=Math.ceil(e/n),p=Math.ceil(t/o);let m=Math.max(0,(c-1)*n+s-e),f=Math.max(0,(p-1)*o+a-t),d=Math.floor(m/2),h=m-d,g=Math.floor(f/2),y=f-g;u={top:d,bottom:h,left:g,right:y,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-s+1)/n),p=Math.ceil((t-a+1)/o);else if(typeof r=="object"){let m=l==="channelsLast"?r[1][0]:r[2][0],f=l==="channelsLast"?r[1][1]:r[2][1],d=l==="channelsLast"?r[2][0]:r[3][0],h=l==="channelsLast"?r[2][1]:r[3][1];u={top:m,bottom:f,left:d,right:h,type:m===0&&f===0&&d===0&&h===0?"VALID":"EXPLICIT"},c=Iu((e-s+m+f)/n+1,i),p=Iu((t-a+d+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function fj(r,e,t,n,o,s,a,i,l,u,c){let p,m,f,d;if(typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=hj([e,t,n,1],i,1,o,r,c);m=g[0],f=g[1],d=g[2]}else if(r==="same"){m=Math.ceil(e/o),f=Math.ceil(t/s),d=Math.ceil(n/a);let h=(m-1)*o+i-e,g=(f-1)*s+l-t,y=(d-1)*a+u-n,b=Math.floor(h/2),w=h-b,_=Math.floor(g/2),k=g-_,E=Math.floor(y/2),N=y-E;p={top:_,bottom:k,left:E,right:N,front:b,back:w,type:"SAME"}}else if(r==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-i+1)/o),f=Math.ceil((t-l+1)/s),d=Math.ceil((n-u+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:d}}function Iu(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ln(r){let[e,t,n]=ig(r);return e===1&&t===1&&n===1}function Mt(r,e){return Ln(r)||Ln(e)}function XS(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function gj(r,e){let n={x:v(r,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(ds,n,o)}var z=S({reshape_:gj});function xj(r,e,t,n,o){let s=v(r,"x","avgPool","float32"),a=1;A(Mt(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,l=!1;s.rank===3&&(l=!0,i=z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),o!=null&&A(it(n),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let u={x:i},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o},p=D.runKernel(Xn,u,c);return p=oe(p,s.dtype),l?z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var ka=S({avgPool_:xj});function yj(r,e,t,n,o,s="NDHWC",a){a==null?a=[1,1,1]:Pt("dilations is deprecated, this field will be gone in v3.0.0.");let i=v(r,"x","avgPool3d","float32"),l=i,u=!1;i.rank===4&&(u=!0,l=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),A(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),A(Mt(t,a),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),o!=null&&A(it(n),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let c={x:l},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s,dilations:a},m=D.runKernel(oa,c,p);return m=oe(m,l.dtype),u?z(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Rm=S({avgPool3d_:yj});function bj(r,e=0){A(r.length>=1,()=>"Pass at least one tensor to concat");let t=ya(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return Mn(t[0]);let n=t,o={axis:e};return D.runKernel(as,n,o)}var Qe=S({concat_:bj});function wj(r){let t={x:v(r,"x","sigmoid")};return D.runKernel(Eo,t)}var Kr=S({sigmoid_:wj});function _j(r,e,t){let n=v(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return D.runKernel(gs,o,s)}var Fe=S({slice_:_j});function vj(r){let t={x:v(r,"x","tanh")};return D.runKernel(Oo,t)}var Mi=S({tanh_:vj});function kj(r,e,t,n,o,s){let a=v(r,"forgetBias","basicLSTMCell"),i=v(e,"lstmKernel","basicLSTMCell"),l=v(t,"lstmBias","basicLSTMCell"),u=v(n,"data","basicLSTMCell"),c=v(o,"c","basicLSTMCell"),p=v(s,"h","basicLSTMCell"),m=Qe([u,p],1),f=Ue(m,i),d=ee(f,l),h=d.shape[0],g=d.shape[1]/4,y=[h,g],b=Fe(d,[0,0],y),w=Fe(d,[0,g],y),_=Fe(d,[0,g*2],y),k=Fe(d,[0,g*3],y),E=ee(M(Kr(b),Mi(w)),M(c,Kr(ee(a,_)))),N=M(Mi(E),Kr(k));return[E,N]}var Cj=S({basicLSTMCell_:kj});function Ij(r,e,t){let n=v(r,"x","batchToSpaceND"),o=e.reduce((i,l)=>i*l);A(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),A(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),A(n.shape[0]%o==0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},a={blockShape:e,crops:t};return D.runKernel(sa,s,a)}var Ca=S({batchToSpaceND_:Ij});function ZS(r){let e;return r.rank===0||r.rank===1?e=z(r,[1,1,1,r.size]):r.rank===2?e=z(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function Sj(r,e,t,n,o,s){s==null&&(s=.001);let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;n!=null&&(c=v(n,"offset","batchNorm")),A(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:ZS(a),scale:u,offset:c,mean:i,variance:l},f={varianceEpsilon:s},d=D.runKernel(io,m,f);return z(d,a.shape)}var Lo=S({batchNorm_:Sj});function Nj(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),A(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),A(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),A(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Lo(a,i,l,c,u,s)}var bw=S({batchNorm2d_:Nj});function Tj(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),A(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),A(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),A(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Lo(a,i,l,c,u,s)}var ww=S({batchNorm3d_:Tj});function Ej(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),A(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),A(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),A(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Lo(a,i,l,c,u,s)}var _w=S({batchNorm4d_:Ej});function Aj(r,e,t){let n=v(r,"x","bincount"),o=v(e,"weights","bincount");A(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:t};return D.runKernel(Kl,s,a)}var vw=S({bincount_:Aj});function Dj(r,e){let t=v(r,"broadcastTo","x"),n=t.shape;if(e.some(u=>!(u>0)||u%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=z(t,u)}let o=t.shape,s=Array.from(e);for(let u=e.length-1;u>=0;u--)if(o[u]===e[u])s[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Mn(t);let i={x:t},l={reps:s};return D.runKernel(wn,i,l)}var cl=S({broadcastTo_:Dj});function $j(r){let t={x:v(r,"x","ceil")};return D.runKernel(Qs,t)}var Fm=S({ceil_:$j});function Rj(r,e,t){let n=v(r,"x","clipByValue");A(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return D.runKernel(Pn,o,s)}var ar=S({clipByValue_:Rj});function Fj(r){return Qe(r,0)}var kw=S({concat1d_:Fj});function Oj(r,e){return Qe(r,e)}var Cw=S({concat2d_:Oj});function Pj(r,e){return Qe(r,e)}var Iw=S({concat3d_:Pj});function Mj(r,e){return Qe(r,e)}var Sw=S({concat4d_:Mj});function Lj(r,e,t,n,o="NHWC",s=[1,1],a){let i=v(r,"x","conv2d"),l=v(e,"filter","conv2d"),u=i,c=!1;i.rank===3&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),a!=null&&A(it(n),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let p=o==="NHWC"?u.shape[3]:u.shape[1];A(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),A(Mt(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let m={x:u,filter:l},f={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},d=D.runKernel(Zn,m,f);return c?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Xr=S({conv2d_:Lj});function zj(r,e,t,n,o="NWC",s=1,a){let i=v(r,"x","conv1d"),l=v(e,"filter","conv1d"),u=i,c=!1;i.rank===2&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1]])),A(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),A(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),a!=null&&A(it(n),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`),A(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),A(Mt(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),A(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let p=z(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=z(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Xr(m,p,[1,t],n,"NHWC",[1,s],a);return c?z(g,[g.shape[2],g.shape[3]]):z(g,[g.shape[0],g.shape[2],g.shape[3]])}var Su=S({conv1d_:zj});function Bj(r,e,t,n,o,s="NHWC",a){A(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,l=e,u=!1;e.rank===3&&(u=!0,l=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),A(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),A(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),A(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let c=s==="NHWC"?i[3]:i[1],p=s==="NHWC"?l.shape[3]:l.shape[1];A(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),A(p===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[3]}.`),a!=null&&A(it(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let m={dy:l,filter:t},f={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},d=D.runKernel(Jn,m,f);return u?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Xc=S({conv2DBackpropInput_:Bj});function Vj(r,e,t,n,o,s){let a=v(r,"x","conv2dTranspose"),i=v(e,"filter","conv2dTranspose");return Xc(t,a,i,n,o,"NHWC",s)}var Nu=S({conv2dTranspose_:Vj});function Wj(r,e,t,n,o="NDHWC",s=[1,1,1]){let a=v(r,"x","conv3d"),i=v(e,"filter","conv3d"),l=a,u=!1;a.rank===4&&(u=!0,l=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),A(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),A(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),A(Mt(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),A(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let c={x:l,filter:i},p={strides:t,pad:n,dataFormat:o,dilations:s},m=D.runKernel(aa,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Om=S({conv3d_:Wj});function jj(r,e,t,n,o){A(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=z(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let l=s[4],u=a.shape[4];A(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),A(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),A(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),A(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),A(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);let c={dy:a,filter:t},p={pad:o,strides:n,inputShape:s},m=D.runKernel(Jl,c,p);return i?z(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var ag=S({conv3DBackpropInput_:jj});function Gj(r,e,t,n,o){let s=v(r,"x","conv3dTranspose"),a=v(e,"filter","conv3dTranspose");return ag(t,s,a,n,o)}var Uj=S({conv3dTranspose_:Gj});function qj(r){let t={x:v(r,"x","cos")};return D.runKernel(Qn,t)}var Ia=S({cos_:qj});function Hj(r){let t={x:v(r,"x","cosh")};return D.runKernel(ei,t)}var Tu=S({cosh_:Hj});function Kj(r,e=0,t=!1,n=!1){let s={x:v(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(eo,s,a)}var Eu=S({cumsum_:Kj});function Xj(r,e,t,n=!1){let o=v(r,"x","denseBincount"),s=v(e,"weights","denseBincount");A(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),A(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:t,binaryOutput:n};return D.runKernel(Ql,a,i)}var Nw=S({denseBincount_:Xj});function Yj(r,e,t="NHWC"){let n=v(r,"x","depthToSpace"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];A(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),A(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),A(a%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},l={blockSize:e,dataFormat:t};return D.runKernel(ri,i,l)}var Pm=S({depthToSpace_:Yj});function Zj(r,e,t,n,o="NHWC",s=[1,1],a){let i=v(r,"x","depthwiseConv2d"),l=v(e,"filter","depthwiseConv2d"),u=i,c=!1;i.rank===3&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),a!=null&&A(it(n),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let p={x:u,filter:l},m={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=D.runKernel(to,p,m);return c?z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var zn=S({depthwiseConv2d_:Zj});function Jj(r){let t={x:v(r,"x","diag")};return D.runKernel(ru,t)}var Qj=S({diag_:Jj});function eG(r,e,t,n,o=[1,1],s="NHWC"){let a=v(r,"x","dilation2d"),i=v(e,"filter","dilation2d");A(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),A(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),A(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=a,u=!1;a.rank===3&&(l=z(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);let c={x:l,filter:i},p={strides:t,pad:n,dilations:o},m=D.runKernel(la,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Mm=S({dilation2d_:eG});function tG(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,a=r[s]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function Nt(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,a=e[s];(o==null||o===1&&a>1)&&t.unshift(s)}return t}function Ve(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=e[e.length-o-1];if(a==null&&(a=1),s===1)t.unshift(a);else if(a===1)t.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else t.unshift(s)}return t}function rG(r,e){let t=v(r,"a","equal"),n=v(e,"b","equal");[t,n]=Ge(t,n),Ve(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(si,o)}var Yr=S({equal_:rG});function nG(r,e,t){let n=v(e,"a","where"),o=v(t,"b","where"),s=v(r,"condition","where","bool"),a=Ve(n.shape,o.shape),i=cl(n,a),l=cl(o,a);s.rank===1&&A(s.shape[0]===n.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),s.rank!==1&&je(s.shape,l.shape,"Error in where: ");let u={condition:s,t:i,e:l};return D.runKernel(hs,u)}var Rt=S({where_:nG});function oG(r){let t={x:v(r,"x","zerosLike")};return D.runKernel(bs,t)}var Se=S({zerosLike_:oG});function sG(r,e){let t=v(r,"a","div"),n=v(e,"b","div");[t,n]=Ge(t,n);let o=fe(t,n),s=Se(o),a=Yr(n,s);return Rt(a,s,o)}var Lm=S({divNoNan_:sG});function iG(r,e){let t=v(r,"t1","dot"),n=v(e,"t2","dot");A((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(A(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let a=z(t,[1,-1]),i=z(n,[-1,1]),l=Ue(a,i);return z(l,[])}else if(t.rank===1&&n.rank===2){let a=z(t,[1,-1]),i=z(n,[n.shape[0],n.shape[1]]),l=Ue(a,i);return z(l,[l.size])}else if(t.rank===2&&n.rank===1){let a=z(n,[-1,1]),i=Ue(t,a);return z(i,[i.size])}else{let a=z(n,[n.shape[0],n.shape[1]]);return Ue(t,a)}}var Tw=S({dot_:iG});function aG(r){let t={x:v(r,"x","elu")};return D.runKernel(ni,t)}var Is=S({elu_:aG});function lG(r){let e=v(r,"x","erf");A(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=oe(e,"float32"));let t={x:e};return D.runKernel(oi,t)}var zm=S({erf_:lG});function uG(r){let t={x:v(r,"x","exp")};return D.runKernel(no,t)}var er=S({exp_:uG});function cG(r,e=0){let t=v(r,"x","expandDims","string_or_numeric");A(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return D.runKernel(ls,n,o)}var wr=S({expandDims_:cG});function pG(r){let t={x:v(r,"x","expm1")};return D.runKernel(ii,t)}var Bm=S({expm1_:pG});function mG(r,e){let t=v(r,"x","tile","string_or_numeric");A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return D.runKernel(wn,n,o)}var Bn=S({tile_:mG});function fG(r,e,t,n="float32"){e==null&&(e=r);let o=Ie([r,e],n),s=r<=e?r:e;for(let i=0;i<s;++i)o.set(1,i,i);let a=z(o.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return Bn(wr(a,0),[t[0],1,1]);if(t.length===2)return Bn(wr(wr(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Bn(wr(wr(wr(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Yc=S({eye_:fG});function Sa(r,e,t){let n={shape:r,value:e,dtype:t};return D.runKernel(ua,{},n)}function dG(r){let t={x:v(r,"x","floor")};return D.runKernel(oo,t)}var Ss=S({floor_:dG});function hG(r,e,t=0,n=0){let o=v(r,"x","gather"),s=v(e,"indices","gather","int32"),a={x:o,indices:s},i={axis:t,batchDims:n};return D.runKernel(us,a,i)}var zo=S({gather_:hG});function gG(r,e){let t=v(r,"a","greater"),n=v(e,"b","greater");[t,n]=Ge(t,n),Ve(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ui,o)}var Yt=S({greater_:gG});function xG(r,e){let t=v(r,"a","greaterEqual"),n=v(e,"b","greaterEqual");[t,n]=Ge(t,n),Ve(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ao,o)}var Pr=S({greaterEqual_:xG});function yG(r){let t={input:v(r,"input","imag")};return D.runKernel(iu,t)}var Au=S({imag_:yG});function bG(r){let t={x:v(r,"x","isFinite")};return D.runKernel(ci,t)}var Ew=S({isFinite_:bG});function wG(r){let t={x:v(r,"x","isInf")};return D.runKernel(pi,t)}var Aw=S({isInf_:wG});function _G(r){let t={x:v(r,"x","isNaN")};return D.runKernel(mi,t)}var Dw=S({isNaN_:_G});function vG(r,e=.2){let n={x:v(r,"x","leakyRelu")},o={alpha:e};return D.runKernel(lo,n,o)}var Na=S({leakyRelu_:vG});function kG(r,e){let t=v(r,"a","less"),n=v(e,"b","less");[t,n]=Ge(t,n),Ve(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(fi,o)}var Ta=S({less_:kG});function CG(r,e){let t=v(r,"a","lessEqual"),n=v(e,"b","lessEqual");[t,n]=Ge(t,n),Ve(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(di,o)}var on=S({lessEqual_:CG});function $w(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return D.runKernel(au,{},n)}function IG(r,e=5,t=1,n=1,o=.5){let s=v(r,"x","localResponseNormalization");A(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),A(it(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=z(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:a},u={depthRadius:e,bias:t,alpha:n,beta:o},c=D.runKernel(ca,l,u);return i?z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Vm=S({localResponseNormalization_:IG});function SG(r){let t={x:v(r,"x","log")};return D.runKernel(uo,t)}var lr=S({log_:SG});function NG(r){let t={x:v(r,"x","log1p")};return D.runKernel(hi,t)}var Du=S({log1p_:NG});function TG(r){return A(Gs(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=v(e,"x","tf.grad","string_or_numeric"),o=t!=null?v(t,"dy","tf.grad"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(n),[n],o);return o!=null&&je(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),lg(a),a[0]})}}function EG(r){return A(Gs(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{A(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=ya(e,"args","tf.grads","string_or_numeric"),o=t!=null?v(t,"dy","tf.grads"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(...n),n,o);return o!=null&&je(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lg(a),a})}}function AG(r){return A(Gs(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{A(e instanceof R,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),A(t==null||t instanceof R,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=D.gradients(()=>r(e),[e],t);return lg(n),{grad:n[0],value:o}}}function DG(r){return A(Gs(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{A(Array.isArray(e)&&e.every(o=>o instanceof R),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),A(t==null||t instanceof R,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=D.gradients(()=>r(...e),e,t);return t!=null&&je(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lg(n.grads),n}}function ug(r,e){A(Gs(r),()=>"The f passed in variableGrads(f) must be a function"),A(e==null||Array.isArray(e)&&e.every(u=>u instanceof sl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let u in D.registeredVariables)e.push(D.registeredVariables[u])}let n=t?e.filter(u=>!u.trainable):null,o=e.length;e=e.filter(u=>u.trainable),A(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=D.gradients(r,e,null,s);A(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let l={};return e.forEach((u,c)=>{i[c]!=null&&(l[u.name]=i[c])}),n!=null&&n.forEach(u=>l[u.name]=null),{value:a,grads:l}}function Zr(r){return D.customGrad(r)}function lg(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function $G(r){let t={x:v(r,"x","neg")};return D.runKernel(ps,t)}var He=S({neg_:$G});function RG(r){let t={x:v(r,"x","softplus")};return D.runKernel(Ti,t)}var Ns=S({softplus_:RG});function FG(r){let e=v(r,"x","logSigmoid");return Zr(n=>({value:He(Ns(He(n))),gradFunc:a=>M(a,Kr(He(n)))}))(e)}var Rw=S({logSigmoid_:FG});function OG(r,e=null,t=!1){let o={x:v(r,"x","max")},s={reductionIndices:e,keepDims:t};return D.runKernel(co,o,s)}var ur=S({max_:OG});function PG(r,e){let t=v(r,"a","sub"),n=v(e,"b","sub");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(Fo,o)}var pe=S({sub_:PG});function MG(r,e=null,t=!1){let n=v(r,"x","sum");n.dtype==="bool"&&(n=oe(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Do,o,s)}var be=S({sum_:MG});function LG(r,e=-1){let t=v(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Zr((o,s)=>{let a=!0,i=ur(o,e,!0),l=pe(o,i),u=pe(oe(l,"float32"),lr(be(er(l),e,a)));return s([u]),{value:u,gradFunc:(p,m)=>{let[f]=m,d=!0,h=er(f);return pe(p,M(be(p,e,d),h))}}})(t)}var $u=S({logSoftmax_:LG});function Fw(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function JS(r,e,t){let n=r.length+e.length,o=[],s=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(r[s++]):o.push(e[a++]);return o}function Ow(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Bo(r,e){let t=e.map(n=>1);return JS(r,t,e)}function zG(r,e,t){A(Fw(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Pw(r,e){if(Fw(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Wm(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function BG(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function VG(r,e=null,t=!1){let n=v(r,"x","logSumExp"),o=rr(e,n.shape),s=ur(n,o,!0),a=pe(n,s),i=er(a),l=be(i,o),u=lr(l),c=ee(z(s,u.shape),u);if(t){let p=Bo(c.shape,o);return z(c,p)}return c}var jm=S({logSumExp_:VG});function WG(r,e){let t=v(r,"a","logicalAnd","bool"),n=v(e,"b","logicalAnd","bool");Ve(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(gi,o)}var hr=S({logicalAnd_:WG});function jG(r){let t={x:v(r,"x","logicalNot","bool")};return D.runKernel(tl,t)}var Ea=S({logicalNot_:jG});function GG(r,e){let t=v(r,"a","logicalOr","bool"),n=v(e,"b","logicalOr","bool");Ve(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(rl,o)}var Ru=S({logicalOr_:GG});function UG(r,e){let t=v(r,"a","logicalXor","bool"),n=v(e,"b","logicalXor","bool");return Ve(t.shape,n.shape),hr(Ru(r,e),Ea(hr(r,e)))}var Mw=S({logicalXor_:UG});function qG(r,e,t,n,o){let s=v(r,"x","maxPool"),a=1,i=s,l=!1;s.rank===3&&(l=!0,i=z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),A(Mt(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),o!=null&&A(it(n),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let u={x:i},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o},p=D.runKernel(mo,u,c);return l?z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Aa=S({maxPool_:qG});function HG(r,e=[1,1,1],t,n,o,s="NDHWC",a){a==null?a=[1,1,1]:Pt("dilations is deprecated, this field will be gone in v3.0.0.");let i=v(r,"x","maxPool3d"),l=i,u=!1;i.rank===4&&(u=!0,l=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),A(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),A(Mt(t,a),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),o!=null&&A(it(n),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let c={x:l},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s,dilations:a},m=D.runKernel(pa,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Gm=S({maxPool3d_:HG});function KG(r,e,t,n,o=!1){let a={x:v(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},l=D.runKernel(pu,a,i);return{result:l[0],indexes:l[1]}}var Lw=S({maxPoolWithArgmax_:KG});function XG(r,e){let t=v(r,"a","maximum"),n=v(e,"b","maximum");[t,n]=Ge(t,n),t.dtype==="bool"&&(t=oe(t,"int32"),n=oe(n,"int32")),Ve(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(po,o)}var Sr=S({maximum_:XG});function YG(r,e=null,t=!1){let o={x:v(r,"x","mean")},s={axis:e,keepDims:t};return D.runKernel(fo,o,s)}var wt=S({mean_:YG});function ZG(r,e=null,t=!1){let o={x:v(r,"x","min")},s={axis:e,keepDims:t};return D.runKernel(ho,o,s)}var Li=S({min_:ZG});function JG(r,e){let t=v(r,"a","minimum"),n=v(e,"b","minimum");[t,n]=Ge(t,n),t.dtype==="bool"&&(t=oe(t,"int32"),n=oe(n,"int32")),Ve(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(go,o)}var Vn=S({minimum_:JG});function QG(r,e,t){A(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=v(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)A(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},a={x:n};return D.runKernel(ma,a,s)}var Um=S({mirrorPad_:QG});function e4(r,e){let t=v(r,"a","mod"),n=v(e,"b","mod");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(xi,o)}var Fu=S({mod_:e4});function t4(r){let e=v(r,"x","square"),t={};return D.runKernel("Square",{x:e},t)}var Me=S({square_:t4});function r4(r,e=null,t=!1){r=v(r,"x","moments");let n=rr(e,r.shape),o=wt(r,n,t),s=o.shape;t||(s=Bo(o.shape,n));let a=Me(pe(oe(r,"float32"),z(o,s))),i=wt(a,n,t);return{mean:o,variance:i}}var Zc=S({moments_:r4});function n4(r,e,t,n){let o=v(e,"data","multiRNNCell"),s=ya(t,"c","multiRNNCell"),a=ya(n,"h","multiRNNCell"),i=o,l=[];for(let p=0;p<r.length;p++){let m=r[p](i,s[p],a[p]);l.push(m[0]),l.push(m[1]),i=m[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var o4=S({multiRNNCell_:n4});function s4(r,e,t,n=!1){let o=v(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let l={logits:a===1?z(o,[1,-1]):o},u={numSamples:e,seed:t,normalized:n},c=D.runKernel(mu,l,u);return a===1?z(c,[c.size]):c}var zw=S({multinomial_:s4});function i4(r,e){let t=v(r,"a","notEqual"),n=v(e,"b","notEqual");[t,n]=Ge(t,n),Ve(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(yi,o)}var vn=S({notEqual_:i4});function pt(r,e="float32"){if(e==="complex64"){let n=pt(r,"float32"),o=pt(r,"float32");return _n(n,o)}let t=Fc(dt(r),e);return D.makeTensor(t,r,e)}function Nr(r,e="float32"){if(e==="complex64"){let n=Nr(r,"float32"),o=pt(r,"float32");return _n(n,o)}let t=dm(dt(r),e);return D.makeTensor(t,r,e)}function a4(r){let t={x:v(r,"x","onesLike")};return D.runKernel(ms,t)}var nr=S({onesLike_:a4});function l4(r,e){let t=v(r,"v1","outerProduct"),n=v(e,"v2","outerProduct");A(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=z(t,[-1,1]),s=z(n,[1,-1]);return Ue(o,s)}var u4=S({outerProduct_:l4});function c4(r,e,t=0){let n=v(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return D.runKernel(bo,s,o)}var Mr=S({pad_:c4});function p4(r,e,t=0){return A(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Mr(r,[e],t)}var m4=S({pad1d_:p4});function f4(r,e,t=0){return A(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(r,e,t)}var d4=S({pad2d_:f4});function h4(r,e,t=0){return A(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(r,e,t)}var g4=S({pad3d_:h4});function x4(r,e,t=0){return A(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(r,e,t)}var y4=S({pad4d_:x4});function b4(r,e,t){let n=v(r,"x","spaceToBatchND");A(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),A(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),A(n.shape.reduce((a,i,l)=>l>0&&l<=e.length?a&&(i+t[l-1][0]+t[l-1][1])%e[l-1]==0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return D.runKernel(ha,o,s)}var Da=S({spaceToBatchND_:b4});function v4(r,e,t,n,o,s){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let a=v(r,"x","maxPool"),i=a,l=!1;a.rank===3&&(l=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(Mt(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let u=gw(i.shape,e,s,o,n),c=[u.dilationHeight,u.dilationWidth],p;n==="same"?p=_4([u.filterHeight,u.filterWidth],c):p=[[0,0],[0,0]];let m=c[0]===1&&c[1]===1,[f,d]=w4([u.inHeight,u.inWidth],c,p),h=m?n:"valid",g=m?i:Da(i,c,f),b=(t==="avg"?()=>ka(g,e,s,h):()=>Aa(g,e,s,h))(),w=m?b:Ca(b,c,d);return l?z(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function w4(r,e,t){let n=t.map(c=>c[0]),o=t.map(c=>c[1]),s=r.concat(n,o),a=e.map((c,p)=>(c-s[p]%c)%c),i=o.map((c,p)=>c+a[p]),l=e.map((c,p)=>[n[p],i[p]]),u=e.map((c,p)=>[0,a[p]]);return[l,u]}function _4(r,e){let n=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var Bw=S({pool_:v4});function k4(r,e){let t=v(r,"base","pow"),n=v(e,"exp","pow");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(wo,o)}var _r=S({pow_:k4});function C4(r,e){let t=v(r,"x","prelu"),n=v(e,"alpha","prelu"),o={x:t,alpha:n};return D.runKernel(_o,o)}var $a=S({prelu_:C4});function I4(r,e=null,t=!1){let n=v(r,"x","prod");n.dtype==="bool"&&(n=oe(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(vi,o,s)}var Ou=S({prod_:I4});function S4(r,e,t){let n=dt(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return D.makeTensor(o,r,t)}var N4=S({rand_:S4});var mg=Ac(fN());var Jc=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=mg.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Hw=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=mg.alea(s.toString()),this.randn=new Jc(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},Kw=class{constructor(e=0,t=1,n,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=mg.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function F4(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new Hw(e,t,n,o),a=Ie(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var O4=S({randomGamma_:F4});function P4(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new Jc(e,t,n,!1,o),a=Ie(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var fg=S({randomNormal_:P4});function M4(r,e=0,t=1,n="float32",o){let s=Ie(r,n),a=new Kw(e,t,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var Ts=S({randomUniform_:M4});function Qc(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return D.runKernel(fa,{},o)}function L4(r){let t={input:v(r,"input","real")};return D.runKernel(fu,t)}var pl=S({real_:L4});function z4(r){let t={x:v(r,"x","reciprocal")};return D.runKernel(ki,t)}var qm=S({reciprocal_:z4});function B4(r){let t={x:v(r,"x","relu")};return D.runKernel(vo,t)}var Tr=S({relu_:B4});function V4(r){let t={x:v(r,"x","relu6")};return D.runKernel(Co,t)}var Mu=S({relu6_:V4});function W4(r,e){let n={x:v(r,"x","reverse")},o={dims:e};return D.runKernel(Io,n,o)}var Zt=S({reverse_:W4});function j4(r){let e=v(r,"x","reverse");return A(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Zt(e,0)}var G4=S({reverse1d_:j4});function U4(r,e){let t=v(r,"x","reverse");return A(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Zt(t,e)}var q4=S({reverse2d_:U4});function H4(r,e){let t=v(r,"x","reverse");return A(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Zt(t,e)}var K4=S({reverse3d_:H4});function X4(r,e){let t=v(r,"x","reverse");return A(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Zt(t,e)}var Y4=S({reverse4d_:X4});function Z4(r){let t={x:v(r,"x","round")};return D.runKernel(So,t)}var Hm=S({round_:Z4});function J4(r){let t={x:v(r,"x","rsqrt")};return D.runKernel(No,t)}var Lu=S({rsqrt_:J4});function ce(r,e){if((sr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&sr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return qr(r,[],[],e)}function Q4(r){let t={x:v(r,"x","selu")};return D.runKernel(Ii,t)}var zu=S({selu_:Q4});function eU(r,e,t,n,o,s=[1,1],a="NHWC"){let i=v(r,"x","separableConv2d"),l=v(e,"depthwiseFilter","separableConv2d"),u=v(t,"pointwiseFilter","separableConv2d"),c=i,p=!1;if(i.rank===3&&(p=!0,c=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),A(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),A(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let m=l.shape[2],f=l.shape[3];A(u.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${u.shape[2]}.`);let d=zn(c,l,n,o,a,s),g=Xr(d,u,1,"valid",a);return p?z(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Km=S({separableConv2d_:eU});async function tU(r,e){let t=v(r,"x","setdiff1d"),n=v(e,"y","setdiff1d");A(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),A(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),A(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),a=new Set(s),i=0;for(let c=0;c<o.length;c++)a.has(o[c])||i++;let l=new ct([i],t.dtype),u=new ct([i],"int32");for(let c=0,p=0;c<o.length;c++)a.has(o[c])||(l.values[p]=o[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]}var Xw=tU;function rU(r){let t={x:v(r,"x","sign")};return D.runKernel(Ni,t)}var Xm=S({sign_:rU});function nU(r){let t={x:v(r,"x","sin")};return D.runKernel(To,t)}var Bu=S({sin_:nU});function oU(r){let t={x:v(r,"x","sinh")};return D.runKernel(Si,t)}var Vu=S({sinh_:oU});function sU(r,e,t){let n=v(r,"x","slice1d");return A(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Fe(n,[e],[t])}var Ym=S({slice1d_:sU});function iU(r,e,t){let n=v(r,"x","slice2d");return A(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Fe(n,e,t)}var dg=S({slice2d_:iU});function aU(r,e,t){let n=v(r,"x","slice3d");return A(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Fe(n,e,t)}var Zm=S({slice3d_:aU});function lU(r,e,t){let n=v(r,"x","slice4d");return A(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Fe(n,e,t)}var ep=S({slice4d_:lU});function uU(r,e=-1){let t=v(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return D.runKernel($o,n,o)}var Ra=S({softmax_:uU});function cU(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(ou,e)}var Fa=S({fft_:cU});function pU(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(su,e)}var zi=S({ifft_:pU});function mU(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=z(r,[t,e]);n=zi(o)}else{let o=[t,2*(e-1)],s=z(pl(r),[t,e]),a=z(Au(r),[t,e]),i=Zt(Fe(s,[0,1],[t,e-2]),1),l=M(Zt(Fe(a,[0,1],[t,e-2]),1),ce(-1)),u=Qe([s,i],1),c=Qe([a,l],1),p=z(_n(u,c),[o[0],o[1]]);n=zi(p)}if(n=pl(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=z(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Wu=S({irfft_:mU});function fU(r,e,t=0){let o={x:v(r,"x","split")},s={numOrSizeSplits:e,axis:t};return D.runKernel(xs,o,s)}var cr=S({split_:fU});function dU(r,e){A(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let d=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=Fe(r,d,h),t=e}else if(e!=null&&e>t){let d=r.shape.map(h=>h);d[r.shape.length-1]=e-t,o=Qe([r,pt(d)],r.shape.length-1),t=e}else o=r;let s=Se(o),a=z(_n(o,s),[n,t]),i=Fa(a),l=Math.floor(t/2)+1,u=pl(i),c=Au(i),p=cr(u,[l,t-l],u.shape.length-1),m=cr(c,[l,t-l],c.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=l,z(_n(p[0],m[0]),f)}var Oa=S({rfft_:dU});function hU(r){let t={x:v(r,"x","sqrt")};return D.runKernel(Ao,t)}var _t=S({sqrt_:hU});function gU(r,e){let t=v(r,"a","squaredDifference"),n=v(e,"b","squaredDifference");[t,n]=Ge(t,n),Ve(t.shape,n.shape);let o={a:t,b:n},s={};return D.runKernel(Ro,o,s)}var Pa=S({squaredDifference_:gU});function xU(r,e){let t=v(r,"x","squeeze");return z(t,kb(t.shape,e).newShape)}var kn=S({squeeze_:xU});function yU(r,e=0){let t=ya(r,"tensors","stack","string_or_numeric");A(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&A(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return D.runKernel(fs,n,o)}var jt=S({stack_:yU});function bU(r,e=0){let n={x:v(r,"x","step")},o={alpha:e};return D.runKernel($i,n,o)}var Es=S({step_:bU});function wU(r,e,t,n,o=0,s=0,a=0,i=0,l=0){let c={x:v(r,"x","stridedSlice")},p={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};return D.runKernel(Ei,c,p)}var Jm=S({stridedSlice_:wU});function _U(r){let t={x:v(r,"x","tan")};return D.runKernel(Ai,t)}var Qm=S({tan_:_U});function Gt(r,e){Fn(r);let t=Cr(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return qr(r,null,t,e)}function Bi(r,e,t){if(Fn(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Cr(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return qr(r,e,n,t)}function vU(r,e,t){if(Fn(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Cr(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return qr(r,e,n,t)}function kU(r,e,t){if(Fn(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Cr(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return qr(r,e,n,t)}function CU(r,e,t){if(Fn(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Cr(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,qr(r,e,n,t)}function IU(r,e=1,t=!0){let n=v(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},a={k:e,sorted:t},[i,l]=D.runKernel(Di,s,a);return{values:i,indices:l}}var ef=S({topk_:IU});function SU(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Jc(e,t,n,!0,o),a=Ie(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var ju=S({truncatedNormal_:SU});function NU(r,e=0){let t=v(r,"x","unique","string_or_numeric");A(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,a]=D.runKernel(xu,n,o);return{values:s,indices:a}}var tp=S({unique_:NU});function TU(r,e,t){let n=v(r,"x","unsortedSegmentSum"),o=v(e,"segmentIds","unsortedSegmentSum","int32");A(it(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:t};return D.runKernel(xa,s,a)}var tf=S({unsortedSegmentSum_:TU});function EU(r,e=0){let t=v(r,"x","unstack","string_or_numeric");A(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return D.runKernel(ys,n,o)}var pr=S({unstack_:EU});function Yw(r,e=!0,t,n){return D.makeVariable(r,e,t,n)}function Zw(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=Ie(r,"int32"),o=Ie([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=n.indexToLoc(t[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function AU(r){let e=v(r,"condition","whereAsync","bool"),t=await e.data(),n=Zw(e.shape,t);return r!==e&&e.dispose(),n}var rf=AU;async function DU(r,e,t){let n=v(r,"tensor","boolMask"),o=v(e,"mask","boolMask","bool"),s=t==null?0:t,a=o.rank,i=n.shape;A(a>0,()=>"mask cannot be scalar"),je(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let h=s;h<s+a;h++)l*=i[h];let u=i.slice(0,s).concat([l],i.slice(s+a)),c=z(n,u),p=z(o,[-1]),m=await rf(p),f=kn(m,[1]),d=zo(c,f,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),f.dispose(),c.dispose(),p.dispose(),m.dispose(),d}var $U=DU;function RU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","notEqualStrict"),n=v(e,"b","notEqualStrict");return je(t.shape,n.shape,"Error in notEqualStrict: "),vn(t,n)}function FU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","lessStrict"),n=v(e,"b","lessStrict");return je(t.shape,n.shape,"Error in lessStrict: "),Ta(t,n)}function OU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","equalStrict"),n=v(e,"b","equalStrict");return je(t.shape,n.shape,"Error in equalStrict: "),Yr(t,n)}function PU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","lessEqualStrict"),n=v(e,"b","lessEqualStrict");return je(t.shape,n.shape,"Error in lessEqualStrict: "),on(t,n)}function MU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","greaterStrict"),n=v(e,"b","greaterStrict");return je(t.shape,n.shape,"Error in greaterStrict: "),Yt(t,n)}function LU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","greaterEqualStrict"),n=v(e,"b","greaterEqualStrict");return je(t.shape,n.shape,"Error in greaterEqualStrict: "),Pr(t,n)}var Jw=S({equalStrict_:OU}),Qw=S({greaterEqualStrict_:LU}),e_=S({greaterStrict_:MU}),t_=S({lessEqualStrict_:PU}),r_=S({lessStrict_:FU}),n_=S({notEqualStrict_:RU});function zU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","addStrict"),n=v(e,"b","addStrict");return je(t.shape,n.shape,"Error in addStrict: "),ee(t,n)}function BU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","subStrict"),n=v(e,"b","subStrict");return je(t.shape,n.shape,"Error in subStrict: "),pe(t,n)}function VU(r,e){return Pt("strict variants of ops have been deprecated and will be removed in future"),je(r.shape,e.shape,"Error in powStrict: "),_r(r,e)}function WU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","mul"),n=v(e,"b","mul");return je(t.shape,n.shape,"Error in multiplyStrict: "),M(t,n)}function jU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","div"),n=v(e,"b","div");return je(t.shape,n.shape,"Error in divideStrict: "),fe(t,n)}function GU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","modStrict"),n=v(e,"b","modStrict");return je(t.shape,n.shape,"Error in modStrict: "),Fu(t,n)}function UU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","minimumStrict"),n=v(e,"b","minimumStrict");return je(t.shape,n.shape,"Error in minimumStrict: "),Vn(t,n)}function qU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","maximumStrict"),n=v(e,"b","maximumStrict");return je(t.shape,n.shape,"Error in maximumStrict: "),Sr(t,n)}function HU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","squaredDifferenceStrict"),n=v(e,"b","squaredDifferenceStrict");return je(t.shape,n.shape,"Error in squaredDifferenceStrict: "),Pa(t,n)}var o_=S({addStrict_:zU}),s_=S({divStrict_:jU}),i_=S({maximumStrict_:qU}),a_=S({minimumStrict_:UU}),l_=S({modStrict_:GU}),u_=S({mulStrict_:WU}),c_=S({powStrict_:VU}),p_=S({squaredDifferenceStrict_:HU}),m_=S({subStrict_:BU});function KU(r,e="euclidean",t=null,n=!1){r=v(r,"x","norm");let o=dN(r,e,t),s=o.shape;if(n){let a=rr(t,r.shape);s=Bo(o.shape,a)}return z(o,s)}function dN(r,e,t=null){if(r.rank===0)return At(r);if(r.rank!==1&&t===null)return dN(z(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return be(At(r),t);if(e===Infinity)return ur(At(r),t);if(e===-Infinity)return Li(At(r),t);if(e==="euclidean"||e===2)return _t(be(_r(At(r),ce(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return ur(be(At(r),t[0]),t[1]-1);if(e===Infinity)return ur(be(At(r),t[1]),t[0]);if(e===-Infinity)return Li(be(At(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return _t(be(Me(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var Gu=S({norm_:KU});function XU(r,e,t,n,o=!0){let s=v(r,"v","movingAverage"),a=v(e,"x","movingAverage"),i=v(t,"decay","movingAverage");qb(s,a),A(Ur(s.shape,a.shape),()=>"Shape mismatch in v and x");let l=ce(1),u=pe(l,i),c=M(pe(a,s),u);if(o){A(n!=null,()=>"When using zeroDebias: true, step is required.");let p=v(n,"step","movingAverage");c=fe(c,pe(l,_r(i,p)))}return ee(s,c)}var YU=S({movingAverage_:XU});function ZU(r,e,t){let n=v(r,"indices","scatterND","int32"),o=v(e,"updates","scatterND");ng(o,n,t);let s={indices:n,updates:o},a={shape:t};return D.runKernel(Ci,s,a)}var f_=S({scatterND_:ZU});function hN(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function JU(r,e,t,n=0){let o=v(r,"sparseIndices","sparseToDense","int32"),s=v(e,"sparseValues","sparseToDense"),a=v(n,"defaultValue","sparseToDense",s.dtype);hN(o,s,t,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},l={outputShape:t};return D.runKernel(gu,i,l)}var nf=S({sparseToDense_:JU});function QU(r,e){let t=v(e,"indices","gatherND","int32"),o={params:v(r,"x","gatherND"),indices:t};return D.runKernel(li,o)}var d_=S({gatherND_:QU});function gN(r,e){if(e==null)return r.shape.slice();if(Ur(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function eq(r,e,t,n){let o=v(r,"x","dropout");if(A(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),A(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof R?o.clone():o;let s=gN(o,t),a=1-e,i=fe(Ss(ee(Ts(s,0,1,"float32",n),a)),a);return M(o,i)}var h_=S({dropout_:eq});function g_(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function of(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(a)}return Gt(o,"float32")}async function tq(r,e,t=1){let n=v(r,"predictions","inTopK"),o=v(e,"targets","inTopK");A(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),A(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),je(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];A(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await n.data(),i=await o.data(),[l,u]=[a.length/s,s],c=Cb("bool",l);for(let p=0;p<l;p++){let m=p*u,f=a.subarray(m,m+u),d=[];for(let h=0;h<f.length;h++)d.push({value:f[h],index:h});d.sort((h,g)=>g.value-h.value),c[p]=0;for(let h=0;h<t;h++)if(d[h].index===i[p]){c[p]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),Or(c,o.shape,"bool")}var rq=tq;var Vo={};Ye(Vo,{conv2d:()=>sq,depthwiseConv2d:()=>uq,matMul:()=>pq});function nq(r,e,t,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=z(e,[1,e.shape[0],e.shape[1],e.shape[2]])),A(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),A(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),A(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let u=s==="NHWC"?i.shape[3]:i.shape[1],c=s==="NHWC"?l.shape[3]:l.shape[1];A(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),A(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),a!=null&&A(it(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let p={x:i,dy:l},m={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:t};return D.runKernel(Yl,p,m)}var rp=S({conv2DBackpropFilter_:nq});function Uu(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return M(r,Es(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function qu(r,e){let t=e,n=Nt(r.shape,e.shape);return n.length>0&&(t=be(t,n)),z(t,r.shape)}function Hu(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Tr(r);if(e==="elu")return Is(r);if(e==="relu6")return Mu(r);if(e==="prelu")return $a(r,t);if(e==="leakyrelu")return Na(r,n);throw new Error(`Unknown fused activation ${e}.`)}var Ku=(r,e)=>!(r>0)||e==="linear";function oq({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Ku(D.state.gradientDepth,l)===!1){let k=Xr(r,e,t,n,o,s,a);return i!=null&&(k=ee(k,i)),Hu(k,l,u,c)}let p=v(r,"x","conv2d"),m=v(e,"filter","conv2d"),f=p,d=!1;p.rank===3&&(d=!0,f=z(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),A(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),a!=null&&A(it(n),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`),A(f.shape[3]===m.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${m.shape[2]}.`),A(Mt(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),A(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);let h=Cu(f.shape,m.shape,t,s,n,a),g;i!=null&&(g=v(i,"bias","fused conv2d"),[g]=Ge(g,p),Ve(h.outShape,g.shape));let y;u!=null&&(y=v(u,"prelu weights","fused conv2d"));let b=(k,E)=>{let[N,F,O,P]=E,W=Uu(k,O,l);A(Ln(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let G=Xc(F.shape,W,N,t,n),j=rp(F,W,N.shape,t,n),X=[G,j];if(P!=null){let K=qu(P,W);X.push(K)}return X},w={x:f,filter:m,bias:g,preluActivationWeights:y},_={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return i==null?Zr((E,N,F)=>{let O=D.runKernel(_s,w,_);return F([N,E,O]),d&&(O=z(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:b}})(f,m):Zr((E,N,F,O)=>{let P=D.runKernel(_s,w,_);return O([N,E,P,F]),d&&(P=z(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:b}})(f,m,g)}var sq=S({fusedConv2d_:oq});function iq(r,e,t,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={x:i,dy:l},c={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:t};return D.runKernel(eu,u,c)}var hg=S({depthwiseConv2dNativeBackpropFilter_:iq});function aq(r,e,t,n,o,s=[1,1],a){let i=e,l=!1;e.rank===3&&(l=!0,i=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={dy:i,filter:t},c={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},p=D.runKernel(tu,u,c);return l?z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var gg=S({depthwiseConv2dNativeBackpropInput_:aq});function lq({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Ku(D.state.gradientDepth,l)===!1){let k=zn(r,e,t,n,o,s,a);return i!=null&&(k=ee(k,i)),Hu(k,l,u,c)}let p=v(r,"x","depthwiseConv2d"),m=v(e,"filter","depthwiseConv2d"),f=p,d=!1;p.rank===3&&(d=!0,f=z(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),A(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),A(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),A(Mt(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),a!=null&&A(it(n),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${n}.`);let h=Cu(f.shape,m.shape,t,s,n,a,!0),g;i!=null&&(g=v(i,"bias","fused conv2d"),[g]=Ge(g,p),Ve(h.outShape,g.shape));let y;u!=null&&(y=v(u,"prelu weights","fused depthwiseConv2d"));let b=(k,E)=>{A(Ln(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[N,F,O,P]=E,W=Uu(k,O,l),G=gg(F.shape,W,N,t,n,s,a),j=hg(F,W,N.shape,t,n,s,a);if(P!=null){let X=qu(g,W);return[G,j,X]}return[G,j]},w={x:f,filter:m,bias:g,preluActivationWeights:y},_={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return i==null?Zr((E,N,F)=>{let O=D.runKernel(vs,w,_);return F([N,E,O]),d&&(O=z(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:b}})(f,m):Zr((E,N,F,O)=>{let P=D.runKernel(vs,w,_);return O([N,E,P,F]),d&&(P=z(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:b}})(f,m,g)}var uq=S({fusedDepthwiseConv2d_:lq});function cq({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i}){if(Ku(D.state.gradientDepth,s)===!1){let P=Ue(r,e,t,n);return o!=null&&(P=ee(P,o)),Hu(P,s,a,i)}let l=v(r,"a","fused matMul"),u=v(e,"b","fused matMul");[l,u]=Ge(l,u);let c=t?l.shape[l.rank-2]:l.shape[l.rank-1],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],m=t?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=l.shape.slice(0,-2),h=u.shape.slice(0,-2),g=dt(d),y=dt(h);A(l.rank>=2&&u.rank>=2&&l.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`),A(Ur(d,h),()=>`Error in fused matMul: outer dimensions (${d}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`),A(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${n} must match.`);let b=l.shape.slice(0,-2).concat([m,f]),w=t?z(l,[g,c,m]):z(l,[g,m,c]),_=n?z(u,[y,f,p]):z(u,[y,p,f]),k;o!=null&&(k=v(o,"bias","fused matMul"),[k]=Ge(k,l),Ve(b,k.shape));let E;a!=null&&(E=v(a,"prelu weights","fused matMul"));let N=(P,W)=>{let[G,j,X,K]=W,Y=Uu(z(P,X.shape),X,s),ne,J;if(!t&&!n?(ne=Ue(Y,j,!1,!0),J=Ue(G,Y,!0,!1)):!t&&n?(ne=Ue(Y,j,!1,!1),J=Ue(Y,G,!0,!1)):t&&!n?(ne=Ue(j,Y,!1,!0),J=Ue(G,Y,!1,!1)):(ne=Ue(j,Y,!0,!0),J=Ue(Y,G,!0,!0)),o!=null){let Q=qu(K,Y);return[ne,J,Q]}else return[ne,J]},F={a:w,b:_,bias:k,preluActivationWeights:E},O={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?Zr((W,G,j)=>{let X=D.runKernel(ws,F,O);return j([W,G,X]),{value:z(X,b),gradFunc:N}})(w,_):Zr((W,G,j,X)=>{let K=D.runKernel(ws,F,O);return X([W,G,K,j]),{value:z(K,b),gradFunc:N}})(w,_,k)}var pq=S({fusedMatMul_:cq});function mq(r){return of(r,.54,.46)}var xN=S({hammingWindow_:mq});function fq(r){return of(r,.5,.5)}var xg=S({hannWindow_:fq});function dq(r,e,t,n=!1,o=0){let s=0,a=[];for(;s+e<=r.size;)a.push(Fe(r,s,e)),s+=t;if(n)for(;s<r.size;){let i=s+e-r.size,l=Qe([Fe(r,s,e-i),Sa([i],o)]);a.push(l),s+=t}return a.length===0?Bi([],[0,e]):z(Qe(a),[a.length,e])}var yg=S({frame_:dq});function hq(r,e,t,n,o=xg){n==null&&(n=g_(e));let s=yg(r,e,t),a=M(s,o(e)),i=[];for(let l=0;l<s.shape[0];l++)i.push(Oa(Fe(a,[l,0],[1,e]),n));return Qe(i)}var yN=S({stft_:hq});function gq(r,e,t,n,o="bilinear",s=0){let a=v(r,"image","cropAndResize"),i=v(e,"boxes","cropAndResize","float32"),l=v(t,"boxInd","cropAndResize","int32"),u=i.shape[0];A(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),A(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),A(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),A(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),A(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),A(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let c={image:a,boxes:i,boxInd:l},p={method:o,extrapolationValue:s,cropSize:n};return D.runKernel(ti,c,p)}var bN=S({cropAndResize_:gq});function xq(r){let e=v(r,"image","flipLeftRight","float32");A(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return D.runKernel(ai,t,{})}var wN=S({flipLeftRight_:xq});function yq(r,e,t=0,n=.5){let o=v(r,"image","rotateWithOffset","float32");A(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:e,fillValue:t,center:n};return D.runKernel(Ri,s,a)}var _N=S({rotateWithOffset_:yq});function Wo(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),A(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),A(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),A(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),A(e.rank===1,()=>"scores must be a 1D tensor"),A(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),A(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function bq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppression"),a=v(e,"scores","nonMaxSuppression"),i=Wo(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let l={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return D.runKernel(bi,{boxes:s,scores:a},l)}var vN=S({nonMaxSuppression_:bq});function kN(r,e,t){let n=wq(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function wq(r,e,t){return vq(r,e,t||_q)}function _q(r,e){return r>e?1:r<e?-1:0}function vq(r,e,t){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=t(e,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function y_(r,e,t,n,o){return x_(r,e,t,n,o,0)}function b_(r,e,t,n,o,s){return x_(r,e,t,n,o,0,!1,s,!0)}function w_(r,e,t,n,o,s){return x_(r,e,t,n,o,s,!0)}function x_(r,e,t,n,o,s,a=!1,i=!1,l=!1){let u=[];for(let g=0;g<e.length;g++)e[g]>o&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(CN);let c=s>0?-.5/s:0,p=[],m=[];for(;p.length<t&&u.length>0;){let g=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:w}=g;if(y<o)break;let _=!1;for(let k=p.length-1;k>=w;--k){let E=kq(r,b,p[k]);if(E>=n){_=!0;break}if(g.score=g.score*Cq(n,c,E),g.score<=o)break}g.suppressBeginIndex=p.length,_||(g.score===y?(p.push(b),m.push(g.score)):g.score>o&&kN(u,g,CN))}let f=p.length,d=t-f;i&&d>0&&(p.push(...new Array(d).fill(0)),m.push(...new Array(d).fill(0)));let h={selectedIndices:p};return a&&(h.selectedScores=m),l&&(h.validOutputs=f),h}function kq(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),u=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),p=Math.max(o[0],o[2]),m=Math.max(o[1],o[3]),f=(i-s)*(l-a),d=(p-u)*(m-c);if(f<=0||d<=0)return 0;let h=Math.max(s,u),g=Math.max(a,c),y=Math.min(i,p),b=Math.min(l,m),w=Math.max(y-h,0)*Math.max(b-g,0);return w/(f+d-w)}function Cq(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function CN(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function Iq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppressionAsync"),a=v(e,"scores","nonMaxSuppressionAsync"),i=Wo(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let l=await Promise.all([s.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:p}=y_(u,c,t,n,o);return s!==r&&s.dispose(),a!==e&&a.dispose(),Gt(p,"int32")}var IN=Iq;function Sq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppression"),i=v(e,"scores","nonMaxSuppression"),l=Wo(a,i,t,n,o,s);t=l.maxOutputSize,n=l.iouThreshold,o=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:a,scores:i},c={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},p=D.runKernel(_i,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var SN=S({nonMaxSuppressionWithScore_:Sq});async function Nq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),l=Wo(a,i,t,n,o,s);t=l.maxOutputSize,n=l.iouThreshold,o=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([a.data(),i.data()]),c=u[0],p=u[1],{selectedIndices:m,selectedScores:f}=w_(c,p,t,n,o,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Gt(m,"int32"),selectedScores:Gt(f)}}var NN=Nq;function Tq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppression"),i=v(e,"scores","nonMaxSuppression"),l=Wo(a,i,t,n,o,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,m={boxes:a,scores:i},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},d=D.runKernel(wi,m,f);return{selectedIndices:d[0],validOutputs:d[1]}}var TN=S({nonMaxSuppressionPadded_:Tq});async function Eq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),l=Wo(a,i,t,n,o,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,[m,f]=await Promise.all([a.data(),i.data()]),{selectedIndices:d,validOutputs:h}=b_(m,f,u,c,p,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Gt(d,"int32"),validOutputs:ce(h,"int32")}}var EN=Eq;function Aq(r,e,t=!1,n=!1){let o=v(r,"images","resizeBilinear");A(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),A(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),A(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=z(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},l={alignCorners:t,halfPixelCenters:n,size:e},u=D.runKernel(ko,i,l);return a?z(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var bg=S({resizeBilinear_:Aq});function Dq(r,e,t=!1,n=!1){let o=v(r,"images","resizeNearestNeighbor");A(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),A(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),A(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=z(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},l={alignCorners:t,halfPixelCenters:n,size:e},u=D.runKernel(da,i,l);return a?z(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var wg=S({resizeNearestNeighbor_:Dq});function $q(r,e,t){A(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),A(t%1==0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=v(r,"a","bandPart");A(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),t<0&&(t=a);let i=z(Qc(0,s,1,"int32"),[-1,1]),l=Qc(0,a,1,"int32"),u=pe(i,l),c=hr(on(u,ce(+e,"int32")),Pr(u,ce(-t,"int32"))),p=pt([s,a],n.dtype);return z(jt(pr(z(n,[-1,s,a])).map(m=>Rt(c,m,p))),o)}var AN=S({bandPart_:$q});function Rq(r){let e;if(Array.isArray(r)){e=!1,A(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)A(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=cr(r,r.shape[0],0).map(o=>kn(o,[0]));A(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(D.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=M(be(M(t[a],s)),t[a]);s=pe(s,i)}return fe(s,Gu(s,"euclidean"))}));return e?jt(t,0):t}var DN=S({gramSchmidt_:Rq});function Fq(r,e=!1){if(A(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return $N(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),n=pr(z(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(l=>{let[u,c]=$N(l,e);o.push(u),s.push(c)});let a=z(jt(o,0),r.shape),i=z(jt(s,0),r.shape);return[a,i]}}function $N(r,e=!1){return D.tidy(()=>{A(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=Yc(t),s=Mn(r),a=Bi([[1]],[1,1]),i=Mn(a),l=t>=n?n:t;for(let u=0;u<l;++u){let c=s,p=i,m=o;[i,s,o]=D.tidy(()=>{let f=Fe(s,[u,u],[t-u,1]),d=Gu(f),h=Fe(s,[u,u],[1,1]),g=Rt(Yt(h,0),Bi([[-1]]),Bi([[1]])),y=pe(h,M(g,d)),b=fe(f,y);b.shape[0]===1?i=Mn(a):i=Qe([a,Fe(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let w=He(fe(Ue(g,y),d)),_=Fe(s,[u,0],[t-u,n]),k=M(w,i),E=qe(i);if(u===0)s=pe(_,Ue(k,Ue(E,_)));else{let O=pe(_,Ue(k,Ue(E,_)));s=Qe([Fe(s,[0,0],[u,n]),O],0)}let N=qe(k),F=Fe(o,[0,u],[t,o.shape[1]-u]);if(u===0)o=pe(F,Ue(Ue(F,i),N));else{let O=pe(F,Ue(Ue(F,i),N));o=Qe([Fe(o,[0,0],[t,u]),O],1)}return[i,s,o]}),De([c,p,m])}return!e&&t>n&&(o=Fe(o,[0,0],[t,n]),s=Fe(s,[0,0],[n,n])),[o,s]})}var RN=S({qr_:Fq});var Ut;(function(r){r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Ut||(Ut={}));function Oq(r,e,t=Ut.SUM_BY_NONZERO_WEIGHTS){let n=v(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=v(e,"weights","computeWeightedLoss"));let s=o==null?n:M(n,o);if(t===Ut.NONE)return s;if(t===Ut.SUM)return be(s);if(t===Ut.MEAN){if(o==null)return wt(s);{let a=n.size/o.size,i=fe(be(s),be(o));return a>1?fe(i,ce(a)):i}}if(t===Ut.SUM_BY_NONZERO_WEIGHTS){if(o==null)return fe(be(s),ce(n.size));{let a=M(o,Nr(n.shape)),i=oe(be(vn(a,ce(0))),"float32");return fe(be(s),i)}}throw Error(`Unknown reduction: ${t}`)}var Er=S({computeWeightedLoss_:Oq});function Pq(r,e,t,n=Ut.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","absoluteDifference"),s=v(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=v(t,"weights","absoluteDifference")),je(o.shape,s.shape,"Error in absoluteDifference: ");let i=At(pe(o,s));return Er(i,a,n)}var FN=S({absoluteDifference_:Pq});function Mq(r,e,t,n,o=Ut.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","cosineDistance"),a=v(e,"predictions","cosineDistance"),i=null;n!=null&&(i=v(n,"weights","cosineDistance")),je(s.shape,a.shape,"Error in cosineDistance: ");let l=ce(1),u=pe(l,be(M(s,a),t,!0));return Er(u,i,o)}var ON=S({cosineDistance_:Mq});function Lq(r,e,t,n=Ut.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","hingeLoss"),s=v(e,"predictions","hingeLoss"),a=null;t!=null&&(a=v(t,"weights","hingeLoss")),je(o.shape,s.shape,"Error in hingeLoss: ");let i=ce(1);o=pe(M(ce(2),o),i);let l=Tr(pe(i,M(o,s)));return Er(l,a,n)}var PN=S({hingeLoss_:Lq});function zq(r,e,t,n=1,o=Ut.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","huberLoss"),a=v(e,"predictions","huberLoss"),i=null;t!=null&&(i=v(t,"weights","huberLoss")),je(s.shape,a.shape,"Error in huberLoss: ");let l=ce(n),u=At(pe(a,s)),c=Vn(u,l),p=pe(u,c),m=ee(M(ce(.5),Me(c)),M(l,p));return Er(m,i,o)}var MN=S({huberLoss_:zq});function Bq(r,e,t,n=1e-7,o=Ut.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","logLoss"),a=v(e,"predictions","logLoss"),i=null;t!=null&&(i=v(t,"weights","logLoss")),je(s.shape,a.shape,"Error in logLoss: ");let l=ce(1),u=ce(n),c=He(M(s,lr(ee(a,u)))),p=M(pe(l,s),lr(ee(pe(l,a),u))),m=pe(c,p);return Er(m,i,o)}var LN=S({logLoss_:Bq});function Vq(r,e,t,n=Ut.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","meanSquaredError"),s=v(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=v(t,"weights","meanSquaredError")),je(o.shape,s.shape,"Error in meanSquaredError: ");let i=Pa(o,s);return Er(i,a,n)}var zN=S({meanSquaredError_:Vq});function Wq(r,e){let t=v(r,"labels","sigmoidCrossEntropyWithLogits"),n=v(e,"logits","sigmoidCrossEntropyWithLogits");je(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Tr(n),s=M(n,t),a=Du(er(He(At(n))));return ee(pe(o,s),a)}function jq(r,e,t,n=0,o=Ut.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"multiClassLabels","sigmoidCrossEntropy"),a=v(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=v(t,"weights","sigmoidCrossEntropy")),je(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let u=ce(n),c=ce(1),p=ce(.5);s=ee(M(s,pe(c,u)),M(p,u))}let l=Wq(s,a);return Er(l,i,o)}var BN=S({sigmoidCrossEntropy_:jq});function Gq(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Zr((o,s,a)=>{let l=jm(s,[t],!0),u=pe(oe(s,"float32"),l);a([o,u]);let c=He(M(u,o));return{value:be(c,[t]),gradFunc:(f,d)=>{let[h,g]=d,y=Bo(f.shape,[t]);return[M(z(f,y),pe(oe(h,"float32"),er(g))),M(z(f,y),pe(er(g),oe(h,"float32")))]}}})(r,e)}function Uq(r,e,t,n=0,o=Ut.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"onehotLabels","softmaxCrossEntropy"),a=v(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=v(t,"weights","softmaxCrossEntropy")),je(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let u=ce(n),c=ce(1),p=ce(s.shape[1]);s=ee(M(s,pe(c,u)),fe(u,p))}let l=Gq(s,a);return Er(l,i,o)}var VN=S({softmaxCrossEntropy_:Uq});var qq={fft:Fa,ifft:zi,rfft:Oa,irfft:Wu},Hq={hammingWindow:xN,hannWindow:xg,frame:yg,stft:yN},As={flipLeftRight:wN,resizeNearestNeighbor:wg,resizeBilinear:bg,rotateWithOffset:_N,cropAndResize:bN,nonMaxSuppression:vN,nonMaxSuppressionAsync:IN,nonMaxSuppressionWithScore:SN,nonMaxSuppressionWithScoreAsync:NN,nonMaxSuppressionPadded:TN,nonMaxSuppressionPaddedAsync:EN},__={bandPart:AN,gramSchmidt:DN,qr:RN},Kq={absoluteDifference:FN,computeWeightedLoss:Er,cosineDistance:ON,hingeLoss:PN,huberLoss:MN,logLoss:LN,meanSquaredError:zN,sigmoidCrossEntropy:BN,softmaxCrossEntropy:VN};var Lr=class extends sg{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return De(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return ug(e,t)}dispose(){this.iterations_!=null&&De(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Lr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var np=class extends Lr{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:V(()=>Se(s).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:V(()=>Se(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let l=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;V(()=>{let c=ee(M(l,this.rho),M(Me(i),1-this.rho)),p=M(fe(_t(ee(u,this.epsilon)),_t(ee(l,this.epsilon))),i),m=ee(M(u,this.rho),M(Me(p),1-this.rho));l.assign(c),u.assign(m);let f=ee(M(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(De(this.accumulatedGrads.map(e=>e.variable)),De(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};np.className="Adadelta";nn(np);var op=class extends Lr{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];if(this.accumulatedGrads[o]==null){let l=!1;this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:V(()=>Sa(s.shape,this.initialAccumulatorValue).variable(l))}}let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[o].variable;V(()=>{let l=ee(i,Me(a));i.assign(l);let u=ee(M(fe(a,_t(ee(l,D.backend.epsilon()))),-this.learningRate),s);s.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&De(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};op.className="Adagrad";nn(op);var sp=class extends Lr{constructor(e,t,n,o=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],V(()=>{this.accBeta1=ce(t).variable(),this.accBeta2=ce(n).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);V(()=>{let n=pe(1,this.accBeta1),o=pe(1,this.accBeta2);t.forEach((s,a)=>{let i=D.registeredVariables[s],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:V(()=>Se(i).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:V(()=>Se(i).variable(l))});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,p=this.accumulatedSecondMoment[a].variable,m=ee(M(c,this.beta1),M(u,1-this.beta1)),f=ee(M(p,this.beta2),M(Me(u),1-this.beta2)),d=fe(m,n),h=fe(f,o);c.assign(m),p.assign(f);let g=ee(M(fe(d,ee(_t(h),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(M(this.accBeta1,this.beta1)),this.accBeta2.assign(M(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&De(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&De(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),V(()=>{this.accBeta1.assign(_r(this.beta1,this.iterations_+1)),this.accBeta2.assign(_r(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};sp.className="Adam";nn(sp);var ip=class extends Lr{constructor(e,t,n,o=null,s=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=o,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],V(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);V(()=>{let n=pe(1,this.accBeta1),o=fe(-this.learningRate,ee(M(this.iteration,this.decay),1));t.forEach((s,a)=>{let i=D.registeredVariables[s],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:Se(i).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:Se(i).variable(l)});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,p=this.accumulatedWeightedInfNorm[a].variable,m=ee(M(c,this.beta1),M(u,1-this.beta1)),f=M(p,this.beta2),d=At(u),h=Sr(f,d);c.assign(m),p.assign(h);let g=ee(M(fe(o,n),fe(m,ee(h,this.epsilon))),i);i.assign(g)}),this.iteration.assign(ee(this.iteration,1)),this.accBeta1.assign(M(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&De(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&De(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};ip.className="Adamax";nn(ip);var ml=class extends Lr{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let a=D.registeredVariables[n];V(()=>{let i=ee(M(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=$t(ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};ml.className="SGD";nn(ml);var ap=class extends ml{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];if(this.accumulations[o]==null){let l=!1;this.accumulations[o]={originalName:`${n}/momentum`,variable:V(()=>Se(s).variable(l))}}let a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[n];i!=null&&V(()=>{let l,u=ee(M(this.m,a),i);this.useNesterov?l=ee(M(this.c,ee(i,M(u,this.m))),s):l=ee(M(this.c,u),s),a.assign(u),s.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&De(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};ap.className="Momentum";nn(ap);var lp=class extends Lr{constructor(e,t=.9,n=0,o=null,s=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:V(()=>Se(s).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:V(()=>Se(s).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:V(()=>Se(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let l=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;V(()=>{let c=ee(M(l,this.decay),M(Me(i),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[o].variable,m=ee(M(p,this.decay),M(i,1-this.decay)),f=fe(M(i,this.learningRate),_t(pe(c,ee(Me(m),this.epsilon)))),d=ee(M(u,this.momentum),f);l.assign(c),p.assign(m),u.assign(d);let h=pe(s,d);s.assign(h)}else{let p=ee(M(l,this.decay),M(Me(i),1-this.decay)),m=ee(M(u,this.momentum),fe(M(i,this.learningRate),_t(ee(p,this.epsilon))));l.assign(p),u.assign(m);let f=pe(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&De(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&De(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&De(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};lp.className="RMSProp";nn(lp);var Ma=class{static sgd(e){return new ml(e)}static momentum(e,t,n=!1){return new ap(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new lp(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new sp(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new np(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new ip(e,t,n,o,s)}static adagrad(e,t=.1){return new op(e,t)}};var fl={sgd:Ma.sgd,momentum:Ma.momentum,adadelta:Ma.adadelta,adagrad:Ma.adagrad,rmsprop:Ma.rmsprop,adamax:Ma.adamax,adam:Ma.adam};var Xq=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:r=>r())();function sf(){return new Promise(r=>Xq(()=>r()))}var T={};Ye(T,{ERF_A1:()=>iH,ERF_A2:()=>aH,ERF_A3:()=>lH,ERF_A4:()=>uH,ERF_A5:()=>cH,ERF_P:()=>sH,PARALLELIZE_THRESHOLD:()=>_g,SELU_SCALE:()=>k_,SELU_SCALEALPHA:()=>v_,applyActivation:()=>Hu,assertAndGetBroadcastShape:()=>Ve,assertAxesAreInnerMostDims:()=>zG,assertParamsConsistent:()=>Yq,assignToTypedArray:()=>yH,axesAreInnerMostDims:()=>Fw,calculateShapes:()=>FS,castTensor:()=>IH,combineLocations:()=>JS,complexWithEvenIndex:()=>hH,complexWithOddIndex:()=>gH,computeConv2DInfo:()=>Cu,computeConv3DInfo:()=>YS,computeDefaultPad:()=>yw,computeDilation2DInfo:()=>cj,computeOptimalWindowSize:()=>Jq,computeOutAndReduceShapes:()=>Ow,computeOutShape:()=>Zq,computePool2DInfo:()=>gw,computePool3DInfo:()=>pj,convertConv2DDataFormat:()=>XS,eitherStridesOrDilationsAreOne:()=>Mt,expandShapeToKeepDim:()=>Bo,exponent:()=>wH,exponents:()=>bH,fromStringArrayToUint8:()=>TH,fromUint8ToStringArray:()=>NH,getAxesPermutation:()=>Pw,getBroadcastDims:()=>tG,getComplexWithIndex:()=>xH,getFusedBiasGradient:()=>qu,getFusedDyActivation:()=>Uu,getImageCenter:()=>Qq,getInnerMostAxes:()=>BG,getPermuted:()=>tH,getReductionAxes:()=>Nt,getReshaped:()=>eH,getReshapedPermuted:()=>rH,getSliceBeginCoords:()=>nH,getSliceSize:()=>oH,getUndoAxesPermutation:()=>Wm,log:()=>mH,mergeRealAndImagArrays:()=>fH,prepareAndValidate:()=>RS,prepareSplitSize:()=>_H,reshapeTensor:()=>SH,segment_util:()=>WN,shouldFuse:()=>Ku,slice_util:()=>ir,splitRealAndImagArrays:()=>dH,tupleValuesAreOne:()=>Ln,upcastType:()=>dr,validateInput:()=>ng,validateUpdateShape:()=>uw,warn:()=>pH});function Yq(r,e){let t=r[0].length;r.forEach((o,s)=>{A(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),A(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<t;a++)A(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function Zq(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var _g=30;function Jq(r){return r<=_g?r:Rc(r,Math.floor(Math.sqrt(r)))}function Qq(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function eH(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/e[a],e[a]]);o=o.concat(r.slice(s+1))}return o}function tH(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2==1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function rH(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function nH(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function oH(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var v_=1.7580993408473768,k_=1.0507009873554805;var sH=.3275911,iH=.254829592,aH=-.284496736,lH=1.421413741,uH=-1.453152027,cH=1.061405429;function pH(...r){U().getBool("IS_TEST")||console.warn(...r)}function mH(...r){U().getBool("IS_TEST")||console.log(...r)}function fH(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function dH(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function hH(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function gH(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function xH(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function yH(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function bH(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function wH(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}function _H(r,e,t=0){let n=[];if(typeof e=="number")A(r.shape[t]%e==0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);A(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,l)=>l>0?i+l:i);e[s]=r.shape[t]-a}A(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}var WN={};Ye(WN,{collectGatherOpShapeInfo:()=>CH,computeOutShape:()=>kH,segOpComputeOptimalWindowSize:()=>vH});function vH(r,e){let t=!1,n;for(r<=_g?(n=r,t=!0):n=Rc(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=Rc(r,n+1);return n}function kH(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function CH(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let p=0;p<n;++p)if(r.shape[p]!==e.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${e.shape[p]}.`);let a=r.shape[t],i=[],l=1,u=1,c=1;for(let p=0;p<n;++p)i.push(r.shape[p]),l*=r.shape[p];for(let p=n;p<t;p++)i.push(r.shape[p]),u*=r.shape[p];for(let p=n;p<o;p++)i.push(e.shape[p]);for(let p=t+1;p<s;p++)i.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:i}}function IH(r,e,t){if(e==="complex64"){if(r.dtype==="complex64")return r.clone();let n=pt(r.shape),o=oe(r,"float32"),s=t.complex(o,n);return n.dispose(),o.dispose(),s}if(!Tb(r.dtype,e))return D.makeTensorFromDataId(r.dataId,r.shape,e);if(r.dtype==="complex64"){let n=t.real(r),o=oe(n,e);return n.dispose(),o}if(e==="int32")return t.int(r);if(e==="bool"){let n=ce(0,r.dtype),o=t.notEqual(r,n);return n.dispose(),o}else throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${e}`)}function SH(r,e){return D.makeTensorFromDataId(r.dataId,e,r.dtype)}function NH(r){try{return r.map(e=>Bc(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function TH(r){return r.map(e=>ol(e))}var Ar={};Ye(Ar,{nonMaxSuppressionV3Impl:()=>y_,nonMaxSuppressionV4Impl:()=>b_,nonMaxSuppressionV5Impl:()=>w_,whereImpl:()=>Zw});var vg={kernelName:is,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(r,Es(oe(t,"float32"),-1))}}};var jN={kernelName:qs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Me(oe(t,"float32")),o=_t(pe(ce(1),n));return He(fe(r,o))}}}};var GN={kernelName:Hs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=_t(pe(Me(oe(t,"float32")),1));return fe(r,n)}}}};var UN={kernelName:bn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ve(t.shape,n.shape);return{a:()=>{let i=r,l=Nt(t.shape,o);return l.length>0&&(i=be(i,l)),z(i,t.shape)},b:()=>{let i=r,l=Nt(n.shape,o);return l.length>0&&(i=be(i,l)),z(i,n.shape)}}}};var qN={kernelName:Hn,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var HN={kernelName:Kn,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Se(t)}}};var KN={kernelName:na,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Se(t)}}};var XN={kernelName:Ks,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,_t(pe(ce(1),Me(oe(t,"float32")))))}}};var YN={kernelName:Xs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=_t(ee(ce(1),Me(oe(t,"float32"))));return fe(r,n)}}}};var ZN={kernelName:Js,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ve(t.shape,n.shape);return{a:()=>{let i=ee(Me(t),Me(n)),l=M(r,fe(n,i)),u=Nt(t.shape,o);return u.length>0&&(l=be(l,u)),z(l,t.shape)},b:()=>{let i=ee(Me(t),Me(n)),l=He(M(r,fe(t,i))),u=Nt(n.shape,o);return u.length>0&&(l=be(l,u)),z(l,n.shape)}}}};var JN={kernelName:Ys,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,ee(Me(oe(t,"float32")),1))}}};var QN={kernelName:Zs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,pe(ce(1),Me(oe(t,"float32"))))}}};function EH(r,e,t,n,o=[1,1,1],s,a){let i=v(r,"dy","avgPool3dGrad"),l=v(e,"input","avgPool3dGrad"),u=i,c=l,p=!1;l.rank===4&&(p=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=z(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),A(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),A(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),A(Mt(n,o),()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),a!=null&&A(it(s),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let m={dy:u,input:c},f={filterSize:t,strides:n,dilations:o,pad:s,dimRoundingMode:a},d=D.runKernel(Hl,m,f);return p?z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var eT=S({avgPool3dGrad_:EH});var tT={kernelName:oa,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,dilations:a,pad:i,dimRoundingMode:l}=t,u=a==null?[1,1,1]:a;return{x:()=>eT(r,n,o,s,u,i,l)}}};function AH(r,e,t,n,o){let s=v(r,"dy","avgPoolGrad"),a=v(e,"input","avgPoolGrad");A(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,l=s,u=!1;a.rank===3&&(u=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),A(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let c={dy:l,input:i},p={filterSize:t,strides:n,pad:o},m=D.runKernel(ql,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var rT=S({avgPoolGrad_:AH});var nT={kernelName:Xn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a}=t;return{x:()=>rT(r,n,o,s,a)}}};var oT={kernelName:Yn,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>Ue(r,o,!1,!0),b:()=>Ue(n,r,!0,!1)}:!s&&a?{a:()=>Ue(r,o,!1,!1),b:()=>Ue(r,n,!0,!1)}:s&&!a?{a:()=>Ue(o,r,!1,!0),b:()=>Ue(n,r,!1,!1)}:{a:()=>Ue(o,r,!0,!0),b:()=>Ue(r,n,!0,!0)}}};var sT={kernelName:sa,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>Da(r,n,o)}}};var iT={kernelName:Ob,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,a=Array.from(s);for(let l=o.length-1;l>=0;l--)if(o[l]===s[l])a[l]=1;else if(o[l]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let l=0;l<a.length;l++)a[l]>1&&i.push(l);return{x:()=>be(r,i,!0)}}};var aT={kernelName:On,gradFunc:r=>({x:()=>r.clone()})};var lT={kernelName:Qs,gradFunc:r=>({x:()=>Se(r)})};var uT={kernelName:Pn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Rt(hr(Pr(n,o),on(n,s)),r,Se(r))}}};var cT={kernelName:ia,inputsToSave:["x"],gradFunc:vg.gradFunc};var pT={kernelName:as,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(l=>l.shape),{axis:o}=t,s=rr(o,e[0].shape)[0],a=n.map(l=>l[s]);return cr(r,a,s).map(l=>()=>l)}};var mT={kernelName:Zn,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:a,pad:i,dataFormat:l}=t;return A(Ln(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Xc(n.shape,r,o,a,i,l),filter:()=>rp(n,r,o.shape,a,i,l)}}};var fT={kernelName:Jn,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:l}=t;return{dy:()=>Xr(r,o,s,a,i,1,l),filter:()=>rp(r,n,o.shape,s,a,i,l)}}};function DH(r,e,t,n,o){let s=r;r.rank===4&&(s=z(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=z(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),A(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),A(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),A(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),A(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),A(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},l={strides:n,pad:o,filterShape:t};return D.runKernel(Zl,i,l)}var dT=S({conv3DBackpropFilter_:DH});var hT={kernelName:aa,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;A(Ln(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=e;return{x:()=>ag(a.shape,r,i,o,s),filter:()=>dT(a,r,i.shape,o,s)}}};var gT={kernelName:Qn,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(He(Bu(oe(t,"float32"))),r)}}};var xT={kernelName:ei,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(Vu(oe(t,"float32")),r)}}};var yT={kernelName:eo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:a}=t;return{x:()=>{let i=Pw([o],n.rank),l=Eu(r,o,s,!a);return i!=null&&(l=qe(l,i)),l}}}};var bT={kernelName:to,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=t,i=n==null?[1,1]:n;A(Ln(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,u]=e;return A(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),A(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),A(Mt(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),a!=null&&A(it(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),{x:()=>gg(l.shape,r,u,o,s,n,a),filter:()=>hg(l,r,u.shape,o,s,n,a)}}};var wT={kernelName:la,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>D.runKernel(Oc,s,t),filter:()=>D.runKernel(Pc,a,t)}}};var _T={kernelName:ni,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>D.runKernel(nu,n)}}};var vT={kernelName:oi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=M(er(He(Me(t))),2/Math.sqrt(Math.PI));return{x:()=>M(r,n)}}};var kT={kernelName:no,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(r,t)}}};var CT={kernelName:ls,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>z(r,t.shape)}}};var IT={kernelName:ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(r,er(t))}}};var ST={kernelName:oo,gradFunc:r=>({x:()=>Se(r)})};var NT={kernelName:so,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ve(t.shape,n.shape);return{a:()=>{let i=fe(r,oe(n,"float32")),l=Nt(t.shape,o);return l.length>0?z(be(i,l),t.shape):i},b:()=>{let i=M(r,oe(t,"float32")),l=Nt(n.shape,o);l.length>0&&(i=z(be(i,l),n.shape));let u=Me(n);return He(fe(i,oe(u,"float32")))}}}};var TT={kernelName:io,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,a,i]=e,l=i==null?ce(1):i,u=Nt(s.shape,o.shape),c=[];if(s.rank===1){for(let _=0;_<o.shape.length-1;++_)c.push(o.shape[_]);c.push(1)}let p=pe(o,s),m=M(r,l),f=Lu(ee(a,ce(n))),d=M(M(M(f,f),f),ce(-.5));return{x:()=>s.rank===1?z(M(M(r,Bn(z(f,[1,1,1,s.shape[0]]),c)),l),o.shape):z(M(M(r,f),l),o.shape),mean:()=>{let _=M(M(f,ce(-1)),m);return s.rank===1&&(_=be(_,u)),z(_,s.shape)},variance:()=>{let _=M(M(d,p),m);return s.rank===1&&(_=be(_,u)),z(_,s.shape)},scale:()=>{let _=M(p,f),k=M(r,_);return s.rank===1&&(k=be(k,u)),z(k,s.shape)},offset:()=>{let _=r;return s.rank===1&&(_=be(_,u)),z(_,s.shape)}}}};var DT={kernelName:us,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,a=rr(s,n.shape)[0];return{x:()=>{let l=n.shape,u=o.size,c=l.slice(0,a),p=c.length,m=l.slice(s,l.length).slice(1),f=m.length,d=ET(0,p),h=ET(p+1,p+1+f),g=AT([c,[u],m]),y=z(r,g),b=z(o,[u]),w=AT([[p],d,h]),_=qe(y,w),k=tf(_,b,n.shape[a]),E=Wm(w);return k=qe(k,E),k},indices:()=>o}}};function ET(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function AT(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var $T={kernelName:ao,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>Se(t),b:()=>Se(n)}}};var RT={kernelName:cs,gradFunc:r=>({x:()=>oe(r,"float32")})};var FT={kernelName:ci,gradFunc:r=>({x:()=>Se(r)})};var OT={kernelName:pi,gradFunc:r=>({x:()=>Se(r)})};var PT={kernelName:mi,gradFunc:r=>({x:()=>Se(r)})};var MT={kernelName:lo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=Yt(n,0);return{x:()=>Rt(s,r,M(r,o))}}};var LT={kernelName:hi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,ee(t,1))}}};var zT={kernelName:uo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,oe(t,"float32"))}}};var BT={kernelName:Pb,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let s=!0,a=er(n);return pe(r,M(be(r,o,s),a))}}}};function $H(r,e,t,n=5,o=1,s=1,a=.5){let i={x:r,y:e,dy:t},l={depthRadius:n,bias:o,alpha:s,beta:a};return D.runKernel(lu,i,l)}var VT=S({localResponseNormalizationBackprop_:$H});var WT={kernelName:ca,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:a,alpha:i,beta:l}=t;return{x:()=>VT(n,o,r,s,a,i,l)}}};function kg(r,e,t,n){return e.rank<t.rank&&(e=z(e,Bo(e.shape,n))),r.rank<t.rank&&(r=z(r,Bo(r.shape,n))),{x:()=>M(r,oe(Yr(t,e),r.dtype))}}var C_={kernelName:co,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],a=e[1],i=rr(o,s.shape),l=kg(r,a,s,i);return{x:()=>l.x()}}};var jT={kernelName:po,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>M(r,oe(Pr(t,n),"float32")),b:()=>M(r,oe(Ta(t,n),"float32"))}}};function RH(r,e,t,n,o,s=[1,1,1],a,i){let l=v(r,"dy","maxPool3dGrad"),u=v(e,"input","maxPool3dGrad"),c=v(t,"output","maxPool3dGrad"),p=l,m=u,f=c,d=!1;u.rank===4&&(d=!0,p=z(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=z(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=z(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),A(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),A(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),A(f.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${f.rank}.`),A(Mt(o,s),()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`),i!=null&&A(it(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);let h={dy:p,input:m,output:f},g={filterSize:n,strides:o,dilations:s,pad:a,dimRoundingMode:i},y=D.runKernel(cu,h,g);return d?z(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}var GT=S({maxPool3dGrad_:RH});var UT={kernelName:pa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,dilations:i,pad:l,dimRoundingMode:u}=t,c=i==null?[1,1,1]:i;return{x:()=>GT(r,n,o,s,a,c,l,u)}}};function FH(r,e,t,n,o,s,a){let i=v(r,"dy","maxPoolGrad"),l=v(e,"input","maxPoolGrad"),u=v(t,"output","maxPoolGrad");A(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),A(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),A(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),a!=null&&A(it(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let c={dy:i,input:l,output:u},p={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return D.runKernel(uu,c,p)}var qT=S({maxPoolGrad_:FH});var HT={kernelName:mo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>qT(r,n,o,s,a,i)}}};var KT={kernelName:fo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=rr(o,n.shape),i=Ow(n.shape,s)[1],l=dt(i);return{x:()=>{let c=n.shape.slice();s.forEach(f=>{c[f]=1});let p=z(r,c);return fe(M(p,Nr(n.shape,"float32")),l)}}}};var XT={kernelName:ho,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,a]=e,i=rr(o,s.shape),l=kg(r,a,s,i);return{x:()=>l.x()}}};var YT={kernelName:go,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>M(r,oe(on(t,n),"float32")),b:()=>M(r,oe(Yt(t,n),"float32"))}}};var ZT={kernelName:ma,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Fe(r,s,n.shape)}}};var JT={kernelName:xi,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ve(t.shape,n.shape);return{a:()=>{let i=Nt(t.shape,o);return i.length>0?z(be(r,i),t.shape):r},b:()=>{let i=M(r,He(Ss(fe(t,n)))),l=Nt(n.shape,o);return l.length>0?z(be(i,l),n.shape):i}}}};var QT={kernelName:xo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ve(t.shape,n.shape);return{a:()=>{let i=M(r,oe(n,"float32")),l=Nt(t.shape,o);return l.length>0?z(be(i,l),t.shape):i},b:()=>{let i=M(r,oe(t,"float32")),l=Nt(n.shape,o);return l.length>0?z(be(i,l),n.shape):i}}}};var e1={kernelName:ps,gradFunc:r=>({x:()=>He(r)})};var t1={kernelName:yo,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>pt(t.shape,"float32")}}};var r1={kernelName:ms,gradFunc:r=>({x:()=>Se(r)})};var n1={kernelName:fs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return pr(r,n).map(s=>()=>s)}};var I_={kernelName:bo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Fe(r,s,n.shape)}}};var o1={kernelName:wo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,a=n,i=Ve(s.shape,a.shape);return{a:()=>{let c=oe(a,"float32"),p=M(r,M(c,_r(s,pe(c,ce(1))))),m=Nt(s.shape,i);return m.length>0&&(p=be(p,m)),z(p,s.shape)},b:()=>{let c=Yt(s,0),p=Rt(c,lr(s),Se(s)),m=M(r,M(o,p)),f=Nt(a.shape,i);return f.length>0&&(m=be(m,f)),z(m,a.shape)}}}};var s1={kernelName:_o,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=Yt(t,0);return{x:()=>Rt(o,r,M(r,n)),alpha:()=>{let s=Rt(o,Se(r),M(r,t)),a=Nt(n.shape,r.shape);return a.length>0&&(s=be(s,a)),z(s,n.shape)}}}};var i1={kernelName:ro,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ve(t.shape,n.shape);return{a:()=>{let i=fe(r,oe(n,"float32")),l=Nt(t.shape,o);return l.length>0?z(be(i,l),t.shape):i},b:()=>{let i=M(r,oe(t,"float32")),l=Nt(n.shape,o);l.length>0&&(i=z(be(i,l),n.shape));let u=Me(n);return He(fe(i,oe(u,"float32")))}}}};var a1={kernelName:ki,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,He(Me(t)))}}};var l1={kernelName:Co,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=M(on(t,6),Es(t));return{x:()=>M(r,oe(n,"float32"))}}};var u1={kernelName:vo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(r,oe(Es(t),"float32"))}}};var c1={kernelName:ds,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(r,t.shape)}}};var p1={kernelName:ko,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(hu,o,t)}}};var m1={kernelName:da,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(du,o,t)}}};var f1={kernelName:Io,gradFunc:(r,e,t)=>{let{dims:n}=t,o=rr(n,r.shape);return{x:()=>Zt(r,o)}}};var d1={kernelName:So,gradFunc:r=>({x:()=>Se(r)})};var h1={kernelName:No,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>He(fe(r,M(_r(t,1.5),2)))}}};var g1={kernelName:hs,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>oe(Se(t),"float32"),t:()=>M(r,oe(t,r.dtype)),e:()=>M(r,oe(Ea(t),r.dtype))}}};var x1={kernelName:Ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Yt(t,ce(0)),o=ce(v_),s=ce(k_),a=M(r,s),i=M(M(r,o),er(oe(t,"float32")));return Rt(n,a,i)}}}};var y1={kernelName:Eo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(r,M(t,pe(ce(1),t)))}}};var b1={kernelName:Ni,gradFunc:r=>({x:()=>Se(r)})};var w1={kernelName:To,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(Ia(oe(t,"float32")),r)}}};var _1={kernelName:Si,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(Tu(oe(t,"float32")),r)}}};var v1={kernelName:gs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,a=n.shape,[i,l]=cw(n,o,s),u=[];for(let c=0;c<r.rank;c++)u.push([i[c],a[c]-i[c]-l[c]]);return{x:()=>Mr(r,u)}}};var k1={kernelName:$o,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,a=M(r,n);return{logits:()=>pe(a,M(be(a,[o],s),n))}}};var C1={kernelName:Ti,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(r,Kr(t))}}};var S_={kernelName:ha,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Ca(r,n,o)}}};var N_={kernelName:xs,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>Qe(r,n)}}};var I1={kernelName:Ao,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,M(_t(oe(t,"float32")),2))}}};var S1={kernelName:ga,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(r,M(oe(t,"float32"),2))}}};var N1={kernelName:Ro,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ce(2);return{a:()=>M(r,M(o,pe(t,n))),b:()=>M(r,M(o,pe(n,t)))}}};var T1={kernelName:$i,gradFunc:r=>({x:()=>Se(r)})};var E1={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ve(t.shape,n.shape);return{a:()=>{let i=r,l=Nt(t.shape,o);return l.length>0&&(i=be(i,l)),z(i,t.shape)},b:()=>{let i=r,l=Nt(n.shape,o);return l.length>0&&(i=be(i,l)),z(He(i),n.shape)}}}};var A1={kernelName:Do,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;rr(s,n.shape).forEach(u=>{o[u]=1});let i=z(r,o),l=M(i,Nr(n.shape,"float32"));return{x:()=>l}}};var D1={kernelName:Ai,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,Me(Ia(t)))}}};var $1={kernelName:Oo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>M(pe(ce(1),Me(t)),r)}}};var R1={kernelName:wn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let a=Se(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=ee(a,Fe(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)a=ee(a,Fe(r,[i*n.shape[0],l*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)for(let u=0;u<o[2];++u)a=ee(a,Fe(r,[i*n.shape[0],l*n.shape[1],u*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)for(let u=0;u<o[2];++u)for(let c=0;c<o[3];++c)a=ee(a,Fe(r,[i*n.shape[0],l*n.shape[1],u*n.shape[2],c*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var F1={kernelName:Po,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Wm(o);return{x:()=>qe(r,s)}}};var O1={kernelName:ys,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>jt(r,o)}}};var P1={kernelName:xa,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>OH(r,t)}}};function OH(r,e){let t=Sr(e,Se(e)),n=zo(r,t),o=Pr(e,ce(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=wr(o,i+1);o=hr(o,Nr(n.shape,"bool"));let a=Se(n);return Rt(o,n,a)}var M1={kernelName:bs,gradFunc:r=>({x:()=>Se(r)})};var PH=[vg,jN,GN,UN,qN,HN,KN,XN,YN,ZN,JN,QN,tT,nT,oT,sT,iT,aT,lT,uT,cT,pT,fT,mT,hT,gT,xT,yT,bT,wT,i1,_T,vT,kT,CT,IT,NT,ST,TT,DT,$T,RT,FT,OT,PT,MT,LT,zT,BT,WT,C_,C_,jT,UT,HT,KT,XT,YT,ZT,JT,QT,e1,t1,r1,n1,I_,I_,o1,s1,a1,l1,u1,c1,p1,m1,f1,d1,h1,g1,x1,y1,b1,w1,_1,v1,k1,C1,S_,S_,N_,N_,I1,N1,S1,T1,E1,A1,D1,$1,R1,F1,O1,P1,M1];for(let r of PH)Lb(r);R.prototype.abs=function(){return this.throwIfDisposed(),At(this)};R.prototype.acos=function(){return this.throwIfDisposed(),Im(this)};R.prototype.acosh=function(){return this.throwIfDisposed(),Sm(this)};R.prototype.addStrict=function(r){return this.throwIfDisposed(),o_(this,r)};R.prototype.add=function(r){return this.throwIfDisposed(),ee(this,r)};R.prototype.all=function(r,e){return this.throwIfDisposed(),ku(this,r,e)};R.prototype.any=function(r,e){return this.throwIfDisposed(),ll(this,r,e)};R.prototype.argMax=function(r){return this.throwIfDisposed(),ul(this,r)};R.prototype.argMin=function(r){return this.throwIfDisposed(),Nm(this,r)};R.prototype.asScalar=function(){return this.throwIfDisposed(),A(this.size===1,()=>"The array must have only 1 element."),z(this,[])};R.prototype.asType=function(r){return this.throwIfDisposed(),oe(this,r)};R.prototype.as1D=function(){return this.throwIfDisposed(),z(this,[this.size])};R.prototype.as2D=function(r,e){return this.throwIfDisposed(),z(this,[r,e])};R.prototype.as3D=function(r,e,t){return this.throwIfDisposed(),z(this,[r,e,t])};R.prototype.as4D=function(r,e,t,n){return this.throwIfDisposed(),z(this,[r,e,t,n])};R.prototype.as5D=function(r,e,t,n,o){return this.throwIfDisposed(),z(this,[r,e,t,n,o])};R.prototype.asin=function(){return this.throwIfDisposed(),Tm(this)};R.prototype.asinh=function(){return this.throwIfDisposed(),Em(this)};R.prototype.atan=function(){return this.throwIfDisposed(),Am(this)};R.prototype.atan2=function(r){return this.throwIfDisposed(),Dm(this,r)};R.prototype.atanh=function(){return this.throwIfDisposed(),$m(this)};R.prototype.avgPool=function(r,e,t,n){return this.throwIfDisposed(),ka(this,r,e,t,n)};R.prototype.batchToSpaceND=function(r,e){return this.throwIfDisposed(),Ca(this,r,e)};R.prototype.batchNorm=function(r,e,t,n,o){return this.throwIfDisposed(),Lo(this,r,e,t,n,o)};R.prototype.broadcastTo=function(r){return this.throwIfDisposed(),cl(this,r)};R.prototype.cast=function(r){return this.throwIfDisposed(),oe(this,r)};R.prototype.ceil=function(){return this.throwIfDisposed(),Fm(this)};R.prototype.clipByValue=function(r,e){return this.throwIfDisposed(),ar(this,r,e)};R.prototype.concat=function(r,e){return this.throwIfDisposed(),r instanceof R&&(r=[r]),Qe([this,...r],e)};R.prototype.conv1d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Su(this,r,e,t,n,o,s)};R.prototype.conv2dTranspose=function(r,e,t,n,o){return this.throwIfDisposed(),Nu(this,r,e,t,n,o)};R.prototype.conv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Xr(this,r,e,t,n,o,s)};R.prototype.cos=function(){return this.throwIfDisposed(),Ia(this)};R.prototype.cosh=function(){return this.throwIfDisposed(),Tu(this)};R.prototype.cumsum=function(r,e,t){return this.throwIfDisposed(),Eu(this,r,e,t)};R.prototype.depthToSpace=function(r,e){return this.throwIfDisposed(),Pm(this,r,e)};R.prototype.depthwiseConv2D=function(r,e,t,n,o,s){return Pt("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),zn(this,r,e,t,n,o,s)};R.prototype.depthwiseConv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),zn(this,r,e,t,n,o,s)};R.prototype.dilation2d=function(r,e,t,n,o){return this.throwIfDisposed(),Mm(this,r,e,t,n,o)};R.prototype.divNoNan=function(r){return this.throwIfDisposed(),Lm(this,r)};R.prototype.divStrict=function(r){return this.throwIfDisposed(),s_(this,r)};R.prototype.div=function(r){return this.throwIfDisposed(),fe(this,r)};R.prototype.dot=function(r){return this.throwIfDisposed(),Tw(this,r)};R.prototype.elu=function(){return this.throwIfDisposed(),Is(this)};R.prototype.equalStrict=function(r){return this.throwIfDisposed(),Jw(this,r)};R.prototype.equal=function(r){return this.throwIfDisposed(),Yr(this,r)};R.prototype.erf=function(){return this.throwIfDisposed(),zm(this)};R.prototype.exp=function(){return this.throwIfDisposed(),er(this)};R.prototype.expandDims=function(r){return this.throwIfDisposed(),wr(this,r)};R.prototype.expm1=function(){return this.throwIfDisposed(),Bm(this)};R.prototype.fft=function(){return this.throwIfDisposed(),Fa(this)};R.prototype.flatten=function(){return this.throwIfDisposed(),z(this,[this.size])};R.prototype.floor=function(){return this.throwIfDisposed(),Ss(this)};R.prototype.floorDiv=function(r){return this.throwIfDisposed(),vu(this,r)};R.prototype.gather=function(r,e){return this.throwIfDisposed(),zo(this,r,e)};R.prototype.greaterEqualStrict=function(r){return this.throwIfDisposed(),Qw(this,r)};R.prototype.greaterEqual=function(r){return this.throwIfDisposed(),Pr(this,r)};R.prototype.greaterStrict=function(r){return this.throwIfDisposed(),e_(this,r)};R.prototype.greater=function(r){return this.throwIfDisposed(),Yt(this,r)};R.prototype.ifft=function(){return this.throwIfDisposed(),zi(this)};R.prototype.irfft=function(){return this.throwIfDisposed(),Wu(this)};R.prototype.isFinite=function(){return this.throwIfDisposed(),Ew(this)};R.prototype.isInf=function(){return this.throwIfDisposed(),Aw(this)};R.prototype.isNaN=function(){return this.throwIfDisposed(),Dw(this)};R.prototype.leakyRelu=function(r){return this.throwIfDisposed(),Na(this,r)};R.prototype.lessEqualStrict=function(r){return this.throwIfDisposed(),t_(this,r)};R.prototype.lessEqual=function(r){return this.throwIfDisposed(),on(this,r)};R.prototype.lessStrict=function(r){return this.throwIfDisposed(),r_(this,r)};R.prototype.less=function(r){return this.throwIfDisposed(),Ta(this,r)};R.prototype.localResponseNormalization=function(r,e,t,n){return this.throwIfDisposed(),Vm(this,r,e,t,n)};R.prototype.logSigmoid=function(){return this.throwIfDisposed(),Rw(this)};R.prototype.logSoftmax=function(r){return this.throwIfDisposed(),$u(this,r)};R.prototype.logSumExp=function(r,e){return this.throwIfDisposed(),jm(this,r,e)};R.prototype.log=function(){return this.throwIfDisposed(),lr(this)};R.prototype.log1p=function(){return this.throwIfDisposed(),Du(this)};R.prototype.logicalAnd=function(r){return this.throwIfDisposed(),hr(this,r)};R.prototype.logicalNot=function(){return this.throwIfDisposed(),Ea(this)};R.prototype.logicalOr=function(r){return this.throwIfDisposed(),Ru(this,r)};R.prototype.logicalXor=function(r){return this.throwIfDisposed(),Mw(this,r)};R.prototype.matMul=function(r,e,t){return this.throwIfDisposed(),Ue(this,r,e,t)};R.prototype.maxPool=function(r,e,t,n){return this.throwIfDisposed(),Aa(this,r,e,t,n)};R.prototype.max=function(r,e){return this.throwIfDisposed(),ur(this,r,e)};R.prototype.maximumStrict=function(r){return this.throwIfDisposed(),i_(this,r)};R.prototype.maximum=function(r){return this.throwIfDisposed(),Sr(this,r)};R.prototype.mean=function(r,e){return this.throwIfDisposed(),wt(this,r,e)};R.prototype.min=function(r,e){return this.throwIfDisposed(),Li(this,r,e)};R.prototype.minimumStrict=function(r){return this.throwIfDisposed(),a_(this,r)};R.prototype.minimum=function(r){return this.throwIfDisposed(),Vn(this,r)};R.prototype.mirrorPad=function(r,e){return this.throwIfDisposed(),Um(this,r,e)};R.prototype.modStrict=function(r){return this.throwIfDisposed(),l_(this,r)};R.prototype.mod=function(r){return this.throwIfDisposed(),Fu(this,r)};R.prototype.mulStrict=function(r){return this.throwIfDisposed(),u_(this,r)};R.prototype.mul=function(r){return this.throwIfDisposed(),M(this,r)};R.prototype.neg=function(){return this.throwIfDisposed(),He(this)};R.prototype.norm=function(r,e,t){return this.throwIfDisposed(),Gu(this,r,e,t)};R.prototype.notEqualStrict=function(r){return this.throwIfDisposed(),n_(this,r)};R.prototype.notEqual=function(r){return this.throwIfDisposed(),vn(this,r)};R.prototype.oneHot=function(r,e=1,t=0){return this.throwIfDisposed(),ks(this,r,e,t)};R.prototype.onesLike=function(){return this.throwIfDisposed(),nr(this)};R.prototype.pad=function(r,e){return this.throwIfDisposed(),Mr(this,r,e)};R.prototype.pool=function(r,e,t,n,o){return this.throwIfDisposed(),Bw(this,r,e,t,n,o)};R.prototype.powStrict=function(r){return this.throwIfDisposed(),c_(this,r)};R.prototype.pow=function(r){return this.throwIfDisposed(),_r(this,r)};R.prototype.prelu=function(r){return this.throwIfDisposed(),$a(this,r)};R.prototype.prod=function(r,e){return this.throwIfDisposed(),Ou(this,r,e)};R.prototype.reciprocal=function(){return this.throwIfDisposed(),qm(this)};R.prototype.relu=function(){return this.throwIfDisposed(),Tr(this)};R.prototype.relu6=function(){return this.throwIfDisposed(),Mu(this)};R.prototype.reshapeAs=function(r){return this.throwIfDisposed(),z(this,r.shape)};R.prototype.reshape=function(r){return this.throwIfDisposed(),z(this,r)};R.prototype.resizeBilinear=function(r,e,t){return this.throwIfDisposed(),bg(this,r,e,t)};R.prototype.resizeNearestNeighbor=function(r,e,t){return this.throwIfDisposed(),wg(this,r,e,t)};R.prototype.reverse=function(r){return this.throwIfDisposed(),Zt(this,r)};R.prototype.rfft=function(){return this.throwIfDisposed(),Oa(this)};R.prototype.round=function(){return this.throwIfDisposed(),Hm(this)};R.prototype.rsqrt=function(){return this.throwIfDisposed(),Lu(this)};R.prototype.selu=function(){return this.throwIfDisposed(),zu(this)};R.prototype.separableConv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Km(this,r,e,t,n,o,s)};R.prototype.sigmoid=function(){return this.throwIfDisposed(),Kr(this)};R.prototype.sign=function(){return this.throwIfDisposed(),Xm(this)};R.prototype.sin=function(){return this.throwIfDisposed(),Bu(this)};R.prototype.sinh=function(){return this.throwIfDisposed(),Vu(this)};R.prototype.slice=function(r,e){return this.throwIfDisposed(),Fe(this,r,e)};R.prototype.softmax=function(r){return this.throwIfDisposed(),Ra(this,r)};R.prototype.softplus=function(){return this.throwIfDisposed(),Ns(this)};R.prototype.spaceToBatchND=function(r,e){return this.throwIfDisposed(),Da(this,r,e)};R.prototype.split=function(r,e){return this.throwIfDisposed(),cr(this,r,e)};R.prototype.sqrt=function(){return this.throwIfDisposed(),_t(this)};R.prototype.square=function(){return this.throwIfDisposed(),Me(this)};R.prototype.squaredDifference=function(r){return this.throwIfDisposed(),Pa(this,r)};R.prototype.squaredDifferenceStrict=function(r){return this.throwIfDisposed(),p_(this,r)};R.prototype.squeeze=function(r){return this.throwIfDisposed(),kn(this,r)};R.prototype.stack=function(r,e){this.throwIfDisposed();let t=r instanceof R?[this,r]:[this,...r];return jt(t,e)};R.prototype.step=function(r){return this.throwIfDisposed(),Es(this,r)};R.prototype.stridedSlice=function(r,e,t,n,o,s,a,i){return this.throwIfDisposed(),Jm(this,r,e,t,n,o,s,a,i)};R.prototype.subStrict=function(r){return this.throwIfDisposed(),m_(this,r)};R.prototype.sub=function(r){return this.throwIfDisposed(),pe(this,r)};R.prototype.sum=function(r,e){return this.throwIfDisposed(),be(this,r,e)};R.prototype.tan=function(){return this.throwIfDisposed(),Qm(this)};R.prototype.tanh=function(){return this.throwIfDisposed(),Mi(this)};R.prototype.tile=function(r){return this.throwIfDisposed(),Bn(this,r)};R.prototype.toBool=function(){return this.throwIfDisposed(),oe(this,"bool")};R.prototype.toFloat=function(){return this.throwIfDisposed(),oe(this,"float32")};R.prototype.toInt=function(){return this.throwIfDisposed(),oe(this,"int32")};R.prototype.topk=function(r,e){return this.throwIfDisposed(),ef(this,r,e)};R.prototype.transpose=function(r){return this.throwIfDisposed(),qe(this,r)};R.prototype.unique=function(r){return this.throwIfDisposed(),tp(this,r)};R.prototype.unsortedSegmentSum=function(r,e){return this.throwIfDisposed(),tf(this,r,e)};R.prototype.unstack=function(r){return this.throwIfDisposed(),pr(this,r)};R.prototype.where=function(r,e){return this.throwIfDisposed(),Rt(r,this,e)};R.prototype.zerosLike=function(){return this.throwIfDisposed(),Se(this)};function re(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&x.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var MH=Ar.whereImpl,Cg=class extends js{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new el(this,Cs())}write(e,t,n){this.firstUse&&(this.firstUse=!1,U().get("IS_NODE")&&T.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let o={};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&x.isString(n[0])){let s=n.map(a=>x.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o){this.data.set(e,{values:t,dtype:o,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return T.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>x.decodeString(o))}catch(o){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ie(e.shape,e.dtype,n)}makeOutput(e,t,n){let o=this.write(e,t,n);return Cs().makeTensorFromDataId(o,t,n,this)}disposeData(e){if(this.data.has(e)){let{complexTensorInfos:t}=this.data.get(e);t!=null&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){let t=e.dataId;if(this.data.has(t)){let n=this.data.get(t);n.refCount--,n.refCount<1&&this.disposeData(t)}}async time(e){let t=x.now();return e(),{kernelMs:x.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){re([e],"where");let t=this.readSync(e.dataId);return MH(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};var Sg={};Ye(Sg,{addImpl:()=>G1,bincountImpl:()=>af,bincountReduceImpl:()=>T_,ceilImpl:()=>q1,concatImpl:()=>lf,expImpl:()=>K1,expm1Impl:()=>Y1,floorImpl:()=>J1,gatherV2Impl:()=>A_,greaterImpl:()=>eE,lessImpl:()=>rE,linSpaceImpl:()=>D_,logImpl:()=>oE,maxImpl:()=>$_,maximumImpl:()=>iE,minimumImpl:()=>lE,multiplyImpl:()=>Ig,negImpl:()=>pE,notEqualImpl:()=>fE,prodImpl:()=>gE,rangeImpl:()=>pf,rsqrtImpl:()=>yE,simpleAbsImpl:()=>L1,sliceImpl:()=>mf,squaredDifferenceImpl:()=>_E,stridedSliceImpl:()=>R_,subImpl:()=>kE,tileImpl:()=>F_,topKImpl:()=>O_,transposeImpl:()=>cf,uniqueImpl:()=>P_});function L1(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var LH=r=>{let{x:e}=r.inputs,t=r.backend;re(e,"abs");let n=new Float32Array(x.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=L1(o),t.makeOutput(n,e.shape,"float32")},z1={kernelName:is,backendName:"cpu",kernelFunc:LH};function Ze(r){return(e,t,n,o,s)=>{let a=T.assertAndGetBroadcastShape(e,t),i=a.length,l=x.computeStrides(a),u=x.sizeFromShape(a),c=x.getTypedArrayFromDType(s,u),p=e.length,m=t.length,f=x.computeStrides(e),d=x.computeStrides(t),h=T.getBroadcastDims(e,a),g=T.getBroadcastDims(t,a);if(h.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=r(n[y%n.length],o[y%o.length]);else for(let y=0;y<c.length;++y){let b=x.indexToLoc(y,i,l),w=b.slice(-p);h.forEach(N=>w[N]=0);let _=x.locToIndex(w,p,f),k=b.slice(-m);g.forEach(N=>k[N]=0);let E=x.locToIndex(k,m,d);c[y]=r(n[_],o[E])}return[c,a]}}function mr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),l=t.data.get(i.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",a)},i}var B1={kernelName:Xl,backendName:"cpu",kernelFunc:mr};function up(r,e,t="float32"){if(t==="complex64"){let o=up(r,e,"float32"),s=up(r,e,"float32");return mr({inputs:{real:o,imag:s},backend:r})}let n=x.makeZerosTypedArray(x.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Dr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var V1={kernelName:cs,backendName:"cpu",kernelFunc:Dr};function jo(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var W1={kernelName:fu,backendName:"cpu",kernelFunc:jo};function Go(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Dr({inputs:{x:o},backend:t});let a=up(t,o.shape,o.dtype),i=Go({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),l=mr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}if(o.dtype==="complex64"){let a=jo({inputs:{input:o},backend:t}),i=Go({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!x.hasEncodingLoss(o.dtype,s)){let a=Dr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32"){let a=t.data.get(o.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(o.shape,"int32",i)}if(s==="bool"){let a=t.data.get(o.dataId).values,i=x.toTypedArray([0],o.dtype),[l,u]=Ze((c,p)=>c!==p?1:0)(o.shape,[],a,i,"bool");return t.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var j1={kernelName:On,backendName:"cpu",kernelFunc:Go};function nt(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a,b:i}=o,l=s;re([a,i],r);let u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,p=n||a.dtype,[m,f]=e(a.shape,i.shape,u,c,p);return l.makeTensorInfo(f,p,m)}:({inputs:o,backend:s})=>{let{a,b:i}=o,l=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let u=Go({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,m=c.complexTensorInfos.imag,f=l.data.get(p.dataId).values,d=l.data.get(m.dataId).values,h=Go({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(h.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=l.data.get(y.dataId).values,_=l.data.get(b.dataId).values,[k,E,N]=t(a.shape,i.shape,f,d,w,_),F=l.makeTensorInfo(N,"float32",k),O=l.makeTensorInfo(N,"float32",E),P=mr({inputs:{real:F,imag:O},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(h),l.disposeIntermediateTensorInfo(F),l.disposeIntermediateTensorInfo(O),P}else{let u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,p=n||a.dtype,[m,f]=e(a.shape,i.shape,u,c,p);return l.makeTensorInfo(f,p,m)}}}function cp(r){return(e,t,n,o,s,a)=>{let i=T.assertAndGetBroadcastShape(e,t),l=x.sizeFromShape(i),u=i.length,c=x.computeStrides(i),p=x.getTypedArrayFromDType("float32",l),m=x.getTypedArrayFromDType("float32",l),f=T.getBroadcastDims(e,i),d=T.getBroadcastDims(t,i),h=T.mergeRealAndImagArrays(n,o),g=T.mergeRealAndImagArrays(s,a),y=e.length,b=x.computeStrides(e),w=t.length,_=x.computeStrides(t);if(f.length+d.length===0)for(let k=0;k<p.length;k++){let E=k%h.length,N=k%g.length,F=r(h[E*2],h[E*2+1],g[N*2],g[N*2+1]);p[k]=F.real,m[k]=F.imag}else for(let k=0;k<p.length;k++){let E=x.indexToLoc(k,u,c),N=E.slice(-y);f.forEach(G=>N[G]=0);let F=x.locToIndex(N,y,b),O=E.slice(-w);d.forEach(G=>O[G]=0);let P=x.locToIndex(O,w,_),W=r(h[F*2],h[F*2+1],g[P*2],g[P*2+1]);p[k]=W.real,m[k]=W.imag}return[p,m,i]}}var G1=Ze((r,e)=>r+e),zH=cp((r,e,t,n)=>({real:r+t,imag:e+n})),La=nt(bn,G1,zH),U1={kernelName:bn,backendName:"cpu",kernelFunc:La};function af(r,e,t,n,o){let s=x.sizeFromShape(n),a=x.makeZerosTypedArray(o,t);for(let i=0;i<r.length;i++){let l=r[i];if(l<0)throw new Error("Input x must be non-negative!");l>=o||(s>0?a[l]+=e[i]:a[l]+=1)}return a}function T_(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],a=Ie([o,t],e.dtype);for(let i=0;i<o;i++)for(let l=0;l<s;l++){let u=r.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(n?a.set(1,i,u):e.size>0?a.set(a.get(i,u)+e.get(i,l),i,u):a.set(a.get(i,u)+1,i,u))}return a}function Uo(r){return(e,t,n)=>{let o=x.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function $e(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(re(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,l=i.data.get(a.dataId).values,u=x.sizeFromShape(a.shape),c=t||a.dtype,p=x.getArrayFromDType(c,u);for(let m=0;m<u;++m)p[m]=e(l[m],o);return i.makeTensorInfo(a.shape,c,p)}}function qo(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(re(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,l=i.data.get(a.dataId).values,u=t||a.dtype,c=e(l,u,o);return i.makeTensorInfo(a.shape,u,c)}}var q1=Uo(r=>Math.ceil(r)),BH=qo(Qs,q1),H1={kernelName:Qs,backendName:"cpu",kernelFunc:BH};function lf(r,e,t,n){let o=x.getArrayFromDType(t,x.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(a=>{let i=x.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?T.fromUint8ToStringArray(a.vals):a.vals,l=0;for(let u=0;u<a.shape[0];++u){let c=u*e[1]+s;for(let p=0;p<a.shape[1];++p)o[c+p]=i[l++]}s+=a.shape[1]})}return o}var K1=Uo(r=>Math.exp(r)),E_=qo(no,K1),X1={kernelName:no,backendName:"cpu",kernelFunc:E_};var Y1=Uo(r=>Math.expm1(r)),VH=qo(ii,Y1),Z1={kernelName:ii,backendName:"cpu",kernelFunc:VH};var J1=Uo(r=>Math.floor(r)),WH=qo(oo,J1),Q1={kernelName:oo,backendName:"cpu",kernelFunc:WH};function A_(r,e,t){let n=Ie(t,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],l=a[2],u=e.locToIndex([i,l]);a[2]=e.values[u];let c=r.locToIndex(a);n.values[o]=r.values[c]}return n}var eE=Ze((r,e)=>r>e?1:0),jH=nt(ui,eE,null,"bool"),tE={kernelName:ui,backendName:"cpu",kernelFunc:jH};var rE=Ze((r,e)=>r<e?1:0),GH=nt(fi,rE,null,"bool"),nE={kernelName:fi,backendName:"cpu",kernelFunc:GH};function D_(r,e,t){let n=(e-r)/(t-1),o=x.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var oE=Uo(r=>Math.log(r)),UH=qo(uo,oE),sE={kernelName:uo,backendName:"cpu",kernelFunc:UH};function $_(r,e,t,n){let o=x.getTypedArrayFromDType(n,x.sizeFromShape(t));for(let s=0;s<o.length;++s){let a=s*e,i=r[a];for(let l=0;l<e;++l){let u=r[a+l];u>i&&(i=u)}o[s]=i}return o}var iE=Ze((r,e)=>Math.max(r,e)),qH=nt(po,iE),aE={kernelName:po,backendName:"cpu",kernelFunc:qH};var lE=Ze((r,e)=>Math.min(r,e)),HH=nt(go,lE),uE={kernelName:go,backendName:"cpu",kernelFunc:HH};var Ig=Ze((r,e)=>r*e),KH=cp((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),uf=nt(xo,Ig,KH),cE={kernelName:xo,backendName:"cpu",kernelFunc:uf};function pE(r,e,t){let n=x.createScalarValue(-1,t);return Ig([],e,n,r,t)}function XH(r){let{inputs:e,backend:t}=r,{x:n}=e;re(n,"neg");let o=t.data.get(n.dataId).values,[s,a]=pE(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,s)}var mE={kernelName:ps,backendName:"cpu",kernelFunc:XH};var fE=Ze((r,e)=>r!==e?1:0),YH=nt(yi,fE,null,"bool"),dE={kernelName:yi,backendName:"cpu",kernelFunc:YH};function cf(r,e,t,n,o){let s=e.length,a=x.sizeFromShape(e),i=x.computeStrides(e),l=x.computeStrides(o),u=x.getTypedArrayFromDType(t,x.sizeFromShape(o));for(let c=0;c<a;++c){let p=x.indexToLoc(c,s,i),m=new Array(p.length);for(let d=0;d<m.length;d++)m[d]=p[n[d]];let f=x.locToIndex(m,s,l);u[f]=r[c]}return u}function or(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;re(o,"transpose");let a=o.shape.length,i=new Array(a);for(let p=0;p<i.length;p++)i[p]=o.shape[s[p]];let l=n.data.get(o.dataId).values,u=cf(l,o.shape,o.dtype,s,i);return{dataId:n.write(u,i,o.dtype),shape:i,dtype:o.dtype}}var hE={kernelName:Po,backendName:"cpu",kernelFunc:or};function gE(r,e,t,n){let[o,s]=T.computeOutAndReduceShapes(r,n),a=dr(e,"int32"),i=x.makeZerosTypedArray(x.sizeFromShape(o),a),l=x.sizeFromShape(s);for(let u=0;u<i.length;++u){let c=u*l,p=1;for(let m=0;m<l;++m)p*=t[c+m];i[u]=p}return{outVals:i,outShape:o,outDtype:a}}function ZH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"prod");let i=o.shape.length,l=x.parseAxisParam(s,o.shape),u=T.getAxesPermutation(l,i),c=l,p=o,m=[];u!=null&&(p=or({inputs:{x:o},backend:t,attrs:{perm:u}}),m.push(p),c=T.getInnerMostAxes(c.length,i));let f=t.data.get(p.dataId).values,{outVals:d,outShape:h,outDtype:g}=gE(p.shape,p.dtype,f,c),y=h;return a&&(y=T.expandShapeToKeepDim(h,l)),m.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(y,g,d)}var xE={kernelName:vi,backendName:"cpu",kernelFunc:ZH};function pf(r,e,t,n){let o=r===e,s=r<e&&t<0,a=e<r&&t>1;if(o||s||a)return x.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((e-r)/t)),l=x.makeZerosTypedArray(i,n);e<r&&t===1&&(t=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}var yE=Uo(r=>1/Math.sqrt(r)),JH=qo(No,yE),bE={kernelName:No,backendName:"cpu",kernelFunc:JH};function mf(r,e,t,n,o){let s=ir.isSliceContinous(n,e,t),a=x.sizeFromShape(t),i=x.computeStrides(n);if(s){let p=ir.computeFlatOffset(e,i);return o==="string"?r.slice(p,p+a):r.subarray(p,p+a)}let l=o==="string"?T.fromUint8ToStringArray(r):r,u=Ie(n,o,l),c=Ie(t,o);for(let p=0;p<c.size;++p){let m=c.indexToLoc(p),f=m.map((d,h)=>d+e[h]);c.set(u.get(...f),...m)}return o==="string"?T.fromStringArrayToUint8(c.values):c.values}function Ho(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n;re(o,"slice");let[i,l]=ir.parseSliceParams(o,s,a);ir.assertParamsValid(o,i,l);let u=t.data.get(o.dataId).values,c=mf(u,i,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,c)}var wE={kernelName:gs,backendName:"cpu",kernelFunc:Ho};var _E=Ze((r,e)=>{let t=r-e;return t*t}),QH=nt(Ro,_E),vE={kernelName:Ro,backendName:"cpu",kernelFunc:QH};function R_(r,e,t,n){let o=Ie(r,e.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let l=0;l<i.length;l++)i[l]=a[l]*t[l]+n[l];o.set(e.get(...i),...a)}return o}var kE=Ze((r,e)=>r-e),eK=cp((r,e,t,n)=>({real:r-t,imag:e-n})),ff=nt(Fo,kE,eK),CE={kernelName:Fo,backendName:"cpu",kernelFunc:ff};function F_(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=Ie(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let l=0;l<a.length;l++)a[l]=s[l]%r.shape[l];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}function O_(r,e,t,n,o){let s=e[e.length-1],[a,i]=[r.length/s,s],l=x.getTypedArrayFromDType(t,a*n),u=x.getTypedArrayFromDType("int32",a*n);for(let p=0;p<a;p++){let m=p*i,f=r.subarray(m,m+i),d=[];for(let b=0;b<f.length;b++)d.push({value:f[b],index:b});d.sort((b,w)=>w.value-b.value);let h=p*n,g=l.subarray(h,h+n),y=u.subarray(h,h+n);for(let b=0;b<n;b++)g[b]=d[b].value,y[b]=d[b].index}let c=e.slice();return c[c.length-1]=n,[Ie(c,t,l),Ie(c,"int32",u)]}function P_(r,e,t,n){let o=x.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let d=0;d<o;d++)s[0]*=t[d];s[1]=t[o];for(let d=o+1;d<t.length;d++)s[2]*=t[d];let a={},i=new Int32Array(t[o]),l=new ct(s,n,r),u=[],c=s[0]===1&&s[2]===1;for(let d=0;d<t[o];d++){let h;if(c)h=r[d].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let b=0;b<s[2];b++)g.push(l.get(y,d,b));h=g.join(",")}if(a[h]!==void 0)i[d]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[d]=g,u.push(d)}}let p=s.slice();p[1]=Object.keys(a).length;let m=new ct(p,n);u.forEach((d,h)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)m.set(l.get(g,d,y),g,h,y)});let f=t.slice();return f[o]=p[1],{outputValues:m.values,outputShape:f,indices:i}}var M_="2.8.3";_u("cpu",()=>new Cg,1);var L_=$e(ni,r=>r>=0?r:Math.exp(r)-1),IE={kernelName:ni,backendName:"cpu",kernelFunc:L_};function z_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;re([o],"leakyRelu");let a=x.sizeFromShape(o.shape),i=t.data.get(o.dataId).values,l=x.getTypedArrayFromDType("float32",a);for(let u=0;u<i.length;u++)l[u]=i[u]<0?s*i[u]:i[u];return t.makeTensorInfo(o.shape,"float32",l)}var SE={kernelName:lo,backendName:"cpu",kernelFunc:z_};var tK=Ze((r,e)=>r<0?e*r:r);function B_(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;re([n,o],"prelu");let s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,l]=tK(n.shape,o.shape,s,a,n.dtype);return t.makeTensorInfo(l,n.dtype,i)}var NE={kernelName:_o,backendName:"cpu",kernelFunc:B_};var V_=$e(vo,r=>Math.max(0,r)),TE={kernelName:vo,backendName:"cpu",kernelFunc:V_};var W_=$e(Co,r=>Math.min(Math.max(0,r),6)),EE={kernelName:Co,backendName:"cpu",kernelFunc:W_};function pp(r,e,t,n,o){if(t==="linear")return Dr({inputs:{x:e},backend:r});if(t==="relu")return V_({inputs:{x:e},backend:r});if(t==="elu")return L_({inputs:{x:e},backend:r});if(t==="relu6")return W_({inputs:{x:e},backend:r});if(t==="prelu")return B_({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return z_({inputs:{x:e},backend:r,attrs:{alpha:o}});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function tt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=x.sizeFromShape(o.shape),i=x.inferFromImplicitShape(s,a),l=x.sizeFromShape(i);x.assert(a===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let u=t.data.get(o.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=i,p.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var AE={kernelName:ds,backendName:"cpu",kernelFunc:tt};function j_(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;re([o,s],"matMul");let l=o.shape.length,u=s.shape.length,c=a?o.shape[l-2]:o.shape[l-1],p=i?s.shape[u-1]:s.shape[u-2],m=a?o.shape[l-1]:o.shape[l-2],f=i?s.shape[u-2]:s.shape[u-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=x.sizeFromShape(d),y=x.sizeFromShape(h),b=g===y||g===1||y===1;x.assert(l>=2&&u>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`);let _=(g>y?o.shape.slice(0,-2):s.shape.slice(0,-2)).concat([m,f]);x.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let k=a?[g,c,m]:[g,m,c],E=i?[y,f,p]:[y,p,f],N=tt({inputs:{x:o},backend:t,attrs:{shape:k}}),F=tt({inputs:{x:s},backend:t,attrs:{shape:E}}),O=a?N.shape[1]:N.shape[2],P=a?N.shape[2]:N.shape[1],W=i?F.shape[1]:F.shape[2],G=Math.max(g,y),j=t.data.get(N.dataId).values,X=t.data.get(F.dataId).values,K=x.computeStrides(N.shape),Y=x.computeStrides(F.shape),[ne,J,Q]=a?[K[0],1,K[1]]:[K[0],K[1],1],[ie,ae,ue]=i?[1,Y[1],Y[0]]:[Y[1],1,Y[0]],le=P*W,ge=Ie([G,P,W],N.dtype),_e=ge.values,ye=t.blockSize;for(let ke=0;ke<G;ke++)for(let Ae=0;Ae<P;Ae+=ye)for(let Re=0;Re<W;Re+=ye)for(let Pe=0;Pe<O;Pe+=ye){let ze=Math.min(Ae+ye,P),mt=Math.min(Re+ye,W),gt=Math.min(Pe+ye,O);for(let It=Ae;It<ze;It++)for(let xt=Re;xt<mt;xt++){let yt=0;for(let St=Pe;St<gt;St++){let ot=Math.min(ke,g-1)*ne,hn=Math.min(ke,y-1)*ue,Qt=j[ot+It*J+St*Q],gn=X[St*ie+xt*ae+hn];yt+=Qt*gn}_e[ke*le+(It*W+xt)]+=yt}}return t.disposeIntermediateTensorInfo(N),t.disposeIntermediateTensorInfo(F),t.makeTensorInfo(_,ge.dtype,ge.values)}var DE={kernelName:Yn,backendName:"cpu",kernelFunc:j_};function rK(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n,m,f,d,h=[];m=j_({inputs:{a:o,b:s},attrs:{transposeA:l,transposeB:u},backend:t}),a&&(f=La({inputs:{a:m,b:a},backend:t}),h.push(m),m=f),c&&(d=pp(t,m,c,i,p),h.push(m),m=d);for(let y of h)t.disposeIntermediateTensorInfo(y);return m}var $E={kernelName:ws,backendName:"cpu",kernelFunc:rK};var nK=$e(qs,r=>Math.acos(r)),RE={kernelName:qs,backendName:"cpu",kernelFunc:nK};var oK=$e(Hs,r=>Math.acosh(r)),FE={kernelName:Hs,backendName:"cpu",kernelFunc:oK};function sK(r){let{inputs:e,backend:t}=r,n=e;re(e,"addN");let o=n.map(i=>t.data.get(i.dataId).values),s=Ie(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let l=o[i];for(let u=0;u<a.length;u++)a[u]+=l[u]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var OE={kernelName:Hn,backendName:"cpu",kernelFunc:sK};function iK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"all");let i=x.parseAxisParam(s,o.shape),l=i,u=T.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=or({inputs:{x:o},backend:t,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,o.shape.length)),T.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,m]=T.computeOutAndReduceShapes(c.shape,l),f=x.sizeFromShape(m),d=x.makeZerosTypedArray(x.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let y=0;y<d.length;++y){let b=y*f,w=h[b];for(let _=0;_<f;++_){let k=h[b+_];w=w&&k}d[y]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let y=T.expandShapeToKeepDim(p,i),b=tt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}var PE={kernelName:Gl,backendName:"cpu",kernelFunc:iK};function aK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"any");let i=x.parseAxisParam(s,o.shape),l=i,u=T.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=or({inputs:{x:o},backend:t,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,o.shape.length)),T.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,m]=T.computeOutAndReduceShapes(c.shape,l),f=x.sizeFromShape(m),d=x.makeZerosTypedArray(x.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let y=0;y<d.length;++y){let b=y*f,w=h[b];for(let _=0;_<f;++_){let k=h[b+_];w=w||k}d[y]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let y=T.expandShapeToKeepDim(p,i),b=tt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}var ME={kernelName:Ul,backendName:"cpu",kernelFunc:aK};function lK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;re(o,"argMax");let a=x.parseAxisParam(s,o.shape),i=T.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=or({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=T.getInnerMostAxes(a.length,l.shape.length)),a=[a[0]],T.assertAxesAreInnerMostDims("argMax",a,l.shape.length);let[c,p]=T.computeOutAndReduceShapes(l.shape,a),m=x.sizeFromShape(c),f=x.makeZerosTypedArray(m,"int32"),d=x.sizeFromShape(p),h=t.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let y=g*d,b=h[y],w=0;for(let _=0;_<d;++_){let k=h[y+_];k>b&&(b=k,w=_)}f[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",f)}var LE={kernelName:Kn,backendName:"cpu",kernelFunc:lK};function uK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;re(o,"argMin");let a=x.parseAxisParam(s,o.shape),i=T.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=or({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=T.getInnerMostAxes(a.length,l.shape.length)),a=[a[0]],T.assertAxesAreInnerMostDims("argMin",a,l.shape.length);let[c,p]=T.computeOutAndReduceShapes(l.shape,a),m=x.sizeFromShape(c),f=x.makeZerosTypedArray(m,"int32"),d=x.sizeFromShape(p),h=t.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let y=g*d,b=h[y],w=0;for(let _=0;_<d;++_){let k=h[y+_];k<b&&(b=k,w=_)}f[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",f)}var zE={kernelName:na,backendName:"cpu",kernelFunc:uK};var cK=$e(Ks,r=>Math.asin(r)),BE={kernelName:Ks,backendName:"cpu",kernelFunc:cK};var pK=$e(Xs,r=>Math.asinh(r)),VE={kernelName:Xs,backendName:"cpu",kernelFunc:pK};var mK=$e(Ys,r=>Math.atan(r)),WE={kernelName:Ys,backendName:"cpu",kernelFunc:mK};var fK=Ze((r,e)=>Math.atan2(r,e)),dK=nt(Js,fK),jE={kernelName:Js,backendName:"cpu",kernelFunc:dK};var hK=$e(Zs,r=>Math.atanh(r)),GE={kernelName:Zs,backendName:"cpu",kernelFunc:hK};function mp(r,e,t,n,o,s){let a=o.strideHeight,i=o.strideWidth,l=o.dilationHeight,u=o.dilationWidth,c=o.effectiveFilterHeight,p=o.effectiveFilterWidth,m=o.padInfo.top,f=o.padInfo.left,d=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ie(o.outShape,t),g=h.values,y=o.outShape[1]*o.outShape[2]*o.outShape[3],b=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let _=0;_<o.batchSize;++_){let k=_*y,E=_*n[0];for(let N=0;N<o.inChannels;++N)for(let F=0;F<o.outHeight;++F){let O=F*a-m,P=Math.max(0,O),W=Math.min(o.inHeight,c+O),G=k+F*b;for(let j=0;j<o.outWidth;++j){let X=j*i-f,K=Math.max(0,X),Y=Math.min(o.inWidth,p+X),ne=d,J=0,Q=0;for(let ae=P;ae<W;ae+=l){let ue=E+ae*n[1];for(let le=K;le<Y;le+=u){let ge=ue+le*n[2],_e=r[ge+N];s==="max"&&_e>ne?ne=_e:s==="avg"&&(J+=_e,Q++)}if(isNaN(ne))break}let ie=G+j*w+N;g[ie]=s==="avg"?J/Q:ne}}}return h}function Ng(r,e,t,n,o=!1,s=!1){let a=Ie(n.outShape,"int32"),i=n.strideHeight,l=n.strideWidth,u=n.dilationHeight,c=n.dilationWidth,p=n.effectiveFilterHeight,m=n.effectiveFilterWidth,f=n.padInfo.top,d=n.padInfo.left,h=Ie(e,t,r);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let b=0;b<n.outHeight;++b){let w=b*i-f,_=w;for(;_<0;)_+=u;let k=Math.min(n.inHeight,p+w);for(let E=0;E<n.outWidth;++E){let N=E*l-d,F=N;for(;F<0;)F+=c;let O=Math.min(n.inWidth,m+N),P=Number.NEGATIVE_INFINITY,W=-1;for(let G=_;G<k;G+=u){let j=G-w;for(let X=F;X<O;X+=c){let K=X-N,Y=h.get(g,G,X,y);Y>P&&(P=Y,o?W=s?((g*n.inHeight+G)*n.inWidth+X)*n.inChannels+y:(G*n.inWidth+X)*n.inChannels+y:W=j*m+K)}}a.set(W,g,b,E,y)}}return a}function Tg(r,e,t,n,o,s){let a=o.strideDepth,i=o.strideHeight,l=o.strideWidth,u=o.dilationDepth,c=o.dilationHeight,p=o.dilationWidth,m=o.effectiveFilterDepth,f=o.effectiveFilterHeight,d=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,y=o.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Ie(o.outShape,t),_=w.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],E=o.outShape[2]*o.outShape[3]*o.outShape[4],N=o.outShape[3]*o.outShape[4],F=o.outShape[4];for(let O=0;O<o.batchSize;++O){let P=O*k,W=O*n[0];for(let G=0;G<o.inChannels;++G)for(let j=0;j<o.outDepth;++j){let X=j*a-h,K=X;for(;K<0;)K+=u;let Y=Math.min(o.inDepth,m+X),ne=P+j*E;for(let J=0;J<o.outHeight;++J){let Q=J*i-g,ie=Q;for(;ie<0;)ie+=c;let ae=Math.min(o.inHeight,f+Q),ue=ne+J*N;for(let le=0;le<o.outWidth;++le){let ge=le*l-y,_e=ge;for(;_e<0;)_e+=p;let ye=Math.min(o.inWidth,d+ge),ke=ue+le*F,Ae=b,Re=0,Pe=0;for(let mt=K;mt<Y;mt+=u){let gt=W+mt*n[1];for(let It=ie;It<ae;It+=c){let xt=gt+It*n[2];for(let yt=_e;yt<ye;yt+=p){let St=xt+yt*n[3],ot=r[St+G];if(s==="max"&&ot>Ae?Ae=ot:s==="avg"&&(Re+=ot,Pe++),isNaN(Ae))break}if(isNaN(Ae))break}if(isNaN(Ae))break}let ze=ke+G;_[ze]=s==="avg"?Re/Pe:Ae}}}}return w}function UE(r,e){let t=Ie(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=e.padInfo.front,f=e.padInfo.top,d=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){let b=y*n-m,w=b;for(;w<0;)w+=a;let _=Math.min(e.inDepth,u+b);for(let k=0;k<e.outHeight;++k){let E=k*o-f,N=E;for(;N<0;)N+=i;let F=Math.min(e.inHeight,c+E);for(let O=0;O<e.outWidth;++O){let P=O*s-d,W=P;for(;W<0;)W+=l;let G=Math.min(e.inWidth,p+P),j=Number.NEGATIVE_INFINITY,X=-1;for(let K=w;K<_;K+=a){let Y=K-b;for(let ne=N;ne<F;ne+=i){let J=ne-E;for(let Q=W;Q<G;Q+=l){let ie=Q-P,ae=r.get(h,K,ne,Q,g);ae>=j&&(j=ae,X=Y*c*p+J*c+ie)}}}t.set(X,h,y,k,O,g)}}}return t}function gK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;re(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;x.assert(T.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=T.computePool2DInfo(o.shape,s,a,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&x.arraysEqual(c.inShape,c.outShape))p=Dr({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=x.computeStrides(o.shape),d=mp(m,o.shape,o.dtype,f,c,"avg");p=t.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var qE={kernelName:Xn,backendName:"cpu",kernelFunc:gK};function xK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u,dilations:c}=n;re(o,"avgPool3d");let p=c;p==null&&(p=[1,1,1]);let m=T.computePool3DInfo(o.shape,s,a,p,i,l,u),f=t.data.get(o.dataId).values,d=Tg(f,o.shape,o.dtype,x.computeStrides(o.shape),m,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}var HE={kernelName:oa,backendName:"cpu",kernelFunc:xK};function yK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:l,dilations:u,dimRoundingMode:c}=n;re([o,s],"avgPool3DGrad");let p=T.computePool3DInfo(s.shape,a,i,u,l,c),m=p.strideDepth,f=p.strideHeight,d=p.strideWidth,h=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=p.dilationDepth,w=p.dilationHeight,_=p.dilationWidth,k=p.effectiveFilterDepth,E=p.effectiveFilterHeight,N=p.effectiveFilterWidth,F=k-1-p.padInfo.front,O=N-1-p.padInfo.left,P=E-1-p.padInfo.top,W=Ie(s.shape,"float32"),G=1/(h*g*y),j=t.bufferSync(o);for(let X=0;X<p.batchSize;++X)for(let K=0;K<p.inChannels;++K)for(let Y=0;Y<p.inDepth;++Y)for(let ne=0;ne<p.inHeight;++ne)for(let J=0;J<p.inWidth;++J){let Q=Y-F,ie=ne-P,ae=J-O,ue=0;for(let le=0;le<k;le+=b){let ge=(Q+le)/m;if(!(ge<0||ge>=p.outDepth||Math.floor(ge)!==ge))for(let _e=0;_e<E;_e+=w){let ye=(ie+_e)/f;if(!(ye<0||ye>=p.outHeight||Math.floor(ye)!==ye))for(let ke=0;ke<N;ke+=_){let Ae=(ae+ke)/d;if(Ae<0||Ae>=p.outWidth||Math.floor(Ae)!==Ae)continue;ue+=j.get(X,ge,ye,Ae,K)}}}W.set(ue*G,X,Y,ne,J,K)}return t.makeTensorInfo(W.shape,W.dtype,W.values)}var KE={kernelName:Hl,backendName:"cpu",kernelFunc:yK};function bK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;re([o,s],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=n,c=T.computePool2DInfo(a.shape,i,l,1,u),p=c.strideHeight,m=c.strideWidth,f=c.filterHeight,d=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,_=y-1-c.padInfo.top,k=Ie(a.shape,"float32"),E=1/(f*d),N=t.data.get(o.dataId).values,F=Ie(o.shape,"float32",N);for(let O=0;O<c.batchSize;++O)for(let P=0;P<c.inChannels;++P)for(let W=0;W<c.inHeight;++W)for(let G=0;G<c.inWidth;++G){let j=W-_,X=G-w,K=0;for(let Y=0;Y<y;Y+=h){let ne=(j+Y)/p;if(!(ne<0||ne>=c.outHeight||Math.floor(ne)!==ne))for(let J=0;J<b;J+=g){let Q=(X+J)/m;if(Q<0||Q>=c.outWidth||Math.floor(Q)!==Q)continue;K+=F.get(O,ne,Q,P)}}k.set(K*E,O,W,G,P)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var XE={kernelName:ql,backendName:"cpu",kernelFunc:bK};function wK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:l}=e;x.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),x.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),x.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),re([o,i,l,s,a],"batchNorm");let{varianceEpsilon:u}=n;u==null&&(u=.001);let c=t.data.get(o.dataId).values,p=t.data.get(i.dataId).values,m=t.data.get(l.dataId).values,f=s?t.data.get(s.dataId).values:new Float32Array([1]),d=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(c.length),g=d.length,y=f.length,b=m.length,w=p.length,_=0,k=0,E=0,N=0;for(let F=0;F<c.length;++F)h[F]=d[_++]+(c[F]-p[k++])*f[E++]/Math.sqrt(m[N++]+u),_>=g&&(_=0),k>=w&&(k=0),E>=y&&(E=0),N>=b&&(N=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var YE={kernelName:io,backendName:"cpu",kernelFunc:wK};function _K(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;re([o],"batchToSpaceND");let i=s.reduce((y,b)=>y*b),l=T.getReshaped(o.shape,s,i),u=T.getPermuted(l.length,s.length),c=T.getReshapedPermuted(o.shape,s,i),p=T.getSliceBeginCoords(a,s.length),m=T.getSliceSize(c,a,s.length),f=tt({inputs:{x:o},backend:t,attrs:{shape:l}}),d=or({inputs:{x:f},backend:t,attrs:{perm:u}}),h=tt({inputs:{x:d},backend:t,attrs:{shape:c}}),g=Ho({inputs:{x:h},backend:t,attrs:{begin:p,size:m}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var ZE={kernelName:sa,backendName:"cpu",kernelFunc:_K};function vK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,u=af(i,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var JE={kernelName:Kl,backendName:"cpu",kernelFunc:vK};var kK=$e(Pn,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),QE={kernelName:Pn,backendName:"cpu",kernelFunc:kK};var CK=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(x.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(s.dataId).values,l=t.data.get(a.dataId).values;for(let u=0;u<i.length;u++){let c=i[u],p=l[u];n[u]=Math.hypot(c,p)}return t.makeOutput(n,e.shape,"float32")},eA={kernelName:ia,backendName:"cpu",kernelFunc:CK};function Vi(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var tA={kernelName:iu,backendName:"cpu",kernelFunc:Vi};function dl(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=x.parseAxisParam(o,e[0].shape)[0],a=T.computeOutShape(e.map(h=>h.shape),s);if(x.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(h=>x.sizeFromShape(h.shape)>0);if(i.length===1)return Dr({inputs:{x:i[0]},backend:t});let l=i.map(h=>h.shape);if(T.assertParamsConsistent(l,s),i[0].dtype==="complex64"){let h=i.map(_=>jo({inputs:{input:_},backend:t})),g=i.map(_=>Vi({inputs:{input:_},backend:t})),y=dl({inputs:h,backend:t,attrs:{axis:s}}),b=dl({inputs:g,backend:t,attrs:{axis:s}}),w=mr({inputs:{real:y,imag:b},backend:t});return h.forEach(_=>t.disposeIntermediateTensorInfo(_)),g.forEach(_=>t.disposeIntermediateTensorInfo(_)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),w}let u=i.map(h=>{let g=x.sizeFromShape(h.shape.slice(s));return tt({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),c=u.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=T.computeOutShape(u.map(h=>h.shape),1);let p=u[0].shape[0]===1,m=lf(c,a,e[0].dtype,p),f=T.computeOutShape(i.map(h=>h.shape),s),d=t.makeTensorInfo(f,e[0].dtype,m);return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var rA={kernelName:as,backendName:"cpu",kernelFunc:dl};function G_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=n;re([o,s],"conv2d");let p=T.convertConv2DDataFormat(l),m=T.computeConv2DInfo(o.shape,s.shape,a,u,i,c,!1,p),f=m.filterHeight,d=m.filterWidth,h=m.dilationHeight,g=m.dilationWidth,y=m.padInfo.left,b=m.padInfo.top,w=m.dataFormat==="channelsLast",_=new ct(m.outShape,o.dtype),k=x.computeStrides(o.shape),E=x.computeStrides(s.shape),N=k[0],F=w?k[1]:k[2],O=w?k[2]:1,P=w?1:k[1],W=_.strides[0],G=w?_.strides[1]:_.strides[2],j=w?_.strides[2]:1,X=w?1:_.strides[1],K=t.data.get(o.dataId).values,Y=t.data.get(s.dataId).values,ne=_.values;for(let J=0;J<m.batchSize;++J){let Q=J*N,ie=J*W;for(let ae=0;ae<m.outHeight;++ae){let ue=ie+ae*G,le=ae*m.strideHeight-b;for(let ge=0;ge<f;++ge){let _e=le+ge*h;if(_e<0||_e>=m.inHeight)continue;let ye=ge*E[0],ke=Q+_e*F;for(let Ae=0;Ae<m.outWidth;++Ae){let Re=ue+Ae*j,Pe=Ae*m.strideWidth-y;for(let ze=0;ze<d;++ze){let mt=Pe+ze*g;if(mt<0||mt>=m.inWidth)continue;let gt=ye+ze*E[1],It=ke+mt*O,xt=gt;for(let yt=0;yt<m.inChannels;++yt){let St=K[It+yt*P];for(let ot=0;ot<m.outChannels;++ot)ne[Re+ot*X]+=St*Y[xt+ot];xt+=m.outChannels}}}}}}return t.makeTensorInfo(_.shape,_.dtype,ne)}var nA={kernelName:Zn,backendName:"cpu",kernelFunc:G_};function IK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=n;re([o,s],"conv2dBackpropFilter");let p=T.convertConv2DDataFormat(l),m=T.computeConv2DInfo(o.shape,c,a,1,i,u,!1,p),{strideHeight:f,strideWidth:d,filterHeight:h,filterWidth:g}=m,y=m.dataFormat==="channelsLast",b=new ct(m.filterShape,"float32"),w=m.padInfo.left,_=m.padInfo.top,k=t.data.get(o.dataId).values,E=t.data.get(s.dataId).values,N=new ct(o.shape,o.dtype,k),F=new ct(s.shape,s.dtype,E);for(let O=0;O<h;++O){let P=Math.max(0,Math.ceil((_-O)/f)),W=Math.min(m.outHeight,(m.inHeight+_-O)/f);for(let G=0;G<g;++G){let j=Math.max(0,Math.ceil((w-G)/d)),X=Math.min(m.outWidth,(m.inWidth+w-G)/d);for(let K=0;K<m.inChannels;++K)for(let Y=0;Y<m.outChannels;++Y){let ne=0;for(let J=0;J<m.batchSize;++J)for(let Q=P;Q<W;++Q){let ie=O+Q*f-_;for(let ae=j;ae<X;++ae){let ue=G+ae*d-w;y?ne+=N.get(J,ie,ue,K)*F.get(J,Q,ae,Y):ne+=N.get(J,K,ie,ue)*F.get(J,Y,Q,ae)}}b.set(ne,O,G,K,Y)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}var oA={kernelName:Yl,backendName:"cpu",kernelFunc:IK};function SK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=n;re([o,s],"conv2dBackpropInput");let p=x.computeStrides(s.shape),m=x.computeStrides(o.shape),f=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(a,s.shape,i,1,l,c,!1,f),h=new ct(d.inShape,"float32"),g=h.values,y=t.data.get(o.dataId).values,b=t.data.get(s.dataId).values,[w,_,k]=p,{batchSize:E,filterHeight:N,filterWidth:F,inChannels:O,inHeight:P,inWidth:W,outChannels:G,outHeight:j,outWidth:X,strideHeight:K,strideWidth:Y}=d;f=d.dataFormat;let ne=N-1-d.padInfo.top,J=F-1-d.padInfo.left,Q=f==="channelsLast",ie=h.strides[0],ae=Q?h.strides[1]:h.strides[2],ue=Q?h.strides[2]:1,le=Q?1:h.strides[1],ge=m[0],_e=Q?m[1]:m[2],ye=Q?m[2]:1,ke=Q?1:m[1];for(let Ae=0;Ae<E;++Ae)for(let Re=0;Re<O;++Re)for(let Pe=0;Pe<P;++Pe){let ze=Pe-ne,mt=Math.max(0,Math.ceil(ze/K)),gt=Math.min(j,(N+ze)/K);for(let It=0;It<W;++It){let xt=It-J,yt=Math.max(0,Math.ceil(xt/Y)),St=Math.min(X,(F+xt)/Y),ot=0;for(let Qt=mt;Qt<gt;++Qt){let gn=Qt*K-ze;for(let Rr=yt;Rr<St;++Rr){let Un=Rr*Y-xt,Gr=ge*Ae+_e*Qt+ye*Rr,En=w*(N-1-gn)+_*(F-1-Un)+k*Re;for(let An=0;An<G;++An){let kr=y[Gr+ke*An],Dn=b[En+An];ot+=kr*Dn}}}let hn=ie*Ae+ae*Pe+ue*It+le*Re;g[hn]=ot}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var sA={kernelName:Jn,backendName:"cpu",kernelFunc:SK};function NK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l}=n;re([o,s],"conv3d");let u=T.computeConv3DInfo(o.shape,s.shape,a,l,i),{filterDepth:c,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:d,dilationWidth:h,padInfo:g}=u,y=g.front,b=g.left,w=g.top,_=new ct(u.outShape,o.dtype),k=t.data.get(o.dataId).values,E=t.data.get(s.dataId).values,N=_.values,F=x.computeStrides(o.shape),O=x.computeStrides(s.shape);for(let P=0;P<u.batchSize;++P){let W=P*F[0],G=P*_.strides[0];for(let j=0;j<u.outDepth;++j){let X=G+j*_.strides[1],K=j*u.strideDepth-y;for(let Y=0;Y<c;++Y){let ne=K+Y*f;if(ne<0||ne>=u.inDepth)continue;let J=Y*O[0],Q=W+ne*F[1];for(let ie=0;ie<u.outHeight;++ie){let ae=X+ie*_.strides[2],ue=ie*u.strideHeight-w;for(let le=0;le<p;++le){let ge=ue+le*d;if(ge<0||ge>=u.inHeight)continue;let _e=J+le*O[1],ye=Q+ge*F[2];for(let ke=0;ke<u.outWidth;++ke){let Ae=ae+ke*u.outChannels,Re=ke*u.strideWidth-b;for(let Pe=0;Pe<m;++Pe){let ze=Re+Pe*h;if(ze<0||ze>=u.inWidth)continue;let mt=_e+Pe*O[2],gt=ye+ze*u.inChannels,It=mt;for(let xt=0;xt<u.inChannels;++xt){let yt=k[gt+xt];for(let St=0;St<u.outChannels;++St)N[Ae+St]+=yt*E[It+St];It+=u.outChannels}}}}}}}}return t.makeTensorInfo(_.shape,_.dtype,_.values)}var iA={kernelName:aa,backendName:"cpu",kernelFunc:NK};function TK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:l}=n;re([o,s],"conv3dBackpropFilterV2");let u=x.computeStrides(o.shape),c=x.computeStrides(s.shape),p=T.computeConv3DInfo(o.shape,l,a,1,i),m=p.strideDepth,f=p.strideHeight,d=p.strideWidth,h=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new ct(p.filterShape,"float32"),w=b.values,[_,k,E,N]=b.strides,F=t.data.get(s.dataId).values,[O,P,W,G]=c,j=t.data.get(o.dataId).values,[X,K,Y,ne]=u,J=p.padInfo.front,Q=p.padInfo.left,ie=p.padInfo.top;for(let ae=0;ae<h;++ae){let ue=Math.max(0,Math.ceil((J-ae)/m)),le=Math.min(p.outDepth,(p.inDepth+J-ae)/m),ge=ae*_;for(let _e=0;_e<g;++_e){let ye=Math.max(0,Math.ceil((ie-_e)/f)),ke=Math.min(p.outHeight,(p.inHeight+ie-_e)/f),Ae=_e*k+ge;for(let Re=0;Re<y;++Re){let Pe=Math.max(0,Math.ceil((Q-Re)/d)),ze=Math.min(p.outWidth,(p.inWidth+Q-Re)/d),mt=Re*E+Ae;for(let gt=0;gt<p.inChannels;++gt){let It=gt*N+mt;for(let xt=0;xt<p.outChannels;++xt){let yt=0;for(let St=0;St<p.batchSize;++St){let ot=St*X,hn=St*O;for(let Qt=ue;Qt<le;++Qt){let Rr=(ae+Qt*m-J)*K+ot,Un=Qt*P+hn;for(let Gr=ye;Gr<ke;++Gr){let An=(_e+Gr*f-ie)*Y+Rr,kr=Gr*W+Un;for(let Dn=Pe;Dn<ze;++Dn){let Zi=(Re+Dn*d-Q)*ne+An,$n=Dn*G+kr;yt+=j[Zi+gt]*F[$n+xt]}}}}w[It+xt]=yt}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}var aA={kernelName:Zl,backendName:"cpu",kernelFunc:TK};function EK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:l}=n;re([o],"conv3dBackpropInputV2");let u=x.computeStrides(o.shape),c=x.computeStrides(s.shape),p=T.computeConv3DInfo(l,s.shape,i,1,a),m=new ct(p.inShape,"float32"),f=m.values,[d,h,g,y]=m.strides,b=t.data.get(o.dataId).values,[w,_,k,E]=u,N=t.data.get(s.dataId).values,[F,O,P,W]=c,{batchSize:G,filterDepth:j,filterHeight:X,filterWidth:K,inChannels:Y,inDepth:ne,inHeight:J,inWidth:Q,outChannels:ie,outDepth:ae,outHeight:ue,outWidth:le,strideDepth:ge,strideHeight:_e,strideWidth:ye}=p,ke=j-1-p.padInfo.front,Ae=X-1-p.padInfo.top,Re=K-1-p.padInfo.left;for(let Pe=0;Pe<G;++Pe)for(let ze=0;ze<Y;++ze)for(let mt=0;mt<ne;++mt){let gt=mt-ke,It=Math.max(0,Math.ceil(gt/ge)),xt=Math.min(ae,(j+gt)/ge);for(let yt=0;yt<J;++yt){let St=yt-Ae,ot=Math.max(0,Math.ceil(St/_e)),hn=Math.min(ue,(X+St)/_e);for(let Qt=0;Qt<Q;++Qt){let gn=Qt-Re,Rr=Math.max(0,Math.ceil(gn/ye)),Un=Math.min(le,(K+gn)/ye),Gr=0;for(let En=It;En<xt;++En){let An=En*ge-gt;for(let kr=ot;kr<hn;++kr){let Dn=kr*_e-St;for(let rn=Rr;rn<Un;++rn){let Zi=rn*ye-gn,$n=w*Pe+_*En+k*kr+E*rn,Fl=F*(j-1-An)+O*(X-1-Dn)+P*(K-1-Zi)+W*ze;for(let Ji=0;Ji<ie;++Ji){let ns=b[$n+Ji],Ol=N[Fl+Ji];Gr+=ns*Ol}}}}f[d*Pe+h*mt+g*yt+y*Qt+ze]=Gr}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}var lA={kernelName:Jl,backendName:"cpu",kernelFunc:EK};var AK=$e(Qn,r=>Math.cos(r)),uA={kernelName:Qn,backendName:"cpu",kernelFunc:AK};var DK=$e(ei,r=>Math.cosh(r)),cA={kernelName:ei,backendName:"cpu",kernelFunc:DK};function $K(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:u}=n,[c,p,m,f]=o.shape,d=s.shape[0],[h,g]=i,y=Ie([d,h,g,f],"float32"),b=t.data.get(s.dataId).values,w=t.data.get(a.dataId).values,_=t.data.get(o.dataId).values,k=x.computeStrides(o.shape),E=x.computeStrides(y.shape);for(let N=0;N<d;N++){let F=N*4,O=b[F],P=b[F+1],W=b[F+2],G=b[F+3],j=w[N];if(j>=c)continue;let X=h>1?(W-O)*(p-1)/(h-1):0,K=g>1?(G-P)*(m-1)/(g-1):0;for(let Y=0;Y<h;Y++){let ne=h>1?O*(p-1)+Y*X:.5*(O+W)*(p-1);if(ne<0||ne>p-1){for(let J=0;J<g;J++)for(let Q=0;Q<f;Q++){let ie=Q+J*E[2]+Y*E[1]+N*E[0];y.values[ie]=u}continue}if(l==="bilinear"){let J=Math.floor(ne),Q=Math.ceil(ne),ie=ne-J;for(let ae=0;ae<g;ae++){let ue=g>1?P*(m-1)+ae*K:.5*(P+G)*(m-1);if(ue<0||ue>m-1){for(let ye=0;ye<f;ye++){let ke=ye+ae*E[2]+Y*E[1]+N*E[0];y.values[ke]=u}continue}let le=Math.floor(ue),ge=Math.ceil(ue),_e=ue-le;for(let ye=0;ye<f;ye++){let ke=ye+le*k[2]+J*k[1]+j*k[0],Ae=_[ke];ke=ye+ge*k[2]+J*k[1]+j*k[0];let Re=_[ke];ke=ye+le*k[2]+Q*k[1]+j*k[0];let Pe=_[ke];ke=ye+ge*k[2]+Q*k[1]+j*k[0];let ze=_[ke],mt=Ae+(Re-Ae)*_e,gt=Pe+(ze-Pe)*_e;ke=ye+ae*E[2]+Y*E[1]+N*E[0],y.values[ke]=mt+(gt-mt)*ie}}}else for(let J=0;J<g;++J){let Q=g>1?P*(m-1)+J*K:.5*(P+G)*(m-1);if(Q<0||Q>m-1){for(let ue=0;ue<f;ue++){let le=ue+J*E[2]+Y*E[1]+N*E[0];y.values[le]=u}continue}let ie=Math.round(Q),ae=Math.round(ne);for(let ue=0;ue<f;ue++){let le=ue+ie*k[2]+ae*k[1]+j*k[0],ge=ue+J*E[2]+Y*E[1]+N*E[0];y.values[ge]=_[le]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var pA={kernelName:ti,backendName:"cpu",kernelFunc:$K};function RK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;re(o,"cumsum");let l=T.getAxesPermutation([s],o.shape.length),u=o;l!=null&&(u=or({inputs:{x:o},backend:t,attrs:{perm:l}}));let c=T.getInnerMostAxes(1,o.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=dr(u.dtype,"int32"),m=x.makeZerosTypedArray(x.sizeFromShape(u.shape),p),f=t.data.get(u.dataId).values,d=u.shape[u.shape.length-1],h=i?(y,b)=>y+d-b-1:(y,b)=>y+b;for(let y=0;y<f.length;y+=d)for(let b=0;b<d;b++){let w=h(y,b);if(b===0)m[w]=a?0:f[w];else{let _=h(y,b-1);m[w]=a?f[_]+m[_]:f[w]+m[_]}}let g=t.makeTensorInfo(u.shape,p,m);if(l!=null){let y=T.getUndoAxesPermutation(l),b=or({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),b}return g}var mA={kernelName:eo,backendName:"cpu",kernelFunc:RK};function FK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let l=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,c=af(l,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,c)}else if(o.shape.length===2){let l=t.bufferSync(o),u=t.bufferSync(s),c=T_(l,u,a,i);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var fA={kernelName:Ql,backendName:"cpu",kernelFunc:FK};function OK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;x.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`),x.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=o.shape[0],l=o.shape[1],u=o.shape[2],c=o.shape[3],p=l*s,m=u*s,f=c/(s*s),d=t.data.get(o.dataId).values,h=new Float32Array(i*p*m*f),g=0;for(let y=0;y<i;++y)for(let b=0;b<p;++b){let w=Math.floor(b/s),_=b%s;for(let k=0;k<m;++k){let E=Math.floor(k/s),N=k%s,F=(_*s+N)*f;for(let O=0;O<f;++O){let W=O+F+c*(E+u*(w+l*y));h[g++]=d[W]}}}return t.makeTensorInfo([i,p,m,f],o.dtype,h)}var dA={kernelName:ri,backendName:"cpu",kernelFunc:OK};function U_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=n;re([o,s],"depthwiseConv2DNative");let c=x.computeStrides(o.shape),p=x.computeStrides(s.shape),m=l;m==null&&(m=[1,1]),x.assert(T.eitherStridesOrDilationsAreOne(a,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${m}'`);let f=T.computeConv2DInfo(o.shape,s.shape,a,m,i,u,!0),{filterHeight:d,filterWidth:h,dilationHeight:g,dilationWidth:y,padInfo:b}=f,w=b.left,_=b.top,k=f.outChannels/f.inChannels,E=new ct(f.outShape,o.dtype),N=t.data.get(o.dataId).values,F=t.data.get(s.dataId).values,O=E.values;for(let P=0;P<f.batchSize;++P){let W=P*c[0],G=P*E.strides[0];for(let j=0;j<f.outHeight;++j){let X=G+j*E.strides[1],K=j*f.strideHeight-w;for(let Y=0;Y<d;++Y){let ne=K+Y*g;if(ne<0||ne>=f.inHeight)continue;let J=Y*p[0],Q=W+ne*c[1];for(let ie=0;ie<f.outWidth;++ie){let ae=X+ie*E.strides[2],ue=ie*f.strideWidth-_;for(let le=0;le<h;++le){let ge=ue+le*y;if(ge<0||ge>=f.inWidth)continue;let _e=J+le*p[1],ye=Q+ge*f.inChannels,ke=ae,Ae=_e;for(let Re=0;Re<f.inChannels;++Re){let Pe=N[ye+Re];for(let ze=0;ze<k;++ze)O[ke+ze]+=Pe*F[Ae+ze];ke+=k,Ae+=k}}}}}}return t.makeTensorInfo(E.shape,E.dtype,E.values)}var hA={kernelName:to,backendName:"cpu",kernelFunc:U_};function PK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=n;re([o,s],"depthwiseConv2dNativeBackpropFilter");let p=T.computeConv2DInfo(o.shape,c,a,i,l,u,!0),{strideHeight:m,strideWidth:f,filterHeight:d,filterWidth:h}=p,g=new ct(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,w=p.outChannels/p.inChannels,_=t.data.get(o.dataId).values,k=new ct(o.shape,o.dtype,_),E=t.data.get(s.dataId).values,N=new ct(s.shape,s.dtype,E);for(let F=0;F<d;++F){let O=Math.max(0,Math.ceil((b-F)/m)),P=Math.min(p.outHeight,(p.inHeight+b-F)/m);for(let W=0;W<h;++W){let G=Math.max(0,Math.ceil((y-W)/f)),j=Math.min(p.outWidth,(p.inWidth+y-W)/f);for(let X=0;X<p.outChannels;++X){let K=Math.trunc(X/w),Y=X%w,ne=0;for(let J=0;J<p.batchSize;++J)for(let Q=O;Q<P;++Q){let ie=F+Q*m-b;for(let ae=G;ae<j;++ae){let ue=W+ae*f-y;ne+=k.get(J,ie,ue,K)*N.get(J,Q,ae,X)}}g.set(ne,F,W,K,Y)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var gA={kernelName:eu,backendName:"cpu",kernelFunc:PK};function MK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=n;re([o,s],"depthwiseConv2DNativeBackpropInput");let p=x.computeStrides(o.shape),m=x.computeStrides(s.shape),f=T.computeConv2DInfo(c,s.shape,a,i,l,u,!0),d=new ct(f.inShape,"float32"),h=d.values,[g,y,b]=d.strides,w=t.data.get(o.dataId).values,[_,k,E]=p,N=t.data.get(s.dataId).values,[F,O,P]=m,{batchSize:W,filterHeight:G,filterWidth:j,inChannels:X,inHeight:K,inWidth:Y,outChannels:ne,outHeight:J,outWidth:Q,strideHeight:ie,strideWidth:ae}=f,ue=G-1-f.padInfo.top,le=j-1-f.padInfo.left,ge=ne/X;for(let _e=0;_e<W;++_e)for(let ye=0;ye<X;++ye)for(let ke=0;ke<K;++ke){let Ae=ke-ue,Re=Math.max(0,Math.ceil(Ae/ie)),Pe=Math.min(J,(G+Ae)/ie);for(let ze=0;ze<Y;++ze){let mt=ze-le,gt=Math.max(0,Math.ceil(mt/ae)),It=Math.min(Q,(j+mt)/ae),xt=0;for(let yt=Re;yt<Pe;++yt){let St=yt*ie-Ae;for(let ot=gt;ot<It;++ot){let hn=ot*ae-mt,Qt=_*_e+k*yt+E*ot,gn=F*(G-1-St)+O*(j-1-hn)+P*ye;for(let Rr=0;Rr<ge;++Rr){let Un=ye*ge+Rr,Gr=w[Qt+Un],En=N[gn+Rr];xt+=Gr*En}}}h[g*_e+y*ke+b*ze+ye]=xt}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}var xA={kernelName:tu,backendName:"cpu",kernelFunc:MK};function LK(r){let{inputs:e,backend:t}=r,{x:n}=e,o=x.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,a=Ie([o,o],n.dtype),i=a.values;for(let u=0;u<s.length;u++)i[u*o+u]=s[u];let l=[...n.shape,...n.shape];return t.makeTensorInfo(l,a.dtype,a.values)}var yA={kernelName:ru,backendName:"cpu",kernelFunc:LK};var bA={kernelName:la,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=t,l=e,u=l.data.get(n.dataId).values,c=n.shape.length,p=l.data.get(o.dataId).values,m=o.shape.length,{batchSize:f,inHeight:d,inWidth:h,inChannels:g,outHeight:y,outWidth:b,padInfo:w,strideHeight:_,strideWidth:k,filterHeight:E,filterWidth:N,dilationHeight:F,dilationWidth:O,outShape:P}=T.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),W=x.sizeFromShape(P),G=P.length,j=x.getArrayFromDType(n.dtype,W);for(let K=0;K<f;++K)for(let Y=0;Y<y;++Y){let ne=Y*_-w.top;for(let J=0;J<b;++J){let Q=J*k-w.left;for(let ie=0;ie<g;++ie){let ae=Number.MIN_SAFE_INTEGER;for(let le=0;le<E;++le){let ge=ne+le*F;if(ge>=0&&ge<d)for(let _e=0;_e<N;++_e){let ye=Q+_e*O;if(ye>=0&&ye<h){let ke=x.locToIndex([K,ge,ye,ie],c,x.computeStrides(n.shape)),Ae=x.locToIndex([le,_e,ie],m,x.computeStrides(o.shape)),Re=u[ke]+p[Ae];Re>ae&&(ae=Re)}}}let ue=x.locToIndex([K,Y,J,ie],G,x.computeStrides(P));j[ue]=ae}}}return{dataId:l.write(x.toTypedArray(j,n.dtype),P,n.dtype),shape:P,dtype:n.dtype}}};var wA={kernelName:Pc,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:l}=t,u=e,c=x.toNestedArray(n.shape,u.data.get(n.dataId).values),p=x.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:y,padInfo:b,strideHeight:w,strideWidth:_,filterHeight:k,filterWidth:E,dilationHeight:N,dilationWidth:F,outShape:O}=T.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",l);x.assert(s.rank===O.length,()=>`Error in ${Pc}, dy must have the same rank as output ${O.length}, but got ${s.rank}`);let P=x.toNestedArray(O,u.data.get(s.dataId).values),W=x.makeZerosNestedTypedArray(o.shape,o.dtype);for(let j=0;j<m;++j)for(let X=0;X<g;++X){let K=X*w-b.top;for(let Y=0;Y<y;++Y){let ne=Y*_-b.left;for(let J=0;J<h;++J){let Q=Number.MIN_SAFE_INTEGER,ie=0,ae=0;for(let ue=0;ue<k;++ue){let le=K+ue*N;if(le>=0&&le<f)for(let ge=0;ge<E;++ge){let _e=ne+ge*F;if(_e>=0&&_e<d){let ye=c[j][le][_e][J]+p[ue][ge][J];ye>Q&&(Q=ye,ie=ue,ae=ge)}}}W[ie][ae][J]+=P[j][X][Y][J]}}}return{dataId:u.write(x.toTypedArray(W,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var _A={kernelName:Oc,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:l}=t,u=e,c=x.toNestedArray(n.shape,u.data.get(n.dataId).values),p=x.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:y,padInfo:b,strideHeight:w,strideWidth:_,filterHeight:k,filterWidth:E,dilationHeight:N,dilationWidth:F,outShape:O}=T.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",l);x.assert(s.rank===O.length,()=>`Error in ${Oc}, dy must have the same rank as output ${O.length}, but got ${s.rank}`);let P=x.toNestedArray(O,u.data.get(s.dataId).values),W=x.makeZerosNestedTypedArray(n.shape,n.dtype);for(let j=0;j<m;++j)for(let X=0;X<g;++X){let K=X*w-b.top;for(let Y=0;Y<y;++Y){let ne=Y*_-b.left;for(let J=0;J<h;++J){let Q=Number.MIN_SAFE_INTEGER,ie=K<0?0:K,ae=ne<0?0:ne;for(let ue=0;ue<k;++ue){let le=K+ue*N;if(le>=0&&le<f)for(let ge=0;ge<E;++ge){let _e=ne+ge*F;if(_e>=0&&_e<d){let ye=c[j][le][_e][J]+p[ue][ge][J];ye>Q&&(Q=ye,ie=le,ae=_e)}}}W[j][ie][ae][J]+=P[j][X][Y][J]}}}return{dataId:u.write(x.toTypedArray(W,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function zK(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;re([n,o],"eluGrad");let s=new Float32Array(x.sizeFromShape(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let l=0;l<a.length;++l){let u=a[l];u>=1?s[l]=i[l]:s[l]=i[l]*(u+1)}return t.makeTensorInfo(o.shape,"float32",s)}var vA={kernelName:nu,backendName:"cpu",kernelFunc:zK};var BK=Ze((r,e)=>r===e?1:0),q_=nt(si,BK,null,"bool"),kA={kernelName:si,backendName:"cpu",kernelFunc:q_};var VK=T.ERF_P,WK=T.ERF_A1,jK=T.ERF_A2,GK=T.ERF_A3,UK=T.ERF_A4,qK=T.ERF_A5,HK=$e(oi,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+VK*t);return e*(1-((((qK*n+UK)*n+GK)*n+jK)*n+WK)*n*Math.exp(-t*t))}),CA={kernelName:oi,backendName:"cpu",kernelFunc:HK};function fp(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),l=s;return s<0&&(x.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),i.splice(l,0,1),tt({inputs:{x:o},backend:t,attrs:{shape:i}})}var IA={kernelName:ls,backendName:"cpu",kernelFunc:fp};var KK=Ze((r,e)=>r/e),df=nt(ro,KK),hf={kernelName:ro,backendName:"cpu",kernelFunc:df};function Eg(r,e,t){let n=r.shape,o=n[0],s=n[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[o,s],c=x.sizeFromShape(u),p=x.getTypedArrayFromDType("float32",c),m=x.getTypedArrayFromDType("float32",c);for(let g=0;g<o;g++){let y=Ho({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),b=Ho({inputs:{x:l},backend:t,attrs:{begin:[g,0],size:[1,s]}}),w=mr({inputs:{real:y,imag:b},backend:t}),{real:_,imag:k}=XK(w,e,t),E=T.mergeRealAndImagArrays(_,k);for(let N=0;N<s;N++){let F=T.getComplexWithIndex(E,N);p[g*s+N]=F.real,m[g*s+N]=F.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w)}let f=t.makeTensorInfo(u,"float32",p),d=t.makeTensorInfo(u,"float32",m),h=mr({inputs:{real:f,imag:d},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),h}function XK(r,e,t){let n=x.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(YK(n)){let i=H_(s,a,n,e,t),l=[r.shape[0],r.shape[1]];if(e){let u=t.makeTensorInfo(l,"float32",i.real),c=t.makeTensorInfo(l,"float32",i.imag),p=t.makeTensorInfo([],"float32",x.createScalarValue(n,"float32")),m=Dr({inputs:{x:p},backend:t}),f=hf.kernelFunc({inputs:{a:u,b:p},backend:t}),d=hf.kernelFunc({inputs:{a:c,b:m},backend:t}),h=t.data.get(f.dataId).values,g=t.data.get(d.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),{real:h,imag:g}}return i}else{let i=T.mergeRealAndImagArrays(s,a),l=ZK(i,n,e);return T.splitRealAndImagArrays(l)}}function YK(r){return(r&r-1)==0}function H_(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=T.mergeRealAndImagArrays(r,e),a=t/2,i=T.complexWithEvenIndex(s),l=i.real,u=i.imag,c=[l.length],p=o.makeTensorInfo(c,"float32",l),m=o.makeTensorInfo(c,"float32",u),f=mr({inputs:{real:p,imag:m},backend:o}),d=T.complexWithOddIndex(s),h=d.real,g=d.imag,y=[h.length],b=o.makeTensorInfo(y,"float32",h),w=o.makeTensorInfo(y,"float32",g),_=mr({inputs:{real:b,imag:w},backend:o}),k=H_(l,u,a,n,o),E=k.real,N=k.imag,F=[E.length],O=o.makeTensorInfo(F,"float32",E),P=o.makeTensorInfo(F,"float32",N),W=mr({inputs:{real:O,imag:P},backend:o}),G=H_(h,g,a,n,o),j=G.real,X=G.imag,K=[j.length],Y=o.makeTensorInfo(K,"float32",j),ne=o.makeTensorInfo(K,"float32",X),J=mr({inputs:{real:Y,imag:ne},backend:o}),Q=T.exponents(t,n),ie=[Q.real.length],ae=o.makeTensorInfo(ie,"float32",Q.real),ue=o.makeTensorInfo(ie,"float32",Q.imag),le=mr({inputs:{real:ae,imag:ue},backend:o}),ge=uf({inputs:{a:le,b:J},backend:o}),_e=La({inputs:{a:W,b:ge},backend:o}),ye=ff({inputs:{a:W,b:ge},backend:o}),ke=jo({inputs:{input:_e},backend:o}),Ae=jo({inputs:{input:ye},backend:o}),Re=Vi({inputs:{input:_e},backend:o}),Pe=Vi({inputs:{input:ye},backend:o}),ze=dl({inputs:[ke,Ae],backend:o,attrs:{axis:0}}),mt=dl({inputs:[Re,Pe],backend:o,attrs:{axis:0}}),gt=o.data.get(ze.dataId).values,It=o.data.get(mt.dataId).values;return o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(O),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(W),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(ne),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(le),o.disposeIntermediateTensorInfo(ge),o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(ye),o.disposeIntermediateTensorInfo(ke),o.disposeIntermediateTensorInfo(Re),o.disposeIntermediateTensorInfo(Ae),o.disposeIntermediateTensorInfo(Pe),o.disposeIntermediateTensorInfo(ze),o.disposeIntermediateTensorInfo(mt),{real:gt,imag:It}}function ZK(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,a=0;for(let i=0;i<e;i++){let l=T.exponent(o*i,e,t),u=T.getComplexWithIndex(r,i);s+=u.real*l.real-u.imag*l.imag,a+=u.real*l.imag+u.imag*l.real}t&&(s/=e,a/=e),T.assignToTypedArray(n,s,a,o)}return n}function JK(r){let{inputs:e,backend:t}=r,{input:n}=e,o=x.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=tt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),l=Eg(i,!1,t),u=tt({inputs:{x:l},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}var SA={kernelName:ou,backendName:"cpu",kernelFunc:JK};function gf(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,a=s||x.inferDtype(o),i=x.getArrayFromDType(a,x.sizeFromShape(n));return QK(i,o,a),e.makeTensorInfo(n,a,i)}var NA={kernelName:ua,backendName:"cpu",kernelFunc:gf};function QK(r,e,t){r.fill(e)}var TA={kernelName:ai,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=x.getTypedArrayFromDType(n.dtype,x.sizeFromShape(n.shape)),[a,i,l,u]=n.shape,c=o.data.get(n.dataId).values;for(let m=0;m<a;m++){let f=m*l*i*u;for(let d=0;d<i;d++){let h=d*(l*u);for(let g=0;g<l;g++){let y=g*u;for(let b=0;b<u;b++){let _=[a,d,g,b][2],k=Math.round(l-_),E=f+h+y+b,N=c[E];if(k>=0&&k<l){let F=k*u,O=f+h+F+b;N=c[O]}s[E]=N}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var e6=Ze((r,e)=>Math.floor(r/e)),t6=nt(so,e6,null,"int32"),EA={kernelName:so,backendName:"cpu",kernelFunc:t6};function r6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=G_({inputs:{x:o,filter:s},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(a){let g=h;h=La({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=pp(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var AA={kernelName:_s,backendName:"cpu",kernelFunc:r6};function n6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=U_({inputs:{x:o,filter:s},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(a){let g=h;h=La({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=pp(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var DA={kernelName:vs,backendName:"cpu",kernelFunc:n6};function o6(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=x.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[l,u,c,p]=T.prepareAndValidate(n,o);if(u===0)return t.makeTensorInfo(l,n.dtype,[]);let m=Ie([u,c],n.dtype),f=t.data.get(o.dataId).values,d=t.data.get(n.dataId).values;for(let h=0;h<u;h++){let g=[],y=0;for(let b=0;b<i;b++){let w=f[h*i+b];y+=w*p[b],g.push(w)}if(y<0||y>=s/c)throw new Error(`Invalid indices: ${g} does not index into ${n.shape}`);for(let b=0;b<c;b++)m.values[h*c+b]=d[y*c+b]}return t.makeTensorInfo(l,m.dtype,m.values)}var $A={kernelName:li,backendName:"cpu",kernelFunc:o6};function s6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n;re([o,s],"gatherV2");let l=i;i==null&&(l=0);let u=x.sizeFromShape(s.shape),c=x.parseAxisParam(a,o.shape)[0],p=T.segment_util.collectGatherOpShapeInfo(o,s,c,l),m=tt({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=tt({inputs:{x:s},backend:t,attrs:{shape:[p.batchSize,u/p.batchSize]}}),d=[p.batchSize,p.outerSize,u/p.batchSize,p.sliceSize],h=t.bufferSync(f),g=t.bufferSync(m),y=A_(g,h,d);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.makeTensorInfo(p.outputShape,y.dtype,y.values)}var RA={kernelName:us,backendName:"cpu",kernelFunc:s6};var i6=Ze((r,e)=>r>=e?1:0),a6=nt(ao,i6,null,"bool"),FA={kernelName:ao,backendName:"cpu",kernelFunc:a6};function l6(r){let{inputs:e,backend:t}=r,{input:n}=e,o=x.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=tt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),l=Eg(i,!0,t),u=tt({inputs:{x:l},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}var OA={kernelName:su,backendName:"cpu",kernelFunc:l6};var u6=$e(ci,r=>Number.isFinite(r)?1:0,"bool"),PA={kernelName:ci,backendName:"cpu",kernelFunc:u6};var c6=$e(pi,r=>Math.abs(r)===Infinity?1:0,"bool"),MA={kernelName:pi,backendName:"cpu",kernelFunc:c6};var p6=$e(mi,r=>Number.isNaN(r)?1:0,"bool"),LA={kernelName:mi,backendName:"cpu",kernelFunc:p6};var m6=Ze((r,e)=>r<=e?1:0),f6=nt(di,m6,null,"bool"),zA={kernelName:di,backendName:"cpu",kernelFunc:f6};function d6(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=D_(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var BA={kernelName:au,backendName:"cpu",kernelFunc:d6};var h6=$e(hi,r=>Math.log1p(r)),VA={kernelName:hi,backendName:"cpu",kernelFunc:h6};var g6=Ze((r,e)=>r&&e),x6=nt(gi,g6,null,"bool"),WA={kernelName:gi,backendName:"cpu",kernelFunc:x6};var y6=$e(tl,r=>r?0:1,"bool"),jA={kernelName:tl,backendName:"cpu",kernelFunc:y6};var b6=Ze((r,e)=>r||e),w6=nt(rl,b6,null,"bool"),GA={kernelName:rl,backendName:"cpu",kernelFunc:w6};function _6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:l}=n;re(o,"LRN");let u=o.shape[3],c=u-1,p=t.data.get(o.dataId).values,m=x.sizeFromShape(o.shape),f=new Float32Array(m);function d(h){let g=h%u,y=h-g+Math.max(0,g-s),b=h-g+Math.min(g+s,c),w=0;for(;y<=b;y++){let _=p[y];w+=_*_}return w}for(let h=0;h<m;h++){let g=d(h),y=p[h]*Math.pow(a+i*g,-l);f[h]=y}return t.makeTensorInfo(o.shape,o.dtype,f)}var UA={kernelName:ca,backendName:"cpu",kernelFunc:_6};function v6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=n;re(a,"LRNGrad");let p=x.sizeFromShape(a.shape),m=a.shape[3],f=t.data.get(a.dataId).values,d=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let b=0;b<y;b++){let w=b%m,_=b-w+Math.max(0,w-i),k=b-w+Math.min(m,w+i+1),E=0;for(let N=_;N<k;N++)E+=Math.pow(d[N],2);E=u*E+l;for(let N=_;N<k;N++){let F=-2*u*c*d[N]*h[b]/E;b===N&&(F+=Math.pow(E,-c)),F*=f[b],g[N]+=F}}return t.makeTensorInfo(a.shape,o.dtype,g)}var qA={kernelName:lu,backendName:"cpu",kernelFunc:v6};function K_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=t,l=o.shape,u=l.length,c=x.parseAxisParam(s,l),p=c,m=T.getAxesPermutation(p,u),f=i.data.get(o.dataId).values;if(m!=null){let _=new Array(u);for(let k=0;k<_.length;k++)_[k]=l[m[k]];f=cf(f,l,o.dtype,m,_),p=T.getInnerMostAxes(p.length,u),l=_}re(o,"max"),T.assertAxesAreInnerMostDims("max",p,u);let[d,h]=T.computeOutAndReduceShapes(l,p),g=x.sizeFromShape(h),y=$_(f,g,d,o.dtype),b=i.write(y,d,o.dtype),w=d;return a&&(w=T.expandShapeToKeepDim(d,c)),{dataId:b,shape:w,dtype:o.dtype}}var HA={kernelName:co,backendName:"cpu",kernelFunc:K_};function k6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;re(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;x.assert(T.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=T.computePool2DInfo(o.shape,s,a,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&x.arraysEqual(c.inShape,c.outShape))p=Dr({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=x.computeStrides(o.shape),d=mp(m,o.shape,o.dtype,f,c,"max");p=t.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var KA={kernelName:mo,backendName:"cpu",kernelFunc:k6};function C6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u,dilations:c}=n;re(o,"maxPool3d");let p=c;p==null&&(p=[1,1,1]);let m=T.computePool3DInfo(o.shape,s,a,p,i,l,u),f=t.data.get(o.dataId).values,d=Tg(f,o.shape,o.dtype,x.computeStrides(o.shape),m,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}var XA={kernelName:pa,backendName:"cpu",kernelFunc:C6};function I6(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:l,dilations:u,dimRoundingMode:c}=n;re([o,s],"maxPool3DGrad");let p=T.computePool3DInfo(s.shape,a,i,u,l,c),m=t.bufferSync(s),f=UE(m,p),d=p.strideDepth,h=p.strideHeight,g=p.strideWidth,y=p.dilationDepth,b=p.dilationHeight,w=p.dilationWidth,_=p.effectiveFilterDepth,k=p.effectiveFilterHeight,E=p.effectiveFilterWidth,N=_-1-p.padInfo.front,F=E-1-p.padInfo.left,O=k-1-p.padInfo.top,P=Ie(s.shape,"float32"),W=t.bufferSync(o);for(let G=0;G<p.batchSize;++G)for(let j=0;j<p.inChannels;++j)for(let X=0;X<p.inDepth;++X)for(let K=0;K<p.inHeight;++K)for(let Y=0;Y<p.inWidth;++Y){let ne=X-N,J=K-O,Q=Y-F,ie=0;for(let ae=0;ae<_;ae+=y){let ue=(ne+ae)/d;if(!(ue<0||ue>=p.outDepth||Math.floor(ue)!==ue))for(let le=0;le<k;le+=b){let ge=(J+le)/h;if(!(ge<0||ge>=p.outHeight||Math.floor(ge)!==ge))for(let _e=0;_e<E;_e+=w){let ye=(Q+_e)/g;if(ye<0||ye>=p.outWidth||Math.floor(ye)!==ye)continue;let ke=_*k*E-1-f.get(G,ue,ge,ye,j),Ae=ae*k*E+le*E+_e,Re=ke===Ae?1:0;if(Re===0)continue;ie+=W.get(G,ue,ge,ye,j)*Re}}}P.set(ie,G,X,K,Y,j)}return t.makeTensorInfo(P.shape,P.dtype,P.values)}var YA={kernelName:cu,backendName:"cpu",kernelFunc:I6};function S6(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;re([s,a],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=n,m=T.computePool2DInfo(i.shape,l,u,1,c,p),f=t.data.get(i.dataId).values,d=Ie(m.outShape,i.dtype,Ng(f,i.shape,i.dtype,m).values),h=m.strideHeight,g=m.strideWidth,y=m.dilationHeight,b=m.dilationWidth,w=m.effectiveFilterHeight,_=m.effectiveFilterWidth,k=_-1-m.padInfo.left,E=w-1-m.padInfo.top,N=Ie(i.shape,"float32"),F=t.data.get(o.dataId).values,O=Ie(o.shape,"float32",F);for(let P=0;P<m.batchSize;++P)for(let W=0;W<m.inChannels;++W)for(let G=0;G<m.inHeight;++G)for(let j=0;j<m.inWidth;++j){let X=G-E,K=j-k,Y=0;for(let ne=0;ne<w;ne+=y){let J=(X+ne)/h;if(!(J<0||J>=m.outHeight||Math.floor(J)!==J))for(let Q=0;Q<_;Q+=b){let ie=(K+Q)/g;if(ie<0||ie>=m.outWidth||Math.floor(ie)!==ie)continue;let ae=w*_-1-d.get(P,J,ie,W),ue=ne*_+Q,le=ae===ue?1:0;if(le===0)continue;Y+=O.get(P,J,ie,W)*le}}N.set(Y,P,G,j,W)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}var ZA={kernelName:uu,backendName:"cpu",kernelFunc:S6};function JA(r,e,t,n,o){let s=x.computeStrides(e),a=mp(r,e,t,s,o,"max"),i=Ng(r,e,t,o,!0,n);return[a.values,i.values]}var QA={kernelName:pu,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,l=t;re(n,"MaxPoolWithArgmax");let u=l.data.get(n.dataId).values,c=T.computePool2DInfo(n.shape,o,s,[1,1],a),[p,m]=JA(u,n.shape,n.dtype,i,c),f=l.write(p,c.outShape,n.dtype),d=l.write(m,c.outShape,n.dtype);return[{dataId:f,shape:c.outShape,dtype:n.dtype},{dataId:d,shape:c.outShape,dtype:"int32"}]}};function Xu(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"sum");let i;o.dtype==="bool"?i=Go({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=Dr({inputs:{x:o},backend:t});let l=i.shape.length,u=x.parseAxisParam(s,i.shape),c=T.getAxesPermutation(u,l),p=u,m=i;c!=null&&(m=or({inputs:{x:i},backend:t,attrs:{perm:c}}),p=T.getInnerMostAxes(p.length,l)),T.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,d]=T.computeOutAndReduceShapes(m.shape,p),h=T.upcastType(m.dtype,"int32"),g=up(t,f,h),y=x.sizeFromShape(d),b=t.data.get(g.dataId).values,w=t.data.get(m.dataId).values;for(let _=0;_<b.length;++_){let k=_*y,E=0;for(let N=0;N<y;++N)E+=w[k+N];b[_]=E}if(a){let _=T.expandShapeToKeepDim(g.shape,u),k=g;g=tt({inputs:{x:g},backend:t,attrs:{shape:_}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(i),c!=null&&t.disposeIntermediateTensorInfo(m),g}var e2={kernelName:Do,backendName:"cpu",kernelFunc:Xu};function N6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=x.parseAxisParam(s,o.shape),u=T.computeOutAndReduceShapes(o.shape,i)[1],c=x.sizeFromShape(u),p=[],m=t.makeTensorInfo([],"float32",new Float32Array([c]));p.push(m);let f=Go({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});p.push(f);let d=df({inputs:{a:f,b:m},backend:t});p.push(d);let h=Xu({inputs:{x:d},backend:t,attrs:{axis:s,keepDims:a}});return p.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var t2={kernelName:fo,backendName:"cpu",kernelFunc:N6};function T6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"min");let i=x.parseAxisParam(s,o.shape),l=i,u=T.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=or({inputs:{x:o},backend:t,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,o.shape.length)),T.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,m]=T.computeOutAndReduceShapes(c.shape,l),f=x.sizeFromShape(m),d=x.makeZerosTypedArray(x.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let y=0;y<d.length;++y){let b=y*f,w=h[b];for(let _=0;_<f;++_){let k=h[b+_];k<w&&(w=k)}d[y]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let y=T.expandShapeToKeepDim(p,i),b=tt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}var r2={kernelName:ho,backendName:"cpu",kernelFunc:T6};function E6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:a}=n;re(o,"mirrorPad");let i=s.map((w,_)=>w[0]+o.shape[_]+w[1]),l=s.map(w=>w[0]),u=s.map((w,_)=>w[0]+o.shape[_]),c=a==="reflect"?0:1,p=t.data.get(o.dataId).values,m=o.shape.length,f=x.computeStrides(o.shape),d=x.sizeFromShape(i),h=i.length,g=x.computeStrides(i),y=x.getTypedArrayFromDType(o.dtype,d);for(let w=0;w<d;w++){let _=x.indexToLoc(w,h,g);for(let E=0;E<h;E++)_[E]<l[E]?_[E]=l[E]*2-_[E]-c:_[E]>=u[E]&&(_[E]=(u[E]-1)*2-_[E]+c);_=_.map((E,N)=>E-l[N]);let k=x.locToIndex(_,m,f);y[w]=p[k]}return{dataId:t.write(y,i,o.dtype),shape:i,dtype:o.dtype}}var n2={kernelName:ma,backendName:"cpu",kernelFunc:E6};var A6=Ze((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),D6=nt(xi,A6),o2={kernelName:xi,backendName:"cpu",kernelFunc:D6};var _2=Ac(b2());function tv(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let l=x.parseAxisParam([i],o.shape),u=K_({inputs:{x:o},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=T.expandShapeToKeepDim(u.shape,l),p=tt({inputs:{x:u},backend:t,attrs:{shape:c}}),m=ff({inputs:{a:o,b:p},backend:t}),f=E_({inputs:{x:m},backend:t}),d=Xu({inputs:{x:f},backend:t,attrs:{axis:l,keepDims:!1}}),h=tt({inputs:{x:d},backend:t,attrs:{shape:c}}),g=df({inputs:{a:f,b:h},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var w2={kernelName:$o,backendName:"cpu",kernelFunc:tv};function L6(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;re(o,"multinomial");let l=i?o:tv({inputs:{logits:o},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=t.data.get(l.dataId).values,m=[u,s],f=x.makeZerosTypedArray(x.sizeFromShape(m),"int32");for(let d=0;d<u;++d){let h=d*c,g=new Float32Array(c-1);g[0]=p[h];for(let w=1;w<g.length;++w)g[w]=g[w-1]+p[h+w];let y=_2.alea(a.toString()),b=d*s;for(let w=0;w<s;++w){let _=y();f[b+w]=g.length;for(let k=0;k<g.length;k++)if(_<g[k]){f[b+w]=k;break}}}return i||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(m,"int32",f)}var v2={kernelName:mu,backendName:"cpu",kernelFunc:L6};var z6=Ar.nonMaxSuppressionV3Impl;function B6(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=n;re(o,"NonMaxSuppression");let u=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,{selectedIndices:p}=z6(u,c,a,i,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var k2={kernelName:bi,backendName:"cpu",kernelFunc:B6};var V6=Ar.nonMaxSuppressionV4Impl;function W6(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=n;re(o,"NonMaxSuppressionPadded");let c=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=V6(c,p,a,i,l,u);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var C2={kernelName:wi,backendName:"cpu",kernelFunc:W6};var j6=Ar.nonMaxSuppressionV5Impl;function G6(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=n;re(o,"NonMaxSuppressionWithScore");let c=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,m=a,f=i,d=l,h=u,{selectedIndices:g,selectedScores:y}=j6(c,p,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var I2={kernelName:_i,backendName:"cpu",kernelFunc:G6};function U6(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n;re(o,"oneHot");let l=x.sizeFromShape(o.shape),u=new Float32Array(l*s);u.fill(i);let c=t.data.get(o.dataId).values;for(let p=0;p<l;++p)c[p]>=0&&c[p]<s&&(u[p*s+c[p]]=a);return t.makeTensorInfo([...o.shape,s],"int32",u)}var S2={kernelName:yo,backendName:"cpu",kernelFunc:U6};function xf(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=jo({inputs:{input:n},backend:t}),s=xf({inputs:{x:o},backend:t}),a=Vi({inputs:{input:n},backend:t}),i=xf({inputs:{x:a},backend:t}),l=mr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return gf({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var N2={kernelName:bs,backendName:"cpu",kernelFunc:xf};function T2(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=jo({inputs:{input:n},backend:t}),s=T2({inputs:{x:o},backend:t}),a=Vi({inputs:{input:n},backend:t}),i=xf({inputs:{x:a},backend:t}),l=mr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return gf({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var E2={kernelName:ms,backendName:"cpu",kernelFunc:T2};function rv(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return fp({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(c=>{x.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),x.assert(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=e.map(c=>{let p=fp({inputs:{input:c},backend:t,attrs:{dim:o}});return i.push(p),p}),u=dl({inputs:l,backend:t,attrs:{axis:o}});return i.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}var A2={kernelName:fs,backendName:"cpu",kernelFunc:rv};function q6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;re(o,"pad");let i=s.map((b,w)=>b[0]+o.shape[w]+b[1]),l=s.map(b=>b[0]),u=t.data.get(o.dataId).values,c=x.sizeFromShape(o.shape),p=o.shape.length,m=x.computeStrides(o.shape),f=x.sizeFromShape(i),d=i.length,h=x.computeStrides(i),g=x.getTypedArrayFromDType(o.dtype,f);a!==0&&g.fill(a);for(let b=0;b<c;b++){let _=x.indexToLoc(b,p,m).map((E,N)=>E+l[N]),k=x.locToIndex(_,d,h);g[k]=u[b]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var Dg={kernelName:bo,backendName:"cpu",kernelFunc:q6};var H6=Ze((r,e)=>Math.pow(r,e)),K6=nt(wo,H6),D2={kernelName:wo,backendName:"cpu",kernelFunc:K6};function X6(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:a}=t,i=pf(n,o,a,s);return e.makeTensorInfo([i.length],s,i)}var $2={kernelName:fa,backendName:"cpu",kernelFunc:X6};var Y6=$e(ki,r=>1/r),R2={kernelName:ki,backendName:"cpu",kernelFunc:Y6};function Z6(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;re(o,"resizeBilinear");let l=x.computeStrides(o.shape),[u,c]=i,[p,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(x.sizeFromShape([p,u,c,d])),y=[s&&u>1?m-1:m,s&&c>1?f-1:f],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=0,_=y[0]/b[0],k=y[1]/b[1];for(let E=0;E<p;E++)for(let N=0;N<u;N++){let F;a?F=_*(N+.5)-.5:F=_*N;let O=Math.max(0,Math.floor(F)),P=F-O,W=Math.min(m-1,Math.ceil(F)),G=E*l[0]+O*l[1],j=E*l[0]+W*l[1];for(let X=0;X<c;X++){let K;a?K=k*(X+.5)-.5:K=k*X;let Y=Math.max(0,Math.floor(K)),ne=K-Y,J=Math.min(f-1,Math.ceil(K)),Q=G+Y*l[2],ie=j+Y*l[2],ae=G+J*l[2],ue=j+J*l[2];for(let le=0;le<d;le++){let ge=h[Q+le],_e=h[ie+le],ye=h[ae+le],ke=h[ue+le],Ae=ge+(ye-ge)*ne,Re=_e+(ke-_e)*ne,Pe=Ae+(Re-Ae)*P;g[w++]=Pe}}}return t.makeTensorInfo([p,u,c,d],"float32",g)}var F2={kernelName:ko,backendName:"cpu",kernelFunc:Z6};function J6(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;re([s,o],"resizeBilinearGrad");let i=x.computeStrides(o.shape),[l,u,c,p]=o.shape,[,m,f]=s.shape,d=new Float32Array(l*u*c*p),h=[a&&m>1?u-1:u,a&&f>1?c-1:c],g=[a&&m>1?m-1:m,a&&f>1?f-1:f],y=h[0]/g[0],b=h[1]/g[1],w=t.data.get(s.dataId).values,_=0;for(let k=0;k<l;k++){let E=k*i[0];for(let N=0;N<m;N++){let F=N*y,O=Math.floor(F),P=Math.min(Math.ceil(F),u-1),W=E+O*i[1],G=E+P*i[1],j=F-O,X=1-j;for(let K=0;K<f;K++){let Y=K*b,ne=Math.floor(Y),J=Math.min(Math.ceil(Y),c-1),Q=Y-ne,ie=1-Q,ae=W+ne*i[2],ue=W+J*i[2],le=G+ne*i[2],ge=G+J*i[2],_e=X*ie,ye=X*Q,ke=j*ie,Ae=j*Q;for(let Re=0;Re<p;Re++){let Pe=w[_++];d[ae+Re]+=Pe*_e,d[ue+Re]+=Pe*ye,d[le+Re]+=Pe*ke,d[ge+Re]+=Pe*Ae}}}}return t.makeTensorInfo([l,c,u,p],"float32",d)}var O2={kernelName:hu,backendName:"cpu",kernelFunc:J6};function Q6(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;re(o,"resizeNearestNeighbor");let l=x.computeStrides(o.shape),[u,c]=i,[p,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(p*u*c*d),y=[s&&u>1?m-1:m,s&&c>1?f-1:f],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=y[0]/b[0],_=y[1]/b[1],k=0;for(let E=0;E<p;E++){let N=E*l[0];for(let F=0;F<u;F++){let O=a?w*(F+.5):w*F,P=Math.min(m-1,s?Math.round(O):Math.floor(O));a&&(P=Math.max(0,P));let W=N+P*l[1];for(let G=0;G<c;G++){let j=a?_*(G+.5):_*G,X=Math.min(f-1,s?Math.round(j):Math.floor(j));a&&(X=Math.max(0,X));let K=W+X*l[2];for(let Y=0;Y<d;Y++){let ne=h[K+Y];g[k++]=ne}}}}return t.makeTensorInfo([p,u,c,d],o.dtype,g)}var P2={kernelName:da,backendName:"cpu",kernelFunc:Q6};function e5(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;re([s,o],"resizeNearestNeighborGrad");let i=x.computeStrides(o.shape),l=x.computeStrides(s.shape),[u,c,p,m]=o.shape,[,f,d]=s.shape,h=new Float32Array(u*c*p*m),g=t.data.get(s.dataId).values,y=[a&&f>1?c-1:c,a&&d>1?p-1:p],b=[a&&f>1?f-1:f,a&&d>1?d-1:d],w=y[0]/b[0],_=y[1]/b[1],k=1/w,E=1/_,N=Math.ceil(k)*2+2,F=Math.ceil(E)*2+2;for(let O=0;O<u;O++){let P=O*i[0];for(let W=0;W<c;W++){let G=P+W*i[1],j=Math.floor(W*k),X=Math.floor(j-N/2);for(let K=0;K<p;K++){let Y=G+K*i[2],ne=Math.floor(K*E),J=Math.floor(ne-F/2);for(let Q=0;Q<m;Q++){let ie=0;for(let ae=0;ae<N;ae++){let ue=ae+X;if(ue<0||ue>=f)continue;let le=P+ue*l[1],ge=ue*w,_e=Math.min(c-1,a?Math.round(ge):Math.floor(ge));if(W===_e)for(let ye=0;ye<F;ye++){let ke=ye+J;if(ke<0||ke>=d)continue;let Ae=le+ke*l[2],Re=ke*_,Pe=Math.min(p-1,a?Math.round(Re):Math.floor(Re));K===Pe&&(ie+=g[Ae+Q])}}h[Y+Q]=ie}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var M2={kernelName:du,backendName:"cpu",kernelFunc:e5};function t5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;re(o,"reverse");let a=o.shape.length,i=x.parseAxisParam(s,o.shape);if(a===0)return Dr({inputs:{x:o},backend:t});let l=new ct(o.shape,o.dtype),u=t.bufferSync(o);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),m=p.slice();i.forEach(f=>m[f]=o.shape[f]-1-m[f]),l.set(u.get(...m),...p)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}var L2={kernelName:Io,backendName:"cpu",kernelFunc:t5};var z2={kernelName:Ri,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,l=x.getTypedArrayFromDType(n.dtype,x.sizeFromShape(n.shape)),[u,c,p,m]=n.shape,[f,d]=T.getImageCenter(a,c,p),h=255,g=Math.sin(o),y=Math.cos(o),b=i.data.get(n.dataId).values;for(let _=0;_<u;_++){let k=_*p*c*m;for(let E=0;E<c;E++){let N=E*(p*m);for(let F=0;F<p;F++){let O=F*m;for(let P=0;P<m;P++){let W=[u,E,F,P],G=W[2],j=W[1],X=(G-f)*y-(j-d)*g,K=(G-f)*g+(j-d)*y;X=Math.round(X+f),K=Math.round(K+d);let Y=s;if(typeof s!="number"&&(P===3?Y=h:Y=s[P]),X>=0&&X<p&&K>=0&&K<c){let J=K*(p*m),Q=X*m,ie=k+J+Q+P;Y=b[ie]}let ne=k+N+O+P;l[ne]=Y}}}}return{dataId:i.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var r5=$e(So,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2==0?e:e+1}),B2={kernelName:So,backendName:"cpu",kernelFunc:r5};function $g(r,e,t,n,o,s,a,i,l,u){let c=[n/o,o],p=r.values,m=e.values;if(n===0)return Ie(t,e.dtype);let f=Ie(c,e.dtype);f.values.fill(l);for(let d=0;d<s;d++){let h=[],g=0;for(let y=0;y<a;y++){let b=p[d*a+y];h.push(b),g+=b*i[y]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let y=0;y<o;y++)u?f.values[g*o+y]+=m[d*o+y]:f.values[g*o+y]=e.rank===0?m[0]:m[d*o+y]}return f}function n5(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(s,o,a),m=!0,f=t.bufferSync(o),d=t.bufferSync(s),h=$g(f,d,a,p,u,l,i,c,0,m);return t.makeTensorInfo(a,h.dtype,h.values)}var V2={kernelName:Ci,backendName:"cpu",kernelFunc:n5};function o5(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;re([n,o,s],"select");let a=n.shape.length,i=t.data.get(n.dataId).values,l=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,c=dr(o.dtype,s.dtype),p=x.makeZerosTypedArray(x.sizeFromShape(o.shape),c),m=0,f=a===0||a>1||o.shape.length===1?1:x.sizeFromShape(o.shape.slice(1));for(let d=0;d<i.length;d++)for(let h=0;h<f;h++)i[d]===1?p[m++]=l[d]:p[m++]=u[d];return t.makeTensorInfo(o.shape,c,p)}var W2={kernelName:hs,backendName:"cpu",kernelFunc:o5};var s5=T.SELU_SCALEALPHA,i5=T.SELU_SCALE,a5=$e(Ii,r=>r>=0?i5*r:s5*(Math.exp(r)-1)),j2={kernelName:Ii,backendName:"cpu",kernelFunc:a5};var l5=$e(Eo,r=>1/(1+Math.exp(-r))),G2={kernelName:Eo,backendName:"cpu",kernelFunc:l5};var u5=$e(Ni,r=>r<0?-1:r>0?1:0),U2={kernelName:Ni,backendName:"cpu",kernelFunc:u5};var c5=$e(To,r=>Math.sin(r)),q2={kernelName:To,backendName:"cpu",kernelFunc:c5};var p5=$e(Si,r=>Math.sinh(r)),H2={kernelName:Si,backendName:"cpu",kernelFunc:p5};var m5=11920928955078125e-23,K2=Math.log(m5)+2,f5=$e(Ti,r=>{let e=r>-K2,t=r<K2,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),X2={kernelName:Ti,backendName:"cpu",kernelFunc:f5};function d5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;re([o],"spaceToBatchND");let i=x.sizeFromShape(s),l=[[0,0]];l.push(...a);for(let E=1+s.length;E<o.shape.length;++E)l.push([0,0]);let u=Dg.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(u.shape,s,i,!1),p=T.getPermuted(c.length,s.length,!1),m=T.getReshapedPermuted(u.shape,s,i,!1),h=tt({inputs:{x:u},backend:t,attrs:{shape:c}}),b=or({inputs:{x:h},backend:t,attrs:{perm:p}}),k=tt({inputs:{x:b},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(b),k}var Y2={kernelName:ha,backendName:"cpu",kernelFunc:d5};function h5(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=T.calculateShapes(s,o,i),f=!1,d=t.bufferSync(o),h=t.bufferSync(s),g=t.data.get(a.dataId).values[0],y=$g(d,h,i,m,c,u,l,p,g,f);return t.makeTensorInfo(i,y.dtype,y.values)}var Z2={kernelName:gu,backendName:"cpu",kernelFunc:h5};function g5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=x.parseAxisParam(a,o.shape)[0],l=T.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),c=o.shape.slice();return l.map(p=>{let m=[...c];m[i]=p;let f=Ho({inputs:{x:o},backend:t,attrs:{begin:u,size:m}});return u[i]+=p,f})}var J2={kernelName:xs,backendName:"cpu",kernelFunc:g5};var x5=$e(Ao,r=>Math.sqrt(r)),Q2={kernelName:Ao,backendName:"cpu",kernelFunc:x5};var eD={kernelName:ga,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;re(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let l=o[i];s[i]=l*l}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var y5=$e($i,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),tD={kernelName:$i,backendName:"cpu",kernelFunc:y5};function b5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n;re(o,"stridedSlice");let{nonStrided:f,$begin:d,$strides:h,size:g,newShape:y,outShape:b}=ir.sliceInfo(o.shape,s,a,i,l,u,c,p,m),w=tt({inputs:{x:o},backend:t,attrs:{shape:y}}),_;if(f){let E=Ho({inputs:{x:w},backend:t,attrs:{begin:d,size:g}});_=tt({inputs:{x:E},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(E)}else if(b.some(E=>E===0))_=t.makeTensorInfo(b,o.dtype,[]);else{let E=t.bufferSync(w),N=R_(b,E,h,d);_=t.makeTensorInfo(N.shape,N.dtype,N.values)}let k=tt({inputs:{x:_},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(_),k}var rD={kernelName:Ei,backendName:"cpu",kernelFunc:b5};var w5=$e(Ai,r=>Math.tan(r)),nD={kernelName:Ai,backendName:"cpu",kernelFunc:w5};var _5=$e(Oo,r=>Math.tanh(r)),oD={kernelName:Oo,backendName:"cpu",kernelFunc:_5};function v5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;re(o,"tile");let a=F_(t.bufferSync(o),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var sD={kernelName:wn,backendName:"cpu",kernelFunc:v5};function k5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n;re(o,"topk");let i=t.data.get(o.dataId).values,[l,u]=O_(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var iD={kernelName:Di,backendName:"cpu",kernelFunc:k5};function C5(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;re(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:l,indices:u}=P_(a,o,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var aD={kernelName:xu,backendName:"cpu",kernelFunc:C5};function I5(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],l=new Array(a-1),u=0;for(let f=0;f<a;f++)f!==s&&(l[u++]=o.shape[f]);let c=new Array(a).fill(0),p=o.shape.slice();p[s]=1;let m=new Array(i);for(let f=0;f<m.length;f++){c[s]=f;let d=Ho({inputs:{x:o},backend:t,attrs:{begin:c,size:p}});m[f]=tt({inputs:{x:d},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(d)}return m}var lD={kernelName:ys,backendName:"cpu",kernelFunc:I5};function S5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n;re(o,"unsortedSegmentSum");let i=o.shape.length,l=s.shape.length,u=[],c=[],p=i-l,m=s;for(let d=0;d<p;++d){let h=fp({inputs:{input:m},backend:t,attrs:{dim:d+1}});m=h,c.push(h)}for(let d=0;d<a;++d){let h=x.createScalarValue(d,"int32"),g=t.makeTensorInfo([],"int32",h),y=q_({inputs:{a:g,b:m},backend:t}),b=Go({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),w=uf({inputs:{a:b,b:o},backend:t}),_=Xu({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});u.push(_),c.push(g),c.push(y),c.push(b),c.push(w),c.push(_)}let f=rv({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var uD={kernelName:xa,backendName:"cpu",kernelFunc:S5};var N5=[$E,z1,RE,FE,U1,OE,PE,ME,LE,zE,BE,VE,WE,jE,GE,qE,HE,KE,XE,DE,YE,ZE,JE,j1,H1,QE,B1,eA,rA,oA,sA,nA,aA,lA,iA,uA,cA,pA,mA,fA,dA,hA,gA,xA,yA,bA,_A,wA,hf,IE,vA,kA,CA,X1,IA,Z1,SA,NA,TA,Q1,EA,AA,DA,$A,RA,tE,FA,V1,OA,tA,PA,MA,LA,SE,nE,zA,BA,sE,VA,WA,jA,GA,UA,qA,aE,KA,XA,YA,ZA,QA,HA,t2,r2,uE,n2,o2,v2,cE,mE,k2,C2,I2,dE,S2,E2,A2,Dg,D2,NE,xE,$2,W1,R2,TE,EE,AE,F2,O2,P2,M2,L2,z2,B2,bE,V2,W2,j2,G2,U2,q2,H2,wE,w2,X2,Y2,Z2,J2,Q2,eD,vE,tD,rD,CE,e2,nD,oD,sD,iD,hE,aD,lD,uD,N2];for(let r of N5)nl(r);var mD={};Ye(mD,{assertNotComplex:()=>Ds,bindCanvasToFramebuffer:()=>M5,bindColorTextureToFramebuffer:()=>wf,bindTextureToProgramUniformSampler:()=>xv,bindTextureUnit:()=>hD,bindVertexBufferToProgramAttribute:()=>Rg,callAndCheck:()=>Ne,canBeRepresented:()=>sv,createFragmentShader:()=>av,createFramebuffer:()=>dv,createProgram:()=>lv,createStaticIndexBuffer:()=>pv,createStaticVertexBuffer:()=>cv,createTexture:()=>mv,createVertexShader:()=>iv,getBatchDim:()=>Ba,getExtensionOrThrow:()=>dp,getFramebufferErrorMessage:()=>gD,getMaxTexturesInShader:()=>wv,getNumChannels:()=>O5,getProgramUniformLocation:()=>gv,getProgramUniformLocationOrThrow:()=>hv,getRowsCols:()=>Va,getShapeAs3D:()=>_f,getTextureShapeFromLogicalShape:()=>yv,getWebGLDisjointQueryTimerVersion:()=>_v,getWebGLErrorMessage:()=>fD,getWebGLMaxTextureSize:()=>bv,hasExtension:()=>Cn,isCapableOfRenderingToFloatTexture:()=>kv,isDownloadFloatTextureEnabled:()=>Cv,isReshapeFree:()=>xl,isWebGLFenceEnabled:()=>Iv,isWebGLVersionEnabled:()=>Lg,linkProgram:()=>uv,resetMaxTextureSize:()=>L5,resetMaxTexturesInShader:()=>z5,unbindColorTextureFromFramebuffer:()=>Fg,unbindTextureUnit:()=>P5,validateFramebuffer:()=>hp,validateProgram:()=>bf,validateTextureSize:()=>fv});var Zu={},nv={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ov(r,e){Zu[r]=e}function Wn(r){if(!(r in Zu)){let t=T5(r);if(t!==null)Zu[r]=t;else return console.log("Could not get context for WebGL version",r),null}let e=Zu[r];return e.isContextLost()?(delete Zu[r],Wn(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Zu[r])}function E5(r){if(typeof OffscreenCanvas!="undefined"&&r===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function T5(r){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=E5(r);return e.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete Zu[r]},!1),r===1?e.getContext("webgl",nv)||e.getContext("experimental-webgl",nv):e.getContext("webgl2",nv)}var hl;(function(r){r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH"})(hl||(hl={}));var $r;(function(r){r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD"})($r||($r={}));var vr;(function(r){r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(vr||(vr={}));function Ju(r,e){return[e,r]}function cD(r,e){return r*e}function gl(r){let e=x.sizeFromShape(r),t=Math.ceil(e/4);return x.sizeToSquarishShape(t)}function Wi(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function pD(r,e){let[t,n]=Wi(r,e);return t*n*4}function yf(r,e){let t=r,n,o,s,a,i,l,u,c,p,m;return U().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,u=4,c=1,p=t.HALF_FLOAT,m=t.FLOAT):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,u=4,c=4,p=e!=null?e.HALF_FLOAT_OES:null,m=r.FLOAT),l=r.RGBA,{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:m}}function Ne(r,e){let t=e();return U().getBool("DEBUG")&&A5(r),t}function A5(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+fD(r,e))}var D5=596e-10,$5=65504;function sv(r){return!!(U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||D5<Math.abs(r)&&Math.abs(r)<$5)}function fD(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function dp(r,e){return za(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function iv(r,e){let t=za(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ne(r,()=>r.shaderSource(t,e)),Ne(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function av(r,e){let t=za(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ne(r,()=>r.shaderSource(t,e)),Ne(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw R5(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var F5=/ERROR: [0-9]+:([0-9]+):/g;function R5(r,e){let t=F5.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((p,m)=>x.rightPad((m+1).toString(),s)+p),i=0;for(let p=0;p<a.length;p++)i=Math.max(a[p].length,i);let l=a.slice(0,n-1),u=a.slice(n-1,n),c=a.slice(n);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${x.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function lv(r){return za(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function uv(r,e){if(Ne(r,()=>r.linkProgram(e)),r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function bf(r,e){if(Ne(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function cv(r,e){let t=za(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ne(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),Ne(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function pv(r,e){let t=za(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ne(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),Ne(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function O5(){return U().getNumber("WEBGL_VERSION")===2?1:4}function mv(r){return za(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function fv(r,e){let t=U().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function dv(r){return za(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Rg(r,e,t,n,o,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(Ne(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),Ne(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),Ne(r,()=>r.enableVertexAttribArray(i)),!0)}function hD(r,e,t){dD(r,t),Ne(r,()=>r.activeTexture(r.TEXTURE0+t)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function P5(r,e){dD(r,e),Ne(r,()=>r.activeTexture(r.TEXTURE0+e)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function hv(r,e,t){return za(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function gv(r,e,t){return r.getUniformLocation(e,t)}function xv(r,e,t,n){Ne(r,()=>hD(r,e,n)),Ne(r,()=>r.uniform1i(t,n))}function M5(r){Ne(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),Ne(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),Ne(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function wf(r,e,t){Ne(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),Ne(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function Fg(r,e){Ne(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),Ne(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function hp(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+gD(r,e))}function gD(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function za(r,e,t){let n=Ne(r,()=>e());if(n==null)throw new Error(t);return n}function dD(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function Ba(r,e=2){return x.sizeFromShape(r.slice(0,r.length-e))}function Va(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function _f(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[Ba(r),...Va(r)]),e}function yv(r,e=!1){let t=U().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?x.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=x.squeezeShape(r).newShape);let n=x.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=Ba(r),s=2,a=2;return r.length&&([s,a]=Va(r)),n=o*(s/2)*(a/2),x.sizeToSquarishShape(n).map(i=>i*2)}return x.sizeToSquarishShape(n)}function Og(r){return r%2==0}function xl(r,e){if(r=r.slice(-2),e=e.slice(-2),x.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||Og(t)&&Og(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&Og(r[0])&&Og(e[0])}var Pg,Mg;function bv(r){if(Pg==null){let e=Wn(r);Pg=e.getParameter(e.MAX_TEXTURE_SIZE)}return Pg}function L5(){Pg=null}function z5(){Mg=null}function wv(r){if(Mg==null){let e=Wn(r);Mg=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Mg)}function _v(r){if(r===0)return 0;let e,t=Wn(r);return Cn(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Cn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Cn(r,e){return r.getExtension(e)!=null}function Lg(r){try{if(Wn(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function kv(r){if(r===0)return!1;let e=Wn(r);if(r===1){if(!Cn(e,"OES_texture_float"))return!1}else if(!Cn(e,"EXT_color_buffer_float"))return!1;return vv(e)}function Cv(r){if(r===0)return!1;let e=Wn(r);if(r===1){if(!Cn(e,"OES_texture_float")||!Cn(e,"WEBGL_color_buffer_float"))return!1}else{if(Cn(e,"EXT_color_buffer_float"))return vv(e);let n="EXT_color_buffer_half_float";if(Cn(e,n)){let o=e.getExtension(n);return B5(e,o)}return!1}return vv(e)}function vv(r){let e=yf(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function B5(r,e){let t=yf(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function Iv(r){return r!==2?!1:Wn(r).fenceSync!=null}function Ds(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&x.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var We=U();We.registerFlag("HAS_WEBGL",()=>We.getNumber("WEBGL_VERSION")>0);We.registerFlag("WEBGL_VERSION",()=>Lg(2)?2:Lg(1)?1:0);We.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);We.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>We.get("WEBGL_VERSION")===2);We.registerFlag("WEBGL_CPU_FORWARD",()=>!0);We.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);We.registerFlag("WEBGL_PACK",()=>We.getBool("HAS_WEBGL"));We.registerFlag("WEBGL_PACK_NORMALIZATION",()=>We.getBool("WEBGL_PACK"));We.registerFlag("WEBGL_PACK_CLIP",()=>We.getBool("WEBGL_PACK"));We.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);We.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>We.getBool("WEBGL_PACK"));We.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>We.getBool("WEBGL_PACK"));We.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>We.getBool("WEBGL_PACK"));We.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>We.getBool("WEBGL_PACK"));We.registerFlag("WEBGL_PACK_REDUCE",()=>We.getBool("WEBGL_PACK"));We.registerFlag("WEBGL_LAZILY_UNPACK",()=>We.getBool("WEBGL_PACK"));We.registerFlag("WEBGL_CONV_IM2COL",()=>We.getBool("WEBGL_PACK"));We.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>bv(We.getNumber("WEBGL_VERSION")));We.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>wv(We.getNumber("WEBGL_VERSION")));We.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=We.getNumber("WEBGL_VERSION");return r===0?0:_v(r)});We.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>We.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Wc.isMobile());We.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>kv(We.getNumber("WEBGL_VERSION")));We.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>We.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:We.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));We.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Cv(We.getNumber("WEBGL_VERSION")));We.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Iv(We.getNumber("WEBGL_VERSION")));We.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>We.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);We.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});function Lt(){let r,e,t,n,o,s,a,i,l,u;return U().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function $s(r,e,t="index"){let n=x.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function gp(r){let e=x.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}var zg=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var Sv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=hl.DENSE;let t=gl(e),n=Lt();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${$s(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}};var Nv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=hl.DENSE;let t=gl(e),n=Lt();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${$s(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}};var Tv=class{constructor(e){this.variableNames=["A"],this.outTexUsage=$r.DOWNLOAD;let t=Lt();this.outputShape=e,this.userCode=`
      ${zg}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var Ev=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=$r.DOWNLOAD;let t=Lt();this.outputShape=e,this.userCode=`
      ${zg}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var Av=class{constructor(e,t,n=!1){this.variableNames=["A"];let o=Lt(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`
      ${gp(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${a};
        int c = imod(flatIndex, ${a});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);
        vec4 values = ${o.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${o.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};var Dv=class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let o=Lt(),[s,a]=t;this.outputShape=e;let i="",l="result";n&&(l="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let c=0;c<=1;c++){let p=u*2+c;i+=`
          localCoords = coords;
          if(localCoords[2] + ${c} < ${e[2]}) {
            localCoords[2] += ${c};
            if(localCoords[1] + ${u} < ${e[1]}) {
              localCoords[1] += ${u};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${a};
              c = imod(flatIndex, ${a});
              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);
              values = ${o.texture2D}(A, uv);

              if(offset == 0) {
                result[${p}] = values[0];
              } else if(offset == 1) {
                result[${p}] = values[1];
              } else if(offset == 2) {
                result[${p}] = values[2];
              } else {
                result[${p}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${gp(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${i}

        ${o.output} = ${l};
      }
    `}};var xD={};Ye(xD,{bindVertexProgramAttributeStreams:()=>Bv,createBufferFromOutputTexture:()=>jv,createFloat16MatrixTexture:()=>Pv,createFloat16PackedMatrixTexture:()=>zv,createFloat32MatrixTexture:()=>Ov,createIndexBuffer:()=>Fv,createPackedMatrixTexture:()=>Lv,createUnsignedBytesMatrixTexture:()=>Mv,createVertexBuffer:()=>Rv,createVertexShader:()=>$v,downloadByteEncodedFloatMatrixFromOutputTexture:()=>Uv,downloadFloat32MatrixFromBuffer:()=>Gv,downloadMatrixFromPackedOutputTexture:()=>Hv,downloadPackedMatrixFromBuffer:()=>qv,getInternalFormatForFloat16MatrixTexture:()=>Vg,getInternalFormatForFloat16PackedMatrixTexture:()=>Gg,getInternalFormatForFloat32MatrixTexture:()=>Bg,getInternalFormatForPackedMatrixTexture:()=>jg,getInternalFormatForUnsignedBytesMatrixTexture:()=>Wg,uploadDenseMatrixToTexture:()=>Vv,uploadPixelDataToTexture:()=>Wv});function $v(r){let e=Lt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return iv(r,t)}function Rv(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return cv(r,e)}function Fv(r){let e=new Uint16Array([0,1,2,2,1,3]);return pv(r,e)}function vf(r,e,t,n,o,s){fv(e,t);let a=mv(r),i=r.TEXTURE_2D;return Ne(r,()=>r.bindTexture(i,a)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),Ne(r,()=>r.texImage2D(i,0,n,e,t,0,o,s,null)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null)),a}function Bg(r){return r.internalFormatFloat}function Ov(r,e,t,n){let[o,s]=Ju(e,t);return vf(r,o,s,Bg(n),n.textureFormatFloat,r.FLOAT)}function Vg(r){return r.internalFormatHalfFloat}function Pv(r,e,t,n){let[o,s]=Ju(e,t);return vf(r,o,s,Vg(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function Wg(r){return r.downloadTextureFormat}function Mv(r,e,t,n){let[o,s]=Ju(e,t);return vf(r,o,s,Wg(n),r.RGBA,r.UNSIGNED_BYTE)}function jg(r){return r.internalFormatPackedFloat}function Lv(r,e,t,n){let[o,s]=Wi(e,t);return vf(r,o,s,jg(n),r.RGBA,r.FLOAT)}function Gg(r){return r.internalFormatPackedHalfFloat}function zv(r,e,t,n){let[o,s]=Wi(e,t);return vf(r,o,s,Gg(n),r.RGBA,n.textureTypeHalfFloat)}function Bv(r,e,t){let n=0,o=3*4,s=3*4+2*4;return Ne(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),Rg(r,e,"clipSpacePos",t,3,s,n)&&Rg(r,e,"uv",t,2,s,o)}function Vv(r,e,t,n,o,s){Ne(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,l;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=r.UNSIGNED_BYTE,l=r.RGBA):(a=new Float32Array(t*n*4),i=r.FLOAT,l=s.internalFormatPackedFloat),a.set(o),Ne(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,t,n,0,r.RGBA,i,a)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function Wv(r,e,t){Ne(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?Ne(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):Ne(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function jv(r,e,t,n){let o=r.createBuffer();Ne(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*e*t;return Ne(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),Ne(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),Ne(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function Gv(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function Uv(r,e,t,n){let[o,s]=Ju(e,t),a=4,i=new Uint8Array(cD(e*t,a));return Ne(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function qv(r,e,t,n,o,s,a,i){let l=r,u=new Float32Array(pD(s,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function Hv(r,e,t){let n=new Float32Array(e*t*4);return Ne(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var Ug=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=U().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,ov(t,e)):this.gl=Wn(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(U().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=dp(this.gl,s),Cn(this.gl,a))this.textureHalfFloatExtension=dp(this.gl,a);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Cn(this.gl,o))this.colorBufferHalfFloatExtension=dp(this.gl,o);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Cn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Cn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Rv(this.gl),this.indexBuffer=Fv(this.gl),this.framebuffer=dv(this.gl),this.textureConfig=yf(this.gl,this.textureHalfFloatExtension)}get debug(){return U().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Ne(e,()=>e.finish()),Ne(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ne(e,()=>e.deleteFramebuffer(this.framebuffer)),Ne(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ne(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ne(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Ov(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Pv(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Mv(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Wv(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),Vv(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),zv(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Lv(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Fg(this.gl,this.framebuffer),this.outputTexture=null),Ne(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Uv(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,a){return qv(this.gl,e,t,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Gv(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=jv(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(U().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=s}else U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Hv(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=av(t,e),o=$v(t),s=lv(t);return Ne(t,()=>t.attachShader(s,o)),Ne(t,()=>t.attachShader(s,n)),uv(t,s),this.debug&&bf(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=Bv(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Ne(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&bf(this.gl,this.program),Ne(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?hv(this.gl,e,t):gv(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ne(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),xv(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=Wi(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&bf(this.gl,this.program),hp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Ne(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ne(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=dp(this.gl,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await x.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=V5(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&x.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),wf(this.gl,e,this.framebuffer),this.debug&&hp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(wf(this.gl,this.outputTexture,this.framebuffer),this.debug&&hp(this.gl)):Fg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;wf(o,e,this.framebuffer),this.debug&&hp(o),this.outputTexture=e,Ne(o,()=>o.viewport(0,0,t,n)),Ne(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),Ne(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function V5(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{getBroadcastDims:yD}=T;function bD(r,e,t,n){let o=[];r.forEach(d=>{let h=x.sizeFromShape(d.shapeInfo.logicalShape);d.shapeInfo.isUniform?o.push(`uniform float ${d.name}${h>1?`[${h}]`:""};`):(o.push(`uniform sampler2D ${d.name};`),o.push(`uniform int offset${d.name};`))});let s=o.join(`
`),a=r.map(d=>W5(d,e,n)).join(`
`),i=e.texShape,l=Lt(),u=U5(l),c,p,m=K5(l);return e.isPacked?(c=j5(e.logicalShape,i),p=H5(l)):(c=G5(e.logicalShape,i),p=q5(l)),n&&(m+=X5),[m,u,p,s,c,a,t].join(`
`)}function xp(r){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return Y5(r);case 1:return Z5(r);case 2:return J5(r);case 3:return Q5(r);case 4:return e8(r);case 5:return t8(r);case 6:return r8(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function wD(r){switch(r.shapeInfo.logicalShape.length){case 0:return n8(r);case 1:return o8(r);case 2:return s8(r);case 3:return i8(r);default:return a8(r)}}function W5(r,e,t=!1){let n="";t?n+=wD(r):n+=xp(r);let o=r.shapeInfo.logicalShape,s=e.logicalShape;return o.length<=s.length&&(t?n+=l8(r,e):n+=u8(r,e)),n}function j5(r,e){switch(r.length){case 0:return _D();case 1:return c8(r,e);case 2:return f8(r,e);case 3:return p8(r,e);default:return m8(r,e)}}function G5(r,e){switch(r.length){case 0:return _D();case 1:return d8(r,e);case 2:return b8(r,e);case 3:return h8(r,e);case 4:return g8(r,e);case 5:return x8(r,e);case 6:return y8(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function U5(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function q5(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function H5(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function K5(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${w8}
    ${_8}
    ${v8}
  `}var w8=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,_8=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,v8=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,X5=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function _D(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function c8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return t[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return 2 * (resTexRC.x * ${t[1]} + resTexRC.y);
    }
  `}function d8(r,e){return e[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function p8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=Math.ceil(r[2]/2),o=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function h8(r,e){let t=$s(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec3(r, c, d);
    }
  `}function m8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=Math.ceil(r[r.length-1]/2),o=n*Math.ceil(r[r.length-2]/2),s=o,a="",i="b, r, c";for(let l=2;l<r.length-1;l++)s*=r[r.length-l-1],a=`
      int b${l} = index / ${s};
      index -= b${l} * ${s};
    `+a,i=`b${l}, `+i;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${i});
    }
  `}function g8(r,e){let t=$s(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec4(r, c, d, d2);
    }
  `}function x8(r,e){let t=$s(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function y8(r,e){let t=$s(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function f8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(x.arraysEqual(r,e))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function b8(r,e){return x.arraysEqual(r,e)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Qu(r){return`offset${r}`}function n8(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Lt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function Y5(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${t}() {return ${e};}`;let[n,o]=r.shapeInfo.texShape;if(n===1&&o===1)return`
      float ${t}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let[s,a]=r.shapeInfo.texShape,i=Qu(e);return`
    float ${t}() {
      vec2 uv = uvFromFlat(${s}, ${a}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function o8(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=r.shapeInfo.texShape,o=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)],s=Lt();return`
    vec4 ${t}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function Z5(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${t}(int index) {
        ${yp(r)}
      }
    `;let n=r.shapeInfo.texShape,o=n[0],s=n[1];if(s===1&&o===1)return`
      float ${t}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=Qu(e);return s===1?`
      float ${t}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${e}, uv);
      }
    `:o===1?`
      float ${t}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
    float ${t}(int index) {
      vec2 uv = uvFromFlat(${o}, ${s}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function s8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=o[0],a=o[1],i=Lt();if(o!=null&&x.arraysEqual(e,o))return`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${s}.0);

        return ${i.texture2D}(${t}, uv);
      }
    `;let l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);
      return ${i.texture2D}(${t}, uv);
    }
  `}function J5(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape;if(o!=null&&x.arraysEqual(e,o)){let p=o[0],m=o[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${t}, uv);
    }
  `}let{newShape:s,keptDims:a}=x.squeezeShape(e),i=s;if(i.length<e.length){let p=bp(r,i),m=["row","col"];return`
      ${xp(p)}
      float ${n}(int row, int col) {
        return ${n}(${wp(m,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${yp(r)}
      }
    `;let l=o[0],u=o[1],c=Qu(t);return u===1?`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${t}, uv);
    }
  `:l===1?`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${t}, uv);
    }
  `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${c};
    vec2 uv = uvFromFlat(${l}, ${u}, index);
    return sampleTexture(${t}, uv);
  }
`}function i8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(e[0]===1){let p=e.slice(1),m=[1,2],f=bp(r,p),d=["b","row","col"];return`
        ${wD(f)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${wp(d,m)});
        }
      `}let a=s[0],i=s[1],l=Math.ceil(e[2]/2),u=l*Math.ceil(e[1]/2),c=Lt();return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${a}, ${i}, ${u}, ${l}, b, row, col);
      return ${c.texture2D}(${t}, uv);
    }
  `}function Q5(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[1]*e[2],s=e[2],{newShape:a,keptDims:i}=x.squeezeShape(e),l=a;if(l.length<e.length){let d=bp(r,l),h=["row","col","depth"];return`
        ${xp(d)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${wp(h,i)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${s}, 1)));
        ${yp(r)}
      }
    `;let u=r.shapeInfo.texShape,c=u[0],p=u[1],m=r.shapeInfo.flatOffset;if(p===o&&m==null)return`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${c}.0);
          return sampleTexture(${t}, uv);
        }
      `;if(p===s&&m==null)return`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${c}.0);
      return sampleTexture(${t}, uv);
    }
  `;let f=Qu(t);return`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${s} + depth + ${f};
        vec2 uv = uvFromFlat(${c}, ${p}, index);
        return sampleTexture(${t}, uv);
      }
  `}function a8(r){let e=r.shapeInfo.logicalShape,t=e.length,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=a[0],l=a[1],u=Math.ceil(e[t-1]/2),c=u*Math.ceil(e[t-2]/2),p="int b, int row, int col",m=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let d=2;d<t-1;d++)p=`int b${d}, `+p,c*=e[t-d-1],m=`b${d} * ${c} + `+m;let f=Lt();return`
    vec4 ${o}(${p}) {
      int index = ${m};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${i});
      return ${f.texture2D}(${n}, uv);
    }
  `}function e8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[3],s=e[2]*o,a=e[1]*s,{newShape:i,keptDims:l}=x.squeezeShape(e);if(i.length<e.length){let d=bp(r,i),h=["row","col","depth","depth2"];return`
      ${xp(d)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${wp(h,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${s}, ${o}, 1)));
        ${yp(r)}
      }
    `;let u=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,p=c[0],m=c[1];if(m===a&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===o&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=Qu(t);return`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${p}, ${m}, index + ${f});
      return sampleTexture(${t}, uv);
    }
  `}function t8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,i=e[1]*a,{newShape:l,keptDims:u}=x.squeezeShape(e);if(l.length<e.length){let h=bp(r,l),g=["row","col","depth","depth2","depth3"];return`
      ${xp(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${wp(g,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${yp(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===i&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===o&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;let d=Qu(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${d};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function r8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=x.squeezeShape(e);if(o.length<e.length){let g=bp(r,o),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${xp(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${wp(y,s)});
      }
    `}let a=e[5],i=e[4]*a,l=e[3]*i,u=e[2]*l,c=e[1]*u;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${yp(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],d=m[1];if(d===c&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===a&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Qu(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${f}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function yp(r){let e=r.name,t=x.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function l8(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=yD(r.shapeInfo.logicalShape,e.logicalShape),l=Be(a),u=a-s,c,p=["x","y","z","w","u","v"];s===0?c="":a<2&&i.length>=1?c="coords = 0;":c=i.map(b=>`coords.${p[b+u]} = 0;`).join(`
`);let m="";a<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((b,w)=>`coords.${p[w+u]}`).join(", ");let f="return outputValue;",h=x.sizeFromShape(r.shapeInfo.logicalShape)===1,y=x.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!y)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!y)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(i.length){let b=s-2,w=s-1;i.indexOf(b)>-1&&i.indexOf(w)>-1?f="return vec4(outputValue.x);":i.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${n}(${m});
      ${f}
    }
  `}function u8(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===l&&r.shapeInfo.flatOffset==null&&x.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let u=Be(l),c=yD(r.shapeInfo.logicalShape,e.logicalShape),p=l-i,m,f=["x","y","z","w","u","v"];i===0?m="":l<2&&c.length>=1?m="coords = 0;":m=c.map(h=>`coords.${f[h+p]} = 0;`).join(`
`);let d="";return l<2&&i>0?d="coords":d=r.shapeInfo.logicalShape.map((h,g)=>`coords.${f[g+p]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${m}
      return get${n}(${d});
    }
  `}function Be(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function bp(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function wp(r,e){return e.map(t=>r[t]).join(", ")}function vD(r,e,t,n){let o=e.userCode,s=t.map((f,d)=>{let h={logicalShape:f.shape,texShape:f.isUniform?null:f.texData.texShape,isUniform:f.isUniform,isPacked:f.isUniform?!1:f.texData.isPacked,flatOffset:null};return f.texData!=null&&f.texData.slice!=null&&f.texData.slice.flatOffset>0&&(h.flatOffset=f.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),a=s.map(f=>f.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},l=bD(s,i,o,e.packedInputs),u=r.createProgram(l),c=null,p=r.getUniformLocation(u,"NAN",!1);U().getNumber("WEBGL_VERSION")===1&&(c=r.getUniformLocation(u,"INFINITY",!1));let m={};for(let f=0;f<e.variableNames.length;f++){let d=e.variableNames[f],h=!1;m[d]=r.getUniformLocation(u,d,h),m[`offset${d}`]=r.getUniformLocation(u,`offset${d}`,h)}return{program:e,source:l,webGLProgram:u,uniformLocations:m,inShapeInfos:a,outShapeInfo:i,infLoc:c,nanLoc:p}}function kD(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],a=s.shape;if(!x.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,l=s.isUniform?null:s.texData.texShape;if(!x.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function CD(r,e,t,n,o){kD(e.inShapeInfos,t),kD([e.outShapeInfo],[n]);let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s,a[0],a[1]):r.setOutputMatrixTexture(s,a[0],a[1]),r.setProgram(e.webGLProgram),U().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,Infinity),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((i,l)=>{let u=e.program.variableNames[l],c=e.uniformLocations[u],p=e.uniformLocations[`offset${u}`];if(c!=null){if(i.isUniform){if(x.sizeFromShape(i.shape)<2)r.gl.uniform1f(c,i.uniformValues[0]);else{let m=i.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),r.gl.uniform1fv(c,m)}return}i.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,i.texData.slice.flatOffset),r.setInputMatrixTexture(i.texData.texture,c,l)}}),o!=null&&o(r,e.webGLProgram),r.executeProgram()}function ID(r,e,t){let n="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0,l=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${l}_${i}`});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o,s}var{addImpl:SD,bincountImpl:qg,bincountReduceImpl:ND,ceilImpl:TD,concatImpl:ED,expImpl:AD,expm1Impl:DD,floorImpl:$D,gatherV2Impl:RD,greaterImpl:FD,lessImpl:OD,linSpaceImpl:PD,logImpl:MD,maxImpl:LD,maximumImpl:zD,minimumImpl:BD,multiplyImpl:VD,negImpl:WD,prodImpl:jD,rangeImpl:GD,rsqrtImpl:UD,simpleAbsImpl:Hg,sliceImpl:qD,stridedSliceImpl:HD,subImpl:KD,tileImpl:XD,topKImpl:YD,transposeImpl:_p,uniqueImpl:ZD}=Sg;function Kv(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function qt(r,e){return e===1?[r]:Kv(r,e)}function JD(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var Xv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=qt("rc",t),o=Be(t),s=k8(t,e,n),a=C8(t,e[e.length-1],e[e.length-2],n),i=I8(e,n);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${i}));
          }
        }
      `}}};function S8(r,e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<r;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}function k8(r,e,t){if(r===1)return`rc > ${e[0]}`;let n="";for(let o=r-2;o<r;o++)n+=`${t[o]} >= ${e[o]}`,o<r-1&&(n+="||");return n}function C8(r,e,t,n){if(r===1)return"";let o=n.slice(-2);return`
    int r = ${o[0]};
    int c = ${o[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${e};
    bool rEdge = rp1 >= ${t};
  `}function I8(r,e){let t=r.length,n=S8(t,e);return t===1?`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${n[0]}),
          cEdge ? 0. : getA(${n[1]}),
          rEdge ? 0. : getA(${n[2]}),
          rEdge || cEdge ? 0. : getA(${n[3]})`}var kf=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2==1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${N8(t)}
      ${gp(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${e[1]};
        int cols = ${e[2]};

        ${n}

        setOutput(result);
      }
    `}};function N8(r){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${$s(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var Yv=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let o=e$(t,n),s=t$(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=QD(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let l=this.freeTextures[s].shift();return this.usedTextures[s].push(l),l}let i;return o===vr.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===vr.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===vr.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===vr.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===vr.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=e$(n,o),a=t$(t,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=QD(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),l=U().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function T8(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}function QD(r,e,t,n,o){let s=E8(e,n),a;if(o){let[l,u]=Wi(r[0],r[1]);a=l*u}else{let[l,u]=Ju(r[0],r[1]);a=l*u}let i=T8(t,s);return a*i}function E8(r,e){switch(r){case vr.PACKED_2X2_FLOAT32:return jg(e);case vr.PACKED_2X2_FLOAT16:return Gg(e);case vr.UNPACKED_FLOAT32:return Bg(e);case vr.UNPACKED_FLOAT16:return Vg(e);case vr.PACKED_4X1_UNSIGNED_BYTE:return Wg(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function A8(r){return U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?vr.PACKED_2X2_FLOAT32:vr.UNPACKED_FLOAT32:r?vr.PACKED_2X2_FLOAT16:vr.UNPACKED_FLOAT16}function e$(r,e){if(r===$r.UPLOAD)return vr.PACKED_2X2_FLOAT32;if(r===$r.RENDER||r==null)return A8(e);if(r===$r.DOWNLOAD||r===$r.PIXELS)return vr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function t$(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var sn=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},gr="if (isnan(x)) return x;",r$="return x;",Zv="return abs(x);";var n$="return (x >= 0.0) ? x : (exp(x) - 1.0);",o$=gr+`
  return (x < 0.0) ? 0.0 : x;
`,s$=gr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Cf="return x;";var i$="return x;",a$=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,l$=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,u$=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Rs=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var Jv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=qt("rc",t),o=Be(t),s=JD(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var D8=Ar.whereImpl,$8=1e-7,R8=1e-4,Kg={};function F8(r){return r in Kg||(Kg[r]={}),Kg[r]}var O8=128,P8=600;function M8(){return U().global.screen==null?1024:U().global.screen.height*U().global.screen.width*window.devicePixelRatio*P8/1024/1024}var Xg=class extends js{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!U().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Wn(U().getNumber("WEBGL_VERSION"));this.binaryCache=F8(U().getNumber("WEBGL_VERSION")),this.gpgpu=new Ug(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new Yv(this.gpgpu),this.numMBBeforeWarning=M8(),this.texData=new el(this,Cs())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((U().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||U().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:$r.UPLOAD,refCount:1,complexParentRefCount:0}),o}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o){if(U().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:$r.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){let t=e.dataId;if(this.texData.has(t)){let n=this.texData.get(t);n.refCount--,n.refCount<1&&this.disposeData(t)}}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:a,shape:i,isPacked:l}=t;if(a!=null){let m;l?m=new Rs(i,Cf):m=new sn(i,Cf);let f=this.runWebGLProgram(m,[{dataId:e,shape:i,dtype:o}],o),d=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),d}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let u=this.activeTimers!=null,c;u&&(c=x.now());let p;if(o==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);p=T.mergeRealAndImagArrays(m,f)}else p=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=x.now()-c),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){let d=this.pendingRead.get(e);return new Promise(h=>d.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:a,complexTensorInfos:i,isPacked:l}=t;if(s!=null){let d;l?d=new Rs(o,Cf):d=new sn(o,Cf);let h=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(!U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&U().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(a!=="complex64"&&U().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let d=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(d.texture,...gl(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(a==="complex64"){let d=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=d[0],g=d[1];p=T.mergeRealAndImagArrays(h,g)}else if(u==null)p=this.getValuesFromTexture(e);else{let d=x.sizeFromShape(o);p=this.gpgpu.downloadFloat32MatrixFromBuffer(u,d)}c!=null&&this.disposeIntermediateTensorInfo(c);let m=this.convertAndCacheOnCPU(e,p),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(d=>d(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),m}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>x.decodeString(o))}catch(o){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ie(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!sv(n))throw U().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=x.sizeFromShape(t);if(U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),d=this.gpgpu.downloadMatrixFromPackedTexture(f.texture,...gl(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),d}let a=U().getBool("WEBGL_PACK")&&o===!0,i=a?_f(t):t,l=a?new Ev(i):new Tv(i),u=this.runWebGLProgram(l,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),p}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=x.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=x.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(s);i.kernelMs=x.sum(l),i.getExtraProfileInfo=()=>l.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:x.now(),endMs:null}}endTimer(e){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=x.now(),e)}async getQueryTime(e){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e)){this.pendingDisposal.add(e),this.pendingDeletes++;return}if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0){this.texData.get(e).refCount--;return}this.releaseGPUData(e);let{complexTensorInfos:t}=this.texData.get(e);t!=null&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:a,slice:i}=this.texData.get(e),l=i&&i.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return U().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=Cs().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=O8){let n=this.getCPUBackend();return!U().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&n==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),n!=null&&e.every(o=>this.texData.get(o.dataId).texture==null&&x.sizeFromShape(o.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return D8(e.shape,t)}packedUnaryOp(e,t,n){let o=new Rs(e.shape,t);return this.compileAndRun(o,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let n=Hg(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,n)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Zv,e.dtype);let t=new sn(e.shape,Zv);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&x.isString(n[0])){let s=n.map(a=>x.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:o}=this.makeTensorInfo(e,t,n);return Cs().makeTensorFromDataId(o,e,t,this)}unpackTensor(e){let t=new Jv(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new Xv(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Ba(e.shape),...Va(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Ba(t),...Va(t)],a=new kf(s,n),i=!0,l=this.runWebGLProgram(a,[o],e.dtype,null,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:o,dtype:s}=t,a=_f(o),i;n?i=new Nv(a):i=new Sv(a);let l=!0,u=this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,l);return{dtype:s,shape:o,dataId:u.dataId}}runWebGLProgram(e,t,n,o,s=!1){let a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===hl.DENSE){let h=gl(e.outputShape);i.texShape=h.map(g=>g*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),x.sizeFromShape(a.shape)===0)return i.values=x.getTypedArrayFromDType(a.dtype,0),a;let l=[],u=t.map(h=>{if(h.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(h.dataId);if(g.texture==null){if(!e.packedInputs&&x.sizeFromShape(h.shape)<=U().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:h.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=h.shape)}else if(!!g.isPacked!=!!e.packedInputs)h=g.isPacked?this.unpackTensor(h):this.packTensor(h),l.push(h),g=this.texData.get(h.dataId);else if(g.isPacked&&!xl(g.shape,h.shape)){let y=h,b=h.shape;h.shape=g.shape,h=this.packedReshape(h,b),l.push(h),g=this.texData.get(h.dataId),y.shape=b}return this.uploadToGPU(h.dataId),{shape:h.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);let c={shape:a.shape,texData:i,isUniform:!1},p=ID(e,u,c),m=this.getAndSaveBinary(p,()=>vD(this.gpgpu,e,u,c)),f=this.activeTimers!=null,d;if(f&&(d=this.startTimer()),CD(this.gpgpu,m,u,c,o),l.forEach(h=>this.disposeIntermediateTensorInfo(h)),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)})),!U().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&s===!1){let h=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),h}return a}compileAndRun(e,t,n,o,s=!1){n=n||t[0].dtype;let a=this.runWebGLProgram(e,t,n,o,s);return Cs().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(U().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=V(()=>{if(!U().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=U().getBool("DEBUG");U().set("DEBUG",!1);let t=this.abs(ce(1e-8)).dataSync()[0];if(U().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?$8:R8}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:a,usage:i,isPacked:l}=t;if(a!=null)return;let u=this.activeTimers!=null,c;u&&(c=x.now());let p=t.texShape;if(p==null&&(p=yv(n,l),t.texShape=p),s!=null){let m=_f(n),f,d=p[1],h=p[0],g=s instanceof Uint8Array;l?([d,h]=Wi(p[0],p[1]),f=new Dv(m,[h,d],g)):f=new Av(m,[h,d],g);let y=this.makeTensorInfo([h,d],o);g?this.texData.get(y.dataId).usage=$r.PIXELS:this.texData.get(y.dataId).usage=$r.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),d,h,s);let b=!0,w=this.runWebGLProgram(f,[y],o,null,b),_=this.texData.get(w.dataId);t.texture=_.texture,t.texShape=_.texShape,t.isPacked=_.isPacked,t.usage=_.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(w.dataId),t.values=null,u&&(this.uploadWaitMs+=x.now()-c)}else{let m=this.acquireTexture(p,i,o,l);t.texture=m}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=L8(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*x.bytesPerElement(t)}};function L8(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var Qv="2.8.3";function ek(){U().set("WEBGL_FORCE_F16_TEXTURES",!0)}Wc.isBrowser()&&_u("webgl",()=>new Xg,2);var z8={forceHalfFloat:ek};var Yg=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Ko=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var yl=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var Fs=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length,a="";if(o)if(s===0||x.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Be(s)} coords = getOutputCoords();
        `,s===1)a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=qt("coords",s);a+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Ht(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var c$={kernelName:cs,backendName:"webgl",kernelFunc:Ht};function an(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(s.dataId),i=Ht({inputs:{x:n},backend:t}),l=t.texData.get(i.dataId);l.complexParentRefCount++;let u=Ht({inputs:{x:o},backend:t}),c=t.texData.get(u.dataId);return c.complexParentRefCount++,a.complexTensorInfos={real:i,imag:u},s}var p$={kernelName:Xl,backendName:"webgl",kernelFunc:an};var tk="return (a < 0.) ? b * a : a;",rk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function B8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=t.makeTensorInfo([],"float32",x.createScalarValue(s,"float32")),i=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fs(rk,o.shape,a.shape):new Ko(tk,o.shape,a.shape),l=t.runWebGLProgram(i,[o,a],o.dtype);return t.disposeIntermediateTensorInfo(a),l}var m$={kernelName:lo,backendName:"webgl",kernelFunc:B8};var nk="return (a < 0.) ? b * a : a;",ok=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function V8(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fs(ok,n.shape,o.shape):new Ko(nk,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)}var f$={kernelName:_o,backendName:"webgl",kernelFunc:V8};var Zg="if (isnan(x)) return x;",d$=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,h$=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ce({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,l=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let p=i.texData.get(a.dataId),m=t(p.values,l);return i.makeTensorInfo(a.shape,l,m)}let u=U().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,c;return u?c=new Rs(a.shape,e):c=new sn(a.shape,r),i.runWebGLProgram(c,[a],l)}}function at({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:l,b:u}=a,c=i;if(n&&l.dtype==="complex64"){let d=c.texData.get(l.dataId),h=c.texData.get(u.dataId),[g,y]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(w=>{let[_,k]=w,E={dataId:_.dataId,dtype:_.dtype,shape:l.shape},N={dataId:k.dataId,dtype:k.dtype,shape:u.shape},F=new Ko(r,l.shape,u.shape);return c.runWebGLProgram(F,[E,N],dr(_.dtype,k.dtype))}),b=an({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),b}let p=s||dr(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&o!=null){let d=c.texData.get(l.dataId),h=c.texData.get(u.dataId),[g,y]=o(l.shape,u.shape,d.values,h.values,p),b=c.makeTensorInfo(y,p),w=c.texData.get(b.dataId);return w.values=g,b}let m=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,f;return m?f=new Fs(e,l.shape,u.shape,t):f=new Ko(r,l.shape,u.shape),c.runWebGLProgram(f,[l,u],p)}}function bl(r,e=!1){if(r==="linear")return e?i$:r$;if(r==="relu")return e?l$:o$;if(r==="elu")return e?a$:n$;if(r==="relu6")return e?u$:s$;if(r==="prelu")return e?ok:nk;if(r==="leakyrelu")return e?rk:tk;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var If=class{constructor(e,t,n,o=!1,s=!1,a=!1,i=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;let c=o?e[1]:e[2],p=Math.ceil(c/2),m=o?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",y="";i&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",_="rc.x";e[0]<t[0]?w=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(_=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}

      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${p}; i++) {
          int batchA = ${w};
          int batchB = ${_};
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${h[0]});
          result += (${d[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}};var sk={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Jg=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var g$="return a * b;";function ik(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=T.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=t.texData.get(n.dataId),l=t.texData.get(o.dataId),u=new Jg(sk.REAL,n.shape,o.shape),c=new Jg(sk.IMAG,n.shape,o.shape),p=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:o.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:o.shape}],m=t.runWebGLProgram(u,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),d=an({inputs:{real:m,imag:f},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}if(t.shouldExecuteOnCPU([n,o])){let i=t.texData.get(n.dataId),l=t.texData.get(o.dataId),[u,c]=VD(n.shape,o.shape,i.values,l.values,s),p=t.makeTensorInfo(c,s),m=t.texData.get(p.dataId);return m.values=u,p}let a;return U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Fs(g$,n.shape,o.shape):a=new Ko(g$,n.shape,o.shape),t.runWebGLProgram(a,[n,o],s)}var x$={kernelName:xo,backendName:"webgl",kernelFunc:ik};function y$(r,e,t){let n=[Ba(r.shape),...Va(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[Ba(e),...Va(e)],a=new kf(s,n),i=!0,l=t.runWebGLProgram(a,[o],r.dtype,null,i);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function me(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=t,i=x.sizeFromShape(o.shape),l=x.inferFromImplicitShape(s,i),u=x.sizeFromShape(l);x.assert(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let c=a.texData.get(o.dataId);return c.isPacked&&!xl(o.shape,l)&&!(c.texture!==null&&xl(c.shape,l))?y$(o,l,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype})}var b$={kernelName:ds,backendName:"webgl",kernelFunc:me};var Qg=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i=Math.floor(n/4)*4,l=n%4,u="sumValue += dot(values, ones);";if(t!=null){let p=1/t;u=`sumValue += dot(values * ${x.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";s%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var ak=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i="0.0",l="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",l="min"):t==="max"&&(i="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let c=Math.floor(n/4)*4,p=n%4,m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
      }
    `,f="vec4";t==="all"?(i="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(i="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function W8(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=T.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function In(r,e,t,n){let o=W8(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:l,outSize:u}=o[a],c,p;t==="mean"?c=a===0?new Qg({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u},i):new Qg({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u}):c=new ak({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u},t),p=s,s=n.runWebGLProgram(c,[s],e),p.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(p)}return s}var lk=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let o=Be(this.rank),s=j8(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function j8(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var uk=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Be(this.rank),s=Kv("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=s[c];let i=`vec2(${a.slice(-2).join()})`,l=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function wl(r,e,t){let n=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uk(r.shape,e):new lk(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function w$(r,e,t,n){let o=e,s=r.shape.length,a=x.parseAxisParam(o,r.shape),i=a,l=T.getAxesPermutation(i,s),u=l!=null,c=r;u&&(c=wl(r,l,n),i=T.getInnerMostAxes(i.length,s)),T.assertAxesAreInnerMostDims("sum",i,s);let[p,m]=T.computeOutAndReduceShapes(c.shape,i),f=p;t&&(f=T.expandShapeToKeepDim(p,a));let d=x.sizeFromShape(m),g=x.sizeFromShape(r.shape)/d,y=me({inputs:{x:c},attrs:{shape:[g,d]},backend:n}),b=yu(r.dtype),w=In(y,b,"sum",n),_=me({inputs:{x:w},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(w),u&&n.disposeIntermediateTensorInfo(c),_}function Sf(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return w$(o,s,a,t)}var _$={kernelName:Do,backendName:"webgl",kernelFunc:Sf};function Vt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=o.shape[s[c]];let u;if(a.shouldExecuteOnCPU([o])){let p=a.texData.get(o.dataId).values,m=_p(p,o.shape,o.dtype,s,l);u=a.makeTensorInfo(l,o.dtype);let f=a.texData.get(u.dataId);f.values=m}else u=wl(o,s,a);return u}var v$={kernelName:Po,backendName:"webgl",kernelFunc:Vt};var ck=1e3;function ec({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){let u=r.shape.length,c=e.shape.length,p=t?r.shape[u-2]:r.shape[u-1],m=n?e.shape[c-1]:e.shape[c-2],f=t?r.shape[u-1]:r.shape[u-2],d=n?e.shape[c-2]:e.shape[c-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=x.sizeFromShape(h),b=x.sizeFromShape(g),w=y===b||y===1||b===1;x.assert(u>=2&&c>=2&&w,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${g}).`);let k=(y>b?r.shape.slice(0,-2):e.shape.slice(0,-2)).concat([f,d]);x.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let E=t?[y,p,f]:[y,f,p],N=n?[b,d,m]:[b,m,d],F=me({inputs:{x:r},backend:o,attrs:{shape:E}}),O=me({inputs:{x:e},backend:o,attrs:{shape:N}}),P=[F,O],W=Math.max(y,b),G=t?F.shape[1]:F.shape[2],j=s!=null,X=a!=null,K=l==="leakyrelu",Y=l!=null?bl(l,!0):null,ne=j||X||K||Y!=null,J;if((f===1||d===1)&&G>ck&&ne===!1){let ie=F,ae=O;t&&(ie=Vt({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),P.push(ie)),n&&(ae=Vt({inputs:{x:O},backend:o,attrs:{perm:[0,2,1]}}),P.push(ae));let ue=d!==1,le=d===1,ge=ie;ue&&(ge=me({inputs:{x:ie},backend:o,attrs:{shape:[W,G,1]}}),P.push(ge));let _e=d===1?2:1,ye=ae;le&&(ye=me({inputs:{x:ae},backend:o,attrs:{shape:[W,1,G]}}),P.push(ye));let ke=ik({inputs:{a:ge,b:ye},backend:o});J=Sf({inputs:{x:ke},backend:o,attrs:{axis:_e,keepDims:!0}}),P.push(ke)}else{let ie=dr(r.dtype,e.dtype),ae=new If(E,N,[W,f,d],t,n,j,Y,X,K),ue=[F,O];if(s!=null&&ue.push(s),X&&ue.push(a),K){let le=o.makeTensorInfo([],"float32",x.createScalarValue(i,"float32"));ue.push(le),P.push(le)}J=o.runWebGLProgram(ae,ue,ie)}let Q=me({inputs:{x:J},backend:o,attrs:{shape:k}});P.push(J);for(let ie of P)o.disposeIntermediateTensorInfo(ie);return Q}function G8(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n;return ec({a:o,b:s,transposeA:l,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}var k$={kernelName:ws,backendName:"webgl",kernelFunc:G8};var C$="return abs(x);";function U8(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),a=Hg(s.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return U().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Rs(n.shape,C$):o=new sn(n.shape,C$),t.runWebGLProgram(o,[n],n.dtype)}var I$={kernelName:is,backendName:"webgl",kernelFunc:U8};var q8=gr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,H8=Ce({opSnippet:q8}),S$={kernelName:qs,backendName:"webgl",kernelFunc:H8};var K8=gr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,X8=Ce({opSnippet:K8}),N$={kernelName:Hs,backendName:"webgl",kernelFunc:X8};var T$="return a + b;",Y8=at({opSnippet:T$,packedOpSnippet:T$,supportsComplex:!0,cpuKernelImpl:SD}),E$={kernelName:bn,backendName:"webgl",kernelFunc:Y8};var pk=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var mk=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function ex(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return Ht({inputs:{x:n[0]},backend:t});if(n.length>U().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(n.length/2),u=ex({inputs:n.slice(0,l),backend:t}),c=ex({inputs:n.slice(l),backend:t});return ex({inputs:[u,c],backend:t})}let o=n.map(l=>l.dtype).reduce((l,u)=>dr(l,u)),s=n.map(l=>l.shape),i=U().getBool("WEBGL_PACK")?new mk(n[0].shape,s):new pk(n[0].shape,s);return t.runWebGLProgram(i,n,o)}var A$={kernelName:Hn,backendName:"webgl",kernelFunc:ex};function Z8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=x.parseAxisParam(s,o.shape),u=l,c=T.getAxesPermutation(u,i),p=o;c!=null&&(p=Vt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,i)),T.assertAxesAreInnerMostDims("all",u,i);let[m,f]=T.computeOutAndReduceShapes(p.shape,u),d=x.sizeFromShape(f),h=me({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=In(h,h.dtype,"all",t),y;if(a){let b=T.expandShapeToKeepDim(m,l);y=me({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=me({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),y}var D$={kernelName:Gl,backendName:"webgl",kernelFunc:Z8};function J8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=x.parseAxisParam(s,o.shape),u=l,c=T.getAxesPermutation(u,i),p=o;c!=null&&(p=Vt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,i)),T.assertAxesAreInnerMostDims("any",u,i);let[m,f]=T.computeOutAndReduceShapes(p.shape,u),d=x.sizeFromShape(f),h=me({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=In(h,h.dtype,"any",t),y;if(a){let b=T.expandShapeToKeepDim(m,l);y=me({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=me({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),y}var $$={kernelName:Ul,backendName:"webgl",kernelFunc:J8};var fk=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var dk=class{constructor(e,t,n,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,x.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,l=i.length,u=Be(l),c=qt("coords",l),p,m;if(a===1){m=l+1;let F=Be(m);p=`
        ${F} sourceLocR = ${F}(${c.join()}, 0);
        ++${c[l-1]};
        ${F} sourceLocG = ${F}(${c.join()}, 0);
        ++${c[l-2]};
        ${F} sourceLocA = ${F}(${c.join()}, 0);
        --${c[l-1]};
        ${F} sourceLocB = ${F}(${c.join()}, 0);
        --${c[l-2]};`}else m=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),d="."+f[m-1],h=f.map(F=>"int "+F),g=qt("sourceLocR",m-1).concat("inIdx.r"),y=qt("sourceLocG",m-1).concat("inIdx.g"),b=qt("sourceLocB",m-1).concat("inIdx.b"),w=qt("sourceLocA",m-1).concat("inIdx.a"),_=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,E=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,N=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${i[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${i[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${E};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${E};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${_}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function R$(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=T.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},l=new fk(i,t,n==null),u=[e];n!=null&&u.push(n);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=R$(r,e,t,c);return r.disposeIntermediateTensorInfo(c),p}function F$(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],a=T.computeOptimalWindowSize(s),i=new dk(o,a,t,n==null),l=n==null?[e]:[e,n],u=r.runWebGLProgram(i,l,"int32");if(u.shape.length===e.shape.length){let c=F$(r,e,t,u);return r.disposeIntermediateTensorInfo(u),c}return u}function tx(r,e,t,n){let o=[t];if(T.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!U().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],[a,i]=T.computeOutAndReduceShapes(e.shape,o),l=x.sizeFromShape(i),u=me({inputs:{x:e},backend:r,attrs:{shape:[-1,l]}});s.push(u);let c=R$(r,u,n);s.push(c);let p=me({inputs:{x:c},backend:r,attrs:{shape:a}});return s.forEach(m=>r.disposeIntermediateTensorInfo(m)),p}return F$(r,e,n)}function Q8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=x.parseAxisParam(s,o.shape),i=T.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=Vt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=T.getInnerMostAxes(a.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[a[0]],l.shape.length);let c=tx(t,l,a[0],"max");return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var O$={kernelName:Kn,backendName:"webgl",kernelFunc:Q8};function eX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=x.parseAxisParam(s,o.shape),i=T.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=Vt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=T.getInnerMostAxes(a.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[a[0]],l.shape.length);let c=tx(t,l,a[0],"min");return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var P$={kernelName:na,backendName:"webgl",kernelFunc:eX};var tX=gr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,rX=Ce({opSnippet:tX}),M$={kernelName:Ks,backendName:"webgl",kernelFunc:rX};var nX=gr+"return log(x + sqrt(x * x + 1.0));",oX=Ce({opSnippet:nX}),L$={kernelName:Xs,backendName:"webgl",kernelFunc:oX};var sX=gr+`
  return atan(x);
`,iX=Ce({opSnippet:sX}),z$={kernelName:Ys,backendName:"webgl",kernelFunc:iX};var aX=d$+`
  return atan(a, b);
`,lX=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+h$+`
  return result;
`,uX=at({opSnippet:aX,packedOpSnippet:lX}),B$={kernelName:Js,backendName:"webgl",kernelFunc:uX};var cX=gr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,pX=Ce({opSnippet:cX}),V$={kernelName:Zs,backendName:"webgl",kernelFunc:pX};var ji=class{constructor(e,t,n,o=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(h||(b="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${l});
        const ivec2 pads = ivec2(${f}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:y:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",_=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(_="avgValue / count");let k=Math.floor(a/4)*4,E=a%4,N=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${f}, ${d});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${k};
          if (${E===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${E===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${E===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${_});
      }
    `}},tc=class{constructor(e,t,n,o=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,p=e.dilationHeight,m=e.dilationWidth,f=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let w=t==="avg",_="0.0";if(w||(_="-1.0 / 1e-20"),n){let P=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${l}, ${u});
        const ivec3 pads = ivec3(${g}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${d};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${P} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",E=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(E="avgValue / count");let N=Math.floor(a/4)*4,F=a%4,O=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${l}, ${u});
      const ivec3 pads = ivec3(${g}, ${y}, ${b});
      const float initializationValue = ${_};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${_});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${O}
            }

            int xC = xCCorner + ${N};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${O}
            }
          }
          setOutput(${E});
        }
      }
    `}};function mX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ds(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;x.assert(T.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=T.computePool2DInfo(o.shape,s,a,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&x.arraysEqual(c.inShape,c.outShape))return Ht({inputs:{x:o},backend:t});let p=new ji(c,"avg",!1);return t.runWebGLProgram(p,[o],"float32")}var W$={kernelName:Xn,backendName:"webgl",kernelFunc:mX};function fX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=n,c=[1,1,1],p=T.computePool3DInfo(o.shape,s,a,c,i,l,u),m=new tc(p,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var j$={kernelName:oa,backendName:"webgl",kernelFunc:fX};var hk=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,p=u-1-e.padInfo.left,m=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},gk=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterDepth,m=e.effectiveFilterHeight,f=e.effectiveFilterWidth,d=p-1-e.padInfo.front,h=m-1-e.padInfo.top,g=f-1-e.padInfo.left,y=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function dX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=n,p=[1,1,1],m=T.computePool3DInfo(a.shape,i,l,p,u,c),f=new gk(m);return t.runWebGLProgram(f,[o],a.dtype)}var G$={kernelName:Hl,backendName:"webgl",kernelFunc:dX};function hX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;Ds([o,s],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=n,c=T.computePool2DInfo(a.shape,i,l,1,u),p=new hk(c);return t.runWebGLProgram(p,[o],a.dtype)}var U$={kernelName:ql,backendName:"webgl",kernelFunc:hX};function gX(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return ec({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var q$={kernelName:Yn,backendName:"webgl",kernelFunc:gX};var xk=class{constructor(e,t,n,o,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="0.0";o!=null&&(T.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var yk=class{constructor(e,t,n,o,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";o!=null&&(T.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var xX=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;x.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),x.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),x.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);let u=[n,o,s],c=null;a!=null&&(c=a.shape,u.push(a));let p=null;i!=null&&(p=i.shape,u.push(i));let m=U().getBool("WEBGL_PACK_NORMALIZATION")?new yk(n.shape,o.shape,s.shape,c,p,l):new xk(n.shape,o.shape,s.shape,c,p,l);return e.runWebGLProgram(m,u,u[0].dtype)},H$={kernelName:io,backendName:"webgl",kernelFunc:xX};var bk=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=Be(this.rank),n=`uniform int start[${this.rank}];`,o=yX(this.rank),s,a=e.map((i,l)=>`sourceLoc.${wk[l]} = start[${l}] + coords.${wk[l]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      ${n}
      void main() {
        ${s}
        setOutput(getSource(${o}));
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}},wk=["x","y","z","w","u","v"];function yX(r){if(r===1)return"sourceLoc";if(r<=6)return wk.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var _k=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;let t=Be(this.rank),n=qt("coords",this.rank),o=qt("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,p)=>`start[${p}]`).join()});`:e.map((c,p)=>`${o[p]} = ${n[p]} + start[${p}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${l}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}};function bX(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.shape=t,a.dtype=r.dtype;let i=ir.computeFlatOffset(e,x.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let l=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,l+1),s}function Wa(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,l]=ir.parseSliceParams(o,s,a);if(ir.assertParamsValid(o,i,l),x.sizeFromShape(l)===0)return t.makeTensorInfo(l,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let p=t.texData.get(o.dataId),m=qD(p.values,i,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,m)}let{isPacked:u}=t.texData.get(o.dataId),c=ir.isSliceContinous(o.shape,i,l);if(u||!c){let p=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _k(l):new bk(l),m=p.getCustomSetupFunc(i);return t.runWebGLProgram(p,[o],o.dtype,m)}return t.uploadToGPU(o.dataId),bX(o,i,l,t)}var K$={kernelName:gs,backendName:"webgl",kernelFunc:Wa};var wX=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;x.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((b,w)=>b*w),l=T.getReshaped(o.shape,s,i),u=T.getPermuted(l.length,s.length),c=T.getReshapedPermuted(o.shape,s,i),p=T.getSliceBeginCoords(a,s.length),m=T.getSliceSize(c,a,s.length),f=[],d=me({inputs:{x:o},backend:t,attrs:{shape:l}}),h=Vt({inputs:{x:d},backend:t,attrs:{perm:u}}),g=me({inputs:{x:h},backend:t,attrs:{shape:c}}),y=Wa({inputs:{x:g},backend:t,attrs:{begin:p,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},X$={kernelName:sa,backendName:"webgl",kernelFunc:wX};function _X(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.readSync(o.dataId),l=t.readSync(s.dataId),u=qg(i,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var Y$={kernelName:Kl,backendName:"webgl",kernelFunc:_X};var vX="return float(a != b);",vk=at({opSnippet:vX,dtype:"bool"}),Z$={kernelName:yi,backendName:"webgl",kernelFunc:vk};function ja(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return Ht({inputs:{x:o.complexTensorInfos.real},backend:t})}var J$={kernelName:fu,backendName:"webgl",kernelFunc:ja};var kX="return float(int(x));";function Q$(r,e){let t=new sn(r.shape,kX),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function kk(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Ht({inputs:{x:o},backend:t});let a=pt(o.shape),i=kk({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),l=an({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),l}if(o.dtype==="complex64"){let a=ja({inputs:{input:o},backend:t}),i=kk({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!x.hasEncodingLoss(o.dtype,s)){let a=Ht({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return Q$(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",x.getTypedArrayFromDType("bool",1)),l=vk({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var eR={kernelName:On,backendName:"webgl",kernelFunc:kk};var tR="return ceil(x);",CX=Ce({opSnippet:tR,packedOpSnippet:tR,cpuKernelImpl:TD}),rR={kernelName:Qs,backendName:"webgl",kernelFunc:CX};var Ck=class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(e,t){return(n,o)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(o,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(o,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}};var Ik=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(e,t){return(n,o)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(o,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(o,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}};function IX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i;U().getBool("WEBGL_PACK_CLIP")?i=new Ik(o.shape):i=new Ck(o.shape);let l=i.getCustomSetupFunc(s,a);return t.runWebGLProgram(i,[o],o.dtype,l)}var nR={kernelName:Pn,backendName:"webgl",kernelFunc:IX};var Sk=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function oR(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function SX(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new Sk(n.shape),a=[oR(n,o.complexTensorInfos.real),oR(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var sR={kernelName:ia,backendName:"webgl",kernelFunc:SX};var Nk=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var Tk=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=Be(o),a=qt("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let l=new Array(e.length-1);l[0]=e[0][t];for(let h=1;h<l.length;h++)l[h]=l[h-1]+e[h][t];let u=i[t],c=i.slice(-2),p=i.join(),m=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let h=1;h<l.length;h++){let g=l[h-1];m+=`
        if (${u} < ${l[h]}  && ${u} >= ${l[h-1]}) {
          return getChannel(
            getT${h}(${rx(i,u,g)}),
            vec2(${rx(c,u,g)}));
        }`}let f=l.length,d=l[l.length-1];m+=`
        return getChannel(
          getT${f}(${rx(i,u,d)}),
          vec2(${rx(c,u,d)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function rx(r,e,t){let n=r.indexOf(e);return r.map((s,a)=>a===n?`${s} - ${t}`:s).join()}function rc(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return Ht({inputs:{x:o.complexTensorInfos.imag},backend:t})}var iR={kernelName:iu,backendName:"webgl",kernelFunc:rc};function nc(r,e,t){let n=r[0].dtype;if(n==="complex64"){let u=r.map(d=>ja({inputs:{input:d},backend:t})),c=r.map(d=>rc({inputs:{input:d},backend:t})),p=nc(u,e,t),m=nc(c,e,t),f=an({inputs:{real:p,imag:m},backend:t});return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),c.forEach(d=>t.disposeIntermediateTensorInfo(d)),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),f}if(n==="string"){let{tensors2D:u,outShape:c}=aR(r,e,t),p=u.map(g=>({vals:t.readSync(g.dataId),shape:g.shape})),m=u[0].shape[0]===1,f=ED(p,c,n,m),d=T.computeOutShape(r.map(g=>g.shape),e),h=t.makeTensorInfo(d,n,f);return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}if(r.length>U().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(r.length/2),c=nc(r.slice(0,u),e,t),p=nc(r.slice(u),e,t),m=nc([c,p],e,t);return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),m}if(U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let u=new Tk(r.map(c=>c.shape),e);return t.runWebGLProgram(u,r,n)}let{tensors2D:o,outShape:s}=aR(r,e,t),a=new Nk(o.map(u=>u.shape)),i=t.runWebGLProgram(a,o,n);o.forEach(u=>t.disposeIntermediateTensorInfo(u));let l=me({inputs:{x:i},attrs:{shape:s},backend:t});return t.disposeIntermediateTensorInfo(i),l}function aR(r,e,t){let n=T.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>me({inputs:{x:s},attrs:{shape:[-1,x.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function Ek(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=x.parseAxisParam(o,e[0].shape)[0],a=T.computeOutShape(e.map(u=>u.shape),s);if(x.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(u=>x.sizeFromShape(u.shape)>0);if(i.length===1)return Ht({inputs:{x:i[0]},backend:t});let l=i.map(u=>u.shape);return T.assertParamsConsistent(l,s),nc(i,s,t)}var lR={kernelName:as,backendName:"webgl",kernelFunc:Ek};var Nf=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,p=e.dilationWidth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,b=g?2:3,w=g?3:1,_="",k="";n&&(o?_=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?_=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:_=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let E=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${_}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${E}
        ${k}
        setOutput(result);
      }
    `}},Ak=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,p=e.filterDepth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Dk=class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let{filterWidth:o,inChannels:s,strideWidth:a,strideHeight:i,padInfo:l,outWidth:u,dilationWidth:c,dilationHeight:p,dataFormat:m}=n,{left:f,top:d}=l,h=s*o,g=Lt(),y=m==="channelsLast",b=y?0:1,w=y?1:2,_="";for(let k=0;k<=1;k++)for(let E=0;E<=1;E++)_+=`
          blockIndex = rc.y + ${E};
          pos = rc.x + ${k};

          if(blockIndex < ${e[1]} && pos < ${e[0]}) {
            offsetY = int(blockIndex / (${u})) * ${i} - ${d};
            d0 = offsetY + ${p} * (pos / ${h});

            if(d0 < ${t[b]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${f}.);
              d1 = offsetX + ${c} * (int(mod(float(pos), ${h}.) / ${s}.));

              if(d1 < ${t[w]} && d1 >= 0) {

                ch = int(mod(float(pos), ${s}.));

                if (${y}) {
                  innerDims = vec2(d1, ch);
                  result[${k*2+E}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${k*2+E}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${_}

        ${g.output} = result;
      }
    `}};function nx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let l=r.shape,u=n.texData.get(r.dataId),c=t.inChannels,p=l[0]*l[1]*l[2],m=t.outChannels,f=t.dataFormat==="channelsLast",d=!1,h=!1,g,y=[],b=(p===1||m===1)&&c>ck,w=l[2]%2!=0&&!!u.isPacked;if(b||!U().getBool("WEBGL_LAZILY_UNPACK")||!U().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!w){let _=f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],k=me({inputs:{x:r},backend:n,attrs:{shape:[1,_,t.inChannels]}}),E=me({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),N=ec({a:k,b:E,transposeA:d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=me({inputs:{x:N},backend:n,attrs:{shape:t.outShape}}),y.push(k),y.push(E),y.push(N)}else{let _=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),k={dataId:r.dataId,shape:[1,_,t.inChannels],dtype:r.dtype},E=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,x.assert(xl(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);let N=me({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(N);let F=ec({a:k,b:N,backend:n,transposeA:d,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),O=n.texData.get(F.dataId);x.assert(O.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=E,O.shape=t.outShape,g=Ht({inputs:{x:F},backend:n}),g.shape=t.outShape,y.push(F)}for(let _ of y)n.disposeIntermediateTensorInfo(_);return g}function ox({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:m,dataFormat:f}=t,d=f==="channelsLast",h=l*u*c,g=m*p,y=[h,g],b=!0,w=!1,_=[],k=me({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),E=me({inputs:{x:e},backend:n,attrs:{shape:[1,h,x.sizeFromShape(e.shape)/h]}});_.push(k),_.push(E);let N=new Dk(y,k.shape,t),F=n.runWebGLProgram(N,[k],"float32"),O=me({inputs:{x:F},backend:n,attrs:{shape:[1,y[0],y[1]]}});_.push(F),_.push(O);let P=o!=null,W=s!=null,G=i==="leakyrelu",j=i?bl(i,!0):null,X=new If(O.shape,E.shape,[1,g,t.outChannels],b,w,P,j,W,G),K=[O,E];if(o&&K.push(o),W&&K.push(s),G){let Q=n.makeTensorInfo([],"float32",x.createScalarValue(a,"float32"));K.push(Q),_.push(Q)}let Y=n.runWebGLProgram(X,K,"float32"),ne=d?[1,m,p,t.outChannels]:[1,t.outChannels,m,p],J=me({inputs:{x:Y},backend:n,attrs:{shape:ne}});_.push(Y);for(let Q of _)n.disposeIntermediateTensorInfo(Q);return J}function NX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=n,p=T.convertConv2DDataFormat(l),m=T.computeConv2DInfo(o.shape,s.shape,a,u,i,c,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=nx({x:o,filter:s,convInfo:m,backend:t});else if(U().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)f=ox({x:o,filter:s,convInfo:m,backend:t});else{let h=new Nf(m);f=t.runWebGLProgram(h,[o,s],"float32")}let d=me({inputs:{x:f},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(f),d}var uR={kernelName:Zn,backendName:"webgl",kernelFunc:NX};var $k=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Rk=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,l=n-1-e.padInfo.left,u=a?1:2,c=a?2:3,p=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Fk=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ok=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function TX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=n,p=T.convertConv2DDataFormat(l),m=T.computeConv2DInfo(o.shape,c,a,1,i,u,!1,p),f=new $k(m);return t.runWebGLProgram(f,[o,s],"float32")}var cR={kernelName:Yl,backendName:"webgl",kernelFunc:TX};function EX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=n,p=T.convertConv2DDataFormat(u),m=T.computeConv2DInfo(a,s.shape,i,1,l,c,!1,p),f=new Rk(m);return t.runWebGLProgram(f,[o,s],"float32")}var pR={kernelName:Jn,backendName:"webgl",kernelFunc:EX};function AX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l}=n,u=T.computeConv3DInfo(o.shape,s.shape,a,l,i),c=new Ak(u);return t.runWebGLProgram(c,[o,s],"float32")}var mR={kernelName:aa,backendName:"webgl",kernelFunc:AX};function DX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:l}=n,u=T.computeConv3DInfo(o.shape,l,a,1,i),c=new Fk(u);return t.runWebGLProgram(c,[o,s],"float32")}var fR={kernelName:Zl,backendName:"webgl",kernelFunc:DX};function $X(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:l}=n,u=T.computeConv3DInfo(l,s.shape,i,1,a),c=new Ok(u);return t.runWebGLProgram(c,[o,s],"float32")}var dR={kernelName:Jl,backendName:"webgl",kernelFunc:$X};var RX=Zg+`
  return cos(x);
`,FX=Ce({opSnippet:RX}),hR={kernelName:Qn,backendName:"webgl",kernelFunc:FX};var OX=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,PX=Ce({opSnippet:OX}),gR={kernelName:ei,backendName:"webgl",kernelFunc:PX};var Pk=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,i,l,u]=e,[c]=t,[p,m]=n;this.outputShape=[c,p,m,u];let f=o==="bilinear"?1:0,[d,h]=[`${i-1}.0`,`${l-1}.0`],[g,y,b]=p>1?[`${(i-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[w,_,k]=m>1?[`${(l-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${_};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var MX=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:u}=n,c=new Pk(o.shape,s.shape,i,l,u);return t.runWebGLProgram(c,[o,s,a],"float32")},xR={kernelName:ti,backendName:"webgl",kernelFunc:MX};var sx=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;let o=e.length,s=t?"0.0":`getX(${yR(o,"coords")})`,a=e[e.length-1],i="",l="";t?(i=n?`end != ${a-1}`:"end != 0",l=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",l=n?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${Be(o)} coords = getOutputCoords();
        int end = ${bR(o,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${l};
          ${bR(o,"coords")} = idx;
          val += getX(${yR(o,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.index==null&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}};function yR(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function bR(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function LX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,l=o.shape.length,u=T.getAxesPermutation([s],l),c=o;u!=null&&(c=Vt({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=T.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=${s}`);let m=o.shape[p],f=Ht({inputs:{x:c},backend:t});for(let d=0;d<=Math.ceil(Math.log2(m))-1;d++){let h=new sx(c.shape,!1,i),g=h.getCustomSetupFunc(d),y=f;f=t.runWebGLProgram(h,[f],f.dtype,g),t.disposeIntermediateTensorInfo(y)}if(a){let d=new sx(c.shape,a,i),h=f;f=t.runWebGLProgram(d,[f],f.dtype),t.disposeIntermediateTensorInfo(h)}if(u!=null){let d=T.getUndoAxesPermutation(u),h=Vt({inputs:{x:f},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(c),h}return f}var wR={kernelName:eo,backendName:"webgl",kernelFunc:LX};function zX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let l=t.readSync(o.dataId),u=t.readSync(s.dataId),c=qg(l,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,c)}else if(o.shape.length===2){let l=t.bufferSync(o),u=t.bufferSync(s),c=ND(l,u,a,i);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var _R={kernelName:Ql,backendName:"webgl",kernelFunc:zX};var Mk=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function BX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;x.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=o.shape[0],l=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],c=a==="NHWC"?o.shape[3]:o.shape[1],p=l*s,m=u*s,f=c/(s*s),d=a==="NHWC"?[i,p,m,f]:[i,f,p,m],h=new Mk(d,s,a);return t.runWebGLProgram(h,[o],o.dtype)}var vR={kernelName:ri,backendName:"webgl",kernelFunc:BX};var Tf=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.inHeight,i=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,p=e.strideWidth,m=e.dilationHeight,f=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,g=e.outChannels/e.inChannels,y="",b="";n&&(o?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${c}, ${p});
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${g};
        int q = d2 - d1 * ${g};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${m};

          if (xR < 0 || xR >= ${a}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${f};

            if (xC < 0 || xC >= ${i}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}};var Ef=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;let a=e.inHeight,i=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,p=e.strideWidth,m=e.dilationHeight,f=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,g=h,y="int xR; int xC; int xCOffset;";for(let k=0;k<d;k++)for(let E=0;E<h;E++)y+=`
          vec4 xTexelR${k}C${E*2} = vec4(0.);
          vec4 wR${k}C${E} = vec4(0.);
          vec4 xR${k}C${E} = vec4(0.);`;for(let k=0;k<d;k++)for(let E=0;E<g;E++){let N=E*2;if(y+=`
          xR = xRCorner + ${k*m};
          xC = xCCorner + ${N*f};
        `,p===1){if(N<h&&(u%2==1?y+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${k}C${N} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    xTexelR${k}C${N}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${k}C${N} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    previous.zw = vec2(0.);
                  }

                  xR${k}C${N} = vec4(previous.zw, xTexelR${k}C${N}.xy);
                } else {
                  xR${k}C${N} = vec4(0, 0, xTexelR${k}C${N}.xy);
                }
              `:y+=`
                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {
                  xTexelR${k}C${N} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${k}C${N} = vec4(0.);
                }

                xR${k}C${N} = xTexelR${k}C${N};
              `,N+1<h)){let F=u%2==0?x.nearestLargerEven(f):f;f%2==0&&u%2==1||f%2!=0&&u%2!=1?(y+=`
                  xCOffset = xC + ${u%2} + ${F};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${k}C${N+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,f>1&&(y+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${a} &&
                      xCOffset >= 0 && xCOffset < ${i}) {
                      xTexelR${k}C${N} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${k}C${N} = vec4(0.);
                    }
                  `),y+=`
                  xR${k}C${N+1} = vec4(
                    xTexelR${k}C${N}.zw, xTexelR${k}C${N+2}.xy);
                `):y+=`
                  xCOffset = xC + ${F};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${k}C${N+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${k}C${N+1} = xTexelR${k}C${N+2};
                `}}else N<h&&(y+=`
              if(xR >= 0 && xR < ${a}) {
            `,u%2==1?(y+=`
                xCOffset = xC + 1 - ${p};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${k}C${N} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${k}C${N} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${i}) {
                  xTexelR${k}C${N+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${k}C${N+2} = vec4(0.);
                }

                xR${k}C${N} = vec4(
                  xTexelR${k}C${N}.zw, xTexelR${k}C${N+2}.zw);
              `,N+1<h&&(y+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${p};
                  if(xCOffset >= 0 && xCOffset < ${i}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${k}C${N+1} = vec4(xTexelR${k}C${N+2}.xy, final.xy);
                `)):(y+=`
                if(xC >= 0 && xC < ${i}) {
                  xTexelR${k}C${N} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${k}C${N} = vec4(0.);
                }

                xCOffset = xC + ${p};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${k}C${N+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${k}C${N+2} = vec4(0.);
                }

                xR${k}C${N} = vec4(
                  xTexelR${k}C${N}.xy, xTexelR${k}C${N+2}.xy);
              `,N+1<h&&(y+=`
                  xR${k}C${N+1} = vec4(
                    xTexelR${k}C${N}.zw, xTexelR${k}C${N+2}.zw);
                `)),y+="}");N<h&&(y+=`
            vec4 wTexelR${k}C${N} = getW(${k}, ${N}, d1, q);
            wR${k}C${N} = vec4(wTexelR${k}C${N}.xz, wTexelR${k}C${N}.xz);
          `,N+1<h&&(y+=`
              vec4 wTexelR${k}C${N+1} = getW(${k}, ${N+1}, d1, q);
              wR${k}C${N+1} =
                vec4(wTexelR${k}C${N+1}.xz, wTexelR${k}C${N+1}.xz);`))}for(let k=0;k<d;k++)for(let E=0;E<h;E++)y+=`dotProd += xR${k}C${E} * wR${k}C${E};`;let b="",w="";n&&(o?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:b=`vec4 activation(vec4 x) {
          ${n}
        }`,w="result = activation(result);");let _=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${c}, ${p});
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${y}

        vec4 result = dotProd;
        ${_}
        ${w}
        setOutput(result);
      }
    `}};function VX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=n,c=l;c==null&&(c=[1,1]),x.assert(T.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let p=T.computeConv2DInfo(o.shape,s.shape,a,c,i,u,!0),m;return U().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?m=new Ef(p):m=new Tf(p),t.runWebGLProgram(m,[o,s],"float32")}var kR={kernelName:to,backendName:"webgl",kernelFunc:VX};var Lk=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},zk=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function WX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=n,p=T.computeConv2DInfo(o.shape,c,a,i,l,u,!0),m=new Lk(p);return t.runWebGLProgram(m,[o,s],"float32")}var CR={kernelName:eu,backendName:"webgl",kernelFunc:WX};function jX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=n,p=T.computeConv2DInfo(c,s.shape,a,i,l,u,!0),m=new zk(p);return t.runWebGLProgram(m,[o,s],"float32")}var IR={kernelName:tu,backendName:"webgl",kernelFunc:jX};var Bk=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function GX(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=x.sizeFromShape(n.shape),a=me({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new Bk(s),l=t.runWebGLProgram(i,[a],a.dtype),u=me({inputs:{x:l},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}var SR={kernelName:ru,backendName:"webgl",kernelFunc:GX};var Vk=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:p,left:m}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function UX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l}=n,u=T.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",l),c,p=new Vk(u);c=t.runWebGLProgram(p,[o,s],"float32");let m=me({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),m}var NR={kernelName:la,backendName:"webgl",kernelFunc:UX};var qX="return (x >= 0.0) ? x : (exp(x) - 1.0);",HX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,KX=Ce({opSnippet:qX,packedOpSnippet:HX}),TR={kernelName:ni,backendName:"webgl",kernelFunc:KX};var XX="return (b >= 1.0) ? a : a * (b + 1.0);",YX=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,ZX=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fs(YX,n.shape,o.shape):new Ko(XX,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},ER={kernelName:nu,backendName:"webgl",kernelFunc:ZX};var JX=`
  return vec4(equal(a, b));
`,QX="return float(a == b);",e7=at({opSnippet:QX,packedOpSnippet:JX,dtype:"bool"}),AR={kernelName:si,backendName:"webgl",kernelFunc:e7};var t7=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,r7=Ce({opSnippet:t7}),DR={kernelName:oi,backendName:"webgl",kernelFunc:r7};var $R="return exp(x);",Wk=Ce({opSnippet:$R,packedOpSnippet:$R,cpuKernelImpl:AD}),RR={kernelName:no,backendName:"webgl",kernelFunc:Wk};function ix(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),l=o;return o<0&&(x.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+o+1),i.splice(l,0,1),me({inputs:{x:s},backend:n,attrs:{shape:i}})}var FR={kernelName:ls,backendName:"webgl",kernelFunc:ix};var OR="return exp(x) - 1.0;",n7=Ce({opSnippet:OR,packedOpSnippet:OR,cpuKernelImpl:DD}),PR={kernelName:ii,backendName:"webgl",kernelFunc:n7};var ax=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function lx(r,e,t){let n=t.texData.get(r.dataId),o=x.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,l=me({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}).shape,u=new ax("real",l,e),c=new ax("imag",l,e),p=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],m=t.runWebGLProgram(u,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),d=an({inputs:{real:m,imag:f},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f);let h=me({inputs:{x:d},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(h),h}function o7(r){let{inputs:e,backend:t}=r,{input:n}=e;return lx(n,!1,t)}var MR={kernelName:ou,backendName:"webgl",kernelFunc:o7};var jk=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}};function Af(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||x.inferDtype(o),s==="string"){let a=x.getArrayFromDType(s,x.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new jk(n,o),i=a.getCustomSetupFunc(o);return e.runWebGLProgram(a,[],s,i)}}var LR={kernelName:ua,backendName:"webgl",kernelFunc:Af};var Gk=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var zR={kernelName:ai,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new Gk(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var BR="return floor(x);",s7=Ce({opSnippet:BR,packedOpSnippet:BR,cpuKernelImpl:$D}),VR={kernelName:oo,backendName:"webgl",kernelFunc:s7};var i7=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,a7=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,l7=at({opSnippet:i7,packedOpSnippet:a7,dtype:"int32"}),WR={kernelName:so,backendName:"webgl",kernelFunc:l7};var Uk=class{constructor(e){this.variableNames=["A"];let t=Lt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var qk=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Lt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var jR={kernelName:Mc,backendName:"webgl",kernelFunc:u7},vp;function u7(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,a=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,l=typeof ImageBitmap!="undefined"&&o instanceof ImageBitmap,[u,c]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[c,u],m=[c,u,s];(i||a||l)&&(vp==null&&(vp=document.createElement("canvas").getContext("2d")),vp.canvas.width=u,vp.canvas.height=c,vp.drawImage(o,0,0,u,c),o=vp.canvas);let f=t.makeTensorInfo(p,"int32");t.texData.get(f.dataId).usage=$r.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(f.dataId),o);let d=U().getBool("WEBGL_PACK")?new qk(m):new Uk(m),h=t.runWebGLProgram(d,[f],"int32");return t.disposeData(f.dataId),h}function c7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=T.convertConv2DDataFormat(c),g=T.computeConv2DInfo(o.shape,s.shape,l,p,u,m,!1,h),y,b=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=nx({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else if(U().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)y=ox({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else{let _=a!=null,k=i!=null,E=f==="leakyrelu",N=f?bl(f,!1):null,F=new Nf(g,_,N,k,E),O=[o,s];if(a&&O.push(a),i&&O.push(i),E){let P=t.makeTensorInfo([],"float32",x.createScalarValue(d,"float32"));O.push(P),b.push(P)}y=t.runWebGLProgram(F,O,"float32")}let w=me({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return b.push(y),b.forEach(_=>t.disposeIntermediateTensorInfo(_)),w}var GR={kernelName:_s,backendName:"webgl",kernelFunc:c7};function p7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=n,d=[],h=c;h==null&&(h=[1,1]),x.assert(T.eitherStridesOrDilationsAreOne(l,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`);let g=T.computeConv2DInfo(o.shape,s.shape,l,h,u,p,!0),y=U().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=m?bl(m,y):null,w=[o,s],_=a!=null,k=i!=null,E=m==="leakyrelu";if(_&&w.push(a),k&&w.push(i),E){let O=t.makeTensorInfo([],"float32",x.createScalarValue(f,"float32"));w.push(O),d.push(O)}let N;y?N=new Ef(g,_,b,k,E):N=new Tf(g,_,b,k,E);let F=t.runWebGLProgram(N,w,"float32");return d.forEach(O=>t.disposeIntermediateTensorInfo(O)),F}var UR={kernelName:vs,backendName:"webgl",kernelFunc:p7};var Hk=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let o=Be(t.length),s=Be(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function m7(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],[i,l,u,c]=T.prepareAndValidate(n,o),p=me({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),m=me({inputs:{x:n},backend:t,attrs:{shape:[x.sizeFromShape(n.shape)/u,u]}}),f=new Hk(a,c,[l,u]),d=t.runWebGLProgram(f,[m,p],m.dtype),h=me({inputs:{x:d},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(d),h}var qR={kernelName:li,backendName:"webgl",kernelFunc:m7};var Kk=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=Be(this.rank),o=f7(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}};function f7(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("int(getIndices(resRC.x, resRC.z))"):n.push(`${t[o]}`);return n.join()}function d7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,l=x.parseAxisParam(a,o.shape)[0],u=T.segment_util.collectGatherOpShapeInfo(o,s,l,i),c=x.sizeFromShape(s.shape),p=[],m=me({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=me({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(m),p.push(f);let d=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let b=t.bufferSync(f),w=t.bufferSync(m),_=RD(w,b,d);return p.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(u.outputShape,_.dtype,_.values)}let h=new Kk(m.shape,d),g=t.runWebGLProgram(h,[m,f],m.dtype);p.push(g);let y=me({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),y}var HR={kernelName:us,backendName:"webgl",kernelFunc:d7};var h7="return float(a > b);",g7=`
  return vec4(greaterThan(a, b));
`,x7=at({opSnippet:h7,packedOpSnippet:g7,cpuKernelImpl:FD,dtype:"bool"}),KR={kernelName:ui,backendName:"webgl",kernelFunc:x7};var y7="return float(a >= b);",b7=`
  return vec4(greaterThanEqual(a, b));
`,w7=at({opSnippet:y7,packedOpSnippet:b7,dtype:"bool"}),XR={kernelName:ao,backendName:"webgl",kernelFunc:w7};function _7(r){let{inputs:e,backend:t}=r,{input:n}=e;return lx(n,!0,t)}var YR={kernelName:su,backendName:"webgl",kernelFunc:_7};var v7="return float(!isnan(x) && !isinf(x));",k7=Ce({opSnippet:v7,dtype:"bool"}),ZR={kernelName:ci,backendName:"webgl",kernelFunc:k7};var C7="return float(isinf(x));",I7=Ce({opSnippet:C7,dtype:"bool"}),JR={kernelName:pi,backendName:"webgl",kernelFunc:I7};var S7="return float(isnan(x));",N7=Ce({opSnippet:S7,dtype:"bool"}),QR={kernelName:mi,backendName:"webgl",kernelFunc:N7};var T7="return float(a < b);",E7=`
  return vec4(lessThan(a, b));
`,A7=at({opSnippet:T7,packedOpSnippet:E7,cpuKernelImpl:OD,dtype:"bool"}),eF={kernelName:fi,backendName:"webgl",kernelFunc:A7};var D7="return float(a <= b);",$7=`
  return vec4(lessThanEqual(a, b));
`,R7=at({opSnippet:D7,packedOpSnippet:$7,dtype:"bool"}),tF={kernelName:di,backendName:"webgl",kernelFunc:R7};function F7(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=PD(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var rF={kernelName:au,backendName:"webgl",kernelFunc:F7};var O7=`if (x < 0.0) return NAN;
  return log(x);`,P7=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,M7=Ce({opSnippet:O7,packedOpSnippet:P7,cpuKernelImpl:MD}),nF={kernelName:uo,backendName:"webgl",kernelFunc:M7};var L7="return log(1.0 + x);",z7=Ce({opSnippet:L7}),oF={kernelName:hi,backendName:"webgl",kernelFunc:z7};var B7="return float(a >= 1.0 && b >= 1.0);",V7=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,W7=at({opSnippet:B7,packedOpSnippet:V7,dtype:"bool"}),sF={kernelName:gi,backendName:"webgl",kernelFunc:W7};var j7="return float(!(x >= 1.0));",G7=Ce({opSnippet:j7}),iF={kernelName:tl,backendName:"webgl",kernelFunc:G7};var U7="return float(a >= 1.0 || b >= 1.0);",q7=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,H7=at({opSnippet:U7,packedOpSnippet:q7,dtype:"bool"}),aF={kernelName:rl,backendName:"webgl",kernelFunc:H7};var Xk=class{constructor(e,t,n,o,s){this.variableNames=["x"],this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let l,u=`float(${n}) + float(${o}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var Yk=class{constructor(e,t,n,o,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let l,u=`float(${n}) + float(${o}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var K7=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:l}=n,u=U().getBool("WEBGL_PACK_NORMALIZATION")?new Yk(o.shape,s,a,i,l):new Xk(o.shape,s,a,i,l);return t.runWebGLProgram(u,[o],o.dtype)},lF={kernelName:ca,backendName:"webgl",kernelFunc:K7};var Zk=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var X7=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=n,p=new Zk(o.shape,i,l,u,c);return t.runWebGLProgram(p,[o,s,a],o.dtype)},uF={kernelName:lu,backendName:"webgl",kernelFunc:X7};function cF(r,e,t,n){let o=x.sizeFromShape(e),a=x.sizeFromShape(r.shape)/o,i=me({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),l=In(i,r.dtype,"max",n),u=me({inputs:{x:l},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}function Jk(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,l=x.parseAxisParam(s,o.shape),u=l,c=T.getAxesPermutation(u,i),p=c!=null,m=t.shouldExecuteOnCPU([o]),f=o;if(p){if(m){let w=t.texData.get(f.dataId).values,_=new Array(i);for(let N=0;N<_.length;N++)_[N]=o.shape[c[N]];let k=_p(w,o.shape,o.dtype,c,_);f=t.makeTensorInfo(_,o.dtype);let E=t.texData.get(f.dataId);E.values=k}else f=wl(o,c,t);u=T.getInnerMostAxes(u.length,i)}T.assertAxesAreInnerMostDims("max",u,i);let[d,h]=T.computeOutAndReduceShapes(f.shape,u),g=d;a&&(g=T.expandShapeToKeepDim(d,l));let y;if(m){let w=t.texData.get(f.dataId).values,_=LD(w,x.sizeFromShape(h),g,o.dtype);y=t.makeTensorInfo(g,o.dtype);let k=t.texData.get(y.dataId);k.values=_}else y=cF(f,h,g,t);return p&&t.disposeIntermediateTensorInfo(f),y}var pF={kernelName:co,backendName:"webgl",kernelFunc:Jk};var Y7=Yg+`
  return max(a, b);
`,Z7=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+yl+`
  return result;
`,J7=at({opSnippet:Y7,packedOpSnippet:Z7,cpuKernelImpl:zD}),mF={kernelName:po,backendName:"webgl",kernelFunc:J7};function Q7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ds(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;x.assert(T.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=T.computePool2DInfo(o.shape,s,a,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&x.arraysEqual(c.inShape,c.outShape))return Ht({inputs:{x:o},backend:t});let p=new ji(c,"max",!1);return t.runWebGLProgram(p,[o],o.dtype)}var fF={kernelName:mo,backendName:"webgl",kernelFunc:Q7};function eY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:l,dimRoundingMode:u}=n,c=[1,1,1],p=T.computePool3DInfo(o.shape,s,a,c,i,u,l),m=new tc(p,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var dF={kernelName:pa,backendName:"webgl",kernelFunc:eY};var Qk=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,l=a-1-e.padInfo.left,u=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},e0=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,p=l-1-e.padInfo.front,m=u-1-e.padInfo.top,f=c-1-e.padInfo.left,d=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${d} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function tY(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=n,p=[1,1,1],m=T.computePool3DInfo(a.shape,i,l,p,u,c),f=new tc(m,"max",!0),d=t.runWebGLProgram(f,[a],a.dtype),h=new e0(m),g=t.runWebGLProgram(h,[o,d],a.dtype);return t.disposeIntermediateTensorInfo(d),g}var hF={kernelName:cu,backendName:"webgl",kernelFunc:tY};function rY(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;Ds([s,a],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=n,m=T.computePool2DInfo(i.shape,l,u,1,c,p),f=!0,d=new ji(m,"max",f),h=t.runWebGLProgram(d,[i],i.dtype),g=new Qk(m),y=t.runWebGLProgram(g,[o,h],i.dtype);return t.disposeIntermediateTensorInfo(h),y}var gF={kernelName:uu,backendName:"webgl",kernelFunc:rY};function xF(r,e,t,n){let o=new ji(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new ji(t,"max",!0,!0,e);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var yF={kernelName:pu,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,l=t;x.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];x.assert(T.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=T.computePool2DInfo(n.shape,o,s,u,a),[p,m]=xF(n,i,c,l);return[p,m]}};function bF(r,e,t,n){let o=x.sizeFromShape(e),a=x.sizeFromShape(r.shape)/o,i=me({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),l=In(i,"float32","mean",n),u=me({inputs:{x:l},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var wF={kernelName:fo,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,a=t,i=n.shape.length,l=x.parseAxisParam(s,n.shape),u=l,c=T.getAxesPermutation(u,i),p=c!=null,m=a.shouldExecuteOnCPU([n]),f=[],d=n;if(p){if(m){let _=a.texData.get(d.dataId).values,k=new Array(i);for(let F=0;F<k.length;F++)k[F]=n.shape[c[F]];let E=_p(_,n.shape,n.dtype,c,k);d=a.makeTensorInfo(k,n.dtype);let N=a.texData.get(d.dataId);N.values=E}else d=wl(n,c,a);f.push(d),u=T.getInnerMostAxes(u.length,i)}T.assertAxesAreInnerMostDims("sum",u,i);let[h,g]=T.computeOutAndReduceShapes(d.shape,u),y=h;o&&(y=T.expandShapeToKeepDim(h,l));let b=bF(d,g,y,a);for(let w of f)a.disposeIntermediateTensorInfo(w);return b}};function nY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=x.parseAxisParam(s,o.shape),u=l,c=T.getAxesPermutation(u,i),p=o;c!=null&&(p=Vt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,o.shape.length)),T.assertAxesAreInnerMostDims("min",u,i);let[m,f]=T.computeOutAndReduceShapes(p.shape,u),d=x.sizeFromShape(f),h=me({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=In(h,h.dtype,"min",t),y;if(a){let b=T.expandShapeToKeepDim(m,l);y=me({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=me({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),y}var _F={kernelName:ho,backendName:"webgl",kernelFunc:nY};var oY=Yg+`
  return min(a, b);
`,sY=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+yl+`
  return result;
`,iY=at({opSnippet:oY,packedOpSnippet:sY,cpuKernelImpl:BD}),vF={kernelName:go,backendName:"webgl",kernelFunc:iY};var t0=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,p)=>c[0]+e[p]+c[1]);let o=e.length,s=Be(o),a=t.map(c=>c[0]).join(","),i=t.map((c,p)=>c[0]+e[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var r0=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((d,h)=>d[0]+e[h]+d[1]);let o=e.length,s=Be(o),a=t.map(d=>d[0]).join(","),i=t.map((d,h)=>d[0]+e[h]).join(","),l=qt("rc",o),u=qt("source",o),c=`${l[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${u.slice(-2).join()})`,m=n==="reflect"?0:1,f="";if(o===1){let d=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let d=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[o-2]} += 1;
        if(${l[o-2]} < ${this.outputShape[o-2]}) {
          ${d}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[o-1]} += 1;
          if(${c}) {
            ${d}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var aY=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new r0(n.shape,o,s):new t0(n.shape,o,s);return e.runWebGLProgram(a,[n],n.dtype)},kF={kernelName:ma,backendName:"webgl",kernelFunc:aY};var lY=`if (b == 0.0) return NAN;
  return mod(a, b);`,uY=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+yl+`
  return result;
`,cY=at({opSnippet:lY,packedOpSnippet:uY}),CF={kernelName:xi,backendName:"webgl",kernelFunc:cY};var n0=class{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.seedLoc==null&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}};var pY=`
if (a == b) {
  return 1.0;
};
return a / b;`,mY=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,o0=at({opSnippet:pY,packedOpSnippet:mY,checkOutOfBounds:!0}),IF={kernelName:ro,backendName:"webgl",kernelFunc:o0};var SF="return a - b;",s0=at({opSnippet:SF,packedOpSnippet:SF,supportsComplex:!0,cpuKernelImpl:KD}),NF={kernelName:Fo,backendName:"webgl",kernelFunc:s0};function i0(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=x.parseAxisParam([s],o.shape),i=Jk({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,a),u=me({inputs:{x:i},backend:t,attrs:{shape:l}}),c=s0({inputs:{a:o,b:u},backend:t}),p=Wk({inputs:{x:c},backend:t}),m=Sf({inputs:{x:p},backend:t,attrs:{axis:a,keepDims:!1}}),f=me({inputs:{x:m},backend:t,attrs:{shape:l}}),d=o0({inputs:{a:p,b:f},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}var TF={kernelName:$o,backendName:"webgl",kernelFunc:i0};function fY(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,l=i?o:i0({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new n0(u,c,s),m=p.getCustomSetupFunc(a),f=t.runWebGLProgram(p,[l],"int32",m);return i||t.disposeIntermediateTensorInfo(l),f}var EF={kernelName:mu,backendName:"webgl",kernelFunc:fY};var AF="return -x;";function dY(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[a,i]=WD(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return U().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Rs(n.shape,AF):o=new sn(n.shape,AF),t.runWebGLProgram(o,[n],n.dtype)}var DF={kernelName:ps,backendName:"webgl",kernelFunc:dY};var hY=Ar.nonMaxSuppressionV3Impl;function gY(r){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=n,u=t.readSync(o.dataId),c=t.readSync(s.dataId),{selectedIndices:p}=hY(u,c,a,i,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var $F={kernelName:bi,backendName:"webgl",kernelFunc:gY};var xY=Ar.nonMaxSuppressionV4Impl;function yY(r){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=n,c=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=xY(c,p,a,i,l,u);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var RF={kernelName:wi,backendName:"webgl",kernelFunc:yY};var bY=Ar.nonMaxSuppressionV5Impl;function wY(r){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=n,c=t.readSync(o.dataId),p=t.readSync(s.dataId),m=a,f=i,d=l,h=u,{selectedIndices:g,selectedScores:y}=bY(c,p,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var FF={kernelName:_i,backendName:"webgl",kernelFunc:wY};var a0=class{constructor(e,t,n,o){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var _Y=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,l=x.sizeFromShape(o.shape),u=new a0(l,s,a,i),c=me({inputs:{x:o},backend:t,attrs:{shape:[l]}}),p=t.runWebGLProgram(u,[c],o.dtype);t.disposeIntermediateTensorInfo(c);let m=[...o.shape,s],f=me({inputs:{x:p},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(p),f},OF={kernelName:yo,backendName:"webgl",kernelFunc:_Y};function Df(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=ja({inputs:{input:n},backend:t}),s=Df({inputs:{x:o},backend:t}),a=rc({inputs:{input:n},backend:t}),i=Df({inputs:{x:a},backend:t}),l=an({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return Af({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var PF={kernelName:bs,backendName:"webgl",kernelFunc:Df};function MF(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=ja({inputs:{input:n},backend:t}),s=MF({inputs:{x:o},backend:t}),a=rc({inputs:{input:n},backend:t}),i=Df({inputs:{x:a},backend:t}),l=an({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return Af({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var LF={kernelName:ms,backendName:"webgl",kernelFunc:MF};function vY(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return ix({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(c=>{x.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),x.assert(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=e.map(c=>{let p=ix({inputs:{input:c},backend:t,attrs:{dim:o}});return i.push(p),p}),u=Ek({inputs:l,backend:t,attrs:{axis:o}});return i.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}var zF={kernelName:fs,backendName:"webgl",kernelFunc:vY};var l0=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let o=e.length,s=Be(o),a=t.map(u=>u[0]).join(","),i=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${n}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${n}));
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var u0=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=Be(o),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),l=qt("rc",o),u=qt("source",o),c=`${l[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${u.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${l[o-1]} += 1;
       if(${c}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${l[o-2]} += 1;
       if(${l[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${l[o-1]} += 1;
         if(${c}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="";for(let h=0,g=o===1?2:4;h<g;h++)d+=`
        ${m[h]}
        if (${f}) {
          result[${h}] = float(${n});
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${u.join()}), ${p});
        }
      `;d+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var c0=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n,i=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new u0(o.shape,s,a):new l0(o.shape,s,a);return t.runWebGLProgram(i,[o],o.dtype)},BF={kernelName:bo,backendName:"webgl",kernelFunc:c0};var kY=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,CY=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+yl+`
  return result;
`,IY=at({opSnippet:kY,packedOpSnippet:CY}),VF={kernelName:wo,backendName:"webgl",kernelFunc:IY};function SY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=[],u=x.parseAxisParam(s,o.shape),c=u,p=T.getAxesPermutation(c,i),m=o;p!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}),c=T.getInnerMostAxes(c.length,i),l.push(m)),T.assertAxesAreInnerMostDims("prod",c,i);let f;if(t.shouldExecuteOnCPU([m])){let d=t.texData.get(m.dataId).values,{outVals:h,outShape:g,outDtype:y}=jD(m.shape,m.dtype,d,c);f=t.makeTensorInfo(g,y,h)}else{let[d,h]=T.computeOutAndReduceShapes(m.shape,c),g=x.sizeFromShape(h),y=me({inputs:{x:m},backend:t,attrs:{shape:[-1,g]}}),b=yu(o.dtype),w=In(y,b,"prod",t);f=me({inputs:{x:w},backend:t,attrs:{shape:d}}),l.push(y),l.push(w)}if(a){l.push(f);let d=T.expandShapeToKeepDim(f.shape,u);f=me({inputs:{x:f},backend:t,attrs:{shape:d}})}return l.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var WF={kernelName:vi,backendName:"webgl",kernelFunc:SY};var p0=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=GD(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},jF={kernelName:fa,backendName:"webgl",kernelFunc:p0};var NY="return 1.0 / x;",TY=Ce({opSnippet:NY}),GF={kernelName:ki,backendName:"webgl",kernelFunc:TY};var EY=gr+`
  return (x < 0.0) ? 0.0 : x;
`,AY=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,DY=Ce({opSnippet:EY,packedOpSnippet:AY}),UF={kernelName:vo,backendName:"webgl",kernelFunc:DY};var $Y=gr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,RY=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,FY=Ce({opSnippet:$Y,packedOpSnippet:RY}),qF={kernelName:Co,backendName:"webgl",kernelFunc:FY};var m0=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,n,u];let c=[o&&t>1?i-1:i,o&&n>1?l-1:l],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var f0=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,n,u];let c=[o&&t>1?i-1:i,o&&n>1?l-1:l],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function OY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[l,u]=i,c=U().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new f0(o.shape,l,u,s,a):new m0(o.shape,l,u,s,a);return t.runWebGLProgram(c,[o],"float32")}var HF={kernelName:ko,backendName:"webgl",kernelFunc:OY};var d0=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,o,s]=t,[,a,i]=e,l=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function PY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new d0(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var KF={kernelName:hu,backendName:"webgl",kernelFunc:PY};var h0=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,n,u];let c=[o&&t>1?i-1:i,o&&n>1?l-1:l],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};function MY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[l,u]=i,c=new h0(o.shape,l,u,s,a);return t.runWebGLProgram(c,[o],o.dtype)}var XF={kernelName:da,backendName:"webgl",kernelFunc:MY};var g0=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,o,s]=t,[,a,i]=e,l=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function LY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new g0(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var YF={kernelName:du,backendName:"webgl",kernelFunc:LY};var x0=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,l)=>o(l)).join(","),a=Be(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var y0=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=qt("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Be(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(o.slice())};
          if(${s}){
            result.g = ${u(o.slice())};
          }
          if(${a}) {
            result.b = ${c(o.slice())};
            if(${s}) {
              result.a = ${p(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(d){return m(d)}function u(d){return d[n-1]="("+d[n-1]+" + 1)",m(d)}function c(d){return d[n-2]="("+d[n-2]+" + 1)",m(d)}function p(d){return d[n-1]="("+d[n-1]+" + 1)",d[n-2]="("+d[n-2]+" + 1)",m(d)}function m(d){let h=e.map((b,w)=>f(w,d)),g=h.join(","),y=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function f(d,h){return t.indexOf(d)!==-1&&e[d]!==1?`${e[d]} - ${h[d]} - 1`:`${h[d]}`}}};function zY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length,i=x.parseAxisParam(s,o.shape);if(a===0)return Ht({inputs:{x:o},backend:t});let l=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new y0(o.shape,i):new x0(o.shape,i);return t.runWebGLProgram(l,[o],o.dtype)}var ZF={kernelName:Io,backendName:"webgl",kernelFunc:zY};var b0=class{constructor(e,t,n,o){this.variableNames=["Image"],this.outputShape=[];let s=e[1],a=e[2],i=Math.sin(t).toFixed(3),l=Math.cos(t).toFixed(3);this.outputShape=e;let[u,c]=T.getImageCenter(o,s,a),p=u.toFixed(3),m=c.toFixed(3),f="";typeof n=="number"?f=`float outputValue = ${n.toFixed(2)};`:f=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${p}) * ${l} - (float(y) - ${m}) * ${i};
          float coordYFloat = (float(x) - ${p}) * ${i} + (float(y) - ${m}) * ${l};
          int coordX = int(round(coordXFloat + ${p}));
          int coordY = int(round(coordYFloat + ${m}));
          ${f}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var JF={kernelName:Ri,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,l=new b0(n.shape,o,s,a);return i.runWebGLProgram(l,[n],n.dtype)}};var BY=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,VY=Ce({opSnippet:BY}),QF={kernelName:So,backendName:"webgl",kernelFunc:VY};var WY="return inversesqrt(x);",jY=Ce({opSnippet:WY,cpuKernelImpl:UD}),eO={kernelName:No,backendName:"webgl",kernelFunc:jY};var $f=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let l=Be(s.length),u=Be(a.length),c="";n===1?c="i":n===2&&(c="i, j");let p=`getIndices(${c})`,m="";o===1?m="i":o===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,d=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${d};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function GY(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(s,o,a),m=[p/u,u];if(p===0)return t.makeTensorInfo(a,o.dtype);let f=me({inputs:{x:o},backend:t,attrs:{shape:[l,i]}}),d=me({inputs:{x:s},backend:t,attrs:{shape:[l,u]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new $f(l,i,f.shape.length,d.shape.length,c,m),y=t.runWebGLProgram(g,[d,f,h],d.dtype),b=me({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),b}var tO={kernelName:Ci,backendName:"webgl",kernelFunc:GY};var w0=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${i[c]}`),c<e&&l.push(`${i[c]}`);o=l.join(),s=u.join()}let a=Be(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function UY(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new w0(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,s],dr(o.dtype,s.dtype))}var rO={kernelName:hs,backendName:"webgl",kernelFunc:UY};var qY=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,HY=Ce({opSnippet:qY}),nO={kernelName:Ii,backendName:"webgl",kernelFunc:HY};var KY="return 1.0 / (1.0 + exp(-1.0 * x));",XY=Ce({opSnippet:KY}),oO={kernelName:Eo,backendName:"webgl",kernelFunc:XY};var YY=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,ZY=Ce({opSnippet:YY}),sO={kernelName:Ni,backendName:"webgl",kernelFunc:ZY};var JY=Zg+`
  return sin(x);
`,QY=Ce({opSnippet:JY}),iO={kernelName:To,backendName:"webgl",kernelFunc:QY};var e9=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,t9=Ce({opSnippet:e9}),aO={kernelName:Si,backendName:"webgl",kernelFunc:t9};var r9=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,n9=Ce({opSnippet:r9}),lO={kernelName:Ti,backendName:"webgl",kernelFunc:n9};var o9=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;x.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...a);for(let y=1+s.length;y<o.shape.length;++y)l.push([0,0]);let u=[],c=c0({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(c.shape,s,i,!1),m=T.getPermuted(p.length,s.length,!1),f=T.getReshapedPermuted(c.shape,s,i,!1),d=me({inputs:{x:c},backend:t,attrs:{shape:p}}),h=Vt({inputs:{x:d},backend:t,attrs:{perm:m}}),g=me({inputs:{x:h},backend:t,attrs:{shape:f}});return u.push(c),u.push(d),u.push(h),u.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},uO={kernelName:ha,backendName:"webgl",kernelFunc:o9};function s9(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:l,numUpdates:u,strides:c,outputSize:p}=T.calculateShapes(s,o,i),m=!1,f=new $f(u,l,o.shape.length,s.shape.length,c,[p,1],m),d=t.runWebGLProgram(f,[s,o,a],s.dtype),h=me({inputs:{x:d},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(d),h}var cO={kernelName:gu,backendName:"webgl",kernelFunc:s9};function i9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=x.parseAxisParam(a,o.shape)[0],l=T.prepareSplitSize(o,s,i),u=o.shape.length,c=new Array(u).fill(0),p=o.shape.slice();return l.map(m=>{let f=[...p];f[i]=m;let d=Wa({inputs:{x:o},backend:t,attrs:{begin:c,size:f}});return c[i]+=m,d})}var pO={kernelName:xs,backendName:"webgl",kernelFunc:i9};var a9="return sqrt(x);",l9=Ce({opSnippet:a9}),mO={kernelName:Ao,backendName:"webgl",kernelFunc:l9};var u9="return x * x;",c9=Ce({opSnippet:u9}),fO={kernelName:ga,backendName:"webgl",kernelFunc:c9};var dO="return (a - b) * (a - b);",p9=at({opSnippet:dO,packedOpSnippet:dO}),hO={kernelName:Ro,backendName:"webgl",kernelFunc:p9};function m9({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=gr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new sn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var gO={kernelName:$i,backendName:"webgl",kernelFunc:m9};var _0=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let o=n.length,s=Be(n.length),a=Be(n.length),i="";if(o===1)i="coords * strides + begin";else{let l=0;i=n.map((u,c)=>(l++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function f9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,{nonStrided:f,$begin:d,$strides:h,size:g,newShape:y,outShape:b}=ir.sliceInfo(o.shape,s,a,i,l,u,c,p,m),w=me({inputs:{x:o},backend:t,attrs:{shape:y}}),_;if(f){let E=Wa({inputs:{x:w},backend:t,attrs:{begin:d,size:g}});_=me({inputs:{x:E},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(E)}else if(b.some(E=>E===0))_=t.makeTensorInfo(b,o.dtype,[]);else if(t.shouldExecuteOnCPU([w])){let F=t.texData.get(w.dataId).values,O=Ie(w.shape,w.dtype,F),P=HD(b,O,h,d);_=t.makeTensorInfo(b,w.dtype,P.values)}else{let N=new _0(d,h,b);_=t.runWebGLProgram(N,[w],w.dtype)}let k=me({inputs:{x:_},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(_),k}var xO={kernelName:Ei,backendName:"webgl",kernelFunc:f9};var d9="return tan(x);",h9=Ce({opSnippet:d9}),yO={kernelName:Ai,backendName:"webgl",kernelFunc:h9};var g9=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,x9=Ce({opSnippet:g9}),bO={kernelName:Oo,backendName:"webgl",kernelFunc:x9};var v0=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let o=Be(this.rank),s=y9(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function y9(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function k0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"){let u=t.readSync(o.dataId).map(m=>x.decodeString(m)),c=Ie(o.shape,o.dtype,u),p=XD(c,s);return t.makeTensorInfo(p.shape,p.dtype,p.values)}let a=new v0(o.shape,s);return t.runWebGLProgram(a,[o],o.dtype)}var wO={kernelName:wn,backendName:"webgl",kernelFunc:k0};function b9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=t.readSync(o.dataId),[l,u]=YD(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var _O={kernelName:Di,backendName:"webgl",kernelFunc:b9};function w9(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;Ds(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:l,indices:u}=ZD(a,o,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var vO={kernelName:xu,backendName:"webgl",kernelFunc:w9};function _9(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,l=o.shape[s],u=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==s&&(u[c++]=a.shape[h]);let p=[],m=new Array(i).fill(0),f=a.shape.slice();f[s]=1;let d=new Array(l);for(let h=0;h<d.length;h++){m[s]=h;let g=Wa({inputs:{x:a},backend:t,attrs:{begin:m,size:f}}),y=me({inputs:{x:g},backend:t,attrs:{shape:u}});d[h]=y,p.push(g)}return p.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var kO={kernelName:ys,backendName:"webgl",kernelFunc:_9};var C0=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let l="0.0",u="sumValue",c=Math.floor(n/4)*4,p=n%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function v9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n,i=o.shape.length,l=[],u=0,c=T.getAxesPermutation([u],i),p=o;c!=null&&(p=Vt({inputs:{x:o},backend:t,attrs:{perm:c}}),l.push(p),u=T.getInnerMostAxes(1,i)[0]);let m=T.segment_util.computeOutShape(p.shape,u,a),f=x.sizeFromShape([p.shape[u]]),d=me({inputs:{x:p},backend:t,attrs:{shape:[-1,f]}});l.push(d);let h=yu(o.dtype),g=(_,k,E,N,F)=>{let O=_.shape[0],P=_.shape[1],W=T.segment_util.segOpComputeOptimalWindowSize(P,F),G={windowSize:W,inSize:P,batchSize:O,numSegments:F},j=new C0(G,k),X=t.compileAndRun(j,[_,E],N);if(l.push(X),X.shape[1]===F)return X;let K=p0({backend:t,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),Y=k0({inputs:{x:K},backend:t,attrs:{reps:[P/W]}});return l.push(K),l.push(Y),g(X,k,Y,N,F)},y=g(d,"unsortedSegmentSum",s,h,a),b=me({inputs:{x:y},backend:t,attrs:{shape:m}}),w=b;if(c!=null){l.push(b);let _=T.getUndoAxesPermutation(c);w=Vt({inputs:{x:w},backend:t,attrs:{perm:_}})}return l.forEach(_=>t.disposeIntermediateTensorInfo(_)),w}var CO={kernelName:xa,backendName:"webgl",kernelFunc:v9};var k9=[lF,uF,k$,I$,S$,N$,E$,A$,D$,$$,O$,P$,M$,L$,B$,z$,V$,j$,W$,G$,U$,q$,H$,X$,Y$,eR,rR,nR,sR,p$,lR,cR,pR,uR,fR,dR,mR,hR,gR,xR,wR,_R,vR,CR,IR,kR,SR,NR,TR,ER,AR,DR,RR,FR,PR,MR,LR,zR,VR,WR,jR,GR,UR,qR,HR,KR,XR,c$,YR,iR,ZR,JR,QR,m$,eF,tF,rF,oF,nF,sF,iF,aF,pF,dF,fF,hF,gF,yF,mF,wF,_F,vF,kF,CF,EF,x$,DF,$F,RF,FF,Z$,OF,LF,zF,BF,VF,f$,WF,jF,J$,IF,GF,qF,UF,b$,HF,KF,XF,YF,ZF,JF,QF,eO,tO,rO,nO,oO,sO,iO,aO,K$,TF,lO,uO,cO,pO,mO,fO,hO,gO,xO,NF,_$,yO,bO,wO,_O,v$,vO,kO,CO,PF];for(let r of k9)nl(r);var Wt;(function(r){r[r.float32=0]="float32",r[r.int32=1]="int32",r[r.bool=2]="bool",r[r.string=3]="string",r[r.complex64=4]="complex64"})(Wt||(Wt={}));var _l;(function(r){r[r.linear=0]="linear",r[r.relu=1]="relu",r[r.relu6=2]="relu6",r[r.prelu=3]="prelu",r[r.leakyrelu=4]="leakyrelu"})(_l||(_l={}));var IO;function C9(r){IO=r.wasm.cwrap(ws,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function I9(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n,m=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(s.dataId).id,d=0;if(a!=null){let F=t.dataIdMap.get(a.dataId);if(F.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${F.shape.length}.`);d=F.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=_l[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?o.shape[2]:o.shape[1],b=u?s.shape[1]:s.shape[2],w=o.shape[0],_=t.makeOutput([w,y,b],o.dtype),k=t.dataIdMap.get(_.dataId).id,E=new Uint8Array(new Int32Array(o.shape).buffer),N=new Uint8Array(new Int32Array(s.shape).buffer);return IO(m,E,o.shape.length,f,N,s.shape.length,l,u,g,d,h,p||0,k),_}var SO={kernelName:ws,backendName:"wasm",setupFunc:C9,kernelFunc:I9};function Ft(r){let e;function t(o){e=o.wasm.cwrap(r,null,["number","number"])}function n(o){let{backend:s,inputs:{x:a}}=o,i=s.dataIdMap.get(a.dataId).id,l=s.makeOutput(a.shape,a.dtype),u=s.dataIdMap.get(l.dataId).id;return x.sizeFromShape(l.shape)===0||e(i,u),l}return{kernelName:r,backendName:"wasm",setupFunc:t,kernelFunc:n}}var NO=Ft(is);function vt(r,e,t){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:l}=a,{a:u,b:c}=l,p=i.dataIdMap.get(u.dataId).id,m=i.dataIdMap.get(c.dataId).id,f=t!=null?t:u.dtype,d=T.assertAndGetBroadcastShape(u.shape,c.shape),h=i.makeOutput(d,f);if(x.sizeFromShape(d)===0)return h;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(c.shape).buffer),b=i.dataIdMap.get(h.dataId).id,w=()=>n(p,g,u.shape.length,m,y,c.shape.length,Wt[u.dtype],b);if(e&&u.dtype==="float32")return w(),h;let _=T.getBroadcastDims(u.shape,d),k=T.getBroadcastDims(c.shape,d),E=_.every((F,O)=>F===O),N=k.every((F,O)=>F===O);if(E&&N)return w(),h;throw new Error(`Broadcasting along outer dims is not yet supported for ${u.dtype} ${r}.`)}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var S9=!0,TO=vt(bn,S9);var EO;function N9(r){EO=r.wasm.cwrap(Hn,null,["array","number","number","number"])}function T9(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(x.sizeFromShape(n.shape)===0)return n;let o=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(n.dataId).id;return EO(s,o.length,Wt[n.dtype],a),n}var AO={kernelName:Hn,backendName:"wasm",setupFunc:N9,kernelFunc:T9};function oc(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var DO={kernelName:cs,backendName:"wasm",kernelFunc:oc};var $O;function E9(r){$O=r.wasm.cwrap(Po,null,["number","array","number","number","number","array","number"])}function kp(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=D9(e.x.shape,n.perm),a=!0;for(let d=0;d<s.length;d++)s[d]!==d&&(a=!1);let i=A9(e.x.shape,n.perm),l={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){let d=oc({inputs:e,backend:t});return d.shape=i,d}let u=t.makeOutput(i,l.dtype),c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,m=new Uint8Array(new Int32Array(s).buffer),f=new Uint8Array(new Int32Array(l.shape).buffer);return $O(c,f,l.shape.length,Wt[l.dtype],p,m,s.length),u}function A9(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function D9(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[t,n]}var RO={kernelName:Po,backendName:"wasm",kernelFunc:kp,setupFunc:E9};function Xo(r,e,t){let n=r.shape,o=r.shape.length,s=x.parseAxisParam(e,n),a=s,i=T.getAxesPermutation(a,o),l=null,u=!1;if(i!=null){let c=new Array(o);for(let f=0;f<c.length;f++)c[f]=n[i[f]];a=T.getInnerMostAxes(a.length,o),l=kp({inputs:{x:r},attrs:{perm:i},backend:t});let p=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(l.dataId).id!==p&&(u=!0)}return{transposed:l,originalAxes:s,axes:a,inputWasTransposed:u}}var FO;function $9(r){FO=r.wasm.cwrap(Kn,null,["number","number","number","number","number"])}function R9(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=a,l=s,{transposed:u,axes:c,inputWasTransposed:p}=Xo(s,o,e);if(p){let y=e.dataIdMap.get(u.dataId).id;y!==a&&(l=u,i=y)}let m=l.shape.slice(0,-1),f=e.makeOutput(m,"int32"),d=e.dataIdMap.get(f.dataId).id,h=x.sizeFromShape(f.shape),g=l.shape[c[0]];return FO(i,Wt[l.dtype],h,g,d),p&&e.disposeData(u.dataId),f}var OO={kernelName:Kn,backendName:"wasm",kernelFunc:R9,setupFunc:$9};var PO;function F9(r){PO=r.wasm.cwrap(Xn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function O9(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=t,c=T.computePool2DInfo(o.shape,a,i,1,l,u),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,w=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let _=n.makeOutput(c.outShape,"float32"),k=n.dataIdMap.get(_.dataId).id;return PO(s,o.shape[0],o.shape[1],o.shape[2],p,m,f,d,h,g,y,b,w,k),_}var MO={kernelName:Xn,backendName:"wasm",setupFunc:F9,kernelFunc:O9};function zr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=x.sizeFromShape(n.shape),a=x.inferFromImplicitShape(o,s);return x.assert(s===x.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),{dataId:n.dataId,shape:a,dtype:n.dtype}}var LO={kernelName:ds,backendName:"wasm",kernelFunc:zr};var zO;function P9(r){zO=r.wasm.cwrap(Yn,null,["number","array","number","number","array","number","number","number","number"])}function M9(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=o.shape.length,u=s.shape.length,c=a?o.shape[l-2]:o.shape[l-1],p=i?s.shape[u-1]:s.shape[u-2],m=a?o.shape[l-1]:o.shape[l-2],f=i?s.shape[u-2]:s.shape[u-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=x.sizeFromShape(d),y=x.sizeFromShape(h),b=g===y||g===1||y===1;x.assert(l>=2&&u>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`);let _=(g>y?o.shape.slice(0,-2):s.shape.slice(0,-2)).concat([m,f]);x.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let k=a?[g,c,m]:[g,m,c],E=i?[y,f,p]:[y,p,f],N=zr({inputs:{x:o},backend:t,attrs:{shape:k}}),F=zr({inputs:{x:s},backend:t,attrs:{shape:E}}),O=t.dataIdMap.get(N.dataId).id,P=t.dataIdMap.get(F.dataId).id,W=a?N.shape[2]:N.shape[1],G=i?F.shape[1]:F.shape[2],j=Math.max(g,y),X=t.makeOutput([j,W,G],N.dtype),K=t.dataIdMap.get(X.dataId).id,Y=new Uint8Array(new Int32Array(N.shape).buffer),ne=new Uint8Array(new Int32Array(F.shape).buffer);return zO(O,Y,N.shape.length,P,ne,F.shape.length,a,i,K),X.shape=_,X}var BO={kernelName:Yn,backendName:"wasm",setupFunc:P9,kernelFunc:M9};function sc(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var VO={kernelName:On,backendName:"wasm",kernelFunc:sc};var WO;function L9(r){WO=r.wasm.cwrap(Pn,null,["number","number","number","number"])}function z9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i=t.dataIdMap.get(o.dataId).id,l=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(l.dataId).id;return WO(i,s,a,u),l}var jO={kernelName:Pn,backendName:"wasm",setupFunc:L9,kernelFunc:z9};function I0(r){let{inputs:e,backend:t}=r,n=x.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=T.computeOutShape(e.map(f=>f.shape),n),s=e.filter(f=>x.sizeFromShape(f.shape)>0);if(s.length===1)return oc({inputs:{x:s[0]},backend:t});let a=t.makeOutput(o,e[0].dtype);if(x.sizeFromShape(o)===0)return a;let i=s.map(f=>f.shape);if(T.assertParamsConsistent(i,n),s[0].dtype==="string"){let f=s.map(w=>{let _=x.sizeFromShape(w.shape.slice(n));return zr({inputs:{x:w},backend:t,attrs:{shape:[-1,_]}})}),d=f.map(w=>({vals:t.readSync(w.dataId),shape:w.shape}));o=T.computeOutShape(f.map(w=>w.shape),1);let h=f[0].shape[0]===1,g=lf(d,o,e[0].dtype,h),y=T.computeOutShape(s.map(w=>w.shape),n);a.shape=y;let b=t.dataIdMap.get(a.dataId);return b.stringBytes=T.fromStringArrayToUint8(g),a}let l=x.sizeFromShape(s[0].shape.slice(0,n)),u=0,c=s.map(f=>{let d=x.sizeFromShape(f.shape.slice(n));return u+=d,d}),p=s.map(f=>t.typedArrayFromHeap(f)),m=t.typedArrayFromHeap(a);for(let f=0;f<l;f++){let d=f*u;for(let h=0;h<p.length;h++){let g=c[h],y=f*g,b=p[h].subarray(y,y+g);m.set(b,d),d+=g}}return a}var GO={kernelName:as,backendName:"wasm",kernelFunc:I0};var UO;function B9(r){UO=r.wasm.cwrap(Zn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function V9(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p,dataFormat:m}=t,f=T.convertConv2DDataFormat(m),d=T.computeConv2DInfo(o.shape,s.shape,l,u,c,p,!1,f),h=d.filterHeight,g=d.filterWidth,y=d.padInfo.top,b=d.padInfo.right,w=d.padInfo.bottom,_=d.padInfo.left,k=d.dilationHeight,E=d.dilationWidth,N=d.strideHeight,F=d.strideWidth,O=d.inChannels,P=d.outChannels,W=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let G=n.makeOutput(d.outShape,"float32"),j=n.dataIdMap.get(G.dataId).id;return UO(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,y,b,w,_,W,k,E,N,F,O,P,j),G}var qO={kernelName:Zn,backendName:"wasm",setupFunc:B9,kernelFunc:V9};var HO;function W9(r){HO=r.wasm.cwrap(Jn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function j9(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,inputShape:c}=n,p=1,m=T.convertConv2DDataFormat(l),f=T.computeConv2DInfo(c,s.shape,a,p,i,u,!1,m),{batchSize:d,filterHeight:h,filterWidth:g,inChannels:y,inHeight:b,inWidth:w,outChannels:_,outHeight:k,outWidth:E,strideHeight:N,strideWidth:F}=f,O=h-1-f.padInfo.top,P=g-1-f.padInfo.left,W=f.dataFormat==="channelsLast",G=x.computeStrides(f.inShape),j=x.computeStrides(o.shape),[X,K,Y]=x.computeStrides(s.shape),ne=G[0],J=W?G[1]:G[2],Q=W?G[2]:1,ie=W?1:G[1],ae=j[0],ue=W?j[1]:j[2],le=W?j[2]:1,ge=W?1:j[1],_e=e.makeOutput(f.inShape,"float32"),ye=e.dataIdMap.get(_e.dataId).id,ke=e.dataIdMap.get(o.dataId).id,Ae=e.dataIdMap.get(s.dataId).id;return HO(ke,Ae,d,h,g,b,w,y,k,E,_,N,F,O,P,X,K,Y,ne,J,Q,ie,ae,ue,le,ge,ye),_e}var KO={kernelName:Jn,backendName:"wasm",setupFunc:W9,kernelFunc:j9};var XO=Ft(Qn);var S0;(function(r){r[r.bilinear=0]="bilinear",r[r.nearest=1]="nearest"})(S0||(S0={}));var YO;function G9(r){YO=r.wasm.cwrap(ti,null,["number","number","number","number","array","number","number","number","number","number"])}function U9(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:l,boxInd:u}=t,c=l.shape[0],[p,m]=a,f=[c,p,m,i.shape[3]],d=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=sc({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),d=e.dataIdMap.get(h.dataId));let g=d.id,y=e.dataIdMap.get(l.dataId).id,b=e.dataIdMap.get(u.dataId).id,w=e.makeOutput(f,"float32"),_=e.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return YO(g,y,b,c,k,p,m,S0[o],s,_),h!=null&&e.disposeData(h.dataId),w}var ZO={kernelName:ti,backendName:"wasm",setupFunc:G9,kernelFunc:U9};var JO;function q9(r){JO=r.wasm.cwrap(eo,null,["number","number","number","number","number","number"])}function H9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,l=o.shape.length;x.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),c=o;u!==null&&(c=kp({inputs:{x:o},attrs:{perm:u},backend:t}));let p=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[p],l);let m=t.makeOutput(c.shape,c.dtype),f=c.shape[p],d=t.dataIdMap.get(c.dataId).id,h=t.dataIdMap.get(m.dataId).id;JO(d,a?1:0,i?1:0,f,h,Wt[o.dtype]);let g=m;if(u!==null){let y=T.getUndoAxesPermutation(u);g=kp({inputs:{x:m},attrs:{perm:y},backend:t}),t.disposeData(c.dataId),t.disposeData(m.dataId)}return g}var QO={kernelName:eo,backendName:"wasm",setupFunc:q9,kernelFunc:H9};var eP;function K9(r){eP=r.wasm.cwrap(ri,null,["number","number","number","array","number","array","array","number","number"])}function X9(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n;x.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=o.shape[0],l=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],c=a==="NHWC"?o.shape[3]:o.shape[1],p=l*s,m=u*s,f=c/(s*s),d=a==="NHWC"?[i,p,m,f]:[i,f,p,m],h=e.makeOutput(d,"float32"),y=e.dataIdMap.get(o.dataId).id,b=new Uint8Array(new Int32Array(x.computeStrides(o.shape)).buffer),w=new Uint8Array(new Int32Array(d).buffer),_=new Uint8Array(new Int32Array(x.computeStrides(d)).buffer),k=e.dataIdMap.get(h.dataId).id;return eP(y,s,a==="NHWC"?1:0,b,o.shape.length-1,w,_,d.length,k),h}var tP={kernelName:ri,backendName:"wasm",setupFunc:K9,kernelFunc:X9};var rP;function Y9(r){rP=r.wasm.cwrap(to,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Z9(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p}=t,m=u==null?[1,1]:u,f=T.computeConv2DInfo(o.shape,s.shape,l,m,c,p,!0),d=f.filterHeight,h=f.filterWidth,g=f.padInfo.top,y=f.padInfo.right,b=f.padInfo.bottom,w=f.padInfo.left,_=f.dilationHeight,k=f.dilationWidth,E=f.strideHeight,N=f.strideWidth,F=f.inChannels,O=f.outChannels,P=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let W=n.makeOutput(f.outShape,"float32"),G=n.dataIdMap.get(W.dataId).id;return rP(a,o.shape[0],o.shape[1],o.shape[2],i,d,h,g,y,b,w,P,_,k,E,N,F,O,G),W}var nP={kernelName:to,backendName:"wasm",setupFunc:Y9,kernelFunc:Z9};var J9=!1,oP=vt(si,J9,"bool");var sP=Ft(no);function ux(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,a=o.shape.length,i=o.shape.slice(),l=s;return s<0&&(x.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),i.splice(l,0,1),zr({inputs:{x:o},backend:n,attrs:{shape:i}})}var iP={kernelName:ls,backendName:"wasm",kernelFunc:ux};function Q9(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var aP={kernelName:ua,backendName:"wasm",kernelFunc:Q9};var lP;function eZ(r){lP=r.wasm.cwrap(ai,null,["number","number","number","number","number","number"])}function tZ(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,l,u,c]=n.shape;return lP(s,i,l,u,c,a),o}var uP={kernelName:ai,backendName:"wasm",kernelFunc:tZ,setupFunc:eZ};var cP=Ft(oo);var rZ=!1,pP=vt(so,rZ);var mP;function nZ(r){mP=r.wasm.cwrap(io,null,["number","number","number","number","number","number","number"])}function oZ(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:l,scale:u}=t,c=e.dataIdMap.get(s.dataId).id,p=e.dataIdMap.get(a.dataId).id,m=e.dataIdMap.get(i.dataId).id,f=l!=null?e.dataIdMap.get(l.dataId).id:0,d=u!=null?e.dataIdMap.get(u.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(x.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return mP(c,p,m,f,d,o,g),h}var fP={kernelName:io,backendName:"wasm",setupFunc:nZ,kernelFunc:oZ};var dP;function sZ(r){dP=r.wasm.cwrap(_s,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function iZ(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=T.computeConv2DInfo(o.shape,s.shape,l,c,u,m),g=_l[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,b=n.dataIdMap.get(s.dataId).id,w=h.outChannels,_=0;if(a!=null){let le=n.dataIdMap.get(a.dataId);if(le.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${le.shape.length}.`);if(le.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${le.shape}) does not match the number of output channels (${w})`);_=le.id}let k=h.filterHeight,E=h.filterWidth,N=h.padInfo.top,F=h.padInfo.right,O=h.padInfo.bottom,P=h.padInfo.left,W=h.dilationHeight,G=h.dilationWidth,j=h.strideHeight,X=h.strideWidth,K=h.inChannels,Y=h.padInfo.type==="SAME"?1:0,ne=h.batchSize,J=h.inHeight,Q=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ie=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(ie.dataId).id,ue=i==null?0:n.dataIdMap.get(i.dataId).id;return dP(y,ne,J,Q,b,k,E,_,N,F,O,P,Y,W,G,j,X,K,w,g,ue,d||0,ae),ie}var hP={kernelName:_s,backendName:"wasm",setupFunc:sZ,kernelFunc:iZ};var gP;function aZ(r){gP=r.wasm.cwrap(vs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lZ(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=T.computeConv2DInfo(o.shape,s.shape,l,c,u,m,!0),g=_l[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,b=n.dataIdMap.get(s.dataId).id,w=h.outChannels,_=0;if(a!=null){let le=n.dataIdMap.get(a.dataId);if(le.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${le.shape.length}.`);if(le.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${le.shape}) does not match the number of output channels (${w})`);_=le.id}let k=h.filterHeight,E=h.filterWidth,N=h.padInfo.top,F=h.padInfo.right,O=h.padInfo.bottom,P=h.padInfo.left,W=h.dilationHeight,G=h.dilationWidth,j=h.strideHeight,X=h.strideWidth,K=h.inChannels,Y=h.padInfo.type==="SAME"?1:0,ne=h.batchSize,J=h.inHeight,Q=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ie=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(ie.dataId).id,ue=i==null?0:n.dataIdMap.get(i.dataId).id;return gP(y,ne,J,Q,b,k,E,_,N,F,O,P,Y,W,G,j,X,K,w,g,ue,d||0,ae),ie}var xP={kernelName:vs,backendName:"wasm",setupFunc:aZ,kernelFunc:lZ};var yP;function uZ(r){yP=r.wasm.cwrap(li,null,["number","number","number","number","number","number","array","number"])}function cZ(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,a,i,l]=tg.prepareAndValidate(n,o),u=e.makeOutput(s,n.dtype);if(a===0)return u;let c=o.shape,p=c[c.length-1],f=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),y=e.dataIdMap.get(u.dataId).id;return yP(f,Wt[n.dtype],h,a,p,i,g,y),u}var bP={kernelName:li,backendName:"wasm",setupFunc:uZ,kernelFunc:cZ};var wP;function pZ(r){wP=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function mZ(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,l=x.parseAxisParam(a,o.shape)[0],u=T.segment_util.collectGatherOpShapeInfo(o,s,l,i),c=zr({inputs:{x:o},attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]},backend:e}),p=x.sizeFromShape(s.shape),m=zr({inputs:{x:s},attrs:{shape:[u.batchSize,p/u.batchSize]},backend:e}),f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize],d=e.makeOutput(f,o.dtype);if(x.sizeFromShape(o.shape)===0)return d;let h=c.shape.length-1,y=e.dataIdMap.get(c.dataId).id,w=e.dataIdMap.get(m.dataId).id,_=e.dataIdMap.get(d.dataId).id,k=new Uint8Array(new Int32Array(x.computeStrides(c.shape)).buffer),E=new Uint8Array(new Int32Array(x.computeStrides(f)).buffer);return wP(y,Wt[o.dtype],k,h,w,u.batchSize,E,_),d.shape=u.outputShape,d}var _P={kernelName:us,backendName:"wasm",setupFunc:pZ,kernelFunc:mZ};var fZ=!1,vP=vt(ui,fZ,"bool");var dZ=!1,kP=vt(ao,dZ,"bool");var CP;function hZ(r){CP=r.wasm.cwrap(lo,null,["number","number","number"])}function gZ(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,e.dtype);if(x.sizeFromShape(e.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;CP(o,t,a)}return s}var IP={kernelName:lo,backendName:"wasm",setupFunc:hZ,kernelFunc:gZ};var xZ=!1,SP=vt(fi,xZ,"bool");var yZ=!1,NP=vt(di,yZ,"bool");var TP=Ft(uo);var bZ=!1,EP=vt(gi,bZ,"bool");var AP;function wZ(r){AP=r.wasm.cwrap(co,null,["number, number, number"])}function _Z(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=t,l=e.dataIdMap.get(a.dataId).id,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Xo(a,o,e);if(f){let w=e.dataIdMap.get(c.dataId).id;u=c,l=w}let d=u.shape.length;T.assertAxesAreInnerMostDims("max",p,d);let[h,g]=T.computeOutAndReduceShapes(u.shape,p),y=x.sizeFromShape(g),b=e.makeOutput(h,a.dtype);if(x.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;AP(l,y,w)}if(f&&e.disposeData(c.dataId),s){let w=T.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var DP={kernelName:co,backendName:"wasm",setupFunc:wZ,kernelFunc:_Z};var vZ=!1,$P=vt(po,vZ);var RP;function kZ(r){RP=r.wasm.cwrap(mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function CZ(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=t,c=T.computePool2DInfo(o.shape,a,i,1,l,u),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,w=c.strideHeight,_=c.strideWidth,k=c.inChannels,E=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let N=n.makeOutput(c.outShape,"float32"),F=n.dataIdMap.get(N.dataId).id;return RP(s,o.shape[0],o.shape[1],o.shape[2],p,m,f,d,h,g,y,b,w,_,k,E,F),N}var FP={kernelName:mo,backendName:"wasm",setupFunc:kZ,kernelFunc:CZ};var OP;function IZ(r){OP=r.wasm.cwrap(fo,null,["number, number, number"])}function SZ(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Xo(a,o,e),d=p;if(f){let _=e.dataIdMap.get(c.dataId).id;_!==i&&(u=c,l=_,d=T.getInnerMostAxes(d.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",d,u.shape.length);let[h,g]=T.computeOutAndReduceShapes(u.shape,d),y=x.sizeFromShape(g),b=u;u.dtype!=="float32"&&(b=sc({backend:e,inputs:{x:u},attrs:{dtype:"float32"}}),l=e.dataIdMap.get(b.dataId).id);let w=e.makeOutput(h,"float32");if(x.sizeFromShape(u.shape)!==0){let _=e.dataIdMap.get(w.dataId).id;OP(l,y,_)}if(f&&e.disposeData(c.dataId),s){let _=T.expandShapeToKeepDim(w.shape,m);w.shape=_}return u.dtype!=="float32"&&e.disposeData(b.dataId),w}var PP={kernelName:fo,backendName:"wasm",setupFunc:IZ,kernelFunc:SZ};var MP;function NZ(r){MP=r.wasm.cwrap(ho,null,["number, number, number"])}function TZ(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Xo(a,o,e);if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w)}let d=u.shape.length;T.assertAxesAreInnerMostDims("min",p,d);let[h,g]=T.computeOutAndReduceShapes(u.shape,p),y=x.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(x.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;MP(l,y,w)}if(f&&e.disposeData(c.dataId),s){let w=T.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var LP={kernelName:ho,backendName:"wasm",setupFunc:NZ,kernelFunc:TZ};var EZ=!1,zP=vt(go,EZ);var AZ=!0,BP=vt(xo,AZ);var VP=Ft(ps);function Cp(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var WP;function DZ(r){WP=r.wasm.cwrap(bi,"number",["number","number","number","number","number"])}function $Z(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:l}=t,u=e.dataIdMap.get(i.dataId).id,c=e.dataIdMap.get(l.dataId).id,p=WP(u,c,s,o,a),{pSelectedIndices:m,selectedSize:f,pSelectedScores:d,pValidOutputs:h}=Cp(e,p);return e.wasm._free(d),e.wasm._free(h),e.makeOutput([f],"int32",m)}var jP={kernelName:bi,backendName:"wasm",setupFunc:DZ,kernelFunc:$Z};var GP;function RZ(r){GP=r.wasm.cwrap(wi,"number",["number","number","number","number","number","bool"])}function FZ(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:l,scores:u}=t,c=e.dataIdMap.get(l.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=GP(c,p,s,o,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Cp(e,m);e.wasm._free(h);let y=e.makeOutput([d],"int32",f),b=e.makeOutput([],"int32",g);return[y,b]}var UP={kernelName:wi,backendName:"wasm",setupFunc:RZ,kernelFunc:FZ};var qP;function OZ(r){qP=r.wasm.cwrap(_i,"number",["number","number","number","number","number","number"])}function PZ(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:l,scores:u}=t,c=e.dataIdMap.get(l.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=qP(c,p,s,o,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Cp(e,m);e.wasm._free(g);let y=e.makeOutput([d],"int32",f),b=e.makeOutput([d],"float32",h);return[y,b]}var HP={kernelName:_i,backendName:"wasm",setupFunc:OZ,kernelFunc:PZ};var MZ=!1,KP=vt(yi,MZ,"bool");var XP;function LZ(r){XP=r.wasm.cwrap(yo,null,["number","number","number","number","number"])}function zZ(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,l=t.makeOutput([...o.shape,s],"int32"),u=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(o.dataId).id;return XP(p,s,a,i,u),l}var YP={kernelName:yo,backendName:"wasm",setupFunc:LZ,kernelFunc:zZ};function BZ(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var ZP={kernelName:ms,backendName:"wasm",kernelFunc:BZ};function VZ(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return ux({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{x.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),x.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=e.map(l=>ux({inputs:{input:l},backend:t,attrs:{dim:o}}));return I0({inputs:i,backend:t,attrs:{axis:o}})}var JP={kernelName:fs,backendName:"wasm",kernelFunc:VZ};var QP;function WZ(r){QP=r.wasm.cwrap(bo,null,["number","array","number","number","array","array","number","number"])}function jZ(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((d,h)=>d[0]+e.shape[h]+d[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(e.shape).buffer),c=n.map(d=>d[0]),p=n.map(d=>d[1]),m=new Uint8Array(new Int32Array(c).buffer),f=new Uint8Array(new Int32Array(p).buffer);return QP(a,u,e.shape.length,Wt[e.dtype],m,f,o,l),i}var eM={kernelName:bo,backendName:"wasm",kernelFunc:jZ,setupFunc:WZ};var GZ=!1,tM=vt(wo,GZ);var rM;function UZ(r){rM=r.wasm.cwrap(_o,null,["number","number","number"])}function qZ(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,i=t.makeOutput(n.shape,"float32"),l=t.dataIdMap.get(i.dataId).id;return rM(s,a,l),i}var nM={kernelName:_o,backendName:"wasm",setupFunc:UZ,kernelFunc:qZ};var oM;function HZ(r){oM=r.wasm.cwrap(vi,null,["number","number","number","number"])}function KZ(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Xo(a,o,e),d=p;if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w,d=T.getInnerMostAxes(d.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",d,u.shape.length);let[h,g]=T.computeOutAndReduceShapes(u.shape,d),y=x.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(x.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;oM(l,y,Wt[b.dtype],w)}if(f&&e.disposeData(c.dataId),s){let w=T.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var sM={kernelName:vi,backendName:"wasm",setupFunc:HZ,kernelFunc:KZ};var XZ=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=pf(n,o,s,a),l=e.makeOutput([i.length],a);return e.typedArrayFromHeap(l).set(i),l},iM={kernelName:fa,backendName:"wasm",kernelFunc:XZ};var YZ=!0,aM=vt(ro,YZ);var lM=Ft(vo);var uM=Ft(Co);var cM;function ZZ(r){cM=r.wasm.cwrap(ko,null,["number","number","number","number","number","number","number","number","number","number"])}function JZ(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[l,u]=i,[c,p,m,f]=o.shape,d=[c,l,u,f],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=sc({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let y=h.id,b=e.makeOutput(d,"float32");if(x.sizeFromShape(o.shape)===0)return b;let w=e.dataIdMap.get(b.dataId).id;return cM(y,c,p,m,f,l,u,s?1:0,a?1:0,w),g!=null&&e.disposeData(g.dataId),b}var pM={kernelName:ko,backendName:"wasm",setupFunc:ZZ,kernelFunc:JZ};var mM;function QZ(r){mM=r.wasm.cwrap(Io,null,["number","array","number","array","number","number"])}function eJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=x.parseAxisParam(s,o.shape);if(o.shape.length===0)return oc({inputs:{x:o},backend:t});let i=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(a).buffer),p=new Uint8Array(new Int32Array(o.shape).buffer);return mM(l,c,a.length,p,o.shape.length,u),zr({inputs:{x:i},attrs:{shape:o.shape},backend:t})}var fM={kernelName:Io,backendName:"wasm",kernelFunc:eJ,setupFunc:QZ};var dM;function tJ(r){dM=r.wasm.cwrap(Ri,null,["number","number","number","number","number","number","number","number","array","number","number"])}function rJ(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:a,center:i}=n,l=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(l.dataId).id,[p,m,f,d]=o.shape,[h,g]=T.getImageCenter(i,m,f),y=a===0,b=255,w=typeof a=="number"?[a,a,a,y?0:b]:[...a,b],_=new Uint8Array(new Int32Array(w).buffer);return dM(u,p,m,f,d,s,h,g,_,w.length,c),l}var hM={kernelName:Ri,backendName:"wasm",kernelFunc:rJ,setupFunc:tJ};var gM=Ft(So);var xM=Ft(No);var yM;function nJ(r){yM=r.wasm.cwrap(Ci,null,["number","number","number","number","number","number","array","number","number"])}function oJ(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,i=e.makeOutput(a,s.dtype);if(x.sizeFromShape(a)===0)return i;let{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=rg.calculateShapes(s,o,a),d=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),b=e.dataIdMap.get(i.dataId).id;return yM(d,g,Wt[s.dtype],l,u,c,y,m,b),i}var bM={kernelName:Ci,backendName:"wasm",setupFunc:nJ,kernelFunc:oJ};var wM;function sJ(r){wM=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function iJ(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=t.makeOutput(o.shape,o.dtype),c=t.dataIdMap.get(u.dataId).id,p=n.shape.length,m=o.shape.length,f=p===0||p>1||m===1?1:x.sizeFromShape(o.shape.slice(1));return wM(a,i,l,f,c),u}var _M={kernelName:hs,backendName:"wasm",kernelFunc:iJ,setupFunc:sJ};var vM;function aJ(r){vM=r.wasm.cwrap(Eo,null,["number","number"])}function lJ(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return x.sizeFromShape(o.shape)===0||vM(n,s),o}var kM={kernelName:"Sigmoid",backendName:"wasm",setupFunc:aJ,kernelFunc:lJ};var CM=Ft(To);function ic(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,a]=ir.parseSliceParams(e,t,n),i=ir.isSliceContinous(e.shape,s,a),l=o.readSync(e.dataId),u=o.makeOutput(a,e.dtype),c=x.computeStrides(e.shape),p=o.dataIdMap.get(u.dataId);if(i){let d=ir.computeFlatOffset(s,c);return e.dtype==="string"?p.stringBytes=l.slice(d,d+x.sizeFromShape(a)):o.typedArrayFromHeap(u).set(l.subarray(d,d+x.sizeFromShape(a))),u}if(e.dtype==="string"){let d=mf(l,s,a,e.shape,e.dtype);return p.stringBytes=d,u}let m=o.typedArrayFromHeap(u),f=e.shape.length;if(f===2)uJ(l,c[0],m,s,a);else if(f===3)cJ(l,c[0],c[1],m,s,a);else if(f===4)pJ(l,c[0],c[1],c[2],m,s,a);else{let d=mf(l,s,a,e.shape,e.dtype);m.set(d)}return u}function uJ(r,e,t,n,o){let s=0,a=n[0],i=n[1],l=a+o[0];for(let u=a;u<l;u++){let c=u*e+i;t.set(r.subarray(c,c+o[1]),s),s+=o[1]}}function cJ(r,e,t,n,o,s){let a=0,i=o[0],l=o[1],u=o[2],c=i+s[0],p=l+s[1];for(let m=i;m<c;m++)for(let f=l;f<p;f++){let d=m*e+f*t+u;n.set(r.subarray(d,d+s[2]),a),a+=s[2]}}function pJ(r,e,t,n,o,s,a){let i=0,l=s[0],u=s[1],c=s[2],p=l+a[0],m=u+a[1],f=c+a[2],d=s[3];for(let h=l;h<p;h++)for(let g=u;g<m;g++)for(let y=c;y<f;y++){let b=h*e+g*t+y*n+d;o.set(r.subarray(b,b+a[3]),i),i+=a[3]}}var IM={kernelName:gs,backendName:"wasm",kernelFunc:ic};var SM;function mJ(r){SM=r.wasm.cwrap($o,null,["number","number","number","number"])}function fJ(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[n],l=x.sizeFromShape(t.shape)/i;return x.sizeFromShape(s.shape)===0||SM(o,a,i,l),s}var NM={kernelName:$o,backendName:"wasm",setupFunc:mJ,kernelFunc:fJ};function dJ(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=t,i=x.parseAxisParam(a,o.shape)[0],l=T.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),c=o.shape.slice();return l.map(p=>{let m=[...c];m[i]=p;let f=ic({inputs:{x:o},attrs:{begin:u,size:m},backend:n});return u[i]+=p,f})}var TM={kernelName:xs,backendName:"wasm",kernelFunc:dJ};var EM=Ft(Ao);var AM=Ft(ga);var hJ=!0,DM=vt(Ro,hJ);var $M;function gJ(r){$M=r.wasm.cwrap(Ei,null,["number","array","number","array","array","array","array","array","number","number"])}function xJ(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i}=n;i==null&&(i=new Array(s.length));let{beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,f=T.slice_util.maskToAxes(c);if(f.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(c!==0&&p!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(c!==0&&m!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let d=o.shape.length-s.length,h=T.slice_util.maskToAxes(p),g=o.shape.slice();h.forEach(P=>{s[P]=0,a[P]=1,g.splice(P,0,1)});let y=zr({inputs:{x:o},attrs:{shape:g},backend:e}),{begin:b,end:w,strides:_}=T.slice_util.getNormalizedAxes(y.shape,f,d,s,a,i,l,u,c);s=b,a=w,i=_;let k=T.slice_util.maskToAxes(m);k.forEach(P=>{a[P]=s[P]+1,i[P]=1});let E=T.slice_util.computeOutShape(s,a,i),N=E.filter((P,W)=>k.indexOf(W)===-1);if(i.every(P=>P===1)){let P=ic({inputs:{x:o},attrs:{begin:s,size:E},backend:e});return zr({inputs:{x:P},attrs:{shape:N},backend:e})}let O=e.makeOutput(N,"float32");if(!N.some(P=>P===0)){let P=e.dataIdMap.get(y.dataId).id,W=new Uint8Array(new Int32Array(x.computeStrides(y.shape)).buffer),G=new Uint8Array(new Int32Array(s).buffer),j=new Uint8Array(new Int32Array(a).buffer),X=new Uint8Array(new Int32Array(i).buffer),K=new Uint8Array(new Int32Array(N).buffer),Y=new Uint8Array(new Int32Array(x.computeStrides(N)).buffer),ne=e.dataIdMap.get(O.dataId).id;$M(P,W,y.shape.length,G,j,X,K,Y,N.length,ne)}return zr({inputs:{x:O},attrs:{shape:N},backend:e})}var RM={kernelName:Ei,backendName:"wasm",setupFunc:gJ,kernelFunc:xJ};var yJ=!0,FM=vt(Fo,yJ);var OM;function bJ(r){OM=r.wasm.cwrap(Do,null,["number, number, number"])}function wJ(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Xo(a,o,e),d=p;if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w,d=T.getInnerMostAxes(d.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",d,u.shape.length);let[h,g]=T.computeOutAndReduceShapes(u.shape,d),y=x.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(x.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;OM(l,y,w)}if(f&&e.disposeData(c.dataId),s){let w=T.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var PM={kernelName:Do,backendName:"wasm",setupFunc:bJ,kernelFunc:wJ};var MM=Ft(Oo);var LM;function _J(r){LM=r.wasm.cwrap(wn,null,["number","array","number","array","number","number"])}function vJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let m=0;m<i.length;m++)i[m]=o.shape[m]*a[m];let l=new Uint8Array(new Int32Array(o.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),c=t.makeOutput(i,o.dtype),p=t.dataIdMap.get(c.dataId).id;return LM(s,l,o.shape.length,u,i.length,Wt[c.dtype],p),c}var zM={kernelName:wn,backendName:"wasm",setupFunc:_J,kernelFunc:vJ};var BM;function kJ(r){BM=r.wasm.cwrap(Di,null,["number","array","number","number","number","bool","number","number"])}var CJ=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,a=e.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),l=n.shape.slice();l[l.length-1]=o;let u=e.makeOutput(l,n.dtype),c=e.dataIdMap.get(u.dataId).id,p=e.makeOutput(l,"int32"),m=e.dataIdMap.get(p.dataId).id;return BM(a,i,n.shape.length,Wt[n.dtype],o,s,c,m),[u,p]},VM={kernelName:Di,backendName:"wasm",setupFunc:kJ,kernelFunc:CJ};function IJ(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,l=new Array(i-1),u=0;for(let f=0;f<i;f++)f!==s&&(l[u++]=o.shape[f]);let c=new Array(a),p=new Array(i).fill(0),m=o.shape.slice();m[s]=1;for(let f=0;f<c.length;f++)p[s]=f,c[f]=ic({inputs:{x:o},attrs:{begin:p,size:m},backend:t});return c.map(({dataId:f,dtype:d})=>({dataId:f,dtype:d,shape:l}))}var WM={kernelName:ys,backendName:"wasm",kernelFunc:IJ};function SJ(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var jM={kernelName:bs,backendName:"wasm",kernelFunc:SJ};var NJ=[NO,TO,AO,OO,MO,BO,VO,jO,GO,qO,KO,XO,ZO,QO,tP,nP,oP,sP,iP,aP,uP,cP,pP,SO,fP,hP,xP,bP,_P,vP,kP,DO,IP,SP,NP,TP,EP,DP,$P,FP,PP,LP,zP,BP,VP,jP,UP,HP,KP,YP,ZP,JP,eM,tM,nM,sM,iM,aM,lM,uM,LO,pM,fM,hM,xM,gM,bM,_M,kM,CM,IM,NM,TM,EM,AM,DM,RM,FM,PM,MM,zM,VM,RO,WM,jM];for(let r of NJ)nl(r);var N0=U();N0.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));N0.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(N0.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(r){return!1}});var $0=Ac(qM());var HM='var threadInfoStruct=0;var selfThreadId=0;var parentThreadId=0;var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:selfThreadId})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["DYNAMIC_BASE"]=e.data.DYNAMIC_BASE;Module["DYNAMICTOP_PTR"]=e.data.DYNAMICTOP_PTR;Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}Module=WasmBackendModuleThreadedSimd(Module);postMessage({"cmd":"loaded"})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;threadInfoStruct=e.data.threadInfoStruct;Module["__register_pthread_ptr"](threadInfoStruct,0,0);selfThreadId=e.data.selfThreadId;parentThreadId=e.data.parentThreadId;var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["dynCall_ii"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){Atomics.store(Module["HEAPU32"],threadInfoStruct+4>>2,ex instanceof Module["ExitStatus"]?ex.status:-2);Atomics.store(Module["HEAPU32"],threadInfoStruct+0>>2,1);Module["_emscripten_futex_wake"](threadInfoStruct+0,2147483647);if(!(ex instanceof Module["ExitStatus"]))throw ex}}}else if(e.data.cmd==="cancel"){if(threadInfoStruct){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(threadInfoStruct){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}';var XM=Ac(KM());var mx=class extends js{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new el(this,Cs())}write(e,t,n){let o={};return this.move(o,e,t,n),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=x.now();return e(),{kernelMs:x.now()-t}}move(e,t,n,o){let s=this.dataIdNextNumber++;if(o==="string"){let u=t;this.dataIdMap.set(e,{id:s,stringBytes:u,shape:n,dtype:o,memoryOffset:null});return}let a=x.sizeFromShape(n),i=a*x.bytesPerElement(o),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:o}),this.wasm.tfjs.registerTensor(s,a,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:o,stringBytes:s}=this.dataIdMap.get(e);if(n==="string")return s;let a=this.wasm.HEAPU8.slice(t,t+x.sizeFromShape(o)*x.bytesPerElement(n));return TJ(a.buffer,n)}disposeData(e){let t=this.dataIdMap.get(e);this.wasm._free(t.memoryOffset),this.wasm.tfjs.disposeData(t.id),this.dataIdMap.delete(e)}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{o={};let s=this.dataIdNextNumber++;this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t});let a=x.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=x.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,a);case"int32":return new Int32Array(o,s,a);case"bool":return new Uint8Array(o,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function EJ(r){return(e,t)=>(x.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance)})})}),{})}function YM(r,e,t){if(fx!=null)return fx;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Rf!=null&&Rf[n]!=null?Rf[n]:t+n}async function ZM(){let[r,e]=await Promise.all([U().getAsync("WASM_HAS_SIMD_SUPPORT"),U().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(l,u)=>{if(l.endsWith(".worker.js")){let c=HM,p=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(p)}return l.endsWith(".wasm")?YM(r,e,Ff!=null?Ff:u):u+l},R0&&(o.instantiateWasm=EJ(YM(r,e,Ff!=null?Ff:"")));let s;e&&r&&fx==null?(s=$0.default(o),s.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+$0.default.toString()],{type:"text/javascript"})):s=XM.default(o);let a=null;s.tfjs={init:s.cwrap("init",null,[]),registerTensor:s.cwrap("register_tensor",null,["number","number","number"]),disposeData:s.cwrap("dispose_data",a,["number"]),dispose:s.cwrap("dispose",a,[])};let i=!1;s.onRuntimeInitialized=()=>{i=!0,Of=!1,t({wasm:s})},s.onAbort=()=>{if(i||Of)return;Of=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})}})}function TJ(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var AJ=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],fx=null,Ff=null,Rf={},Of=!1,R0=!1;function DJ(r,e=!1){if(Pt("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Of)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");fx=r,R0=e}function $J(r,e=!1){if(Of)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")Ff=r;else{Rf=r;let t=AJ.filter(n=>Rf[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}R0=e}var F0="2.8.3";var RJ=2;_u("wasm",async()=>{let{wasm:r}=await ZM();return new mx(r)},RJ);var B0={};Ye(B0,{maxNorm:()=>OJ,minMaxNorm:()=>LJ,nonNeg:()=>MJ,unitNorm:()=>PJ});var O0;function tr(){return O0==null&&(O0=dw().epsilon()),O0}function Jr(){return"channelsLast"}var Sn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Sn.prototype)}},Br=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Br.prototype)}},B=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,B.prototype)}},Te=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Te.prototype)}},Pf=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Pf.prototype)}},P0=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,P0.prototype)}};function Yo(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function jn(r,e){if(!r)throw new Pf(e)}function M0(r,e){let t=0;for(let n of r)n===e&&t++;return t}function xr(r){return r.length===1?r[0]:r}function kt(r){return Array.isArray(r)?r:[r]}function Zo(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ga(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Jo={};function Sp(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function L0(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>L0(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:L0(n))}}}function Gi(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in Jo)a=Jo[s];else if(a=e[s],a==null)throw new B(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new B(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,l;if(a in t?[i,l]=t[a]:a in Jo?[i,l]=Jo.className:a in e&&([i,l]=e[a]),i==null)throw new B(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let f of Object.keys(Jo))u[f]=Jo[f];for(let f of Object.keys(t))u[f]=t[f];let c=s.config;c.customObjects=u;let p=Object.assign({},Jo);for(let f of Object.keys(t))Jo[f]=t[f];L0(s.config);let m=l(i,s.config,t,o);return Jo=Object.assign({},p),m}else{let u=Object.assign({},Jo);for(let p of Object.keys(t))Jo[p]=t[p];let c=new i(s.config);return Jo=Object.assign({},u),c}}}function FJ(r,e){return r<e?-1:r>e?1:0}function Mf(r,e){return-1*FJ(r,e)}function Qo(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function JM(r){if(r==null)throw new B(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function Ui(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new B(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function dx(r,e,t=0,n=Infinity){return jn(t>=0),jn(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function Kt(r,e){Array.isArray(r)?(x.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>Kt(t,`element ${n+1} of ${e}`))):x.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${QM(r)}.`)}function QM(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>QM(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function eL(r,e){let t=x.now(),n;return(...s)=>{let a=x.now();return a-t<e||(t=a,n=r(...s)),n}}function hx(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}function z0(r,e){return V(()=>_t(be(M(r,r),e,!0)))}var Np=class extends te.Serializable{getConfig(){return{}}},Lf=class extends Np{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{let t=z0(e,this.axis),n=ar(t,0,this.maxValue);return M(e,fe(n,ee(tr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Lf.className="MaxNorm";te.registerClass(Lf);var zf=class extends Np{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>fe(e,ee(tr(),z0(e,this.axis))))}getConfig(){return{axis:this.axis}}};zf.className="UnitNorm";te.registerClass(zf);var Bf=class extends Np{apply(e){return Tr(e)}};Bf.className="NonNeg";te.registerClass(Bf);var Vf=class extends Np{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{let t=z0(e,this.axis),n=ee(M(this.rate,ar(t,this.minValue,this.maxValue)),M(1-this.rate,t));return M(e,fe(n,ee(tr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Vf.className="MinMaxNorm";te.registerClass(Vf);var tL={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function zt(r){return Sp(r)}function rL(r,e={}){return Gi(r,te.SerializationMap.getMap().classNameMap,e,"constraint")}function Bt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in tL?tL[r]:r,config:{}};return rL(t)}else return r instanceof Np?r:rL(r)}function OJ(r){return new Lf(r)}function PJ(r){return new zf(r)}function MJ(){return new Bf}function LJ(r){return new Vf(r)}var U0={};Ye(U0,{constant:()=>qJ,glorotNormal:()=>QJ,glorotUniform:()=>JJ,heNormal:()=>eQ,heUniform:()=>tQ,identity:()=>YJ,leCunNormal:()=>rQ,leCunUniform:()=>nQ,ones:()=>UJ,orthogonal:()=>oQ,randomNormal:()=>KJ,randomUniform:()=>HJ,truncatedNormal:()=>XJ,varianceScaling:()=>ZJ,zeros:()=>GJ});var nL=["channelsFirst","channelsLast"],oL=["nearest","bilinear"],sL=["valid","same","causal"],iL=["max","avg"],aL=["sum","mul","concat","ave"];var Tp=new Map;function Ot(r){Ui(nL,"DataFormat",r)}function lL(r){Ui(oL,"InterpolationFormat",r)}function Qr(r){Ui(sL,"PaddingMode",r)}function V0(r){Ui(iL,"PoolMode",r)}var Wf=[],uL="/";function Os(r,e){Wf.push(r);try{let t=e();return Wf.pop(),t}catch(t){throw Wf.pop(),t}}function zJ(){return Wf.length===0?"":Wf.join(uL)+uL}function gx(r){if(!cL(r))throw new Error("Not a valid tensor name: '"+r+"'");return zJ()+r}function xx(r){if(!cL(r))throw new Error("Not a valid tensor name: '"+r+"'");Tp.has(r)||Tp.set(r,0);let e=Tp.get(r);if(Tp.set(r,Tp.get(r)+1),e>0){let t=`${r}_${e}`;return Tp.set(t,1),t}else return r}var BJ=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function cL(r){return!!r.match(BJ)}function pL(r){return r===parseInt(r.toString(),10)}function es(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function mL(r){return r=Array.isArray(r)?new Float32Array(r):r,Gt(r)}function ac(r){return Li(mL(r)).dataSync()[0]}function Ps(r){return ur(mL(r)).dataSync()[0]}function Vr(r,e){if(e<r)throw new B(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}function Ua(r,e){return r.asType(e)}function qa(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),r.reshape(t)}function fL(r,e){return V(()=>{if(r.shape.length!==2)throw new B(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=qa(r,1);return yx(t,[1,e,1])})}function dL(r){let e=[es(r.shape)];return r.reshape(e)}function hL(r){if(r.rank<=1)throw new B(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],es(r.shape,1)];return r.reshape(e)}function Ha(r,e,t){return V(()=>{switch(r.rank){case 1:return Ym(r,e,t);case 2:return dg(r,[e,0],[t,r.shape[1]]);case 3:return Zm(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return ep(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Fe(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Fe(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new B(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function W0(r,e,t){return V(()=>{switch(r.rank){case 1:return Ym(r,e,t);case 2:return dg(r,[0,e],[r.shape[0],t]);case 3:return Zm(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return ep(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function jf(r,e,t,n){return V(()=>{switch(r.rank){case 1:return Ym(r,e,t);case 2:switch(n){case 1:return Ha(r,e,t);case 2:return W0(r,e,t);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return Ha(r,e,t);case 2:return Zm(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return W0(r,e,t);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return Ha(r,e,t);case 2:return ep(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return ep(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return W0(r,e,t);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Ep(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),Qe(r,e)}function j0(r,e){switch(r.rank){case 1:return kw([r,e]);case 2:return Cw([r,e],0);case 3:return Iw([r,e],0);case 4:return Sw([r,e],0);default:throw new B(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function yx(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new B(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Bn(r,e)}function Ap(r,e=0,t=1,n,o){return fg(r,e,t,n,o)}function ts(r,e,t,n){if(r.rank<2||e.rank<2)throw new Te(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Te(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2){let o=!1,s=!1;return Vo.matMul({a:r,b:e,transposeA:o,transposeB:s,bias:n?G0(r.rank,n,Jr()):null,activation:t})}else{let o=r.shape.slice(),s=o.pop();r=r.reshape([-1,s]);let a=e.shape.slice(),i=a.pop(),l=a.pop(),u=[...a,i],c=Array.from({length:e.rank},(d,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=e.transpose(c).reshape([l,-1]);let p=[...o,...u],m=!1,f=!1;return Vo.matMul({a:r,b:e,transposeA:m,transposeB:f,bias:n?G0(r.rank,n,Jr()):null,activation:t}).reshape(p)}}function bx(r,e,t){return V(()=>(Array.isArray(e)?e=Gt(e,"int32"):e=e.toInt(),zo(r,e,t)))}function lc(r){return M(r,r)}function G0(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new B(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?e.reshape([1,n[0],1,1,1]):e.reshape([1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?e.reshape([1,1,1,1,n[0]]):e.reshape([1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?e.reshape([1,n[0],1,1]):e.reshape([1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?e.reshape([1,1,1,n[0]]):e.reshape([1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?e.reshape([1,n[0],1]):e.reshape([1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?e.reshape([1,1,n[0]]):e.reshape([1].concat(n))}else if(r<3)return e;throw new B(`Unsupported input rank by biasAdd: ${e.rank}`)}function ln(r,e,t){return V(()=>(t==null&&(t=Jr()),Ot(t),r.add(G0(r.rank,e,t))))}function gL(r,e=1){if(e!==1)throw new Te(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Is(r)}function xL(r){return V(()=>fe(r,At(r).add(1)))}function wx(r,e,t,n){return V(()=>h_(r,e,t,n))}function yL(r){return V(()=>{let e=ee(.5,M(.2,r));return ar(e,0,1)})}function vl(r,e,t=!1){return t?r():e()}var bL=["fanIn","fanOut","fanAvg"],wL=["normal","uniform","truncatedNormal"];function VJ(r){Ui(bL,"FanMode",r)}function WJ(r){Ui(wL,"Distribution",r)}var un=class extends te.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Gf=class extends un{apply(e,t){return pt(e,t)}};Gf.className="Zeros";te.registerClass(Gf);var uc=class extends un{apply(e,t){return Nr(e,t)}};uc.className="Ones";te.registerClass(uc);var Uf=class extends un{constructor(e){super();if(typeof e!="object")throw new B(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new B(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return V(()=>M(ce(this.value),Nr(e,t)))}getConfig(){return{value:this.value}}};Uf.className="Constant";te.registerClass(Uf);var qf=class extends un{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ts(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};qf.className="RandomUniform";te.registerClass(qf);var Hf=class extends un{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Te(`randomNormal does not support dType ${t}.`);return Ap(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Hf.className="RandomNormal";te.registerClass(Hf);var Kf=class extends un{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Te(`truncatedNormal does not support dType ${t}.`);return ju(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Kf.className="TruncatedNormal";te.registerClass(Kf);var Xf=class extends un{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return V(()=>{if(e.length!==2||e[0]!==e[1])throw new B("Identity matrix initializer can only be used for 2D square matrices.");return M(this.gain,Yc(e[0]))})}getConfig(){return{gain:this.gain}}};Xf.className="Identity";te.registerClass(Xf);function jJ(r,e="channelsLast"){let t,n;if(Ot(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=es(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=es(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=es(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var Wr=class extends un{constructor(e){super();if(e.scale<0)throw new B(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,VJ(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,WJ(this.distribution),this.seed=e.seed}apply(e,t){let n=jJ(e),o=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(o+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Te(`${this.getClassName()} does not support dType ${t}.`);return ju(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return Ts(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Wr.className="VarianceScaling";te.registerClass(Wr);var Dp=class extends Wr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};Dp.className="GlorotUniform";te.registerClass(Dp);var $p=class extends Wr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};$p.className="GlorotNormal";te.registerClass($p);var Rp=class extends Wr{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};Rp.className="HeNormal";te.registerClass(Rp);var Fp=class extends Wr{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};Fp.className="HeUniform";te.registerClass(Fp);var Op=class extends Wr{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};Op.className="LeCunNormal";te.registerClass(Op);var Pp=class extends Wr{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};Pp.className="LeCunNormal";te.registerClass(Pp);var Yf=class extends un{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Te("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return V(()=>{if(e.length<2)throw new Te("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=Ap(n,0,1,"float32"),s=__.gramSchmidt(o);return e[0]>e[1]&&(s=s.transpose()),M(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Yf.className="Orthogonal";te.registerClass(Yf);var _L={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function vL(r,e={}){return Gi(r,te.SerializationMap.getMap().classNameMap,e,"initializer")}function Tt(r){return Sp(r)}function ht(r){if(typeof r=="string"){let e=r in _L?_L[r]:r;if(e==="GlorotNormal")return new $p;if(e==="GlorotUniform")return new Dp;if(e==="HeNormal")return new Rp;if(e==="HeUniform")return new Fp;if(e==="LeCunNormal")return new Op;if(e==="LeCunUniform")return new Pp;{let t={};return t.className=e,t.config={},vL(t)}}else return r instanceof un?r:vL(r)}function GJ(){return new Gf}function UJ(){return new uc}function qJ(r){return new Uf(r)}function HJ(r){return new qf(r)}function KJ(r){return new Hf(r)}function XJ(r){return new Kf(r)}function YJ(r){return new Xf(r)}function ZJ(r){return new Wr(r)}function JJ(r){return new Dp(r)}function QJ(r){return new $p(r)}function eQ(r){return new Rp(r)}function tQ(r){return new Fp(r)}function rQ(r){return new Op(r)}function nQ(r){return new Pp(r)}function oQ(r){return new Yf(r)}var NC={};Ye(NC,{Layer:()=>Le,RNN:()=>fn,RNNCell:()=>Al,activation:()=>vee,add:()=>Dee,alphaDropout:()=>dte,average:()=>$ee,averagePooling1d:()=>TC,averagePooling2d:()=>EC,averagePooling3d:()=>AC,avgPool1d:()=>Vee,avgPool2d:()=>jee,avgPool3d:()=>Uee,avgPooling1d:()=>Wee,avgPooling2d:()=>Gee,avgPooling3d:()=>qee,batchNormalization:()=>Lee,bidirectional:()=>ite,concatenate:()=>Ree,conv1d:()=>dee,conv2d:()=>hee,conv2dTranspose:()=>gee,conv3d:()=>xee,convLstm2d:()=>rte,convLstm2dCell:()=>nte,cropping2D:()=>bee,dense:()=>kee,depthwiseConv2d:()=>_ee,dot:()=>Mee,dropout:()=>Cee,elu:()=>lee,embedding:()=>Aee,flatten:()=>See,gaussianDropout:()=>fte,gaussianNoise:()=>mte,globalAveragePooling1d:()=>Hee,globalAveragePooling2d:()=>Kee,globalMaxPool1d:()=>lte,globalMaxPool2d:()=>ute,globalMaxPooling1d:()=>nz,globalMaxPooling2d:()=>oz,gru:()=>Yee,gruCell:()=>Zee,input:()=>Wx,inputLayer:()=>aee,layerNormalization:()=>zee,leakyReLU:()=>cee,lstm:()=>Jee,lstmCell:()=>Qee,masking:()=>hte,maxPool1d:()=>cte,maxPool2d:()=>pte,maxPooling1d:()=>sz,maxPooling2d:()=>iz,maxPooling3d:()=>Xee,maximum:()=>Fee,minimum:()=>Oee,multiply:()=>Pee,permute:()=>Eee,prelu:()=>pee,reLU:()=>uee,repeatVector:()=>Nee,reshape:()=>Tee,rnn:()=>ote,separableConv2d:()=>yee,simpleRNN:()=>ete,simpleRNNCell:()=>tte,softmax:()=>mee,spatialDropout1d:()=>Iee,stackedRNNCells:()=>ste,thresholdedReLU:()=>fee,timeDistributed:()=>ate,upSampling2d:()=>wee,zeroPadding2d:()=>Bee});var sQ=0;function _x(){return sQ++}var vx={};function kl(r=""){return r in vx||(vx[r]=0),vx[r]+=1,r+vx[r].toString()}function kx(r){return Array.isArray(r)&&Array.isArray(r[0])}function Mp(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Oe(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new B(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function et(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new B(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Lp(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var kL="Variable",Zf=class{constructor(e,t="float32",n=kL,o=!0,s=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=_x(),n=n==null?kL:n,this.originalName=gx(n),this.name=xx(this.originalName),this.trainable_=o,this.constraint=s,this.val=Yw(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),iQ(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function iQ(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function Jf(r){return r.map(e=>e.read())}function zp(r){r.forEach(e=>{e[0].write(e[1])})}var Dt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},jr=class{constructor(e,t,n,o,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=o,this.callArgs=s,this.outputTensorIndex=i,this.id=_x(),a!=null&&(this.originalName=gx(a),this.name=xx(this.originalName)),this.rank=t.length}},aQ=0,Cl=class{constructor(e,t){this.callArgs=t,this.id=aQ++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},lQ=0,Le=class extends te.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=lQ++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Zo(n)+"_"+kl(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Br(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new B(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return xr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return xr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Sn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Sn(`Layer ${this.name} is not connected, no input to return.`);return xr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Sn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Sn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return xr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=kt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=kt(this.inputSpec);if(e.length!==t.length)throw new B(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let a=o.rank;if(s.ndim!=null&&a!==s.ndim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new B(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let i=o.shape;for(let l in s.axes){let u=Number(l),c=s.axes[l],p=u>=0?i[u]:i[i.length+u];if(c!=null&&[c,null].indexOf(p)===-1)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let l=s.shape[i],u=o.shape[i];if(l!=null&&u!=null&&l!==u)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=kt(e),o=!0;for(let a of n)if(!(a instanceof jr)){o=!1;break}let s=!0;for(let a of n)if(a instanceof jr){s=!1;break}if(o===s)throw new B("Arguments to apply() must be all SymbolicTensors or all Tensors");return Os(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of kt(e))a.push(i.shape);this.build(xr(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=kt(a),l=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(a=xr(l),this.activityRegularizer!=null)throw new Te("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=uQ(e),i=this.computeOutputShape(a),l,u=cQ(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?l=i.map((c,p)=>new jr(u,c,this,kt(e),t,this.name,p)):l=new jr(u,i,this,kt(e),t,this.name),this.addInboundNode(e,l,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Te("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Sn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Sn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Br(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Lp(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Jf(e?this.trainableWeights:this.weights)}setWeights(e){V(()=>{let t=this.weights;if(t.length!==e.length)throw new B(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=Jf(t);for(let s=0;s<o.length;++s){let a=o[s],i=t[s],l=e[s];if(!x.arraysEqual(a.shape,l.shape))throw new B(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);n.push([i,l])}zp(n)})}addWeight(e,t,n,o,s,a,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new B(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=ht("zeros"));let l=o.apply(t,n),u=new Zf(l,n,e,a,i);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(u.read())),a==null&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=kt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,a,i=null){let l=kt(e);t=kt(t),n=kt(n),o=kt(o),s=Mp(s),a=Mp(a);let u=[],c=[],p=[];for(let m of l)u.push(m.sourceLayer),c.push(m.nodeIndex),p.push(m.tensorIndex);new Cl({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:p,inputTensors:l,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:a},i);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function uQ(r){r=kt(r);let e=[];for(let t of r)e.push(t.shape);return xr(e)}function cQ(r){return"float32"}function q0(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],l=n.nodeIndices[s],u=q0(a,i,l);for(let c of u)o.indexOf(c)===-1&&o.push(c)}return o}}}var qi=class extends Le{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:kl("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new B("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new B("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new B("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new jr(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Cl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new B(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};qi.className="InputLayer";te.registerClass(qi);function Cx(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new B("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new qi({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}async function Hi(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];De(n)}}function Ix(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var CL;(function(r){r[r.SILENT=0]="SILENT",r[r.VERBOSE=1]="VERBOSE"})(CL||(CL={}));var pQ=125,Il=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Sx=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},IL=class extends Il{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;let i=V(()=>ee(this.totals[o],M(s,n)));this.totals[o]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:V(()=>{let o=M(fe(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),$t(t[n])}))}},Nx=class extends Il{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let l=a[i];e.push(l.data()),t.push(s),n.push(i)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},Tx=class extends Il{constructor(e,t){super();if(this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=pQ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");x.isNumber(this.yieldEvery)&&(this.maybeWait=eL(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await Hi(n),o.push(this.yield(e,t,n))),o.push(sf()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Hi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Hi(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(sf()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Hi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Hi(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(sf()):x.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Hi(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Hi(e),await this.trainEnd(e))}};function Ex(r,e){return r==null&&(r={}),r instanceof Il?[r]:Array.isArray(r)&&r[0]instanceof Il?r:kt(r).map(n=>new Tx(n,e))}var cn=class{constructor(){}static registerCallbackConstructor(e,t){x.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),cn.checkForDuplicate(t),cn.constructors[e]==null&&(cn.constructors[e]=[]),cn.constructors[e].push(t)}static checkForDuplicate(e){for(let t in cn.constructors)cn.constructors[+t].forEach(o=>{if(o===e)throw new B("Duplicate callback constructor.")})}static clear(){cn.constructors={}}static createCallbacks(e){let t=[];for(let n in cn.constructors){let o=+n;e>=o&&t.push(...cn.constructors[o])}return t.map(n=>new n)}};cn.constructors={};function Ax(r,e,t,n,o,s,a,i,l){let u=new Nx,c=[new IL,...cn.createCallbacks(e)];r!=null&&c.push(...r),c.push(u);let p=new Sx(c);return p.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:l}),{callbackList:p,history:u}}function en(r,e={},t=!1){return Gi(r,te.SerializationMap.getMap().classNameMap,e,"layer",t)}function Qf(r,e){return V(()=>{r.dtype!=="float32"&&(r=r.asType("float32"));let t=be(lc(r),e,!0),n=Sa(t.shape,tr()),o=_t(Sr(t,n));return fe(r,o)})}function Ki(r,e){return V(()=>wt(lc(pe(e,r)),-1))}function Bp(r,e){return V(()=>wt(At(pe(e,r)),-1))}function Sl(r,e){return V(()=>{let t=pe(r,e),n=ar(At(r),tr(),Number.MAX_VALUE),o=At(fe(t,n));return M(100,wt(o,-1))})}function mQ(r,e){return V(()=>{let t=ar(e,tr(),Number.MAX_VALUE),n=lr(ee(1,t)),o=ar(r,tr(),Number.MAX_VALUE),s=lr(ee(1,o));return wt(lc(pe(n,s)),-1)})}function fQ(r,e){return V(()=>{let t=Sr(0,pe(1,M(r,e)));return wt(lc(t),-1)})}function dQ(r,e){return V(()=>{let t=Sr(0,pe(1,M(r,e)));return wt(t,-1)})}function hQ(r,e){return V(()=>{let t=be(M(r,e),-1),n=ur(M(pe(1,r),e),-1);return Sr(0,ee(1,pe(n,t)))})}function gQ(r,e){return V(()=>{let t=Math.log(2),n=pe(e,r),o=pe(ee(n,Ns(M(-2,n))),t);return wt(o,-1)})}function cc(r,e,t=!1){return V(()=>{if(t)e=Ra(e);else{let n=be(e,e.shape.length-1,!0);e=fe(e,n)}return e=ar(e,tr(),1-tr()),He(be(M(r.toFloat(),lr(e)),e.shape.length-1))})}function Vp(r,e,t=!1){return V(()=>{let n=Ss(dL(r)).toInt();e=ar(e,tr(),1-tr());let o=e.shape,s=ks(n,o[o.length-1]).reshape(o);return cc(s,e,t)})}function xQ(r,e){if(!x.arraysEqual(r.shape,e.shape))throw new B(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return V(()=>{let t=e.relu(),n=e.abs().neg();return t.sub(e.mul(r)).add(n.exp().log1p())})}function Wp(r,e){return V(()=>{let t;return t=ar(e,tr(),1-tr()),t=lr(fe(t,pe(1,t))),wt(xQ(r,t),-1)})}function yQ(r,e){return V(()=>{let t=ar(r,tr(),1),n=ar(e,tr(),1);return be(M(r,lr(fe(t,n))),-1)})}function bQ(r,e){return V(()=>{let t=lr(ee(tr(),e));return wt(pe(e,M(r,t)),-1)})}function ed(r,e){return V(()=>{let t=Qf(r,-1),n=Qf(e,-1),o=M(t,n);return He(be(o,-1))})}var td={meanSquaredError:Ki,meanAbsoluteError:Bp,meanAbsolutePercentageError:Sl,meanSquaredLogarithmicError:mQ,squaredHinge:fQ,hinge:dQ,categoricalHinge:hQ,logcosh:gQ,categoricalCrossentropy:cc,sparseCategoricalCrossentropy:Vp,binaryCrossentropy:Wp,kullbackLeiblerDivergence:yQ,poisson:bQ,cosineProximity:ed};function Dx(r){if(typeof r=="string"){if(r in td)return td[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new B(e)}else return r}function rd(r,e){return V(()=>{let t=M(.5,nr(e)),n=Ua(Yt(e,t),r.dtype);return wt(Yr(r,n),-1)})}function nd(r,e){return V(()=>Ua(Yr(ul(r,-1),ul(e,-1)),"float32"))}function SL(r,e){return V(()=>hr(r.equal(1),e.equal(1)).sum().cast("float32"))}function wQ(r,e){return V(()=>hr(r.equal(1),e.equal(0)).sum().cast("float32"))}function _Q(r,e){return V(()=>hr(r.equal(0),e.equal(1)).sum().cast("float32"))}function H0(r,e){return V(()=>{let t=SL(r,e),n=_Q(r,e),o=t.add(n);return Rt(Yt(o,0),t.div(o),0).cast("float32")})}function NL(r,e){return V(()=>{let t=SL(r,e),n=wQ(r,e),o=t.add(n);return Rt(Yt(o,0),t.div(o),0).cast("float32")})}function $x(r,e){return Wp(r,e)}function Rx(r,e){return r.rank===e.rank&&(r=r.squeeze([r.rank-1])),e=e.argMax(-1),e.dtype!==r.dtype&&(e=e.asType(r.dtype)),Yr(r,e).asType("float32")}var vQ=Ki,kQ=Ki,CQ=Bp,IQ=Bp,SQ=Sl,NQ=Sl,od=cc,TQ=ed,K0=Vp,Fx={binaryAccuracy:rd,categoricalAccuracy:nd,precision:H0,categoricalCrossentropy:od,sparseCategoricalCrossentropy:K0,mse:vQ,MSE:kQ,mae:CQ,MAE:IQ,mape:SQ,MAPE:NQ,cosine:TQ};function TL(r){if(typeof r=="string"&&r in Fx)return Fx[r];if(typeof r!="string"&&r!=null)return r;throw new B(`Unknown metric ${r}`)}function sd(r){if(jn(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(td))if(td[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(Fx))if(Fx[t]===r){e=t;break}return e!==void 0?e:r.name}}function EL(r){let e={Adagrad:()=>fl.adagrad(.01),Adadelta:()=>fl.adadelta(1,.95,tr()),Adam:()=>fl.adam(.001,.9,.999,tr()),Adamax:()=>fl.adamax(.002,.9,.999,tr(),0),RMSProp:()=>fl.rmsprop(.001,.9,0,tr()),SGD:()=>fl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new B(`Unknown Optimizer ${r}`)}var AL=1*1024*1024;function Y0(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!X0(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>AL&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${AL}.`)}}function X0(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!X0(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!X0(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function DL(r,e,t,n=console.log){let o=AQ(r),s=["Layer (type)","Output shape","Param #"];o?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let a;if(!o){s.push("Receives inputs"),a=[];for(let c in r.nodesByDepth)a.push(...r.nodesByDepth[c])}n("_".repeat(e)),Ox(s,t,n),n("=".repeat(e));let i=r.layers;for(let c=0;c<i.length;++c)o?DQ(i[c],t,n):$Q(i[c],t,a,n),n((c===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let l=EQ(r),u=Lp(r.nonTrainableWeights);n(`Total params: ${l+u}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${u}`),n("_".repeat(e))}function EQ(r){let e;return r.collectedTrainableWeights!=null?e=Lp(r.collectedTrainableWeights):e=Lp(r.trainableWeights),e}function AQ(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function Ox(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function DQ(r,e,t){let n;try{n=JSON.stringify(r.outputShape)}catch(i){n="multiple"}let o=r.name,s=r.getClassName(),a=[`${o} (${s})`,n,r.countParams().toString()];Ox(a,e,t)}function $Q(r,e,t,n){let o;try{o=JSON.stringify(r.outputShape)}catch(c){o="multiple"}let s=[];for(let c of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(c)===-1))for(let p=0;p<c.inboundLayers.length;++p){let m=c.inboundLayers[p].name,f=c.nodeIndices[p],d=c.tensorIndices[p];s.push(`${m}[${f}][${d}]`)}let a=r.name,i=r.getClassName(),l=s.length===0?"":s[0],u=[`${a} (${i})`,o,r.countParams().toString(),l];Ox(u,e,n);for(let c=1;c<s.length;++c)Ox(["","","",s[c]],e,n)}function $L(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function pc(r,e){if(r===null)return null;if(typeof r=="string")return Ga(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];$L(e,o,s)?t.push(s):t.push(pc(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=Ga(n);t[s]=pc(o,s)}}return t}}function Px(r,e){if(r==null)return null;if(typeof r=="string")return Zo(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];$L(e,o,s)?t.push(s):t.push(Px(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=Zo(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=Px(o,n)}return t}}var jp="2.8.3";function RQ(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return oe(e,r.dtype)}catch(t){throw new B(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Ms=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ms)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=RQ(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new B(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof jr){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof jr){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&De(this.id2Mask)}},Z0={},RL={};function mc(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(d=>d.name),l=[],u=e.names();for(let d of i)u.indexOf(d)!==-1?l.push(e.getValue(d)):l.push(null);n!=null&&(n.maxNumTensors=-Infinity,n.minNumTensors=Infinity);let c=i.join(",")+"|"+e.names().join(","),p,m;if(Z0[c]==null){let d=FQ(a,e);p=d.sorted,m=d.recipientCounts,Z0[c]=p,RL[c]=m}p=Z0[c],m={},o||Object.assign(m,RL[c]);let f=new Ms(e);for(let d=0;d<p.length;++d){if(n!=null){let O=Hc().numTensors;O>n.maxNumTensors&&(n.maxNumTensors=O),O<n.minNumTensors&&(n.minNumTensors=O)}let h=p[d],g=h.sourceLayer;if(g instanceof qi)continue;let y=[],b=[],w=[],_=!1;for(let O of h.inputs){let P=f.getValue(O),W=f.getMask(O);y.push(P),b.push(W),W!=null&&(_=!0),o||(m[O.name]--,m[O.name]===0&&!e.hasKey(O)&&i.indexOf(O.name)===-1&&!P.isDisposed&&O.sourceLayer.stateful!==!0&&w.push(P))}_&&(t=t||{},t.mask=b[0]);let k=kt(g.apply(y,t)),E=null;g.supportsMasking&&(E=g.computeMask(y,b));let N=OQ(h),F=Array.isArray(N)?N:[N];for(let O=0;O<F.length;++O){f.hasKey(F[O])||f.add(F[O],k[O],Array.isArray(E)?E[0]:E);let P=i.indexOf(F[O].name);P!==-1&&(l[P]=k[O])}o||De(w)}return f.disposeMasks(),s?l:l[0]}function FQ(r,e){x.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=FL(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=FL(s,e);for(let l of a)o.has(l.name)||(t.push(l),o.add(l.name));for(let l in i)n[l]==null&&(n[l]=new Set),i[l].forEach(u=>n[l].add(u))}}return{sorted:t,recipientCounts:PQ(n)}}function PQ(r){let e={};for(let t in r)e[t]=r[t].size;return e}function FL(r,e){let t=new Set,n=[],o={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let l=a[a.length-1]===s.length-1;if(i.inputs.length===0||l)s.pop(),n.push(i),t.add(i.name),l&&a.pop();else{a.push(s.length-1);for(let u of i.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(i.name),!t.has(u.name)&&s.push(u)}}return{sorted:n,recipientMap:o}}function OQ(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var Gn=class extends Le{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=kl(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Qo(this.inputs).length!==this.inputs.length)throw new B(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Qo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let w=b.sourceLayer,_=b.nodeIndex,k=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(_),this.outputLayersTensorIndices.push(k)}for(let b of this.inputs){let w=b.sourceLayer,_=b.nodeIndex,k=b.tensorIndex;jn(_===0,"input layer has >1 nodes"),jn(k===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(_),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let w=this.inputLayers[b];if(!(w instanceof qi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},n={},o={},s={},a={},i=[],l=(b,w,_,k,E,N)=>{(k==null||E==null||N==null)&&(k=b.sourceLayer,E=b.nodeIndex,N=b.tensorIndex);let F=k.inboundNodes[E];if(_.indexOf(F)!==-1)throw new Br(`The tensor ${b.name} at layer "${k.name}" is part of a cycle.`);if(w.indexOf(F)!==-1)return;this.containerNodes.add(Gn.nodeKey(k,E)),k.id in a||(a[k.id]=Object.keys(a).length),_.indexOf(F)===-1&&_.push(F);let O=F.inboundLayers.length;for(let P=0;P<O;P++){let W=F.inputTensors[P],G=F.inboundLayers[P],j=F.nodeIndices[P],X=F.tensorIndices[P];l(W,w,_,G,j,X)}for(w.push(F);_.indexOf(F)>=0;)_.splice(_.indexOf(F),1);i.push(F)},u=[],c=[];for(let b of this.outputs)l(b,u,c);let p=i.slice().reverse();for(let b of p){n[b.id]=b,b.id in t||(t[b.id]=0);let w=t[b.id],_=o[b.outboundLayer.id]==null?0:o[b.outboundLayer.id];w=Math.max(w,_),o[b.outboundLayer.id]=w,s[b.outboundLayer.id]=b.outboundLayer,t[b.id]=w;for(let k=0;k<b.inboundLayers.length;k++){let E=b.inboundLayers[k],N=b.nodeIndices[k],F=E.inboundNodes[N],O=t[F.id]==null?0:t[F.id];t[F.id]=Math.max(w+1,O),n[F.id]=F}}let m={};for(let b in t){let w=t[b];w in m||(m[w]=[]),m[w].push(n[b])}let f={};for(let b in o){let w=o[b];w in f||(f[w]=[]),f[w].push(s[b])}let d=Object.keys(f).map(b=>parseInt(b,10)).sort(Mf);this.layers=[];for(let b of d){let w=f[b];w.sort((_,k)=>{let E=a[_.id],N=a[k.id];return E<N?-1:E>N?1:0});for(let _ of w)_ instanceof Gn&&this.internalContainerRefs.push(_),this.layers.push(_)}this.layersByDepth=f,d=Object.keys(m).map(b=>parseInt(b,10)).sort(Mf);let h=this.inputs.slice(),g=[];for(let b of d)for(let w of m[b]){let _=w.outboundLayer;if(_!=null){for(let k of w.inputTensors)if(h.indexOf(k)===-1)throw new Br(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${_.name}". The following previous layers were accessed without issue: ${g}`);for(let k of w.outputTensors)h.push(k);g.push(_.name)}}this.nodesByDepth=m;let y=this.layers.map(b=>b.name);for(let b of y){let w=y.filter(_=>_===b).length;if(w!==1)throw new Br(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Cl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new B("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new B(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,o++}let s=[];for(let a in e){let i=a;if(n[a]==null){let l=a.split("/");i=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(n[i]!=null)s.push([n[i],e[a]]);else if(t)throw new B(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new B(`${a.length} of ${o} weights are not set: ${a}`)}zp(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${jp}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Px(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return V(()=>{e=kt(e);let n=new Ms;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return mc(this.outputs,n,t)})}computeMask(e,t){return V(()=>{e=kt(e);let n;return t==null?n=Yo(null,e.length):n=kt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Mp(e);if(t.length!==this.inputLayers.length)throw new B(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let l=this.inputLayers[i],u=t[i],c=l.name+"_0_0";n[c]=u}let o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Mf);if(o.length>1)for(let i of o){let l=this.nodesByDepth[i];for(let u of l){let c=u.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(c.id)!==-1)continue;let p=[];for(let h=0;h<u.inboundLayers.length;h++){let g=u.inboundLayers[h],y=u.nodeIndices[h],b=u.tensorIndices[h],w=`${g.name}_${y}_${b}`,_=n[w];p.push(_)}let m=c.computeOutputShape(xr(p)),f=Mp(m),d=c.inboundNodes.indexOf(u);for(let h=0;h<f.length;h++){let g=`${c.name}_${d}_${h}`;n[g]=f[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let l=this.outputLayers[i],u=this.outputLayersNodeIndices[i],c=this.outputLayersTensorIndices[i],p=`${l.name}_${u}_${c}`;a.push(p)}for(let i=0;i<a.length;i++){let l=a[i];jn(l in n),s.push(n[l])}return xr(s)}runInternalGraph(e,t){t==null&&(t=Yo(null,e.length));let n={};for(let l=0;l<this.inputs.length;++l){let u=this.inputs[l],c=e[l],p=t[l];n[u.id]=[c,p]}let o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Mf);for(let l of o){let u=this.nodesByDepth[l];for(let c of u){let p=c.outboundLayer,m=c.inputTensors,f=c.outputTensors,d=new Array;for(let h of m)h.id in n&&d.push(n[h.id]);if(d.length===m.length){let h={},g,y,b,w;if(c.callArgs!=null&&(h=c.callArgs),d.length===1){let[_,k]=d[0];h.mask==null&&(h.mask=k),b=kt(p.call(_,h)),w=kt(p.computeMask(_,k)),g=[_],y=[k]}else g=d.map(_=>_[0]),y=d.map(_=>_[1]),h.mask==null&&(h.mask=y),b=kt(p.call(g,h)),w=kt(p.computeMask(g,y));if(p.activityRegularizer)throw new Te("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let _=0;_<f.length;++_){let k=f[_],E=b[_],N=w[_];n[k.id]=[E,N]}}}}let s=[],a=[],i=[];for(let l of this.outputs){jn(l.id in n,`Could not compute output ${l.name} : ${l.id}`);let[u,c]=n[l.id];i.push(u.shape),s.push(u),a.push(c)}return[s,a,i]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof Gn?1:0;for(let s=0;s<o.inboundNodes.length;s++){let a=Gn.nodeKey(o,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new B(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new B("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new B(`No such layer: ${e}`)}calculateLosses(){return V(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=Gn.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),l=a.getConfig(),u=[];for(let p=0;p<a.inboundNodes.length;p++){let m=a.inboundNodes[p],f=Gn.nodeKey(a,p),d={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),d=m.callArgs}catch(h){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),d={}}if(m.inboundLayers.length>0){let h=[];for(let g=0;g<m.inboundLayers.length;g++){let y=m.inboundLayers[g],b=m.nodeIndices[g],w=m.tensorIndices[g],_=Gn.nodeKey(y,b),k=t[_];k==null&&(k=0),h.push([y.name,k,w,d])}u.push(h)}}}let c={};c.name=a.name,c.className=i,c.config=l,c.inboundNodes=u,n.push(c)}e.layers=n;let o=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],l=this.inputLayersNodeIndices[a],u=Gn.nodeKey(i,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let p=this.inputLayersTensorIndices[a];o.push([i.name,c,p])}e.inputLayers=o;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],l=this.outputLayersNodeIndices[a],u=Gn.nodeKey(i,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let p=this.outputLayersTensorIndices[a];s.push([i.name,c,p])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function l(g,y){let b=[],w;for(let _ of y){let k=_[0],E=_[1],N=_[2];if(w=_[3]==null?{}:_[3],!(k in s)){i(g,y);return}let F=s[k];if(F.inboundNodes.length<=E){i(g,y);return}let O=F.inboundNodes[E];b.push(O.outputTensors[N])}b.length>0&&g.apply(xr(b),w)}function u(g){let y=g.name,b=en(g,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(o),s[y]=b,g.inboundNodes.forEach(_=>{if(!(_ instanceof Array))throw new B(`Corrupted configuration, expected array for nodeData: ${_}`);i(b,_)})}let c=t.name,p=t.layers;for(let g of p)u(g);for(;!JM(a);)for(let g of p){let y=s[g.name];if(y.name in a){let b=a[y.name];delete a[y.name];for(let w of b)l(y,w)}}let m=[],f=[],d=t.inputLayers;for(let g of d){let y=g[0],b=g[1],w=g[2];jn(y in s);let k=s[y].inboundNodes[b].outputTensors;m.push(k[w])}let h=t.outputLayers;for(let g of h){let y=g[0],b=g[1],w=g[2];jn(y in s);let k=s[y].inboundNodes[b].outputTensors;f.push(k[w])}return new e({inputs:m,outputs:f,name:c})}get stateful(){if(this._stateful)throw new B("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){V(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function MQ(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function Mx(r,e){return MQ(r,e,"classWeight")}async function Lx(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=V(()=>{if(r.shape.length===1)return r.clone();if(r.shape.length===2)if(r.shape[1]>1){let i=1;return r.argMax(i)}else{if(r.shape[1]===1)return r.reshape([r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());De(o);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Gt(a,"float32")}else return null}function OL(r,e){return M(r,e)}var LQ=32;function ML(r,e){let t,n,o=e;t=o.xs,n=o.ys,x.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=PL("input",r.inputNames,t),a=PL("output",r.outputNames,n),i=s[0].shape[0];x.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),x.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let l=0;l<s.length;l++)x.assert(s[l].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[l]} has ${s[l].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let l=0;l<a.length;l++)x.assert(a[l].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function PL(r,e,t){if(t instanceof R)return[t];if(Array.isArray(t))return x.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new B(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function zQ(r){if(r.length===3)throw new Te("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function zL(r,e,t){let n=t.batchesPerEpoch!=null;if(x.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),x.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),x.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),x.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),x.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,a;if(o)if(LL(t.validationData))x.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=zQ(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),l=r.getDedupedMetricsNames(),u;o?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let c=Ex(t.callbacks,t.yieldEvery),p=t.verbose==null?1:t.verbose,{callbackList:m,history:f}=Ax(c,p,t.epochs,null,null,BQ(e,t),null,o,u);m.setModel(r),r.history=f,await m.onTrainBegin(),r.stopTraining_=!1;let d=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;d<t.epochs;){let g={};await m.onEpochBegin(d);let y=0,b=0;for(n||(h=await e.iterator());n?y<t.batchesPerEpoch:!0;){let w=await h.next();if(n&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){let{xs:_,ys:k}=ML(r,w.value),E={};E.batch=b,E.size=_[0].shape[0],await m.onBatchBegin(b,E);let N=[];if(t.classWeight!=null){let P=Mx(t.classWeight,r.outputNames);for(let W=0;W<P.length;++W)N.push(await Lx(k[W],null,P[W]))}let F=_.concat(k).concat(N),O=i(F);De(F);for(let P=0;P<l.length;++P){let W=l[P],G=O[P];E[W]=G,$t(G)}await m.onBatchEnd(b,E),Ix(E),b++,y++}if(n?y>=t.batchesPerEpoch:w.done){if(o){let _;LL(t.validationData)?_=kt(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):_=kt(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?LQ:t.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=_[k]}break}if(r.stopTraining_)break}if(await m.onEpochEnd(d,g),d++,r.stopTraining_)break}return await m.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function BQ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function LL(r){return typeof r.iterator=="function"}function VQ(r){return typeof r.next=="function"}async function BL(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Te("Verbose mode is not implemented yet.");x.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=VQ(e)?e:await e.iterator(),i=0,l=0;for(;n?l<t.batches:!0;){let u=await a.next();if(s=V(()=>{if(u.value){let{xs:c,ys:p}=ML(r,u.value),m=c.concat(p),f=V(()=>o(m));if(De(m),l===0)for(let h=0;h<f.length;++h)s.push(ce(0));let d=m[0].shape[0];for(let h=0;h<f.length;++h){let g=f[h],y=s[h];s[h]=V(()=>ee(s[h],M(d,g))),l>0&&De(y)}De(f),i+=d,++l}return s}),u.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let c=s[u];s[u]=fe(s[u],i),De(c)}return xr(s)}function zx(r){x.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function Gp(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>Ha(n,e,t-e)):Ha(r,e,t-e)}function Bx(r,e){return V(()=>r==null?null:Array.isArray(r)?r.map(t=>Bx(t,e)):bx(r,e.dtype==="int32"?e:e.toInt()))}function Vx(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function WQ(r,e,t,n,o,s,a,i,l,u,c,p,m,f,d){o==null&&(o=32),s==null&&(s=1),c==null&&(c=!0),m==null&&(m=0);let h=!1;if(l!=null&&u!=null&&(h=!0),d!=null&&(h=!0,f==null))throw new B("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,f,"steps_per_epoch"),y;g!=null&&(y=Vr(0,g)),a==null&&(a=1);let{callbackList:b,history:w}=Ax(i,a,s,m,g,f,o,h,p);b.setModel(r),r.history=w,await b.onTrainBegin(),r.stopTraining_=!1;for(let _=m;_<s;++_){await b.onEpochBegin(_);let k={};if(f!=null)throw new Te("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Te("batch shuffling is not implemneted yet");c&&x.shuffle(y);let E=Gt(y),N=Vx(g,o);for(let F=0;F<N.length;++F){let O={};if(await b.onBatchBegin(F,O),V(()=>{let P=N[F][0],W=N[F][1],G=Ha(E,P,W-P);O.batch=F,O.size=W-P;let j=Bx(t,G),X=e(j);for(let K=0;K<n.length;++K){let Y=n[K],ne=X[K];O[Y]=ne,$t(ne)}if(F===N.length-1&&h){let K=r.testLoop(l,u,o);for(let Y=0;Y<n.length;++Y){let ne=n[Y],J=K[Y];$t(J),k["val_"+ne]=J}}}),await b.onBatchEnd(F,O),Ix(O),r.stopTraining_)break}E.dispose()}if(await b.onEpochEnd(_,k),r.stopTraining_)break}return await b.onTrainEnd(),await r.history.syncData(),r.history}async function VL(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,l,u,c;try{let p=n.batchSize==null?32:n.batchSize;zx(p);let m=!1,f=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,m,p);o=f[0],s=f[1],c=f[2];let d=!1,h;if(n.validationData!=null&&n.validationData.length>0){if(d=!0,n.validationData.length===2)a=n.validationData[0],i=n.validationData[1];else throw n.validationData.length===3?new Te("validationData including sample weights is not supported yet."):new B(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let N=!0,F=await r.standardizeUserData(a,i,null,null,N,p);l=F[0],u=F[1],h=l.concat(u)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){d=!0;let N=Math.floor(o[0].shape[0]*(1-n.validationSplit)),F=o[0].shape[0];l=Gp(o,N,F),o=Gp(o,0,N),u=Gp(s,N,F),s=Gp(s,0,N),h=l.concat(u)}else n.validationSteps!=null&&(d=!0);let g=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let y=r.makeTrainFunction(),b=r.getDedupedMetricsNames(),w,_;d?(r.makeTestFunction(),w=r.testFunction,_=b.slice().concat(b.map(N=>"val_"+N))):(w=null,h=[],_=b.slice());let k=Ex(n.callbacks,n.yieldEvery);return await WQ(r,y,g,b,p,n.epochs,n.verbose,k,w,h,n.shuffle,_,n.initialEpoch,null,null)}finally{r.isTraining=!1,Nl(o,e),Nl(s,t),Nl(l,a),Nl(u,i),c!=null&&De(c)}}function J0(r){let e=[];r instanceof R&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(qa(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Nl(r,e){if(r==null)return;let t=[];if(e instanceof R)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof R)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function jQ(r){return r instanceof R}function Q0(r){return Array.isArray(r)}function WL(r){return!jQ(r)&&!Q0(r)}function jL(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let a=!1;if(Q0(r)&&r.length>0)a=!0;else if(WL(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new B(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(WL(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new B(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if(Q0(r)){if(r=r,r.length!==e.length)throw new B(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new B(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=J0(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new B(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<t[a].length;++l){if(l===0&&!n)continue;let u=i.shape[l],c=t[a][l];if(c!=null&&c>=0&&u!==c)throw new B(`Error when checking ${o}: expected ${e[a]} to have shape [${t[a]}], but got array with shape [${i.shape}].`)}}return s}function GQ(r,e,t){let n=Qo(r.map(s=>s.shape[0]));n.sort();let o=Qo(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new B(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new B(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!x.arraysEqual(n,o))throw new B(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function UQ(r,e,t){let n=[Ki,Wp,cc];for(let o=0;o<r.length;++o){let s=r[o],a=e[o],i=t[o];if(a!=null){if(a===cc&&s.shape[s.shape.length-1]===1)throw new B(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let l=s.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){let p=l[c],m=u[c];if(m!=null&&p!==m)throw new B(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function GL(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new B(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new B(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new B(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<t[a].length;++l){if(l===0&&!n)continue;let u=i.shape[l],c=t[a][l];if(c!=null&&c!==u)throw new B(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function qQ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var HQ="layers-model",Nn=class extends Gn{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new B("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");DL(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=EL(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Lr))throw new B("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new B(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Dx(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new B(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Dx(i))}else{let a=Dx(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Os("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let o=qQ(e.metrics,this.outputNames),s=(a,i,l)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([l,a])};Os("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=o[a];(u=>{let c="",p,m,f;for(let d of u){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===Wp?["accuracy","acc"].indexOf(d)!==-1?m=rd:["crossentropy","ce"].indexOf(d)!==-1&&(m=$x):this.lossFunctions[a]===Vp?["accuracy","acc"].indexOf(d)!==-1?m=Rx:["crossentropy","ce"].indexOf(d)!==-1&&(m=K0):["accuracy","acc"].indexOf(d)!==-1?m=nd:["crossentropy","ce"].indexOf(d)!==-1&&(m=od);let y;["accuracy","acc"].indexOf(d)!==-1?y="acc":["crossentropy","ce"].indexOf(d)!==-1&&(y="ce"),f=m,p=c+y}else f=TL(d),p=c+sd(d);let h;Os(p,()=>{h=f}),s(a,p,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;zx(o);let s=!0,a=this.standardizeUserDataXY(e,t,s,o);try{let i=a[0].concat(a[1]);this.makeTestFunction();let l=this.testFunction,u=this.testLoop(l,i,o,n.verbose,n.steps);return xr(u)}finally{Nl(a[0],e),Nl(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),BL(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new B(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new B(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new B("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),a=new Ms;if(e instanceof R&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new B(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(let l of this.inputs){let u=e[l.name];if(u==null)throw new B(`No value is provided for the model's input ${l.name}`);a.add(l,u)}let i=mc(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Yo(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let l=a.indexOf(e[i]);if(l!==-1&&(t[i]=s[l],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,a)=>{s==null&&o.push(e[a])}),new B(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return V(()=>{let o=this.checkNumSamples(e);if(n)throw new Te("Verbose predictLoop() is not implemented yet.");let s=Vx(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)V(()=>{let u=s[i][0],c=s[i][1],p=Gp(e,u,c),m=[];if(Array.isArray(p))for(let d=0;d<p.length;++d)m.push({key:this.inputs[d],value:p[d]});else m.push({key:this.inputs[0],value:p});let f=new Ms(m);return mc(this.outputs,f)}).forEach((u,c)=>a[c].push(u));return xr(a.map(i=>Qe(i,0)))})}predict(e,t={}){let n=J0(e);GL(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return zx(o),this.predictLoop(n,o)}finally{Nl(n,e)}}predictOnBatch(e){GL(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new Br("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===Vp?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=jL(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=jL(t,this.feedOutputNames,s,!1,"target"),GQ(e,t,null),UQ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!=0)throw new B(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,a){let[i,l]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){let c=Mx(o,this.outputNames);u=[];for(let p=0;p<c.length;++p)u.push(await Lx(l[p],null,c[p]))}return[i,l,u]}testLoop(e,t,n,o=0,s){return V(()=>{let a=this.checkNumSamples(t,n,s,"steps"),i=[];if(o>0)throw new Te("Verbose mode is not implemented yet.");if(s!=null)throw new Te("steps mode in testLoop() is not implemented yet");{let l=Vx(a,n),u=Gt(Vr(0,a));for(let c=0;c<l.length;++c){let p=l[c][0],m=l[c][1],f=Ha(u,p,m-p),d=Bx(t,f),h=e(d);if(c===0)for(let g=0;g<h.length;++g)i.push(ce(0));for(let g=0;g<h.length;++g){let y=h[g];i[g]=ee(i[g],M(m-p,y))}}for(let c=0;c<i.length;++c)i[c]=fe(i[c],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;M0(e,o)>1&&(s+=`_${M0(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let p=[];for(let h=0;h<this.inputs.length;++h)p.push({key:this.inputs[h],value:n[h]});let m=new Ms(p),f=mc(this.outputs,m,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let y=this.lossFunctions[h](o[h],f[h]);s[h]!=null&&(y=OL(y,s[h]));let b=wt(y);t.push(b),h===0?d=y:d=ee(d,y)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let y=this.metricsTensors[h][0],b=this.metricsTensors[h][1];g=wt(y(o[b],f[b]))}$t(g),a.push(g)}return d=wt(d),this.calculateLosses().forEach(h=>{d=ee(d,h)}),d},l=this.collectedTrainableWeights.map(p=>p.read()),u=!0;return[this.optimizer_.minimize(i,u,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>V(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:o[u]});let i=new Ms(a),l=mc(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let c=this.lossFunctions[u],p=wt(c(s[u],l[u]));u===0?n=p:n=ee(n,p),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let c=this.metricsTensors[u][0],p=this.metricsTensors[u][1],m=wt(c(s[p],l[p]));t.push(m)}return t})}async fit(e,t,n={}){return VL(this,e,t,n)}async fitDataset(e,t){return zL(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],i=this.makeTrainFunction()(o.concat(s)),l=[];for(let u of i){let c=await u.data();l.push(c[0])}return De(i),xr(l)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Hc().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Hc().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Zo(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Zo(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=Zo(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Zo(sd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Zo(sd(e)));{let e={};for(let t in this.metrics)e[t]=Zo(sd(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=pc(e.optimizer_config),n=en(t),o;if(typeof e.loss=="string")o=Ga(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>Ga(a));else if(e.loss!=null){o={};for(let a in e.loss)o[a]=Ga(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>Ga(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=Ga(e.metrics[a])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=Ir.getSaveHandlers(e);if(u.length===0)throw new B(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new B(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new B("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Ir.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,i={modelTopology:this.toJSON(s,o),format:HQ,generatedBy:`TensorFlow.js tfjs-layers v${jp}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:c,specs:p}=await Ir.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...p),n.data=Ir.concatenateArrayBuffers([n.data,c])}if(this.userDefinedMetadata!=null){let u=!0;Y0(this.userDefinedMetadata,this.name,u),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){Y0(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Nn.className="Model";te.registerClass(Nn);var eC=class extends Nn{};eC.className="Functional";te.registerClass(eC);async function UL(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=pc(t),o=en(n,e);if(r.weightsManifest!=null){let s=await Ir.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),De(s)}return o}async function qL(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Ir.getLoadHandlers(r,e);if(t.length===0)t.push(Ir.browserHTTPRequest(r,e));else if(t.length>1)throw new B(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return KQ(r,void 0,e)}async function KQ(r,e,t){if(t==null&&(t={}),r.load==null)throw new B("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=en(pc(o),e,a),l=n.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new B("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:c}=XQ(n.weightData,n.weightSpecs);i.loadWeights(u,s),i.optimizer!=null&&c.length>0&&await i.optimizer.setWeights(c),De(u),De(c.map(p=>p.tensor))}return i}function XQ(r,e){let t=Ir.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var Xi=class extends Nn{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:kl("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new B(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Xi||e instanceof Nn,n;if(t){if(n=e,n.outputs.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new B("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new B("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=Cx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new B(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=q0(this.outputs[0])}this.inboundNodes=[],new Cl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Yo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(et(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Nn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new B("Legacy serialization format not supported yet.");s=t}else x.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof Xi))throw new Te(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let l of s){let c=en(l,void 0,o);o&&c.setFastWeightInitDuringBuild(!0),i.add(c)}return i}set stopTraining(e){if(this.model==null)throw new B("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new B("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};Xi.className="Sequential";te.registerClass(Xi);function HL(r){return new Nn(r)}function KL(r){return new Xi(r)}function XL(r,e){return e==null&&(e={}),qL(r,e)}function Wx(r){return Cx(r)}function YL(r,e){cn.registerCallbackConstructor(r,e)}var pn=class extends te.Serializable{getConfig(){return{}}},tC=class extends pn{apply(e,t=1){return gL(e,t)}};tC.className="elu";te.registerClass(tC);var rC=class extends pn{apply(e){return zu(e)}};rC.className="selu";te.registerClass(rC);var nC=class extends pn{apply(e){return Tr(e)}};nC.className="relu";te.registerClass(nC);var oC=class extends pn{apply(e){return V(()=>Vn(6,Tr(e)))}};oC.className="relu6";te.registerClass(oC);var sC=class extends pn{apply(e){return e}};sC.className="linear";te.registerClass(sC);var iC=class extends pn{apply(e){return Kr(e)}};iC.className="sigmoid";te.registerClass(iC);var aC=class extends pn{apply(e){return yL(e)}};aC.className="hardSigmoid";te.registerClass(aC);var lC=class extends pn{apply(e){return Ns(e)}};lC.className="softplus";te.registerClass(lC);var uC=class extends pn{apply(e){return xL(e)}};uC.className="softsign";te.registerClass(uC);var cC=class extends pn{apply(e){return Mi(e)}};cC.className="tanh";te.registerClass(cC);var id=class extends pn{apply(e,t=-1){return Ra(e,t)}};id.className="softmax";te.registerClass(id);var pC=class extends pn{apply(e,t=-1){return $u(e,t)}};pC.className="logSoftmax";te.registerClass(pC);var mC=class extends pn{apply(e,t=1){return V(()=>Kr(e.mul(t)).mul(e))}};mC.className="swish";te.registerClass(mC);function Ls(r){return r.getClassName()}function fC(r,e={}){return Gi(r,te.SerializationMap.getMap().classNameMap,e,"activation")}function zs(r){if(r==null){let e={};return e.className="linear",e.config={},fC(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},fC(e)}else return r instanceof pn?r:fC(r)}function dC(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var hC=class extends te.Serializable{},fc=class extends hC{constructor(e){super();dC(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return V(()=>{let t=pt([1]);return this.hasL1&&(t=ee(t,be(M(this.l1,At(e))))),this.hasL2&&(t=ee(t,be(M(this.l2,lc(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};fc.className="L1L2";te.registerClass(fc);function ZL(r){return dC(r),new fc({l1:r!=null?r.l1:null,l2:0})}function JL(r){return dC(r),new fc({l2:r!=null?r.l2:null,l1:0})}var QL={l1l2:"L1L2"};function ut(r){return Sp(r)}function ez(r,e={}){return Gi(r,te.SerializationMap.getMap().classNameMap,e,"regularizer")}function Ct(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in QL?QL[r]:r,config:{}};return ez(t)}else return r instanceof hC?r:ez(r)}var ad=class extends Le{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let n=Tr(e);return this.maxValue!=null&&(n=ar(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};ad.className="ReLU";te.registerClass(ad);var ld=class extends Le{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return Na(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};ld.className="LeakyReLU";te.registerClass(ld);var ud=class extends Le{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ht(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ct(e.alphaRegularizer),this.alphaConstraint=Bt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new B(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=et(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Dt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oe(e),$a(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Tt(this.alphaInitializer),alphaRegularizer:ut(this.alphaRegularizer),alphaConstraint:zt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};ud.className="PReLU";te.registerClass(ud);var cd=class extends Le{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Te(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return Is(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};cd.className="ELU";te.registerClass(cd);var pd=class extends Le{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Oe(e);return n.mul(Ua(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};pd.className="ThresholdedReLU";te.registerClass(pd);var md=class extends Le{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new id().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Oe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};md.className="Softmax";te.registerClass(md);function Tl(r,e,t){if(typeof r=="number")return Yo(r,e);if(r.length!==e)throw new B(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!pL(o))throw new B(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function mn(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function fd(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+Ps([t-e,0]);else if(n==="same")r=r*e;else throw new B(`Unsupport padding mode: ${n}.`);return r}function dd(r,e){return V(()=>(Ot(e),e==="channelsFirst"?qe(r,[0,2,3,1]):r))}function gC(r,e){return V(()=>(Ot(e),e==="channelsFirst"?qe(r,[0,2,3,4,1]):r))}function YQ(r,e,t,n=1,o="valid",s,a=1){return V(()=>{if(s==null&&(s=Jr()),Ot(s),r.shape.length!==3)throw new B(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new B(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new B(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=qe(r,[0,2,1])),o==="causal")throw new Te("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Su(r,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=ln(i,t)),i})}function tz(r,e,t,n=[1,1],o="valid",s,a,i=null){return V(()=>{if(s==null&&(s=Jr()),Ot(s),r.rank!==3&&r.rank!==4)throw new B(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new B(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let l=dd(r,s);if(o==="causal")throw new Te("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Vo.conv2d({x:l,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(l=qe(l,[0,3,1,2])),l})}function ZQ(r,e,t,n=[1,1,1],o="valid",s,a){return V(()=>{if(s==null&&(s=Jr()),Ot(s),r.rank!==4&&r.rank!==5)throw new B(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new B(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=gC(r,s);if(o==="causal")throw new Te("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Om(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=ln(i,t)),s==="channelsFirst"&&(i=qe(i,[0,4,1,2,3])),i})}var Up=class extends Le{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Up.verifyArgs(t),this.rank=e,Kt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Te(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Tl(t.kernelSize,e,"kernelSize"),this.strides=Tl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Qr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ot(this.dataFormat),this.activation=zs(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=ht(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Bt(t.biasConstraint),this.biasRegularizer=Ct(t.biasRegularizer),this.activityRegularizer=Ct(t.activityRegularizer),this.dilationRate=Tl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new B(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new B(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new B(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(jn("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!dx(e.kernelSize,"number",1,3))throw new B(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ls(this.activation),useBias:this.useBias,biasInitializer:Tt(this.biasInitializer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},dc=class extends Up{constructor(e,t){super(e,t);this.kernel=null,dc.verifyArgs(t),this.filters=t.filters,Kt(this.filters,"filters"),this.kernelInitializer=ht(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Bt(t.kernelConstraint),this.kernelRegularizer=Ct(t.kernelRegularizer)}build(e){e=et(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return V(()=>{e=Oe(e);let n,o=this.bias==null?null:this.bias.read(),s=hx(this.activation.getClassName());if(s!=null&&this.rank===2)n=tz(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=YQ(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=tz(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=ZQ(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Te("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=et(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=mn(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Tt(this.kernelInitializer),kernelRegularizer:ut(this.kernelRegularizer),kernelConstraint:zt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new B(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},El=class extends dc{constructor(e){super(2,e);El.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!dx(e.kernelSize,"number",1,2))throw new B(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};El.className="Conv2D";te.registerClass(El);var hc=class extends dc{constructor(e){super(3,e);hc.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new B(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};hc.className="Conv3D";te.registerClass(hc);var hd=class extends El{constructor(e){super(e);if(this.inputSpec=[new Dt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=et(e),e.length!==4)throw new B("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return V(()=>{let n=Oe(e);if(n.shape.length!==4)throw new B(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let l=o[a],u=o[i],c=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],f=this.strides[1],d=fd(l,m,c,this.padding),h=fd(u,f,p,this.padding),g=[s,d,h,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,1]));let y=Nu(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=qe(y,[0,3,1,2])),this.bias!=null&&(y=ln(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=et(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[o]=fd(t[o],l,a,this.padding),t[s]=fd(t[s],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};hd.className="Conv2DTranspose";te.registerClass(hd);var xC=class extends dc{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new B("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new B("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new B(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=ht(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ct(t.depthwiseRegularizer),this.depthwiseConstraint=Bt(t.depthwiseConstraint),this.pointwiseInitializer=ht(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ct(t.pointwiseRegularizer),this.pointwiseConstraint=Bt(t.pointwiseConstraint)}build(e){if(e=et(e),e.length<this.rank+2)throw new B(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Dt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return V(()=>{e=Oe(e);let n;if(this.rank===1)throw new Te("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=qe(e,[0,2,3,1])),n=Km(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=ln(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=qe(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Tt(this.depthwiseInitializer),e.pointwiseInitializer=Tt(this.pointwiseInitializer),e.depthwiseRegularizer=ut(this.depthwiseRegularizer),e.pointwiseRegularizer=ut(this.pointwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseConstraint),e.pointwiseConstraint=zt(this.pointwiseConstraint),e}};xC.className="SeparableConv";var gd=class extends xC{constructor(e){super(2,e)}};gd.className="SeparableConv2D";te.registerClass(gd);var gc=class extends dc{constructor(e){super(1,e);gc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!dx(e.kernelSize,"number",1,1))throw new B(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};gc.className="Conv1D";te.registerClass(gc);var xd=class extends Le{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return V(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){let n=jf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return jf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=jf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return jf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};xd.className="Cropping2D";te.registerClass(xd);var yd=class extends Le{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ot(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,lL(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return V(()=>{let n=Oe(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=qe(n,[0,2,3,1]);let s=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?n.resizeNearestNeighbor([s,a]):n.resizeBilinear([s,a]);return qe(i,[0,3,1,2])}else{let s=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?n.resizeNearestNeighbor([s,a]):n.resizeBilinear([s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};yd.className="UpSampling2D";te.registerClass(yd);function JQ(r,e,t=[1,1],n="valid",o,s){return V(()=>{o==null&&(o=Jr()),Ot(o);let a=dd(r,o);if(r.rank!==4)throw new B(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new B(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=zn(a,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=qe(a,[0,3,1,2])),a})}var bd=class extends Up{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=ht(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Bt(e.depthwiseConstraint),this.depthwiseRegularizer=Ct(e.depthwiseRegularizer)}build(e){if(e=et(e),e.length<4)throw new B(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{e=Oe(e);let n=JQ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=ln(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=mn(t,this.kernelSize[0],this.padding,this.strides[0]),a=mn(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,a]:[e[0],s,a,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Tt(this.depthwiseInitializer),e.depthwiseRegularizer=ut(this.depthwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseRegularizer),e}};bd.className="DepthwiseConv2D";te.registerClass(bd);function yC(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new B("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function bC(r,e,t,n=!1,o,s,a=!1,i=!1){return V(()=>{let l=e.shape.length;if(l<3)throw new B(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Vr(2,l));if(e=qe(e,u),s!=null)throw new Te("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=o.asType("bool").asType("float32"),o.rank===l-1&&(o=wr(o,-1)),o=qe(o,u)),n&&(e=Zt(e,0),o!=null&&(o=Zt(o,0)));let c=[],p,m=t,f=e.shape[0],d=pr(e),h;o!=null&&(h=pr(o));for(let y=0;y<f;++y){let b=d[y],w=V(()=>r(b,m));if(o==null)p=w[0],m=w[1];else{let _=V(()=>{let k=h[y],E=nr(k).sub(k),N=w[0].mul(k).add(m[0].mul(E)),F=m.map((O,P)=>w[1][P].mul(k).add(O.mul(E)));return{output:N,newStates:F}});p=_.output,m=_.newStates}i&&c.push(p)}let g;return i&&(g=jt(c,1)),[p,g,m]})}var fn=class extends Le{constructor(e){super(e);let t;if(e.cell==null)throw new B("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new qp({cells:e.cell}):t=e.cell,t.stateSize==null)throw new B("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Dt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Vr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){kx(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[o].concat(s)}else return o}computeMask(e,t){return V(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Te("Constants support is not implemented in RNN yet.");kx(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Dt({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new Te("Constants support is not implemented in RNN yet.");this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!x.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new B(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Dt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Sn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>pt([n,o])):this.states_=[pt([n,this.cell.stateSize])];else if(e==null)De(this.states_),this.keptStates!=null&&(De(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>pt([n,o])):this.states_[0]=pt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):De(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!x.arraysEqual(s.shape,i))throw new B(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>$t(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=yC(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new Dt({shape:u.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof jr){let u=[e].concat(a),c=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=c;let m=super.apply(u,t);return this.inputSpec=p,m}else return super.apply(e,t)}call(e,t){return V(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Oe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new B(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:o},u=bC((d,h)=>{let g=this.cell.call([d].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),c=u[0],p=u[1],m=u[2];this.stateful&&this.resetStates(m,o);let f=this.returnSequences?p:c;return this.returnState?[f].concat(m):f})}getInitialState(e){return V(()=>{let t=pt(e.shape);return t=be(t,[1,2]),t=qa(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?yx(t,[1,n]):t):this.cell.stateSize>1?[yx(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===fn.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let o=t.cell,s=en(o,n);return new e(Object.assign(t,{cell:s}))}};fn.className="RNN";te.registerClass(fn);var Al=class extends Le{},Hp=class extends Al{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Kt(this.units,"units"),this.activation=zs(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=Bt(e.kernelConstraint),this.recurrentConstraint=Bt(e.recurrentConstraint),this.biasConstraint=Bt(e.biasConstraint),this.dropout=ac([1,Ps([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ac([1,Ps([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=et(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new B(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ka({ones:()=>nr(e),rate:this.dropout,training:o})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ka({ones:()=>nr(n),rate:this.recurrentDropout,training:o}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=ts(M(e,a),this.kernel.read()):s=ts(e,this.kernel.read()),this.bias!=null&&(s=ln(s,this.bias.read())),i!=null&&(n=M(n,i));let l=ee(s,ts(n,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ls(this.activation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};Hp.className="SimpleRNNCell";te.registerClass(Hp);var wd=class extends fn{constructor(e){e.cell=new Hp(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};wd.className="SimpleRNN";te.registerClass(wd);var Kp=class extends Al{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new B("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Kt(this.units,"units"),this.activation=zs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=zs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=Bt(e.kernelConstraint),this.recurrentConstraint=Bt(e.recurrentConstraint),this.biasConstraint=Bt(e.biasConstraint),this.dropout=ac([1,Ps([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ac([1,Ps([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=et(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new B(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ka({ones:()=>nr(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ka({ones:()=>nr(o),rate:this.recurrentDropout,training:n,count:3}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,l,u;0<this.dropout&&this.dropout<1&&(e=M(e,s[0]));let c=ts(e,this.kernel.read());this.useBias&&(c=ln(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=M(o,a[0]));let p=this.recurrentKernel.read(),[m,f]=cr(p,[2*this.units,this.units],p.rank-1),d=ts(o,m),[h,g,y]=cr(c,3,c.rank-1),[b,w]=cr(d,2,d.rank-1);i=this.recurrentActivation.apply(ee(h,b)),l=this.recurrentActivation.apply(ee(g,w));let _=ts(M(l,o),f);u=this.activation.apply(ee(y,_));let k=ee(M(i,o),M(ee(1,He(i)),u));return[k,k]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ls(this.activation),recurrentActivation:Ls(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};Kp.className="GRUCell";te.registerClass(Kp);var _d=class extends fn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kp(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};_d.className="GRU";te.registerClass(_d);var Dl=class extends Al{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Kt(this.units,"units"),this.activation=zs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=zs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=Bt(e.kernelConstraint),this.recurrentConstraint=Bt(e.recurrentConstraint),this.biasConstraint=Bt(e.biasConstraint),this.dropout=ac([1,Ps([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ac([1,Ps([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=et(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;o=new(t=class extends un{apply(l,u){let c=s.apply([a]),p=new uc().apply([a]),m=s.apply([a*2]);return j0(j0(c,p),m)}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return V(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new B(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ka({ones:()=>nr(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ka({ones:()=>nr(o),rate:this.recurrentDropout,training:n,count:4}));let a=this.dropoutMask,i=this.recurrentDropoutMask,l,u,c,p;0<this.dropout&&this.dropout<1&&(e=M(e,a[0]));let m=ts(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=M(o,i[0])),m=ee(m,ts(o,this.recurrentKernel.read())),this.useBias&&(m=ln(m,this.bias.read()));let[f,d,h,g]=cr(m,4,m.rank-1);l=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(d),c=ee(M(u,s),M(l,this.activation.apply(h))),p=this.recurrentActivation.apply(g);let y=M(p,this.activation.apply(c));return[y,y,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ls(this.activation),recurrentActivation:Ls(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};Dl.className="LSTMCell";te.registerClass(Dl);var vd=class extends fn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Dl(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};vd.className="LSTM";te.registerClass(vd);var qp=class extends Al{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return V(()=>{e=e;let n=e.slice(1),o=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let l=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=l.call(a,t),s.push(a.slice(1))}n=[];for(let i of s.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){kx(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{Os(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return Object.assign({},e,o)}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(en(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Jf(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}zp(t)}};qp.className="StackedRNNCells";te.registerClass(qp);function Ka(r){let{ones:e,rate:t,training:n=!1,count:o=1}=r,s=()=>wx(e(),t),a=()=>vl(s,e,n);return!o||o<=1?$t(a().clone()):Array(o).fill(void 0).map(a).map(l=>$t(l.clone()))}var QQ=function(r,e){var t={};for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&e.indexOf(n)<0&&(t[n]=r[n]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,n=Object.getOwnPropertySymbols(r);o<n.length;o++)e.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(r,n[o])&&(t[n[o]]=r[n[o]]);return t};var wC=class extends fn{constructor(e){if(e.unroll)throw new Te("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Te("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Dt({ndim:5})]}call(e,t){return V(()=>{if(this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new B("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return V(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=pt(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Sn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>pt(s)):this.states_=[pt(s)];else if(e==null)De(this.states_),this.keptStates!=null&&(De(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>pt(s)):this.states_[0]=pt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):De(this.states_);for(let i=0;i<this.states_.length;++i){let l=e[i],u=s;if(!x.arraysEqual(l.shape,u))throw new B(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[i]=l}}this.states_=this.states_.map(i=>$t(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,l=t==="channelsFirst",u=e[l?3:2],c=e[l?4:3],p=mn(u,o[0],s,a[0],i[0]),m=mn(c,o[1],s,a[1],i[1]);return[...e.slice(0,2),...l?[n,p,m]:[p,m,n]]}};wC.className="ConvRNN2D";var Xp=class extends Dl{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t}));this.filters=t,Kt(this.filters,"filters"),this.kernelSize=Tl(n,2,"kernelSize"),this.kernelSize.forEach(l=>Kt(l,"kernelSize")),this.strides=Tl(o||1,2,"strides"),this.strides.forEach(l=>Kt(l,"strides")),this.padding=s||"valid",Qr(this.padding),this.dataFormat=a||"channelsLast",Ot(this.dataFormat),this.dilationRate=Tl(i||1,2,"dilationRate"),this.dilationRate.forEach(l=>Kt(l,"dilationRate"))}build(e){var t;e=et(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=4,a=this.kernelSize.concat([o,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let u=this.biasInitializer,c=this.filters;l=new(t=class extends un{apply(m,f){let d=u.apply([c]),h=Nr([c]),g=u.apply([c*2]);return Ep([d,h,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return V(()=>{if(e.length!==3)throw new B(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ka({ones:()=>nr(o),rate:this.dropout,training:n,count:i}));let l=this.dropoutMask,u=(ie,ae,ue)=>!ae||!ae[ue]?ie:M(ae[ue],ie),c=u(o,l,0),p=u(o,l,1),m=u(o,l,2),f=u(o,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ka({ones:()=>nr(s),rate:this.recurrentDropout,training:n,count:i}));let d=this.recurrentDropoutMask,h=u(s,d,0),g=u(s,d,1),y=u(s,d,2),b=u(s,d,3),w=3,[_,k,E,N]=cr(this.kernel.read(),i,w),[F,O,P,W]=this.useBias?cr(this.bias.read(),i):[null,null,null,null];c=this.inputConv(c,_,F,this.padding),p=this.inputConv(p,k,O,this.padding),m=this.inputConv(m,E,P,this.padding),f=this.inputConv(f,N,W,this.padding);let[G,j,X,K]=cr(this.recurrentKernel.read(),i,w);h=this.recurrentConv(h,G),g=this.recurrentConv(g,j),y=this.recurrentConv(y,X),b=this.recurrentConv(b,K);let Y=this.recurrentActivation.apply(ee(c,h)),ne=this.recurrentActivation.apply(ee(p,g)),J=ee(M(ne,a),M(Y,this.activation.apply(ee(m,y)))),Q=M(this.recurrentActivation.apply(ee(f,b)),this.activation.apply(J));return[Q,Q,J]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=QQ(e,["units"]),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,o)}inputConv(e,t,n,o){let s=Xr(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?ln(s,n,this.dataFormat):s}recurrentConv(e,t){return Xr(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Xp.className="ConvLSTM2DCell";te.registerClass(Xp);var kd=class extends wC{constructor(e){let t=new Xp(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};kd.className="ConvLSTM2D";te.registerClass(kd);var Yp=class extends Le{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return vl(()=>wx(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Yp.className="Dropout";te.registerClass(Yp);var Cd=class extends Yp{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Cd.className="SpatialDropout1D";te.registerClass(Cd);var Id=class extends Le{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Kt(this.units,"units"),this.activation=zs(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Bt(e.kernelConstraint),this.biasConstraint=Bt(e.biasConstraint),this.kernelRegularizer=Ct(e.kernelRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.activityRegularizer=Ct(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=et(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=et(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=hx(this.activation.getClassName()),s;return o!=null?s=ts(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=ts(n,this.kernel.read()),this.bias!=null&&(s=ln(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Ls(this.activation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Id.className="Dense";te.registerClass(Id);var Sd=class extends Le{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=et(e);for(let t of e.slice(1))if(t==null)throw new B(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],es(e,1)]}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=n.transpose(o)}return hL(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Sd.className="Flatten";te.registerClass(Sd);var Nd=class extends Le{constructor(e){super(e);this.supportsMasking=!0,this.activation=zs(e.activation)}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.activation.apply(n)})}getConfig(){let e={activation:Ls(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Nd.className="Activation";te.registerClass(Nd);var Td=class extends Le{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return V(()=>(e=Oe(e),fL(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Td.className="RepeatVector";te.registerClass(Td);var Ed=class extends Le{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,a=null;for(let l=0;l<o.length;++l){let u=o[l];if(this.isUnknown(u))if(a===null)a=l;else throw new B("Can only specifiy one unknown dimension.");else s*=u}let i=es(e);if(a!==null){if(s===0||i%s!=0)throw new B(n);o[a]=i/s}else if(i!==s)throw new B(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return n.reshape(s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Ed.className="Reshape";te.registerClass(Ed);var Ad=class extends Le{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Vr(1,e.dims.length+1);if(!x.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Dt({ndim:this.dims.length+1})]}computeOutputShape(e){e=et(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return qe(Oe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Ad.className="Permute";te.registerClass(Ad);var Dd=class extends Le{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Oe(e),o=-1;return ll(vn(n,this.maskValue),o)}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=-1,s=!0,a=ll(vn(n,this.maskValue),o,s);return n.mul(a.asType(n.dtype))})}};Dd.className="Masking";te.registerClass(Dd);var $d=class extends Le{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(kt(e.inputLength))}this.inputDim=e.inputDim,Kt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Kt(this.outputDim,"outputDim"),this.embeddingsInitializer=ht(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ct(e.embeddingsRegularizer),this.activityRegularizer=Ct(e.activityRegularizer),this.embeddingsConstraint=Bt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return V(()=>this.maskZero?(e=Oe(e),vn(e,Se(e))):null)}computeOutputShape(e){if(e=et(e),this.inputLength==null)return[...e,this.outputDim];let t=kt(this.inputLength);if(t.length!==e.length-1)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],a=e[o+1];if(s!=null&&a!=null&&s!==a)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);return n.dtype!=="int32"&&(n=Ua(n,"int32")),bx(this.embeddings.read(),n.as1D()).reshape(et(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Tt(this.embeddingsInitializer),embeddingsRegularizer:ut(this.embeddingsRegularizer),activityRegularizer:ut(this.activityRegularizer),embeddingsConstraint:zt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};$d.className="Embedding";te.registerClass($d);var $l=class extends Le{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Te}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],a=t[o];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new B("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[et(e)]),e=e,e.length<2)throw new B(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=Qo(t),t.length>1)throw new B(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&Qo(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return V(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=Ps(o);for(let a of e){let i=a.rank;for(let l=0;l<s-i;++l)a=qa(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let l of e){let u=l.rank;if(u==null){let c=l.shape,p=c[0],m=c.slice(1).concat([p]),f=l.reshape([p].concat(es(c.slice(1))));f=qe(f,[1,0]),f=f.reshape(m),n.push(f),s=!0}else if(u>1){let c=Vr(1,u).concat([0]);n.push(qe(l,c)),s=!0}else n.push(l)}let a=this.mergeFunction(n),i=a.rank;if(s){if(i==null){let l=a.shape,u=l.length,c=l[u-1],p=[c].concat(l.slice(0,l.length-1));a=qe(a.reshape([-1,c]),[1,0]).reshape(p)}else if(i>1){let l=[i-1].concat(Vr(0,i-1));a=qe(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=Qo(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return V(()=>{if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an Array");if(!Array.isArray(e))throw new B("`inputs` should be an Array");if(t.length!==e.length)throw new B(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:wr(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=hr(n,t[o]);return n})}},Rd=class extends $l{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ee(t,e[n]);return t})}};Rd.className="Add";te.registerClass(Rd);var Fd=class extends $l{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=M(t,e[n]);return t})}};Fd.className="Multiply";te.registerClass(Fd);var Od=class extends $l{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ee(t,e[n]);return M(1/e.length,t)})}};Od.className="Average";te.registerClass(Od);var Pd=class extends $l{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Sr(t,e[n]);return t})}};Pd.className="Maximum";te.registerClass(Pd);var Md=class extends $l{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Vn(t,e[n]);return t})}};Md.className="Minimum";te.registerClass(Md);var Ld=class extends $l{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new B("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let a=!1;for(let i of n)if(x.arraysEqual(i,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new B("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return V(()=>Ep(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new B("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new B("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new B(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return V(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(nr(e[a]).asType("bool")):t[a].rank<e[a].rank?o.push(wr(t[a],-1)):o.push(t[a]);let s=Qe(o,this.axis);return ku(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Ld.className="Concatenate";te.registerClass(Ld);function zd(r,e){for(;r<0;)r+=e;return r}function eee(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Te("batchDot is not implemented for tensors of 4D or higher rank yet");if(x.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),x.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Te("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return V(()=>{let a;if(n>o){a=n-o;let l=[];for(let u=0;u<a;++u)l.push(1);e=e.reshape(e.shape.concat(l))}else if(o>n){a=o-n;let l=[];for(let u=0;u<a;++u)l.push(1);r=r.reshape(r.shape.concat(l))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=r.mul(e).sum(s[0]):i=r.transpose([1,0]).mul(e).sum(s[1]);else{let l=s[0]!==r.shape.length-1,u=s[1]===e.shape.length-1;i=r.matMul(e,l,u)}if(a>0){let l;n>o?l=n+o-3:l=n-1;let u=[];for(let c=l;c<l+a;++c)u.push(c);i=i.squeeze(u)}return i.shape.length===1&&(i=i.expandDims(1)),i})}var Bd=class extends $l{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){x.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Te("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new B(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new B(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,a)=>zd(s,e[a].shape.length)):o=[zd(this.axes,t.shape.length),zd(this.axes,n.shape.length)],this.normalize&&(t=Qf(t,o[0]),n=Qf(n,o[1])),eee(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[zd(this.axes,e.length),zd(this.axes,t.length)],n}computeOutputShape(e){x.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Te("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Bd.className="Dot";te.registerClass(Bd);var Vd=class extends Le{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);return vl(()=>Ap(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}};Vd.className="GaussianNoise";te.registerClass(Vd);var Wd=class extends Le{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.rate>0&&this.rate<1?vl(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return n.mul(Ap(n.shape,1,s))},()=>n,t.training||!1):n})}};Wd.className="GaussianDropout";te.registerClass(Wd);var jd=class extends Le{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return V(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return vl(()=>{let s=Oe(e),a=1.6732632423543772,i=1.0507009873554805,l=-a*i,u=Pr(Ts(n),this.rate);u=Ua(u,"float32");let c=((1-this.rate)*(1+this.rate*l**2))**-.5,p=-c*l*this.rate;return s.mul(u).add(u.add(-1).mul(l)).mul(c).add(p)},()=>Oe(e),t.training||!1)}return e})}};jd.className="AlphaDropout";te.registerClass(jd);function Gd(r,e,t,n,o,s=.001){let a;if(r.rank===2)a=bw(r,e,t,n,o,s);else if(r.rank===3)a=ww(r,e,t,n,o,s);else if(r.rank===4)a=_w(r,e,t,n,o,s);else throw new Te(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function tee(r,e,t,n,o=.001){return V(()=>{let s=Zc(r,n),a=s.mean,i=s.variance;return[Gd(r,a,i,t,e,o),a,i]})}function ree(r,e,t,n,o=.001){return V(()=>{let s=Zc(r,n),a=s.mean,i=s.variance,l=[];for(let d of Vr(0,r.rank))n.indexOf(d)!==-1?l.push(1):l.push(r.shape[d]);let u=a.reshape(l),c=i.reshape(l),p=e==null?null:e.reshape(l),m=t==null?null:t.reshape(l);return[Gd(r,u,c,m,p,o),a,i]})}function nee(r,e,t,n,o=.001){return x.arraysEqual(n.slice().sort(),Vr(0,r.rank-1))?tee(r,e,t,n,o):ree(r,e,t,n,o)}var Ud=class extends Le{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ht(e.betaInitializer||"zeros"),this.gammaInitializer=ht(e.gammaInitializer||"ones"),this.movingMeanInitializer=ht(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ht(e.movingVarianceInitializer||"ones"),this.betaConstraint=Bt(e.betaConstraint),this.gammaConstraint=Bt(e.gammaConstraint),this.betaRegularizer=Ct(e.betaRegularizer),this.gammaRegularizer=Ct(e.gammaRegularizer)}build(e){e=et(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new B(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Dt({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return V(()=>{let n=t.training==null?!1:t.training,o=Oe(e),s=o.shape,a=s.length,i=Vr(0,a),l=this.axis>=0?this.axis:this.axis+a;i.splice(l,1);let u=Yo(1,a);u[l]=s[l];let c=i.slice();c.sort();let p=!x.arraysEqual(c,Vr(0,a).slice(0,a-1)),m=()=>{if(p){let b=this.movingMean.read().reshape(u),w=this.movingVariance.read().reshape(u),_=this.center?this.beta.read().reshape(u):null,k=this.scale?this.gamma.read().reshape(u):null;return Gd(o,b,w,_,k,this.epsilon)}else return Gd(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return m();let[f,d,h]=nee(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(b,w,_)=>{V(()=>{let k=1-_,E=b.read(),N=E.sub(w).mul(k);b.write(E.sub(N))})};return(()=>{g(this.movingMean,d,this.momentum),g(this.movingVariance,h,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tt(this.betaInitializer),gammaInitializer:Tt(this.gammaInitializer),movingMeanInitializer:Tt(this.movingMeanInitializer),movingVarianceInitializer:Tt(this.movingVarianceInitializer),betaRegularizer:ut(this.betaRegularizer),gammaRegularizer:ut(this.gammaRegularizer),betaConstraint:zt(this.betaConstraint),gammaConstraint:zt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Ud.className="BatchNormalization";te.registerClass(Ud);var qd=class extends Le{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ht(e.betaInitializer||"zeros"),this.gammaInitializer=ht(e.gammaInitializer||"ones"),this.betaRegularizer=Ct(e.betaRegularizer),this.gammaRegularizer=Ct(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=et(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Qo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Oe(e),o=n.shape,s=o.length;return V(()=>{let a=!0,{mean:i,variance:l}=Zc(n,this.axis,a),u=Yo(1,s);for(let h of this.axis)u[h]=o[h];let c=h=>h!=null&&h.shape.length!==s&&this.axis!==[s-1]?h.reshape(u):h,p=c(this.gamma.read()),m=c(this.beta.read()),f=[],d=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(f.push(o[h]),d.push(1)):(f.push(1),d.push(o[h]));return i=i.tile(f),l=l.tile(f),p=p.tile(d),m=m.tile(d),Gd(n,i,l,m,p,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tt(this.betaInitializer),gammaInitializer:Tt(this.gammaInitializer),betaRegularizer:ut(this.betaRegularizer),gammaRegularizer:ut(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};qd.className="LayerNormalization";te.registerClass(qd);function oee(r,e,t){return V(()=>{if(r.rank!==4)throw new B(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new B("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Jr()),t!=="channelsLast"&&t!=="channelsFirst")throw new B(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],Mr(r,n)})}var Hd=class extends Le{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Jr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new B(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new B(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new B(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){e=et(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return V(()=>oee(Oe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Hd.className="ZeroPadding2D";te.registerClass(Hd);function jx(r,e,t,n,o,s){return V(()=>{Ot(o),V0(s),Qr(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=Jr()),s==null&&(s="max"),r=dd(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Aa(r,e,t,i):a=ka(r,e,t,i),o==="channelsFirst"&&(a=qe(a,[0,3,1,2])),a})}function rz(r,e,t,n,o,s){return V(()=>{Ot(o),V0(s),Qr(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=Jr()),s==null&&(s="max"),r=gC(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Gm(r,e,t,i):a=Rm(r,e,t,i),o==="channelsFirst"&&(a=qe(a,[0,4,1,2,3])),a})}var _C=class extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new B(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Kt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new B(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Qr(this.padding),this.inputSpec=[new Dt({ndim:3})]}computeOutputShape(e){e=et(e);let t=mn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return V(()=>{this.invokeCallHook(e,t),e=qa(Oe(e),2);let n=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return kn(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Kd=class extends _C{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ot(s),Qr(o),jx(e,t,n,o,s,"max")}};Kd.className="MaxPooling1D";te.registerClass(Kd);var Xd=class extends _C{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ot(s),Qr(o),jx(e,t,n,o,s,"avg")}};Xd.className="AveragePooling1D";te.registerClass(Xd);var vC=class extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new B(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Kt(this.poolSize,"poolSize"),Kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ot(this.dataFormat),Qr(this.padding),this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=mn(t,this.poolSize[0],this.padding,this.strides[0]),n=mn(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Yd=class extends vC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ot(s),Qr(o),jx(e,t,n,o,s,"max")}};Yd.className="MaxPooling2D";te.registerClass(Yd);var Zd=class extends vC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ot(s),Qr(o),jx(e,t,n,o,s,"avg")}};Zd.className="AveragePooling2D";te.registerClass(Zd);var kC=class extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new B(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Kt(this.poolSize,"poolSize"),Kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ot(this.dataFormat),Qr(this.padding),this.inputSpec=[new Dt({ndim:5})]}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=mn(t,this.poolSize[0],this.padding,this.strides[0]),n=mn(n,this.poolSize[1],this.padding,this.strides[1]),o=mn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Jd=class extends kC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ot(s),Qr(o),rz(e,t,n,o,s,"max")}};Jd.className="MaxPooling3D";te.registerClass(Jd);var Qd=class extends kC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ot(s),Qr(o),rz(e,t,n,o,s,"avg")}};Qd.className="AveragePooling3D";te.registerClass(Qd);var CC=class extends Le{constructor(e){super(e);this.inputSpec=[new Dt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Te}},eh=class extends CC{constructor(e){super(e||{})}call(e,t){return V(()=>{let n=Oe(e);return wt(n,1)})}};eh.className="GlobalAveragePooling1D";te.registerClass(eh);var th=class extends CC{constructor(e){super(e||{})}call(e,t){return V(()=>{let n=Oe(e);return ur(n,1)})}};th.className="GlobalMaxPooling1D";te.registerClass(th);var IC=class extends Le{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ot(this.dataFormat),this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Te}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},rh=class extends IC{call(e,t){return V(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?wt(n,[1,2]):wt(n,[2,3])})}};rh.className="GlobalAveragePooling2D";te.registerClass(rh);var nh=class extends IC{call(e,t){return V(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?ur(n,[1,2]):ur(n,[2,3])})}};nh.className="GlobalMaxPooling2D";te.registerClass(nh);var SC=class extends Le{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=en(o,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},oh=class extends SC{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=et(e),e.length<3)throw new B(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=et(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return V(()=>(e=Oe(e),bC((a,i)=>[Oe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};oh.className="TimeDistributed";te.registerClass(oh);function see(r){Ui(aL,"BidirectionalMergeMode",r)}var iee="concat",sh=class extends SC{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=en(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=en(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?iee:e.mergeMode,see(this.mergeMode),e.weights)throw new Te("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):xr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=yC(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new B("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(p=>new Dt({shape:p.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),i.push(...c)}if(o!=null)throw new Te("Support for constants in Bidirectional layers is not implemented yet.");let l=a[0]instanceof jr;for(let u of a)if(u instanceof jr!==l)throw new B("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let u=[e].concat(a),c=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=c;let m=super.apply(u,t);return this.inputSpec=p,m}else return super.apply(e,t)}call(e,t){return V(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let l=n.slice(0,n.length/2),u=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=Zt(s,1));let i;return this.mergeMode==="concat"?i=Ep([o,s]):this.mergeMode==="sum"?i=ee(o,s):this.mergeMode==="ave"?i=M(.5,ee(o,s)):this.mergeMode==="mul"?i=M(o,s):this.mergeMode==null&&(i=[o,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Os(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Os(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=en(t.layer);if(delete t.layer,t.numConstants!=null)throw new Te("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};sh.className="Bidirectional";te.registerClass(sh);function aee(r){return new qi(r)}function lee(r){return new cd(r)}function uee(r){return new ad(r)}function cee(r){return new ld(r)}function pee(r){return new ud(r)}function mee(r){return new md(r)}function fee(r){return new pd(r)}function dee(r){return new gc(r)}function hee(r){return new El(r)}function gee(r){return new hd(r)}function xee(r){return new hc(r)}function yee(r){return new gd(r)}function bee(r){return new xd(r)}function wee(r){return new yd(r)}function _ee(r){return new bd(r)}function vee(r){return new Nd(r)}function kee(r){return new Id(r)}function Cee(r){return new Yp(r)}function Iee(r){return new Cd(r)}function See(r){return new Sd(r)}function Nee(r){return new Td(r)}function Tee(r){return new Ed(r)}function Eee(r){return new Ad(r)}function Aee(r){return new $d(r)}function Dee(r){return new Rd(r)}function $ee(r){return new Od(r)}function Ree(r){return new Ld(r)}function Fee(r){return new Pd(r)}function Oee(r){return new Md(r)}function Pee(r){return new Fd(r)}function Mee(r){return new Bd(r)}function Lee(r){return new Ud(r)}function zee(r){return new qd(r)}function Bee(r){return new Hd(r)}function TC(r){return new Xd(r)}function Vee(r){return TC(r)}function Wee(r){return TC(r)}function EC(r){return new Zd(r)}function jee(r){return EC(r)}function Gee(r){return EC(r)}function AC(r){return new Qd(r)}function Uee(r){return AC(r)}function qee(r){return AC(r)}function Hee(r){return new eh(r)}function Kee(r){return new rh(r)}function nz(r){return new th(r)}function oz(r){return new nh(r)}function sz(r){return new Kd(r)}function iz(r){return new Yd(r)}function Xee(r){return new Jd(r)}function Yee(r){return new _d(r)}function Zee(r){return new Kp(r)}function Jee(r){return new vd(r)}function Qee(r){return new Dl(r)}function ete(r){return new wd(r)}function tte(r){return new Hp(r)}function rte(r){return new kd(r)}function nte(r){return new Xp(r)}function ote(r){return new fn(r)}function ste(r){return new qp(r)}function ite(r){return new sh(r)}function ate(r){return new oh(r)}var lte=nz,ute=oz,cte=sz,pte=iz;function mte(r){return new Vd(r)}function fte(r){return new Wd(r)}function dte(r){return new jd(r)}function hte(r){return new Dd(r)}var DC={};Ye(DC,{MAPE:()=>Ste,MSE:()=>Ete,binaryAccuracy:()=>gte,binaryCrossentropy:()=>xte,categoricalAccuracy:()=>bte,categoricalCrossentropy:()=>wte,cosineProximity:()=>kte,mape:()=>Nte,meanAbsoluteError:()=>Cte,meanAbsolutePercentageError:()=>Ite,meanSquaredError:()=>Tte,mse:()=>Ate,precision:()=>_te,recall:()=>vte,sparseCategoricalAccuracy:()=>yte});function gte(r,e){return rd(r,e)}function xte(r,e){return $x(r,e)}function yte(r,e){return Rx(r,e)}function bte(r,e){return nd(r,e)}function wte(r,e){return od(r,e)}function _te(r,e){return H0(r,e)}function vte(r,e){return NL(r,e)}function kte(r,e){return ed(r,e)}function Cte(r,e){return Bp(r,e)}function Ite(r,e){return Sl(r,e)}function Ste(r,e){return Sl(r,e)}function Nte(r,e){return Sl(r,e)}function Tte(r,e){return Ki(r,e)}function Ete(r,e){return Ki(r,e)}function Ate(r,e){return Ki(r,e)}var $C={};Ye($C,{modelFromJSON:()=>UL});var RC={};Ye(RC,{l1:()=>$te,l1l2:()=>Dte,l2:()=>Rte});function Dte(r){return new fc(r)}function $te(r){return ZL(r)}function Rte(r){return JL(r)}var Gx=class extends Il{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Nn))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Ux(r,e){return r<e}function az(r,e){return r>e}var qx=class extends Gx{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Te("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Ux:this.mode==="max"?this.monitorFunc=az:this.monitor.indexOf("acc")!==-1?this.monitorFunc=az:this.monitorFunc=Ux,this.monitorFunc===Ux&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Ux?Infinity:-Infinity}async onEpochEnd(e,t){await Hi(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function Fte(r){return new qx(r)}var lz={earlyStopping:Fte};var rs;(function(r){r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(rs||(rs={}));var uz;(function(r){let e;(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(uz||(uz={}));var FC={};function cz(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};FC[r]=t}function Hx(r){return FC[r]}function pz(r){delete FC[r]}function C(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return yr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(i,l).map(m=>yr(m,t,n,o));let u=yr(e.inputNames.slice(i)[0],t,n,o),c=u.dataSync();return s.type==="number"?c[0]:x.toNestedArray(u.shape,c)}let a=e.attrParams[r];return a&&a.value}function yr(r,e,t,n){let[o,s]=tn(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[Kx(o,i)]);return a!==void 0?e[Kx(o,a)][s]:void 0}function mz(r,e,t){return e[Kx(r,t.currentContextId)]}function Bs(r,e){let[t,n]=tn(r);return[Kx(t,e&&e.currentContextId),n]}function Kx(r,e){return e?`${r}-${e}`:r}function tn(r){let e=r.split(":");return e.length===1?[r,0]:[e[0],Number(e[e.length-1])]}function ih(r,e,t){let n=C("pad",r,e,t);if(n==="explicit"){n=C("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Vs(r){return r.kept?r:Mn(r)}var OC={};Ye(OC,{json:()=>Ote});var Ote=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var PC={};Ye(PC,{json:()=>Pte});var Pte=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var MC={};Ye(MC,{json:()=>Mte});var Mte=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var LC={};Ye(LC,{json:()=>Lte});var Lte=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var zC={};Ye(zC,{json:()=>zte});var zte=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var BC={};Ye(BC,{json:()=>Bte});var Bte=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var VC={};Ye(VC,{json:()=>Vte});var Vte=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var WC={};Ye(WC,{json:()=>Wte});var Wte=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var jC={};Ye(jC,{json:()=>jte});var jte=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}];var GC={};Ye(GC,{json:()=>Gte});var Gte=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var UC={};Ye(UC,{json:()=>Ute});var Ute=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var qC={};Ye(qC,{json:()=>qte});var qte=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var HC={};Ye(HC,{json:()=>Hte});var Hte=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var KC={};Ye(KC,{json:()=>Kte});var Kte=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var XC={};Ye(XC,{json:()=>Xte});var Xte=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var YC={};Ye(YC,{json:()=>Yte});var Yte=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var ZC={};Ye(ZC,{json:()=>Zte});var Zte=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];var Xx=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[OC,PC,MC,LC,zC,BC,VC,UC,GC,WC,qC,HC,KC,XC,YC,ZC,jC],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),l=[],u=[],c={},p={};t!=null&&(c=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let m=Object.keys(i);m.forEach(h=>{let g=i[h];g.inputNames.forEach(y=>{let[b]=Bs(y);g.inputs.push(i[b]),i[b].children.push(g)})}),Object.keys(p).length===0?m.forEach(h=>{let g=i[h];g.children.length===0&&u.push(g)}):Object.keys(p).forEach(h=>{let[g]=Bs(h),y=i[g];y!=null&&(y.signatureKey=p[h],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(h=>{let[g]=Bs(h),y=i[g];y&&(y.signatureKey=c[h],l.push(y))}):l=o;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let d={nodes:i,inputs:l,outputs:u,weights:s,placeholders:o,signature:t,functions:f};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=Hx(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=Yx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Yx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=ny(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ny(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=Jx(e.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=Jx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=ry(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ry(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=Zx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Zx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=sy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=sy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=ty(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ty(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=oy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=oy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=Qx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Qx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=ey(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ey(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=fz(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=fz(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&o.push(p[m.name]),p),{}));let a=[],i=[];e.signature.inputArg.forEach(p=>{let[m]=Bs(p.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:JC(p.type),type:"dtype"}},children:[]};f.signatureKey=p.name,a.push(f),s[m]=f}),Object.keys(s).forEach(p=>{let m=s[p];m.inputNames.forEach(f=>{let[d]=Bs(f);m.inputs.push(s[d]),s[d].children.push(m)})});let u=e.ret;e.signature.outputArg.forEach(p=>{let[m,f]=Bs(u[p.name]),d=s[m];d!=null&&(d.defaultOutput=f,i.push(d))});let c=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function Jte(r){let e=U().global;if(typeof e.atob!="undefined")return e.atob(r);if(typeof Buffer!="undefined")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function dz(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):Jte(r);return e?t:t.toLowerCase()}function Yx(r,e,t,n=!1){let o=r[e];return o!=null?dz(o.s,n):t}function Zx(r,e,t){let n=r[e];return n?n.b:t}function Jx(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function JC(r){switch(typeof r=="string"&&(r=rs[r]),r){case rs.DT_FLOAT:return"float32";case rs.DT_INT32:case rs.DT_INT64:case rs.DT_INT8:case rs.DT_UINT8:return"int32";case rs.DT_BOOL:return"bool";case rs.DT_DOUBLE:return"float32";case rs.DT_STRING:return"string";default:return null}}function fz(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function Qx(r,e,t){let n=r[e];return n&&n.type?JC(n.type):t}function ey(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>JC(o)):t}function hz(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function ty(r,e,t){let n=r[e];return n&&n.shape?hz(n.shape):t}function ry(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function ny(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>dz(s,n)):t}function oy(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>hz(o)):t}function sy(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var QC=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return yr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return yr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Jx(this.node.rawAttrs,e,t);if(n.s!=null)return Yx(this.node.rawAttrs,e,t);if(n.b!=null)return Zx(this.node.rawAttrs,e,t);if(n.shape!=null)return ty(this.node.rawAttrs,e,t);if(n.type!=null)return Qx(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return ry(this.node.rawAttrs,e,t);if(n.list.s!=null)return ny(this.node.rawAttrs,e,t);if(n.list.shape!=null)return oy(this.node.rawAttrs,e,t);if(n.list.b!=null)return sy(this.node.rawAttrs,e,t);if(n.list.type!=null)return ey(this.node.rawAttrs,e,t)}return t}};var gz=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[ee(C("a",r,e,t),C("b",r,e,t))];case"AddN":return[hw(C("tensors",r,e,t))];case"FloorMod":case"Mod":return[Fu(C("a",r,e,t),C("b",r,e,t))];case"Mul":return[M(C("a",r,e,t),C("b",r,e,t))];case"RealDiv":case"Div":return[fe(C("a",r,e,t),C("b",r,e,t))];case"DivNoNan":return[Lm(C("a",r,e,t),C("b",r,e,t))];case"FloorDiv":return[vu(C("a",r,e,t),C("b",r,e,t))];case"Sub":return[pe(C("a",r,e,t),C("b",r,e,t))];case"Minimum":return[Vn(C("a",r,e,t),C("b",r,e,t))];case"Maximum":return[Sr(C("a",r,e,t),C("b",r,e,t))];case"Pow":return[_r(C("a",r,e,t),C("b",r,e,t))];case"SquaredDifference":return[Pa(C("a",r,e,t),C("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xz=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[At(C("x",r,e,t))];case"Acos":return[Im(C("x",r,e,t))];case"Acosh":return[Sm(C("x",r,e,t))];case"Asin":return[Tm(C("x",r,e,t))];case"Asinh":return[Em(C("x",r,e,t))];case"Atan":return[Am(C("x",r,e,t))];case"Atan2":return[Dm(C("x",r,e,t),C("y",r,e,t))];case"Atanh":return[$m(C("x",r,e,t))];case"Ceil":return[Fm(C("x",r,e,t))];case"Complex":return[_n(C("real",r,e,t),C("imag",r,e,t))];case"Cos":return[Ia(C("x",r,e,t))];case"Cosh":return[Tu(C("x",r,e,t))];case"Elu":return[Is(C("x",r,e,t))];case"Erf":return[zm(C("x",r,e,t))];case"Exp":return[er(C("x",r,e,t))];case"Expm1":return[Bm(C("x",r,e,t))];case"Floor":return[Ss(C("x",r,e,t))];case"Log":return[lr(C("x",r,e,t))];case"Log1p":return[Du(C("x",r,e,t))];case"Imag":return[Au(C("x",r,e,t))];case"Neg":return[He(C("x",r,e,t))];case"Reciprocal":return[qm(C("x",r,e,t))];case"Real":return[pl(C("x",r,e,t))];case"Relu":return[Tr(C("x",r,e,t))];case"Round":return[Hm(C("x",r,e,t))];case"Selu":return[zu(C("x",r,e,t))];case"Sigmoid":return[Kr(C("x",r,e,t))];case"Sin":return[Bu(C("x",r,e,t))];case"Sign":return[Xm(C("x",r,e,t))];case"Sinh":return[Vu(C("x",r,e,t))];case"Softplus":return[Ns(C("x",r,e,t))];case"Sqrt":return[_t(C("x",r,e,t))];case"Square":return[Me(C("x",r,e,t))];case"Tanh":return[Mi(C("x",r,e,t))];case"Tan":return[Qm(C("x",r,e,t))];case"ClipByValue":return[ar(C("x",r,e,t),C("clipValueMin",r,e,t),C("clipValueMax",r,e,t))];case"Relu6":return[Mu(C("x",r,e,t))];case"Rsqrt":return[Lu(yr(r.inputNames[0],e,t))];case"Prod":return[Ou(C("x",r,e,t),C("axes",r,e,t))];case"LeakyRelu":return[Na(C("x",r,e,t),C("alpha",r,e,t))];case"Prelu":return[$a(C("x",r,e,t),C("alpha",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Tn(r,e,t=""){x.assert(Qte(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function Qte(r,e){if(r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==-1&&e[t]!==-1&&r[t]!==e[t])return!1;return!0}var eI=class{constructor(e,t,n,o,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=o,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ce(0),$t(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Tn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,$t(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Or([],[0].concat(this.elementShape));let n=this.readMany(e);return Tn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),jt(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Or([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Tn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Qe(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,pr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(l=>(n+=l,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];V(()=>{t=z(t,[1,n,s]);for(let l=0;l<e.length;++l){let u=l===0?0:o[l-1],c=[0,u,0],p=[1,e[l],s];a[l]=z(Fe(t,c,p),this.elementShape)}return a});let i=[];for(let l=0;l<e.length;l++)i[l]=l;this.writeMany(i,a)}};var xc=class{constructor(e,t,n,o=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Tn(t,s.shape,"TensorList shape mismatch: "),$t(s)}),this.idTensor=ce(0),this.maxNumElements=o,$t(this.idTensor)}get id(){return this.idTensor.id}copy(){return new xc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return Tn(e,this.elementShape,"TensorList shape mismatch: "),V(()=>{let o=this.tensors.map(s=>z(s,e));return jt(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=this.tensors.pop();return Tn(n.shape,e,"TensorList shape mismatch: "),z(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Tn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");$t(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);return Tn(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Tn(this.elementShape,t.shape,"TensorList shape mismatch: "),$t(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return Tn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size()),e.length===0?Or([],[0].concat(this.elementShape)):V(()=>{let o=e.map(s=>z(this.tensors[s],n));return jt(o,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return Tn(this.elementShape,t,"TensorList shape mismatch: "),this.size()===0?Or([],[0].concat(this.elementShape)):V(()=>{let n=this.tensors.map(o=>z(o,t));return Qe(n,0)})}};function yz(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Tn(o,e,"TensorList shape mismatch: ");let s=pr(r);return new xc(s,e,n)}function bz(r,e,t){return new xc([],r,e,t)}function wz(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new xc([],t,r.dtype,n),a=pr(r,0);return e.forEach((i,l)=>{s.setItem(i,a[l])}),s}function _z(r,e,t){let n=0,o=e.map(l=>(n+=l,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=n===0?0:r.size/n,a=V(()=>{let l=[];r=z(r,[1,n,s]);for(let u=0;u<e.length;++u){let c=u===0?0:o[u-1],p=[0,c,0],m=[1,e[u],s];l[u]=z(Fe(r,p,m),t)}return r.dispose(),l}),i=new xc([],t,r.dtype,e.length);for(let l=0;l<a.length;l++)i.setItem(l,a[l]);return i}var vz=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=C("thenBranch",r,e,t),o=C("elseBranch",r,e,t),s=C("cond",r,e,t),a=C("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=C("body",r,e,t),o=C("cond",r,e,t),s=C("args",r,e,t),a=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(c=>c.id),l=await a[0].data();a.forEach(c=>{!c.kept&&i.indexOf(c.id)===-1&&c.dispose()});let u=s;for(;l[0];){let c=u;u=await t.functionMap[n].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);let p=u.map(f=>f.id);c.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()});let m=await t.functionMap[o].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await m[0].data(),m.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{let n=C("pred",r,e,t);return[Vs(n)]}case"Switch":{let n=C("pred",r,e,t),o=C("data",r,e,t);return o.kept||(o=Vs(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>yr(o,e,t)!==void 0);if(n){let o=yr(n,e,t);return[Vs(o)]}return}case"Enter":{let n=C("frameName",r,e,t),o=C("tensor",r,e,t);return t.enterFrame(n),[Vs(o)]}case"Exit":{let n=C("tensor",r,e,t);return t.exitFrame(),[Vs(n)]}case"NextIteration":{let n=C("tensor",r,e,t);return t.nextIteration(),[Vs(n)]}case"TensorArrayV3":{let n=C("size",r,e,t),o=C("dtype",r,e,t),s=C("elementShape",r,e,t),a=C("dynamicSize",r,e,t),i=C("clearAfterRead",r,e,t),l=C("identicalElementShapes",r,e,t),u=C("name",r,e,t),c=new eI(u,o,n,s,l,a,i);return t.addTensorArray(c),[c.idTensor,ce(1)]}case"TensorArrayWriteV3":{let n=C("tensorArrayId",r,e,t),o=C("index",r,e,t),s=C("tensor",r,e,t),a=t.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=C("tensorArrayId",r,e,t),o=C("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=C("tensorArrayId",r,e,t),o=C("indices",r,e,t),s=C("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=C("tensorArrayId",r,e,t),o=C("indices",r,e,t),s=C("tensor",r,e,t),a=t.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=C("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=C("tensorArrayId",r,e,t),o=C("tensor",r,e,t),s=C("lengths",r,e,t),a=t.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[ce(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=C("tensorListId",r,e,t),o=C("index",r,e,t),s=C("tensor",r,e,t),a=t.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=C("tensorListId",r,e,t),o=C("index",r,e,t),s=C("elementShape",r,e,t),a=C("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=C("indices",r,e,t),o=C("tensor",r,e,t),s=C("elementShape",r,e,t),a=C("numElements",r,e,t),i=wz(o,n,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=C("elementShape",r,e,t),o=C("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=C(s,r,e,t),i=bz(n,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListGather":{let n=C("tensorListId",r,e,t),o=C("indices",r,e,t),s=C("elementShape",r,e,t),a=C("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=C("tensorListId",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t),a=C("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=C("tensor",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t),a=yz(n,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":{let n=C("tensorListId",r,e,t),o=t.getTensorList(n.id),s=C("dtype",r,e,t),a=C("elementShape",r,e,t);return[o.concat(s,a)]}case"TensorListPushBack":{let n=C("tensorListId",r,e,t),o=C("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=C("tensorListId",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=C("tensor",r,e,t),o=C("elementShape",r,e,t),s=C("lengths",r,e,t),a=_z(n,s,o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function kz(r,e,t){let[n,o]=C("fusedOps",r,e,t),s=n==="biasadd",a=o==="prelu",i=n==="fusedbatchnorm",l=C("numArgs",r,e,t);if(s){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");let u=C("strides",r,e,t),c=ih(r,e,t),p=C("dataFormat",r,e,t).toUpperCase(),m=C("dilations",r,e,t),[f,d]=C("args",r,e,t),h=C("leakyreluAlpha",r,e,t);return{stride:u,pad:c,dataFormat:p,dilations:m,biasArg:f,preluArg:d,activationFunc:o,leakyreluAlpha:h}}var Cz=(r,e,t)=>{switch(r.op){case"Conv1D":{let n=C("stride",r,e,t),o=C("pad",r,e,t),s=C("dataFormat",r,e,t).toUpperCase(),a=C("dilation",r,e,t);return[Su(C("x",r,e,t),C("filter",r,e,t),n,o,s,a)]}case"Conv2D":{let n=C("strides",r,e,t),o=ih(r,e,t),s=C("dataFormat",r,e,t).toUpperCase(),a=C("dilations",r,e,t);return[Xr(C("x",r,e,t),C("filter",r,e,t),[n[1],n[2]],o,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=kz(r,e,t);return[Vo.conv2d({x:C("x",r,e,t),filter:C("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=kz(r,e,t);return[Vo.depthwiseConv2d({x:C("x",r,e,t),filter:C("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=C("outputShape",r,e,t),o=C("strides",r,e,t),s=ih(r,e,t);return[Nu(C("x",r,e,t),C("filter",r,e,t),n,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=C("strides",r,e,t),o=ih(r,e,t),s=C("dilations",r,e,t),a=C("dataFormat",r,e,t).toUpperCase();return[zn(C("input",r,e,t),C("filter",r,e,t),[n[1],n[2]],o,a,[s[1],s[2]])]}case"Conv3D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("dataFormat",r,e,t).toUpperCase(),a=C("dilations",r,e,t);return[Om(C("x",r,e,t),C("filter",r,e,t),[n[1],n[2],n[3]],o,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[ka(C("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPool":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[Aa(C("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPoolWithArgmax":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t),a=C("includeBatchInIndex",r,e,t),{result:i,indexes:l}=Lw(C("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o,a);return[i,l]}case"AvgPool3D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[Rm(C("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"MaxPool3D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[Gm(C("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"Dilation2D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("dilations",r,e,t),a=n[1],i=n[2],l=s[1],u=s[2];return[Mm(C("x",r,e,t),C("filter",r,e,t),[a,i],o,[l,u],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Iz=(r,e,t)=>{switch(r.op){case"Fill":{let n=C("shape",r,e,t),o=C("dtype",r,e,t),s=C("value",r,e,t);return[Sa(n,s,o)]}case"LinSpace":{let n=C("start",r,e,t),o=C("stop",r,e,t),s=C("num",r,e,t);return[$w(n,o,s)]}case"Multinomial":{let n=C("logits",r,e,t),o=C("numSamples",r,e,t),s=C("seed",r,e,t);return[zw(n,o,s)]}case"OneHot":{let n=C("indices",r,e,t),o=C("depth",r,e,t),s=C("onValue",r,e,t),a=C("offValue",r,e,t);return[ks(n,o,s,a)]}case"Ones":return[Nr(C("shape",r,e,t),C("dtype",r,e,t))];case"OnesLike":return[nr(C("x",r,e,t))];case"RandomUniform":return[Ts(C("shape",r,e,t),C("minval",r,e,t),C("maxval",r,e,t),C("dtype",r,e,t))];case"Range":{let n=C("start",r,e,t),o=C("stop",r,e,t),s=C("step",r,e,t);return[Qc(n,o,s,C("dtype",r,e,t))]}case"TruncatedNormal":{let n=C("shape",r,e,t),o=C("mean",r,e,t),s=C("stdDev",r,e,t),a=C("seed",r,e,t);return[ju(n,o,s,C("dtype",r,e,t),a)]}case"Zeros":return[pt(C("shape",r,e,t),C("dtype",r,e,t))];case"ZerosLike":return[Se(C("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function tI(r,e,t){let n=C("boxes",r,e,t),o=C("scores",r,e,t),s=C("maxOutputSize",r,e,t),a=C("iouThreshold",r,e,t),i=C("scoreThreshold",r,e,t),l=C("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}}var Sz=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}=tI(r,e,t),u=await As.nonMaxSuppressionWithScoreAsync(n,o,s,a,i,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=tI(r,e,t),l=C("padToMaxOutputSize",r,e,t),u=await As.nonMaxSuppressionPaddedAsync(n,o,s,a,i,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=tI(r,e,t);return[await As.nonMaxSuppressionAsync(n,o,s,a,i)]}case"Where":{let n=oe(C("condition",r,e,t),"bool"),o=[await rf(n)];return n.dispose(),o}case"ListDiff":return Xw(C("x",r,e,t),C("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Nz=(r,e,t)=>{switch(r.op){case"TopKV2":{let n=C("x",r,e,t),o=C("k",r,e,t),s=C("sorted",r,e,t),a=ef(n,o,s);return[a.values,a.indices]}case"Unique":{let n=C("x",r,e,t),o=tp(n);return[o.values,o.indices]}case"UniqueV2":{let n=C("x",r,e,t),o=C("axis",r,e,t),s=tp(n,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Tz=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=C("default",r,e,t);return[yr(r.name,e,t)||n];case"Placeholder":return[yr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=C("x",r,e,t);return[Vs(u)]}case"IdentityN":return C("x",r,e,t).map(u=>Vs(u));case"Snapshot":let o=C("x",r,e,t);return[Vs(o)];case"Shape":return[Gt(C("x",r,e,t).shape,"int32")];case"ShapeN":return C("x",r,e,t).map(u=>Gt(u.shape));case"Size":return[ce(C("x",r,e,t).size,"int32")];case"Rank":return[ce(C("x",r,e,t).rank,"int32")];case"NoOp":return[ce(1)];case"Print":let s=C("x",r,e,t),a=C("data",r,e,t),i=C("message",r,e,t),l=C("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let u=0;u<a.length;u++)console.log(Array.prototype.slice.call(a[u].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var rI=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ce(0),this.tensorMap=new Map,$t(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),V(()=>{let o=pr(t),s=n.length,a=o.length;x.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let l=n[i],u=o[i];$t(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return V(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,t);o.push(i)}return jt(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var Ez=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=C("keyDType",r,e,t),s=C("valueDType",r,e,t),a=new rI(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=C("tableHandle",r,e,t,n),s=C("keys",r,e,t),a=C("values",r,e,t);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=C("tableHandle",r,e,t,n),s=C("keys",r,e,t),a=C("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Az=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let n=C("images",r,e,t),o=C("size",r,e,t),s=C("alignCorners",r,e,t),a=C("halfPixelCenters",r,e,t);return[As.resizeBilinear(n,[o[0],o[1]],s,a)]}case"ResizeNearestNeighbor":{let n=C("images",r,e,t),o=C("size",r,e,t),s=C("alignCorners",r,e,t),a=C("halfPixelCenters",r,e,t);return[As.resizeNearestNeighbor(n,[o[0],o[1]],s,a)]}case"CropAndResize":{let n=C("image",r,e,t),o=C("boxes",r,e,t),s=C("boxInd",r,e,t),a=C("cropSize",r,e,t),i=C("method",r,e,t),l=C("extrapolationValue",r,e,t);return[As.cropAndResize(n,o,s,a,i,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Dz=(r,e,t)=>{switch(r.op){case"Equal":return[Yr(C("a",r,e,t),C("b",r,e,t))];case"NotEqual":return[vn(C("a",r,e,t),C("b",r,e,t))];case"Greater":return[Yt(C("a",r,e,t),C("b",r,e,t))];case"GreaterEqual":return[Pr(C("a",r,e,t),C("b",r,e,t))];case"Less":return[Ta(C("a",r,e,t),C("b",r,e,t))];case"LessEqual":return[on(C("a",r,e,t),C("b",r,e,t))];case"LogicalAnd":return[hr(C("a",r,e,t),C("b",r,e,t))];case"LogicalNot":return[Ea(C("a",r,e,t))];case"LogicalOr":return[Ru(C("a",r,e,t),C("b",r,e,t))];case"Select":case"SelectV2":return[Rt(C("condition",r,e,t),C("a",r,e,t),C("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var $z=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ue(C("a",r,e,t),C("b",r,e,t),C("transposeA",r,e,t),C("transposeB",r,e,t))];case"Transpose":return[qe(C("x",r,e,t),C("perm",r,e,t))];case"_FusedMatMul":let[n,o]=C("fusedOps",r,e,t),s=n==="biasadd",a=o==="prelu",i=C("numArgs",r,e,t),l=C("leakyreluAlpha",r,e,t);if(s){if(a&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,c]=C("args",r,e,t);return[Vo.matMul({a:C("a",r,e,t),b:C("b",r,e,t),transposeA:C("transposeA",r,e,t),transposeB:C("transposeB",r,e,t),bias:u,activation:o,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Rz=(r,e,t)=>{switch(r.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Lo(C("x",r,e,t),C("mean",r,e,t),C("variance",r,e,t),C("offset",r,e,t),C("scale",r,e,t),C("epsilon",r,e,t))];case"FusedBatchNormV3":return[Lo(C("x",r,e,t),C("mean",r,e,t),C("variance",r,e,t),C("offset",r,e,t),C("scale",r,e,t),C("epsilon",r,e,t))];case"LRN":return[Vm(C("x",r,e,t),C("radius",r,e,t),C("bias",r,e,t),C("alpha",r,e,t),C("beta",r,e,t))];case"Softmax":return[Ra(C("x",r,e,t))];case"LogSoftmax":return[$u(C("x",r,e,t))];case"SparseToDense":return[nf(C("sparseIndices",r,e,t),C("outputShape",r,e,t),C("sparseValues",r,e,t),C("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Fz=(r,e,t)=>{switch(r.op){case"Max":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[ur(C("x",r,e,t),a,i)]}case"Mean":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[wt(C("x",r,e,t),a,i)]}case"Min":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[Li(C("x",r,e,t),a,i)]}case"Sum":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[be(C("x",r,e,t),a,i)]}case"All":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[ku(C("x",r,e,t),a,i)]}case"Any":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[ll(C("x",r,e,t),a,i)]}case"ArgMax":{let a=C("axis",r,e,t);return[ul(C("x",r,e,t),a)]}case"ArgMin":{let a=C("axis",r,e,t);return[Nm(C("x",r,e,t),a)]}case"Prod":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[Ou(C("x",r,e,t),a,i)]}case"Cumsum":{let a=C("axis",r,e,t),i=C("exclusive",r,e,t),l=C("reverse",r,e,t);return[Eu(C("x",r,e,t),a,i,l)]}case"Bincount":let n=C("x",r,e,t),o=C("weights",r,e,t),s=C("size",r,e,t);return[vw(n,o,s)];case"DenseBincount":{let a=C("x",r,e,t),i=C("weights",r,e,t),l=C("size",r,e,t),u=C("binaryOutput",r,e,t);return[Nw(a,i,l,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Oz=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=C("n",r,e,t),o=C("axis",r,e,t),s=C("tensors",r,e,t);return s=s.slice(0,n),[Qe(s,o)]}case"Gather":{let n=C("x",r,e,t),o=C("indices",r,e,t);return[zo(n,oe(o,"int32"),0)]}case"GatherV2":{let n=C("axis",r,e,t),o=C("batchDims",r,e,t),s=C("x",r,e,t),a=C("indices",r,e,t);return[zo(s,oe(a,"int32"),n,o)]}case"Reverse":{let n=C("dims",r,e,t),o=[];for(let a=0;a<n.length;a++)n[a]&&o.push(a);let s=C("x",r,e,t);return[Zt(s,o)]}case"ReverseV2":{let n=C("axis",r,e,t),o=C("x",r,e,t);return[Zt(o,n)]}case"Slice":{let n=C("begin",r,e,t),o=C("size",r,e,t);return[Fe(C("x",r,e,t),n,o)]}case"StridedSlice":{let n=C("begin",r,e,t),o=C("end",r,e,t),s=C("strides",r,e,t),a=C("beginMask",r,e,t),i=C("endMask",r,e,t),l=C("ellipsisMask",r,e,t),u=C("newAxisMask",r,e,t),c=C("shrinkAxisMask",r,e,t),p=C("x",r,e,t);return[Jm(p,n,o,s,a,i,l,u,c)]}case"Pack":return V(()=>{let n=C("axis",r,e,t),o=C("tensors",r,e,t),s=o[0].shape,a=kn(o[0]).shape,i=o.map(l=>{let u=x.arraysEqual(l.shape,s);if(!u&&!x.arraysEqual(kn(l).shape,a))throw new Error("the input tensors shape does not match");return u?l:z(l,s)});return[jt(i,n)]});case"Unpack":{let n=C("axis",r,e,t),o=C("tensor",r,e,t);return pr(o,n)}case"Tile":{let n=C("reps",r,e,t);return[Bn(C("x",r,e,t),n)]}case"Split":case"SplitV":{let n=C("axis",r,e,t),o=C("numOrSizeSplits",r,e,t),s=C("x",r,e,t);return cr(s,o,n)}case"ScatterNd":{let n=C("indices",r,e,t),o=C("values",r,e,t),s=C("shape",r,e,t);return[f_(n,o,s)]}case"GatherNd":{let n=C("x",r,e,t),o=C("indices",r,e,t);return[d_(n,o)]}case"SparseToDense":{let n=C("sparseIndices",r,e,t),o=C("outputShape",r,e,t),s=C("sparseValues",r,e,t),a=C("defaultValue",r,e,t);return[nf(n,s,o,s.dtype===a.dtype?a:oe(a,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Pz=(r,e,t)=>{switch(r.op){case"FFT":return[Fa(C("x",r,e,t))];case"IFFT":return[zi(C("x",r,e,t))];case"RFFT":return[Oa(C("x",r,e,t))];case"IRFFT":return[Wu(C("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Mz=(r,e,t)=>{switch(r.op){case"Cast":return[oe(C("x",r,e,t),C("dtype",r,e,t))];case"ExpandDims":{let n=C("axis",r,e,t);return[wr(C("x",r,e,t),n)]}case"Squeeze":{let n=C("axis",r,e,t);return[kn(C("x",r,e,t),n)]}case"Reshape":return[z(C("x",r,e,t),C("shape",r,e,t))];case"MirrorPad":return[Um(C("x",r,e,t),C("padding",r,e,t),C("mode",r,e,t))];case"PadV2":case"Pad":return[Mr(C("x",r,e,t),C("padding",r,e,t),C("constantValue",r,e,t))];case"SpaceToBatchND":{let n=C("blockShape",r,e,t),o=C("paddings",r,e,t);return[Da(C("x",r,e,t),n,o)]}case"BatchToSpaceND":{let n=C("blockShape",r,e,t),o=C("crops",r,e,t);return[Ca(C("x",r,e,t),n,o)]}case"DepthToSpace":{let n=C("blockSize",r,e,t),o=C("dataFormat",r,e,t).toUpperCase();return[Pm(C("x",r,e,t),n,o)]}case"BroadcastTo":return[cl(C("x",r,e,t),C("shape",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function nI(r,e,t,n){let o=((s,a,i)=>{switch(s.category){case"arithmetic":return V(()=>gz(s,a,i));case"basic_math":return V(()=>xz(s,a,i));case"control":return vz(s,a,i);case"convolution":return V(()=>Cz(s,a,i));case"creation":return V(()=>Iz(s,a,i));case"dynamic":return Sz(s,a,i);case"evaluation":return V(()=>Nz(s,a,i));case"image":return V(()=>Az(s,a,i));case"graph":return V(()=>Tz(s,a,i));case"logical":return V(()=>Dz(s,a,i));case"matrices":return V(()=>$z(s,a,i));case"normalization":return V(()=>Rz(s,a,i));case"reduction":return V(()=>Fz(s,a,i));case"slice_join":return V(()=>Oz(s,a,i));case"spectral":return V(()=>Pz(s,a,i));case"transformation":return V(()=>Mz(s,a,i));case"hash_table":return Ez(s,a,i,n);case"custom":let l=Hx(s.op);if(l&&l.customExecutor)return l.customExecutor(new QC(s,a,i));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return x.isPromise(o)?o.then(s=>[].concat(s)):[].concat(o)}var iy=class{constructor(e={},t={},n={},o={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function sI(r,e,t,n){let o=new Set,s=[],a=null,i=null,l=new Set,u=Object.keys(r).map(m=>tn(m)[0]),c=[];n!=null&&(c=n.map(m=>tn(m.name)[0]));let p=[...e];for(;p.length>0;){let m=p.pop();if((oI(m)||ere(m)||tre(m))&&a==null&&(a=m,i=a.children.map(f=>f.name).filter(f=>o.has(f))),o.add(m.name),t[m.name]==null&&u.indexOf(m.name)===-1&&c.indexOf(m.name)===-1){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),p.push(f))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function Lz(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],a=Object.keys(o).map(c=>tn(c)[0]).map(c=>r.nodes[c]),i=r.initNodes;a.forEach(c=>{n.has(c.name)&&s.push(c)}),r.weights.forEach(c=>{n.has(c.name)&&s.push(c)}),i!=null&&i.forEach(c=>{n.has(c.name)&&s.push(c)});let l=new Set,u=[];for(;s.length>0;){let c=s.pop();l.add(c.name),e[c.name]||u.push(c),c.children.forEach(p=>{!l.has(p.name)&&n.has(p.name)&&p.inputs.every(m=>l.has(m.name))&&s.push(p)})}return u}var rre=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],nre=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],ore=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function oI(r){return rre.indexOf(r.op)>=0}function ere(r){return nre.indexOf(r.op)>=0}function tre(r){return ore.indexOf(r.op)>=0}var Zp=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Zp(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=sI(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=t.map(u=>u.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${l}]. Missing the following inputs: [${o}]`)}return Lz(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(p=>this.graph.nodes[tn(p)[0]]),s=t.map(p=>tn(p)[0]),a=s.map(p=>this.graph.nodes[p]);a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),l=this.compiledMap.get(i);l==null&&(l=this.compile(e,a),this.compiledMap.set(i,l));let u={},c={};return V(()=>{let p=new iy(this.weightMap,u,c,this.functionExecutorMap),m=Object.assign({},this.weightMap);Object.keys(e).forEach(h=>{let[g,y]=tn(h),b=[];b[y]=e[h],m[g]=b});let f=this.getFrozenTensorIds(m),d={};for(let h=0;h<l.length;h++){let g=l[h];if(!m[g.name]){let y=nI(g,m,p,this._resourceManager);if(x.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);m[g.name]=y,this.checkTensorForDisposal(g.name,g,m,p,f,s,d)}}return this.parent==null&&p.dispose(f),t.map(h=>yr(h,m,p))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(l=>{l!=null&&(i[l.id]=(i[l.id]||0)+t.children.length)}),t.inputs.forEach(l=>{if(l.category!=="control"){let u=mz(l.name,n,o);u!=null&&u.forEach(c=>{if(c&&!s.has(c.id)){let p=i[c.id];p===1?(c.dispose(),delete i[c.id]):p!=null&&i[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let a=new iy(this.weightMap,o,s,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,n),l=t.map(m=>yr(m,i,a)),u=l.map(m=>m.id),c=Object.keys(e).map(m=>e[m].id),p=new Set([...u,...c,...this.weightIds]);return Object.keys(i).forEach(m=>{i[m].forEach(d=>{d&&!d.isDisposed&&!p.has(d.id)&&d.dispose()})}),this.parent==null&&a.dispose(p),l}async executeFunctionAsync(e,t,n){let o=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),a=s.map(w=>this.graph.nodes[tn(w)[0]]),i=n.map(w=>tn(w)[0]),l=i.map(w=>this.graph.nodes[w]);l.length===0&&(l=this._outputs);let{usedNodes:u,missingInputs:c,dynamicNode:p,syncInputs:m}=sI(e,l,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),d=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{let[_,k]=tn(w),E=[];E[k]=e[w],d[_]=E});let h={},g=this.getFrozenTensorIds(d),y={};for(;f.length>0;){let w=this.processStack(a,f,t,d,y,g,i,h,u);await Promise.all(w)}p==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter(w=>!oI(w)&&!yr(w.name,d,t)).map(w=>w.name);if(b.length>0){let w="";throw p!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${w}`)}return d}processStack(e,t,n,o,s,a,i,l,u){let c=[];for(;t.length>0;){let p=t.pop();n.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&C("isConstant",p.node,o,n)&&([m]=Bs(p.node.name,n)),o[p.node.name]==null){let f=nI(p.node,o,n,this._resourceManager);m||([m]=Bs(p.node.name,n));let d=n.currentContext;x.isPromise(f)?c.push(f.then(h=>(o[m]=h,n.currentContext=d,this.checkTensorForDisposal(m,p.node,o,n,a,i,l),this.processChildNodes(p.node,t,n,o,s,u),h))):(o[m]=f,this.checkTensorForDisposal(m,p.node,o,n,a,i,l),this.processChildNodes(p.node,t,n,o,s,u))}else this.processChildNodes(p.node,t,n,o,s,u)}return c}processChildNodes(e,t,n,o,s,a){e.children.forEach(i=>{let[l]=Bs(i.name,n);s[l]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!yr(u,o,n))&&(s[l]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!yr(u,o,n))&&(s[l]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=tn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((l,u)=>a[u]===-1||a[u]===l);x.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&x.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=tn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=tn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var iI=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var sre="?tfjs-format=file",ire="model.json",ay=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new iI}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Ir.browserHTTPRequest(e,this.loadOptions);else{let t=Ir.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Ir.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=Ir.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Zp(Xx.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=Xx.Instance.transformGraph(e.modelInitializer);this.initializer=new Zp(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Ir.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof R)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function zz(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&r.load==null&&(r.endsWith("/")||(r=r+"/"),r=`${r}${ire}${sre}`);let t=new ay(r,e);return await t.load(),t}var Bz="2.8.3";var hy={};Ye(hy,{CSVDataset:()=>ph,Dataset:()=>Yi,FileDataSource:()=>gh,TextLineDataset:()=>uh,URLDataSource:()=>xh,array:()=>k3,csv:()=>R3,func:()=>F3,generator:()=>O3,microphone:()=>M3,version_data:()=>L3,webcam:()=>P3,zip:()=>C3});var v3=Ac(fI());var a3=Ac(fI());function r3(r,e){return uy(r,e)}function uy(r,e,t=new Map,n=new Set){if(r==null)return null;if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(Rl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],l=uy(i,e,t,n);s[a]=l}return n.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function o3(r,e=dI){return n3(r,e)}function n3(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(Rl(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let a in n){let i=r.map(u=>u[a]),l=n3(i,e,t);s[a]=l}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function dI(r){return r===null?null:Rl(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function cy(r,e){let t=new Map;uy(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(x.isPromise(s)){let a=await s;t.set(o,a)}}return uy(r,e,t)}function Rl(r){return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof R))}function s3(r){return r==null||fre(r)||Array.isArray(r)||typeof r=="object"&&r instanceof R||x.isTypedArray(r)}function fre(r){return r===null||typeof r!="object"&&typeof r!="function"}function i3(r){return r3(r,dre)}function dre(r){return r instanceof R?{value:r.clone(),recurse:!1}:Rl(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var ah=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var Jp=class extends ah{constructor(){super(Jp.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};Jp.INITIAL_CAPACITY=32;function hI(r){return new l3(r)}function lh(r){return new u3(r)}function c3(r,e){return new gI(r,e)}function m3(r,e=Xa.FAIL){return new p3(r,e)}var Jt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new b3(this,e)}filter(e){return new x3(this,e)}map(e){return new y3(this,e)}mapAsync(e){return new xI(this,e)}serialMapAsync(e){return new xI(this,e).serial()}flatmap(e){return new w3(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new g3(this,e,t)}columnMajorBatch(e,t=!0,n=dI){return this.rowMajorBatch(e,t).map(s=>o3(s,n))}concatenate(e,t){return new gI(hI([this,e]),t)}take(e){return e<0||e==null?this:new h3(this,e)}skip(e){return e<0||e==null?this:new d3(this,e)}prefetch(e){return new yI(this,e)}shuffle(e,t){return new _3(this,e,t)}serial(){return new f3(this)}},l3=class extends Jt{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:i3(e),done:!1}}},u3=class extends Jt{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},f3=class extends Jt{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},d3=class extends Jt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;De(e.value)}return this.upstream.next()}},h3=class extends Jt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},g3=class extends Jt{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},x3=class extends Jt{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;De(e.value)}}},y3=class extends Jt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Mo.getTensorsInContainer(e.value),n=this.transform(e.value),o=Mo.getTensorsInContainer(n);for(let s of t)Mo.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},b3=class extends Jt{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},xI=class extends Jt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Mo.getTensorsInContainer(e.value),n=await this.transform(e.value),o=Mo.getTensorsInContainer(n);for(let s of t)Mo.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},Qp=class extends Jt{constructor(){super();this.outputQueue=new Jp,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},w3=class extends Qp{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Mo.getTensorsInContainer(e.value),n=this.transform(e.value),o=Mo.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Mo.isTensorInList(s,o)||s.dispose();return!0}},gI=class extends Jt{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Xa;(function(r){r[r.FAIL=0]="FAIL",r[r.SHORTEST=1]="SHORTEST",r[r.LONGEST=2]="LONGEST"})(Xa||(Xa={}));var p3=class extends Jt{constructor(e,t=Xa.FAIL){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(a){return a instanceof Jt?{value:a.next().then(l=>(t++,l.done&&n++,l.value)),recurse:!1}:{value:null,recurse:!0}}let s=await cy(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Xa.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Xa.SHORTEST:return{value:null,done:!0};case Xa.LONGEST:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},yI=class extends Jt{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new ah(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},_3=class extends yI{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=a3.alea(n||x.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var Yi=class{constructor(){this.size=null}batch(e,t=!0){let n=this;x.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===Infinity||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),dn(async()=>(await n.iterator()).columnMajorBatch(e,t,hre),o)}concatenate(e){let t=this,n;return this.size===Infinity||e.size===Infinity?n=Infinity:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,dn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===Infinity?n=Infinity:n=null,dn(async()=>(await t.iterator()).filter(o=>V(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return dn(async()=>(await t.iterator()).map(n=>V(()=>e(n))),this.size)}mapAsync(e){let t=this;return dn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return dn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=Infinity:n=null,dn(async()=>{let o=lh(async()=>({value:await t.iterator(),done:!1}));return c3(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,dn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=v3.alea(t||x.now().toString());return dn(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,dn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Yi.MAX_BUFFER_SIZE=1e4;function dn(r,e=null){return new class extends Yi{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function k3(r){return dn(async()=>hI(r),r.length)}function C3(r){if(!Rl(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return dn(async()=>{let t=await cy(r,n=>{if(n instanceof Yi)return{value:n.iterator(),recurse:!1};if(Rl(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return m3(t,Xa.SHORTEST)},e)}function hre(r){if(r===null)return null;let e=r[0];return s3(e)?{value:gre(r),recurse:!1}:{value:null,recurse:!0}}function gre(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof R?jt(r):Or(r)}var uh=class extends Yi{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var py='"',ch=Symbol("out"),I3=Symbol("field"),my=Symbol("quote"),bI=Symbol("quoteafterquote"),S3=Symbol("quoteinquote"),ph=class extends Yi{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new uh(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(x.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&x.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(x.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let l=t[s],u=null;if(l==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let c=Number(l);if(isNaN(c))i&&i.dtype==="bool"?u=this.getBoolean(l):u=l;else if(!i||!i.dtype)u=c;else switch(i.dtype){case"float32":u=c;break;case"int32":u=Math.floor(c);break;case"bool":u=this.getBoolean(l);break;default:u=c}}i&&i.isLabel?o[a]=u:n[a]=u}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,a=ch;for(let i=0;i<s;i++)switch(a){case ch:switch(e.charAt(i)){case py:o=i+1,a=my;break;case this.delimiter:if(o=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=ch;break;default:a=I3,o=i;break}break;case I3:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i)),a=ch,o=i+1;break;default:}break;case my:switch(e.charAt(i)){case py:a=bI;break;default:}break;case bI:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i-1)),a=ch,o=i+1;break;case py:a=my;break;default:a=S3;break}break;case S3:switch(e.charAt(i)){case py:a=my;break;default:}break;default:}if(a===bI?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var mh=class extends Jt{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(U().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new mh(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-Infinity&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(x.sizeFromShape(t));return n.set(e,n.length-e.length),Or(n,t)}};var fh=class extends Jt{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Gt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-o)/2,i=s+n,l=o+a;this.cropBox=Bi([a,s,l,i],[1,4])}else this.cropBox=Bi([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(U().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new fh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&x.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=eg.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return V(()=>{let t=e.toFloat().expandDims(0),n;n=As.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return n.reshape(o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var dh=class{};var fy=class extends Jt{split(e){return new N3(this,e)}},N3=class extends fy{constructor(e,t){super();this.upstream=e,this.impl=new T3(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},T3=class extends Qp{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var wI=class extends Jt{decodeUTF8(){return new A3(this)}},A3=class extends fy{constructor(e){super();this.upstream=e,this.impl=new D3(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},D3=class extends Qp{constructor(e){super();if(this.upstream=e,U().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=E3();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return U().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var hh=class extends wI{constructor(e,t={}){super();this.file=e,this.options=t,x.assert(e instanceof Uint8Array||(U().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=i=>{let l=s.result;if(l instanceof ArrayBuffer&&(l=new Uint8Array(l)),!(l instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(l)},s.onabort=i=>n(new Error("Aborted")),s.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,o);s.readAsArrayBuffer(a)}this.offset=o}),done:!1}}};async function $3(r,e={}){let t,n;typeof r=="string"?t=r:(t=r.url,n=xre(r));let o=await x.fetch(t,n);if(o.ok){let s=new Uint8Array(await o.arrayBuffer());return new hh(s,e)}else throw new Error(o.statusText)}var xre=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function dy(r){return typeof r=="string"&&r.substr(0,7)==="file://"}var gh=class extends dh{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(dy(this.input)&&U().get("IS_NODE")){let e=require("fs");this.input=e.readFileSync(this.input.substr(7))}return new hh(this.input,this.options)}};var xh=class extends dh{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return dy(this.url)?new gh(this.url,this.fileOptions).iterator():$3(this.url,this.fileOptions)}};function R3(r,e={}){return new ph(new xh(r),e)}function F3(r){let e=lh(r);return dn(async()=>e)}function O3(r){return dn(async()=>{let e=await r();return lh(()=>e.next())})}async function P3(r,e){return fh.create(r,e)}async function M3(r){return mh.create(r)}var L3="2.8.3";var yre={tfjs:$I,"tfjs-core":RI,"tfjs-data":FI,"tfjs-layers":OI,"tfjs-converter":PI,"tfjs-backend-cpu":M_,"tfjs-backend-webgl":Qv,"tfjs-backend-wasm":F0};export{is as Abs,qs as Acos,Hs as Acosh,np as AdadeltaOptimizer,op as AdagradOptimizer,sp as AdamOptimizer,ip as AdamaxOptimizer,bn as Add,Hn as AddN,Gl as All,Ul as Any,Kn as ArgMax,na as ArgMin,Ks as Asin,Xs as Asinh,Ys as Atan,Js as Atan2,Zs as Atanh,Xn as AvgPool,oa as AvgPool3D,Hl as AvgPool3DGrad,ql as AvgPoolGrad,mx as BackendWasm,Yn as BatchMatMul,sa as BatchToSpaceND,Kl as Bincount,Ob as BroadcastTo,Gx as Callback,Sx as CallbackList,On as Cast,Qs as Ceil,Pn as ClipByValue,Xl as Complex,ia as ComplexAbs,as as Concat,Zn as Conv2D,Yl as Conv2DBackpropFilter,Jn as Conv2DBackpropInput,aa as Conv3D,Zl as Conv3DBackpropFilterV2,Jl as Conv3DBackpropInputV2,Qn as Cos,ei as Cosh,ti as CropAndResize,eo as Cumsum,Tx as CustomCallback,el as DataStorage,Ql as DenseBincount,ri as DepthToSpace,to as DepthwiseConv2dNative,eu as DepthwiseConv2dNativeBackpropFilter,tu as DepthwiseConv2dNativeBackpropInput,ru as Diag,la as Dilation2D,Pc as Dilation2DBackpropFilter,Oc as Dilation2DBackpropInput,Db as ENV,qx as EarlyStopping,ni as Elu,nu as EluGrad,jh as Environment,si as Equal,oi as Erf,no as Exp,ls as ExpandDims,ii as Expm1,ou as FFT,ua as Fill,ai as FlipLeftRight,oo as Floor,so as FloorDiv,Mc as FromPixels,io as FusedBatchNorm,_s as FusedConv2D,vs as FusedDepthwiseConv2D,Ug as GPGPUContext,li as GatherNd,us as GatherV2,ay as GraphModel,ui as Greater,ao as GreaterEqual,Nx as History,su as IFFT,cs as Identity,iu as Imag,Dt as InputSpec,ci as IsFinite,pi as IsInf,mi as IsNan,js as KernelBackend,ca as LRN,lu as LRNGrad,Zf as LayerVariable,Nn as LayersModel,lo as LeakyRelu,fi as Less,di as LessEqual,au as LinSpace,uo as Log,hi as Log1p,Pb as LogSoftmax,gi as LogicalAnd,tl as LogicalNot,rl as LogicalOr,Cg as MathBackendCPU,Xg as MathBackendWebGL,co as Max,mo as MaxPool,pa as MaxPool3D,cu as MaxPool3DGrad,uu as MaxPoolGrad,pu as MaxPoolWithArgmax,po as Maximum,fo as Mean,ho as Min,go as Minimum,ma as MirrorPad,xi as Mod,ap as MomentumOptimizer,mu as Multinomial,xo as Multiply,ps as Neg,bi as NonMaxSuppressionV3,wi as NonMaxSuppressionV4,_i as NonMaxSuppressionV5,yi as NotEqual,tS as OP_SCOPE_SUFFIX,yo as OneHot,ms as OnesLike,Lr as Optimizer,fs as Pack,bo as PadV2,IV as Pool,wo as Pow,_o as Prelu,vi as Prod,lp as RMSPropOptimizer,fn as RNN,fa as Range,Vb as Rank,fu as Real,ro as RealDiv,ki as Reciprocal,Ut as Reduction,vo as Relu,Co as Relu6,ds as Reshape,ko as ResizeBilinear,hu as ResizeBilinearGrad,da as ResizeNearestNeighbor,du as ResizeNearestNeighborGrad,Io as Reverse,Ri as RotateWithOffset,So as Round,No as Rsqrt,ml as SGDOptimizer,Ci as ScatterNd,hs as Select,Ii as Selu,Xi as Sequential,Eo as Sigmoid,Ni as Sign,To as Sin,Si as Sinh,gs as Slice,$o as Softmax,Ti as Softplus,ha as SpaceToBatchND,gu as SparseToDense,xs as SplitV,Ao as Sqrt,ga as Square,Ro as SquaredDifference,$i as Step,Ei as StridedSlice,Fo as Sub,Do as Sum,jr as SymbolicTensor,Ai as Tan,Oo as Tanh,R as Tensor,ct as TensorBuffer,wn as Tile,Di as TopK,Po as Transpose,xu as Unique,ys as Unpack,xa as UnsortedSegmentSum,sl as Variable,bs as ZerosLike,ws as _FusedMatMul,At as abs,Im as acos,Sm as acosh,ee as add,hw as addN,o_ as addStrict,ku as all,ll as any,ul as argMax,Nm as argMin,Tm as asin,Em as asinh,Am as atan,Dm as atan2,$m as atanh,ka as avgPool,Rm as avgPool3d,dw as backend,T as backend_util,Cj as basicLSTMCell,Lo as batchNorm,bw as batchNorm2d,ww as batchNorm3d,_w as batchNorm4d,Ca as batchToSpaceND,vw as bincount,$U as booleanMaskAsync,cl as broadcastTo,eg as browser,Ie as buffer,lz as callbacks,oe as cast,Fm as ceil,ar as clipByValue,Mn as clone,_n as complex,Qe as concat,kw as concat1d,Cw as concat2d,Iw as concat3d,Sw as concat4d,B0 as constraints,Su as conv1d,Xr as conv2d,Nu as conv2dTranspose,Om as conv3d,Uj as conv3dTranspose,TV as copyRegisteredKernels,Ia as cos,Tu as cosh,of as cosineWindow,Eu as cumsum,Zr as customGrad,hy as data,Nw as denseBincount,Pt as deprecationWarn,Pm as depthToSpace,zn as depthwiseConv2d,pz as deregisterOp,Wc as device_util,Qj as diag,Mm as dilation2d,MW as disableDeprecationWarnings,De as dispose,LW as disposeVariables,fe as div,Lm as divNoNan,s_ as divStrict,Tw as dot,h_ as dropout,Is as elu,PW as enableDebugMode,OW as enableProdMode,g_ as enclosingPowerOfTwo,Cs as engine,U as env,Yr as equal,Jw as equalStrict,zm as erf,er as exp,wr as expandDims,Bm as expm1,Yc as eye,Fa as fft,Sa as fill,GW as findBackend,UW as findBackendFactory,Ss as floor,vu as floorDiv,ek as forceHalfFloat,Vo as fused,zo as gather,d_ as gatherND,tg as gather_util,WW as getBackend,Gh as getGradient,ym as getKernel,bm as getKernelsForBackend,xD as gpgpu_util,TG as grad,EG as grads,Yt as greater,Pr as greaterEqual,Qw as greaterEqualStrict,e_ as greaterStrict,zi as ifft,Au as imag,As as image,rq as inTopKAsync,U0 as initializers,Wx as input,Ir as io,Wu as irfft,Ew as isFinite,Aw as isInf,Dw as isNaN,$t as keep,Ar as kernel_impls,NC as layers,Na as leakyRelu,Ta as less,on as lessEqual,t_ as lessEqualStrict,r_ as lessStrict,__ as linalg,$w as linspace,zz as loadGraphModel,XL as loadLayersModel,Vm as localResponseNormalization,lr as log,Du as log1p,Rw as logSigmoid,$u as logSoftmax,jm as logSumExp,hr as logicalAnd,Ea as logicalNot,Ru as logicalOr,Mw as logicalXor,Kq as losses,Ue as matMul,$S as math,ur as max,Aa as maxPool,Gm as maxPool3d,Lw as maxPoolWithArgmax,Sr as maximum,i_ as maximumStrict,wt as mean,Hc as memory,DC as metrics,Li as min,Vn as minimum,a_ as minimumStrict,Um as mirrorPad,Fu as mod,l_ as modStrict,HL as model,$C as models,Zc as moments,YU as movingAverage,M as mul,u_ as mulStrict,o4 as multiRNNCell,zw as multinomial,He as neg,sf as nextFrame,Gu as norm,vn as notEqual,n_ as notEqualStrict,ks as oneHot,Nr as ones,nr as onesLike,S as op,u4 as outerProduct,Mr as pad,m4 as pad1d,d4 as pad2d,g4 as pad3d,y4 as pad4d,Bw as pool,_r as pow,c_ as powStrict,$a as prelu,ow as print,Ou as prod,zW as profile,N4 as rand,O4 as randomGamma,fg as randomNormal,Ts as randomUniform,Qc as range,VW as ready,pl as real,qm as reciprocal,_u as registerBackend,YL as registerCallbackConstructor,Lb as registerGradient,nl as registerKernel,cz as registerOp,RC as regularizers,Tr as relu,Mu as relu6,jW as removeBackend,z as reshape,Zt as reverse,G4 as reverse1d,q4 as reverse2d,K4 as reverse3d,Y4 as reverse4d,Oa as rfft,Hm as round,Lu as rsqrt,ce as scalar,f_ as scatterND,rg as scatter_util,zu as selu,Km as separableConv2d,KL as sequential,te as serialization,KS as setBackend,qW as setPlatform,DJ as setWasmPath,$J as setWasmPaths,ov as setWebGLContext,Xw as setdiff1dAsync,Sg as shared,Kr as sigmoid,Xm as sign,Hq as signal,Bu as sin,Vu as sinh,Fe as slice,Ym as slice1d,dg as slice2d,Zm as slice3d,ep as slice4d,ir as slice_util,Ra as softmax,Ns as softplus,Da as spaceToBatchND,nf as sparseToDense,qq as spectral,cr as split,_t as sqrt,Me as square,Pa as squaredDifference,p_ as squaredDifferenceStrict,kn as squeeze,jt as stack,Es as step,Jm as stridedSlice,pe as sub,m_ as subStrict,be as sum,yu as sumOutType,Qm as tan,Mi as tanh,Or as tensor,Gt as tensor1d,Bi as tensor2d,lw as tensor3d,vU as tensor4d,kU as tensor5d,CU as tensor6d,Mo as tensor_util,US as test_util,V as tidy,Bn as tile,BW as time,ef as topk,fl as train,qe as transpose,ju as truncatedNormal,tp as unique,NV as unregisterGradient,SV as unregisterKernel,tf as unsortedSegmentSum,pr as unstack,dr as upcastType,x as util,AG as valueAndGrad,DG as valueAndGrads,Yw as variable,ug as variableGrads,yre as version,Bz as version_converter,FW as version_core,M_ as version_cpu,jp as version_layers,F0 as version_wasm,Qv as version_webgl,z8 as webgl,mD as webgl_util,Rt as where,rf as whereAsync,pt as zeros,Se as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.esm.js.map
